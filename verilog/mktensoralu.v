//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Thu Jan 20 13:02:31 IST 2022
//
//
// Ports:
// Name                         I/O  size props
// RDY_subifc_put_alu_params_put  O     1
// mv_send_req_op                 O    17 reg
// RDY_mv_send_req_op             O     1
// RDY_subifc_recv_op_0_put       O     1 const
// RDY_subifc_recv_op_1_put       O     1 const
// RDY_subifc_recv_op_2_put       O     1 const
// RDY_subifc_recv_op_3_put       O     1 const
// RDY_subifc_recv_op_4_put       O     1 const
// RDY_subifc_recv_op_5_put       O     1 const
// RDY_subifc_recv_op_6_put       O     1 const
// RDY_subifc_recv_op_7_put       O     1 const
// RDY_subifc_recv_op_8_put       O     1 const
// RDY_subifc_recv_op_9_put       O     1 const
// RDY_subifc_recv_op_10_put      O     1 const
// RDY_subifc_recv_op_11_put      O     1 const
// RDY_subifc_recv_op_12_put      O     1 const
// RDY_subifc_recv_op_13_put      O     1 const
// RDY_subifc_recv_op_14_put      O     1 const
// RDY_subifc_recv_op_15_put      O     1 const
// RDY_subifc_recv_op_16_put      O     1 const
// RDY_subifc_recv_op_17_put      O     1 const
// RDY_subifc_recv_op_18_put      O     1 const
// RDY_subifc_recv_op_19_put      O     1 const
// RDY_subifc_recv_op_20_put      O     1 const
// RDY_subifc_recv_op_21_put      O     1 const
// RDY_subifc_recv_op_22_put      O     1 const
// RDY_subifc_recv_op_23_put      O     1 const
// RDY_subifc_recv_op_24_put      O     1 const
// RDY_subifc_recv_op_25_put      O     1 const
// RDY_subifc_recv_op_26_put      O     1 const
// RDY_subifc_recv_op_27_put      O     1 const
// RDY_subifc_recv_op_28_put      O     1 const
// RDY_subifc_recv_op_29_put      O     1 const
// RDY_subifc_recv_op_30_put      O     1 const
// RDY_subifc_recv_op_31_put      O     1 const
// mav_put_result                 O  1041
// RDY_mav_put_result             O     1 reg
// subifc_get_alu_complete_get    O     1 const
// RDY_subifc_get_alu_complete_get  O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// subifc_put_alu_params_put      I   120
// subifc_recv_op_0_put           I    32
// subifc_recv_op_1_put           I    32
// subifc_recv_op_2_put           I    32
// subifc_recv_op_3_put           I    32
// subifc_recv_op_4_put           I    32
// subifc_recv_op_5_put           I    32
// subifc_recv_op_6_put           I    32
// subifc_recv_op_7_put           I    32
// subifc_recv_op_8_put           I    32
// subifc_recv_op_9_put           I    32
// subifc_recv_op_10_put          I    32
// subifc_recv_op_11_put          I    32
// subifc_recv_op_12_put          I    32
// subifc_recv_op_13_put          I    32
// subifc_recv_op_14_put          I    32
// subifc_recv_op_15_put          I    32
// subifc_recv_op_16_put          I    32
// subifc_recv_op_17_put          I    32
// subifc_recv_op_18_put          I    32
// subifc_recv_op_19_put          I    32
// subifc_recv_op_20_put          I    32
// subifc_recv_op_21_put          I    32
// subifc_recv_op_22_put          I    32
// subifc_recv_op_23_put          I    32
// subifc_recv_op_24_put          I    32
// subifc_recv_op_25_put          I    32
// subifc_recv_op_26_put          I    32
// subifc_recv_op_27_put          I    32
// subifc_recv_op_28_put          I    32
// subifc_recv_op_29_put          I    32
// subifc_recv_op_30_put          I    32
// subifc_recv_op_31_put          I    32
// EN_subifc_put_alu_params_put   I     1
// EN_subifc_recv_op_0_put        I     1
// EN_subifc_recv_op_1_put        I     1
// EN_subifc_recv_op_2_put        I     1
// EN_subifc_recv_op_3_put        I     1
// EN_subifc_recv_op_4_put        I     1
// EN_subifc_recv_op_5_put        I     1
// EN_subifc_recv_op_6_put        I     1
// EN_subifc_recv_op_7_put        I     1
// EN_subifc_recv_op_8_put        I     1
// EN_subifc_recv_op_9_put        I     1
// EN_subifc_recv_op_10_put       I     1
// EN_subifc_recv_op_11_put       I     1
// EN_subifc_recv_op_12_put       I     1
// EN_subifc_recv_op_13_put       I     1
// EN_subifc_recv_op_14_put       I     1
// EN_subifc_recv_op_15_put       I     1
// EN_subifc_recv_op_16_put       I     1
// EN_subifc_recv_op_17_put       I     1
// EN_subifc_recv_op_18_put       I     1
// EN_subifc_recv_op_19_put       I     1
// EN_subifc_recv_op_20_put       I     1
// EN_subifc_recv_op_21_put       I     1
// EN_subifc_recv_op_22_put       I     1
// EN_subifc_recv_op_23_put       I     1
// EN_subifc_recv_op_24_put       I     1
// EN_subifc_recv_op_25_put       I     1
// EN_subifc_recv_op_26_put       I     1
// EN_subifc_recv_op_27_put       I     1
// EN_subifc_recv_op_28_put       I     1
// EN_subifc_recv_op_29_put       I     1
// EN_subifc_recv_op_30_put       I     1
// EN_subifc_recv_op_31_put       I     1
// EN_mv_send_req_op              I     1
// EN_mav_put_result              I     1
// EN_subifc_get_alu_complete_get  I     1
//
// Combinational paths from inputs to outputs:
//   (subifc_recv_op_0_put,
//    subifc_recv_op_1_put,
//    subifc_recv_op_2_put,
//    subifc_recv_op_3_put,
//    subifc_recv_op_4_put,
//    subifc_recv_op_5_put,
//    subifc_recv_op_6_put,
//    subifc_recv_op_7_put,
//    subifc_recv_op_8_put,
//    subifc_recv_op_9_put,
//    subifc_recv_op_10_put,
//    subifc_recv_op_11_put,
//    subifc_recv_op_12_put,
//    subifc_recv_op_13_put,
//    subifc_recv_op_14_put,
//    subifc_recv_op_15_put,
//    subifc_recv_op_16_put,
//    subifc_recv_op_17_put,
//    subifc_recv_op_18_put,
//    subifc_recv_op_19_put,
//    subifc_recv_op_20_put,
//    subifc_recv_op_21_put,
//    subifc_recv_op_22_put,
//    subifc_recv_op_23_put,
//    subifc_recv_op_24_put,
//    subifc_recv_op_25_put,
//    subifc_recv_op_26_put,
//    subifc_recv_op_27_put,
//    subifc_recv_op_28_put,
//    subifc_recv_op_29_put,
//    subifc_recv_op_30_put,
//    subifc_recv_op_31_put,
//    EN_subifc_recv_op_0_put,
//    EN_subifc_recv_op_1_put,
//    EN_subifc_recv_op_2_put,
//    EN_subifc_recv_op_3_put,
//    EN_subifc_recv_op_4_put,
//    EN_subifc_recv_op_5_put,
//    EN_subifc_recv_op_6_put,
//    EN_subifc_recv_op_7_put,
//    EN_subifc_recv_op_8_put,
//    EN_subifc_recv_op_9_put,
//    EN_subifc_recv_op_10_put,
//    EN_subifc_recv_op_11_put,
//    EN_subifc_recv_op_12_put,
//    EN_subifc_recv_op_13_put,
//    EN_subifc_recv_op_14_put,
//    EN_subifc_recv_op_15_put,
//    EN_subifc_recv_op_16_put,
//    EN_subifc_recv_op_17_put,
//    EN_subifc_recv_op_18_put,
//    EN_subifc_recv_op_19_put,
//    EN_subifc_recv_op_20_put,
//    EN_subifc_recv_op_21_put,
//    EN_subifc_recv_op_22_put,
//    EN_subifc_recv_op_23_put,
//    EN_subifc_recv_op_24_put,
//    EN_subifc_recv_op_25_put,
//    EN_subifc_recv_op_26_put,
//    EN_subifc_recv_op_27_put,
//    EN_subifc_recv_op_28_put,
//    EN_subifc_recv_op_29_put,
//    EN_subifc_recv_op_30_put,
//    EN_subifc_recv_op_31_put,
//    EN_mav_put_result) -> mav_put_result
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mktensoralu(CLK,
		   RST_N,

		   subifc_put_alu_params_put,
		   EN_subifc_put_alu_params_put,
		   RDY_subifc_put_alu_params_put,

		   EN_mv_send_req_op,
		   mv_send_req_op,
		   RDY_mv_send_req_op,

		   subifc_recv_op_0_put,
		   EN_subifc_recv_op_0_put,
		   RDY_subifc_recv_op_0_put,

		   subifc_recv_op_1_put,
		   EN_subifc_recv_op_1_put,
		   RDY_subifc_recv_op_1_put,

		   subifc_recv_op_2_put,
		   EN_subifc_recv_op_2_put,
		   RDY_subifc_recv_op_2_put,

		   subifc_recv_op_3_put,
		   EN_subifc_recv_op_3_put,
		   RDY_subifc_recv_op_3_put,

		   subifc_recv_op_4_put,
		   EN_subifc_recv_op_4_put,
		   RDY_subifc_recv_op_4_put,

		   subifc_recv_op_5_put,
		   EN_subifc_recv_op_5_put,
		   RDY_subifc_recv_op_5_put,

		   subifc_recv_op_6_put,
		   EN_subifc_recv_op_6_put,
		   RDY_subifc_recv_op_6_put,

		   subifc_recv_op_7_put,
		   EN_subifc_recv_op_7_put,
		   RDY_subifc_recv_op_7_put,

		   subifc_recv_op_8_put,
		   EN_subifc_recv_op_8_put,
		   RDY_subifc_recv_op_8_put,

		   subifc_recv_op_9_put,
		   EN_subifc_recv_op_9_put,
		   RDY_subifc_recv_op_9_put,

		   subifc_recv_op_10_put,
		   EN_subifc_recv_op_10_put,
		   RDY_subifc_recv_op_10_put,

		   subifc_recv_op_11_put,
		   EN_subifc_recv_op_11_put,
		   RDY_subifc_recv_op_11_put,

		   subifc_recv_op_12_put,
		   EN_subifc_recv_op_12_put,
		   RDY_subifc_recv_op_12_put,

		   subifc_recv_op_13_put,
		   EN_subifc_recv_op_13_put,
		   RDY_subifc_recv_op_13_put,

		   subifc_recv_op_14_put,
		   EN_subifc_recv_op_14_put,
		   RDY_subifc_recv_op_14_put,

		   subifc_recv_op_15_put,
		   EN_subifc_recv_op_15_put,
		   RDY_subifc_recv_op_15_put,

		   subifc_recv_op_16_put,
		   EN_subifc_recv_op_16_put,
		   RDY_subifc_recv_op_16_put,

		   subifc_recv_op_17_put,
		   EN_subifc_recv_op_17_put,
		   RDY_subifc_recv_op_17_put,

		   subifc_recv_op_18_put,
		   EN_subifc_recv_op_18_put,
		   RDY_subifc_recv_op_18_put,

		   subifc_recv_op_19_put,
		   EN_subifc_recv_op_19_put,
		   RDY_subifc_recv_op_19_put,

		   subifc_recv_op_20_put,
		   EN_subifc_recv_op_20_put,
		   RDY_subifc_recv_op_20_put,

		   subifc_recv_op_21_put,
		   EN_subifc_recv_op_21_put,
		   RDY_subifc_recv_op_21_put,

		   subifc_recv_op_22_put,
		   EN_subifc_recv_op_22_put,
		   RDY_subifc_recv_op_22_put,

		   subifc_recv_op_23_put,
		   EN_subifc_recv_op_23_put,
		   RDY_subifc_recv_op_23_put,

		   subifc_recv_op_24_put,
		   EN_subifc_recv_op_24_put,
		   RDY_subifc_recv_op_24_put,

		   subifc_recv_op_25_put,
		   EN_subifc_recv_op_25_put,
		   RDY_subifc_recv_op_25_put,

		   subifc_recv_op_26_put,
		   EN_subifc_recv_op_26_put,
		   RDY_subifc_recv_op_26_put,

		   subifc_recv_op_27_put,
		   EN_subifc_recv_op_27_put,
		   RDY_subifc_recv_op_27_put,

		   subifc_recv_op_28_put,
		   EN_subifc_recv_op_28_put,
		   RDY_subifc_recv_op_28_put,

		   subifc_recv_op_29_put,
		   EN_subifc_recv_op_29_put,
		   RDY_subifc_recv_op_29_put,

		   subifc_recv_op_30_put,
		   EN_subifc_recv_op_30_put,
		   RDY_subifc_recv_op_30_put,

		   subifc_recv_op_31_put,
		   EN_subifc_recv_op_31_put,
		   RDY_subifc_recv_op_31_put,

		   EN_mav_put_result,
		   mav_put_result,
		   RDY_mav_put_result,

		   EN_subifc_get_alu_complete_get,
		   subifc_get_alu_complete_get,
		   RDY_subifc_get_alu_complete_get);
  input  CLK;
  input  RST_N;

  // action method subifc_put_alu_params_put
  input  [119 : 0] subifc_put_alu_params_put;
  input  EN_subifc_put_alu_params_put;
  output RDY_subifc_put_alu_params_put;

  // actionvalue method mv_send_req_op
  input  EN_mv_send_req_op;
  output [16 : 0] mv_send_req_op;
  output RDY_mv_send_req_op;

  // action method subifc_recv_op_0_put
  input  [31 : 0] subifc_recv_op_0_put;
  input  EN_subifc_recv_op_0_put;
  output RDY_subifc_recv_op_0_put;

  // action method subifc_recv_op_1_put
  input  [31 : 0] subifc_recv_op_1_put;
  input  EN_subifc_recv_op_1_put;
  output RDY_subifc_recv_op_1_put;

  // action method subifc_recv_op_2_put
  input  [31 : 0] subifc_recv_op_2_put;
  input  EN_subifc_recv_op_2_put;
  output RDY_subifc_recv_op_2_put;

  // action method subifc_recv_op_3_put
  input  [31 : 0] subifc_recv_op_3_put;
  input  EN_subifc_recv_op_3_put;
  output RDY_subifc_recv_op_3_put;

  // action method subifc_recv_op_4_put
  input  [31 : 0] subifc_recv_op_4_put;
  input  EN_subifc_recv_op_4_put;
  output RDY_subifc_recv_op_4_put;

  // action method subifc_recv_op_5_put
  input  [31 : 0] subifc_recv_op_5_put;
  input  EN_subifc_recv_op_5_put;
  output RDY_subifc_recv_op_5_put;

  // action method subifc_recv_op_6_put
  input  [31 : 0] subifc_recv_op_6_put;
  input  EN_subifc_recv_op_6_put;
  output RDY_subifc_recv_op_6_put;

  // action method subifc_recv_op_7_put
  input  [31 : 0] subifc_recv_op_7_put;
  input  EN_subifc_recv_op_7_put;
  output RDY_subifc_recv_op_7_put;

  // action method subifc_recv_op_8_put
  input  [31 : 0] subifc_recv_op_8_put;
  input  EN_subifc_recv_op_8_put;
  output RDY_subifc_recv_op_8_put;

  // action method subifc_recv_op_9_put
  input  [31 : 0] subifc_recv_op_9_put;
  input  EN_subifc_recv_op_9_put;
  output RDY_subifc_recv_op_9_put;

  // action method subifc_recv_op_10_put
  input  [31 : 0] subifc_recv_op_10_put;
  input  EN_subifc_recv_op_10_put;
  output RDY_subifc_recv_op_10_put;

  // action method subifc_recv_op_11_put
  input  [31 : 0] subifc_recv_op_11_put;
  input  EN_subifc_recv_op_11_put;
  output RDY_subifc_recv_op_11_put;

  // action method subifc_recv_op_12_put
  input  [31 : 0] subifc_recv_op_12_put;
  input  EN_subifc_recv_op_12_put;
  output RDY_subifc_recv_op_12_put;

  // action method subifc_recv_op_13_put
  input  [31 : 0] subifc_recv_op_13_put;
  input  EN_subifc_recv_op_13_put;
  output RDY_subifc_recv_op_13_put;

  // action method subifc_recv_op_14_put
  input  [31 : 0] subifc_recv_op_14_put;
  input  EN_subifc_recv_op_14_put;
  output RDY_subifc_recv_op_14_put;

  // action method subifc_recv_op_15_put
  input  [31 : 0] subifc_recv_op_15_put;
  input  EN_subifc_recv_op_15_put;
  output RDY_subifc_recv_op_15_put;

  // action method subifc_recv_op_16_put
  input  [31 : 0] subifc_recv_op_16_put;
  input  EN_subifc_recv_op_16_put;
  output RDY_subifc_recv_op_16_put;

  // action method subifc_recv_op_17_put
  input  [31 : 0] subifc_recv_op_17_put;
  input  EN_subifc_recv_op_17_put;
  output RDY_subifc_recv_op_17_put;

  // action method subifc_recv_op_18_put
  input  [31 : 0] subifc_recv_op_18_put;
  input  EN_subifc_recv_op_18_put;
  output RDY_subifc_recv_op_18_put;

  // action method subifc_recv_op_19_put
  input  [31 : 0] subifc_recv_op_19_put;
  input  EN_subifc_recv_op_19_put;
  output RDY_subifc_recv_op_19_put;

  // action method subifc_recv_op_20_put
  input  [31 : 0] subifc_recv_op_20_put;
  input  EN_subifc_recv_op_20_put;
  output RDY_subifc_recv_op_20_put;

  // action method subifc_recv_op_21_put
  input  [31 : 0] subifc_recv_op_21_put;
  input  EN_subifc_recv_op_21_put;
  output RDY_subifc_recv_op_21_put;

  // action method subifc_recv_op_22_put
  input  [31 : 0] subifc_recv_op_22_put;
  input  EN_subifc_recv_op_22_put;
  output RDY_subifc_recv_op_22_put;

  // action method subifc_recv_op_23_put
  input  [31 : 0] subifc_recv_op_23_put;
  input  EN_subifc_recv_op_23_put;
  output RDY_subifc_recv_op_23_put;

  // action method subifc_recv_op_24_put
  input  [31 : 0] subifc_recv_op_24_put;
  input  EN_subifc_recv_op_24_put;
  output RDY_subifc_recv_op_24_put;

  // action method subifc_recv_op_25_put
  input  [31 : 0] subifc_recv_op_25_put;
  input  EN_subifc_recv_op_25_put;
  output RDY_subifc_recv_op_25_put;

  // action method subifc_recv_op_26_put
  input  [31 : 0] subifc_recv_op_26_put;
  input  EN_subifc_recv_op_26_put;
  output RDY_subifc_recv_op_26_put;

  // action method subifc_recv_op_27_put
  input  [31 : 0] subifc_recv_op_27_put;
  input  EN_subifc_recv_op_27_put;
  output RDY_subifc_recv_op_27_put;

  // action method subifc_recv_op_28_put
  input  [31 : 0] subifc_recv_op_28_put;
  input  EN_subifc_recv_op_28_put;
  output RDY_subifc_recv_op_28_put;

  // action method subifc_recv_op_29_put
  input  [31 : 0] subifc_recv_op_29_put;
  input  EN_subifc_recv_op_29_put;
  output RDY_subifc_recv_op_29_put;

  // action method subifc_recv_op_30_put
  input  [31 : 0] subifc_recv_op_30_put;
  input  EN_subifc_recv_op_30_put;
  output RDY_subifc_recv_op_30_put;

  // action method subifc_recv_op_31_put
  input  [31 : 0] subifc_recv_op_31_put;
  input  EN_subifc_recv_op_31_put;
  output RDY_subifc_recv_op_31_put;

  // actionvalue method mav_put_result
  input  EN_mav_put_result;
  output [1040 : 0] mav_put_result;
  output RDY_mav_put_result;

  // actionvalue method subifc_get_alu_complete_get
  input  EN_subifc_get_alu_complete_get;
  output subifc_get_alu_complete_get;
  output RDY_subifc_get_alu_complete_get;

  // signals for module outputs
  wire [1040 : 0] mav_put_result;
  wire [16 : 0] mv_send_req_op;
  wire RDY_mav_put_result,
       RDY_mv_send_req_op,
       RDY_subifc_get_alu_complete_get,
       RDY_subifc_put_alu_params_put,
       RDY_subifc_recv_op_0_put,
       RDY_subifc_recv_op_10_put,
       RDY_subifc_recv_op_11_put,
       RDY_subifc_recv_op_12_put,
       RDY_subifc_recv_op_13_put,
       RDY_subifc_recv_op_14_put,
       RDY_subifc_recv_op_15_put,
       RDY_subifc_recv_op_16_put,
       RDY_subifc_recv_op_17_put,
       RDY_subifc_recv_op_18_put,
       RDY_subifc_recv_op_19_put,
       RDY_subifc_recv_op_1_put,
       RDY_subifc_recv_op_20_put,
       RDY_subifc_recv_op_21_put,
       RDY_subifc_recv_op_22_put,
       RDY_subifc_recv_op_23_put,
       RDY_subifc_recv_op_24_put,
       RDY_subifc_recv_op_25_put,
       RDY_subifc_recv_op_26_put,
       RDY_subifc_recv_op_27_put,
       RDY_subifc_recv_op_28_put,
       RDY_subifc_recv_op_29_put,
       RDY_subifc_recv_op_2_put,
       RDY_subifc_recv_op_30_put,
       RDY_subifc_recv_op_31_put,
       RDY_subifc_recv_op_3_put,
       RDY_subifc_recv_op_4_put,
       RDY_subifc_recv_op_5_put,
       RDY_subifc_recv_op_6_put,
       RDY_subifc_recv_op_7_put,
       RDY_subifc_recv_op_8_put,
       RDY_subifc_recv_op_9_put,
       subifc_get_alu_complete_get;

  // inlined wires
  wire wr_operand_out_0$whas,
       wr_operand_out_1$whas,
       wr_operand_out_10$whas,
       wr_operand_out_11$whas,
       wr_operand_out_12$whas,
       wr_operand_out_13$whas,
       wr_operand_out_14$whas,
       wr_operand_out_15$whas,
       wr_operand_out_16$whas,
       wr_operand_out_17$whas,
       wr_operand_out_18$whas,
       wr_operand_out_19$whas,
       wr_operand_out_2$whas,
       wr_operand_out_20$whas,
       wr_operand_out_21$whas,
       wr_operand_out_22$whas,
       wr_operand_out_23$whas,
       wr_operand_out_24$whas,
       wr_operand_out_25$whas,
       wr_operand_out_26$whas,
       wr_operand_out_27$whas,
       wr_operand_out_28$whas,
       wr_operand_out_29$whas,
       wr_operand_out_3$whas,
       wr_operand_out_30$whas,
       wr_operand_out_31$whas,
       wr_operand_out_4$whas,
       wr_operand_out_5$whas,
       wr_operand_out_6$whas,
       wr_operand_out_7$whas,
       wr_operand_out_8$whas,
       wr_operand_out_9$whas;

  // register rg_alu_complete
  reg rg_alu_complete;
  wire rg_alu_complete$D_IN, rg_alu_complete$EN;

  // register rg_alu_packet
  reg [120 : 0] rg_alu_packet;
  wire [120 : 0] rg_alu_packet$D_IN;
  wire rg_alu_packet$EN;

  // register rg_i_var
  reg [7 : 0] rg_i_var;
  wire [7 : 0] rg_i_var$D_IN;
  wire rg_i_var$EN;

  // register rg_icol_addr
  reg [7 : 0] rg_icol_addr;
  wire [7 : 0] rg_icol_addr$D_IN;
  wire rg_icol_addr$EN;

  // register rg_irow_addr
  reg [7 : 0] rg_irow_addr;
  wire [7 : 0] rg_irow_addr$D_IN;
  wire rg_irow_addr$EN;

  // register rg_j_var
  reg [7 : 0] rg_j_var;
  wire [7 : 0] rg_j_var$D_IN;
  wire rg_j_var$EN;

  // register rg_k_out
  reg [3 : 0] rg_k_out;
  wire [3 : 0] rg_k_out$D_IN;
  wire rg_k_out$EN;

  // register rg_k_var
  reg [3 : 0] rg_k_var;
  wire [3 : 0] rg_k_var$D_IN;
  wire rg_k_var$EN;

  // register rg_l_out
  reg [3 : 0] rg_l_out;
  wire [3 : 0] rg_l_out$D_IN;
  wire rg_l_out$EN;

  // register rg_l_var
  reg [3 : 0] rg_l_var;
  wire [3 : 0] rg_l_var$D_IN;
  wire rg_l_var$EN;

  // register rg_operand_out_0
  reg [31 : 0] rg_operand_out_0;
  wire [31 : 0] rg_operand_out_0$D_IN;
  wire rg_operand_out_0$EN;

  // register rg_operand_out_1
  reg [31 : 0] rg_operand_out_1;
  wire [31 : 0] rg_operand_out_1$D_IN;
  wire rg_operand_out_1$EN;

  // register rg_operand_out_10
  reg [31 : 0] rg_operand_out_10;
  wire [31 : 0] rg_operand_out_10$D_IN;
  wire rg_operand_out_10$EN;

  // register rg_operand_out_11
  reg [31 : 0] rg_operand_out_11;
  wire [31 : 0] rg_operand_out_11$D_IN;
  wire rg_operand_out_11$EN;

  // register rg_operand_out_12
  reg [31 : 0] rg_operand_out_12;
  wire [31 : 0] rg_operand_out_12$D_IN;
  wire rg_operand_out_12$EN;

  // register rg_operand_out_13
  reg [31 : 0] rg_operand_out_13;
  wire [31 : 0] rg_operand_out_13$D_IN;
  wire rg_operand_out_13$EN;

  // register rg_operand_out_14
  reg [31 : 0] rg_operand_out_14;
  wire [31 : 0] rg_operand_out_14$D_IN;
  wire rg_operand_out_14$EN;

  // register rg_operand_out_15
  reg [31 : 0] rg_operand_out_15;
  wire [31 : 0] rg_operand_out_15$D_IN;
  wire rg_operand_out_15$EN;

  // register rg_operand_out_16
  reg [31 : 0] rg_operand_out_16;
  wire [31 : 0] rg_operand_out_16$D_IN;
  wire rg_operand_out_16$EN;

  // register rg_operand_out_17
  reg [31 : 0] rg_operand_out_17;
  wire [31 : 0] rg_operand_out_17$D_IN;
  wire rg_operand_out_17$EN;

  // register rg_operand_out_18
  reg [31 : 0] rg_operand_out_18;
  wire [31 : 0] rg_operand_out_18$D_IN;
  wire rg_operand_out_18$EN;

  // register rg_operand_out_19
  reg [31 : 0] rg_operand_out_19;
  wire [31 : 0] rg_operand_out_19$D_IN;
  wire rg_operand_out_19$EN;

  // register rg_operand_out_2
  reg [31 : 0] rg_operand_out_2;
  wire [31 : 0] rg_operand_out_2$D_IN;
  wire rg_operand_out_2$EN;

  // register rg_operand_out_20
  reg [31 : 0] rg_operand_out_20;
  wire [31 : 0] rg_operand_out_20$D_IN;
  wire rg_operand_out_20$EN;

  // register rg_operand_out_21
  reg [31 : 0] rg_operand_out_21;
  wire [31 : 0] rg_operand_out_21$D_IN;
  wire rg_operand_out_21$EN;

  // register rg_operand_out_22
  reg [31 : 0] rg_operand_out_22;
  wire [31 : 0] rg_operand_out_22$D_IN;
  wire rg_operand_out_22$EN;

  // register rg_operand_out_23
  reg [31 : 0] rg_operand_out_23;
  wire [31 : 0] rg_operand_out_23$D_IN;
  wire rg_operand_out_23$EN;

  // register rg_operand_out_24
  reg [31 : 0] rg_operand_out_24;
  wire [31 : 0] rg_operand_out_24$D_IN;
  wire rg_operand_out_24$EN;

  // register rg_operand_out_25
  reg [31 : 0] rg_operand_out_25;
  wire [31 : 0] rg_operand_out_25$D_IN;
  wire rg_operand_out_25$EN;

  // register rg_operand_out_26
  reg [31 : 0] rg_operand_out_26;
  wire [31 : 0] rg_operand_out_26$D_IN;
  wire rg_operand_out_26$EN;

  // register rg_operand_out_27
  reg [31 : 0] rg_operand_out_27;
  wire [31 : 0] rg_operand_out_27$D_IN;
  wire rg_operand_out_27$EN;

  // register rg_operand_out_28
  reg [31 : 0] rg_operand_out_28;
  wire [31 : 0] rg_operand_out_28$D_IN;
  wire rg_operand_out_28$EN;

  // register rg_operand_out_29
  reg [31 : 0] rg_operand_out_29;
  wire [31 : 0] rg_operand_out_29$D_IN;
  wire rg_operand_out_29$EN;

  // register rg_operand_out_3
  reg [31 : 0] rg_operand_out_3;
  wire [31 : 0] rg_operand_out_3$D_IN;
  wire rg_operand_out_3$EN;

  // register rg_operand_out_30
  reg [31 : 0] rg_operand_out_30;
  wire [31 : 0] rg_operand_out_30$D_IN;
  wire rg_operand_out_30$EN;

  // register rg_operand_out_31
  reg [31 : 0] rg_operand_out_31;
  wire [31 : 0] rg_operand_out_31$D_IN;
  wire rg_operand_out_31$EN;

  // register rg_operand_out_4
  reg [31 : 0] rg_operand_out_4;
  wire [31 : 0] rg_operand_out_4$D_IN;
  wire rg_operand_out_4$EN;

  // register rg_operand_out_5
  reg [31 : 0] rg_operand_out_5;
  wire [31 : 0] rg_operand_out_5$D_IN;
  wire rg_operand_out_5$EN;

  // register rg_operand_out_6
  reg [31 : 0] rg_operand_out_6;
  wire [31 : 0] rg_operand_out_6$D_IN;
  wire rg_operand_out_6$EN;

  // register rg_operand_out_7
  reg [31 : 0] rg_operand_out_7;
  wire [31 : 0] rg_operand_out_7$D_IN;
  wire rg_operand_out_7$EN;

  // register rg_operand_out_8
  reg [31 : 0] rg_operand_out_8;
  wire [31 : 0] rg_operand_out_8$D_IN;
  wire rg_operand_out_8$EN;

  // register rg_operand_out_9
  reg [31 : 0] rg_operand_out_9;
  wire [31 : 0] rg_operand_out_9$D_IN;
  wire rg_operand_out_9$EN;

  // register rg_output_addr
  reg [7 : 0] rg_output_addr;
  wire [7 : 0] rg_output_addr$D_IN;
  wire rg_output_addr$EN;

  // register rg_req_complete
  reg rg_req_complete;
  wire rg_req_complete$D_IN, rg_req_complete$EN;

  // register rg_scol_addr
  reg [7 : 0] rg_scol_addr;
  wire [7 : 0] rg_scol_addr$D_IN;
  wire rg_scol_addr$EN;

  // register rg_srow_addr
  reg [7 : 0] rg_srow_addr;
  wire [7 : 0] rg_srow_addr$D_IN;
  wire rg_srow_addr$EN;

  // register rg_which_buffer
  reg rg_which_buffer;
  wire rg_which_buffer$D_IN, rg_which_buffer$EN;

  // rule scheduling signals
  wire WILL_FIRE_RL_rl_perform_computation;

  // inputs to muxes for submodule ports
  wire [120 : 0] MUX_rg_alu_packet$write_1__VAL_2;
  wire [31 : 0] MUX_rg_operand_out_0$write_1__VAL_1,
		MUX_rg_operand_out_0$write_1__VAL_2,
		MUX_rg_operand_out_1$write_1__VAL_1,
		MUX_rg_operand_out_10$write_1__VAL_1,
		MUX_rg_operand_out_11$write_1__VAL_1,
		MUX_rg_operand_out_12$write_1__VAL_1,
		MUX_rg_operand_out_13$write_1__VAL_1,
		MUX_rg_operand_out_14$write_1__VAL_1,
		MUX_rg_operand_out_15$write_1__VAL_1,
		MUX_rg_operand_out_16$write_1__VAL_1,
		MUX_rg_operand_out_17$write_1__VAL_1,
		MUX_rg_operand_out_18$write_1__VAL_1,
		MUX_rg_operand_out_19$write_1__VAL_1,
		MUX_rg_operand_out_2$write_1__VAL_1,
		MUX_rg_operand_out_20$write_1__VAL_1,
		MUX_rg_operand_out_21$write_1__VAL_1,
		MUX_rg_operand_out_22$write_1__VAL_1,
		MUX_rg_operand_out_23$write_1__VAL_1,
		MUX_rg_operand_out_24$write_1__VAL_1,
		MUX_rg_operand_out_25$write_1__VAL_1,
		MUX_rg_operand_out_26$write_1__VAL_1,
		MUX_rg_operand_out_27$write_1__VAL_1,
		MUX_rg_operand_out_28$write_1__VAL_1,
		MUX_rg_operand_out_29$write_1__VAL_1,
		MUX_rg_operand_out_3$write_1__VAL_1,
		MUX_rg_operand_out_30$write_1__VAL_1,
		MUX_rg_operand_out_31$write_1__VAL_1,
		MUX_rg_operand_out_4$write_1__VAL_1,
		MUX_rg_operand_out_5$write_1__VAL_1,
		MUX_rg_operand_out_6$write_1__VAL_1,
		MUX_rg_operand_out_7$write_1__VAL_1,
		MUX_rg_operand_out_8$write_1__VAL_1,
		MUX_rg_operand_out_9$write_1__VAL_1;
  wire [7 : 0] MUX_rg_i_var$write_1__VAL_1,
	       MUX_rg_j_var$write_1__VAL_1,
	       MUX_rg_output_addr$write_1__VAL_1,
	       MUX_rg_scol_addr$write_1__VAL_2;
  wire [3 : 0] MUX_rg_k_var$write_1__VAL_1, MUX_rg_l_var$write_1__VAL_1;
  wire MUX_rg_alu_complete$write_1__SEL_1,
       MUX_rg_i_var$write_1__SEL_1,
       MUX_rg_icol_addr$write_1__SEL_1,
       MUX_rg_k_var$write_1__SEL_1,
       MUX_rg_operand_out_0$write_1__SEL_1,
       MUX_rg_operand_out_1$write_1__SEL_1,
       MUX_rg_operand_out_10$write_1__SEL_1,
       MUX_rg_operand_out_11$write_1__SEL_1,
       MUX_rg_operand_out_12$write_1__SEL_1,
       MUX_rg_operand_out_13$write_1__SEL_1,
       MUX_rg_operand_out_14$write_1__SEL_1,
       MUX_rg_operand_out_15$write_1__SEL_1,
       MUX_rg_operand_out_16$write_1__SEL_1,
       MUX_rg_operand_out_17$write_1__SEL_1,
       MUX_rg_operand_out_18$write_1__SEL_1,
       MUX_rg_operand_out_19$write_1__SEL_1,
       MUX_rg_operand_out_2$write_1__SEL_1,
       MUX_rg_operand_out_20$write_1__SEL_1,
       MUX_rg_operand_out_21$write_1__SEL_1,
       MUX_rg_operand_out_22$write_1__SEL_1,
       MUX_rg_operand_out_23$write_1__SEL_1,
       MUX_rg_operand_out_24$write_1__SEL_1,
       MUX_rg_operand_out_25$write_1__SEL_1,
       MUX_rg_operand_out_26$write_1__SEL_1,
       MUX_rg_operand_out_27$write_1__SEL_1,
       MUX_rg_operand_out_28$write_1__SEL_1,
       MUX_rg_operand_out_29$write_1__SEL_1,
       MUX_rg_operand_out_3$write_1__SEL_1,
       MUX_rg_operand_out_30$write_1__SEL_1,
       MUX_rg_operand_out_31$write_1__SEL_1,
       MUX_rg_operand_out_4$write_1__SEL_1,
       MUX_rg_operand_out_5$write_1__SEL_1,
       MUX_rg_operand_out_6$write_1__SEL_1,
       MUX_rg_operand_out_7$write_1__SEL_1,
       MUX_rg_operand_out_8$write_1__SEL_1,
       MUX_rg_operand_out_9$write_1__SEL_1,
       MUX_rg_output_addr$write_1__SEL_1,
       MUX_rg_req_complete$write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [63 : 0] v__h29032;
  reg [63 : 0] v__h10768;
  // synopsys translate_on

  // remaining internal signals
  reg [31 : 0] x_wget__h5774,
	       x_wget__h5823,
	       x_wget__h5872,
	       x_wget__h5921,
	       x_wget__h5970,
	       x_wget__h6019,
	       x_wget__h6068,
	       x_wget__h6117,
	       x_wget__h6166,
	       x_wget__h6215,
	       x_wget__h6264,
	       x_wget__h6313,
	       x_wget__h6362,
	       x_wget__h6411,
	       x_wget__h6460,
	       x_wget__h6509,
	       x_wget__h6558,
	       x_wget__h6607,
	       x_wget__h6656,
	       x_wget__h6705,
	       x_wget__h6754,
	       x_wget__h6803,
	       x_wget__h6852,
	       x_wget__h6901,
	       x_wget__h6950,
	       x_wget__h6999,
	       x_wget__h7048,
	       x_wget__h7097,
	       x_wget__h7146,
	       x_wget__h7195,
	       x_wget__h7244,
	       x_wget__h7293;
  wire [1031 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d800;
  wire [991 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d795;
  wire [927 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d786;
  wire [863 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d777;
  wire [799 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d768;
  wire [735 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d759;
  wire [671 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d750;
  wire [607 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d741;
  wire [543 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d732;
  wire [479 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d723;
  wire [415 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d714;
  wire [351 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d705;
  wire [287 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d696;
  wire [223 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d687;
  wire [159 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d678;
  wire [95 : 0] IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d669;
  wire [31 : 0] lv_outp___1__h10644,
		lv_outp___1__h10651,
		lv_outp___1__h11022,
		lv_outp___1__h11049,
		lv_outp___1__h11056,
		lv_outp___1__h11355,
		lv_outp___1__h11382,
		lv_outp___1__h11389,
		lv_outp___1__h11688,
		lv_outp___1__h11715,
		lv_outp___1__h11722,
		lv_outp___1__h12021,
		lv_outp___1__h12048,
		lv_outp___1__h12055,
		lv_outp___1__h12354,
		lv_outp___1__h12381,
		lv_outp___1__h12388,
		lv_outp___1__h12687,
		lv_outp___1__h12714,
		lv_outp___1__h12721,
		lv_outp___1__h13020,
		lv_outp___1__h13047,
		lv_outp___1__h13054,
		lv_outp___1__h13353,
		lv_outp___1__h13380,
		lv_outp___1__h13387,
		lv_outp___1__h13686,
		lv_outp___1__h13713,
		lv_outp___1__h13720,
		lv_outp___1__h14019,
		lv_outp___1__h14046,
		lv_outp___1__h14053,
		lv_outp___1__h14352,
		lv_outp___1__h14379,
		lv_outp___1__h14386,
		lv_outp___1__h14685,
		lv_outp___1__h14712,
		lv_outp___1__h14719,
		lv_outp___1__h15018,
		lv_outp___1__h15045,
		lv_outp___1__h15052,
		lv_outp___1__h15351,
		lv_outp___1__h15378,
		lv_outp___1__h15385,
		lv_outp___1__h15684,
		lv_outp___1__h15711,
		lv_outp___1__h15718,
		lv_outp___1__h16017,
		lv_outp___1__h16044,
		lv_outp___1__h16051,
		lv_outp___1__h16350,
		lv_outp___1__h16377,
		lv_outp___1__h16384,
		lv_outp___1__h16683,
		lv_outp___1__h16710,
		lv_outp___1__h16717,
		lv_outp___1__h17016,
		lv_outp___1__h17043,
		lv_outp___1__h17050,
		lv_outp___1__h17349,
		lv_outp___1__h17376,
		lv_outp___1__h17383,
		lv_outp___1__h17682,
		lv_outp___1__h17709,
		lv_outp___1__h17716,
		lv_outp___1__h18015,
		lv_outp___1__h18042,
		lv_outp___1__h18049,
		lv_outp___1__h18348,
		lv_outp___1__h18375,
		lv_outp___1__h18382,
		lv_outp___1__h18681,
		lv_outp___1__h18708,
		lv_outp___1__h18715,
		lv_outp___1__h19014,
		lv_outp___1__h19041,
		lv_outp___1__h19048,
		lv_outp___1__h19347,
		lv_outp___1__h19374,
		lv_outp___1__h19381,
		lv_outp___1__h19680,
		lv_outp___1__h19707,
		lv_outp___1__h19714,
		lv_outp___1__h20013,
		lv_outp___1__h20040,
		lv_outp___1__h20047,
		lv_outp___1__h20346,
		lv_outp___1__h20373,
		lv_outp___1__h20380,
		lv_outp___1__h20679,
		lv_outp___1__h20706,
		lv_outp___1__h20713,
		lv_outp___1__h21012,
		lv_outp___1__h21039,
		lv_outp___1__h21046,
		lv_outp___1__h9737,
		lv_shifted_output__h11016,
		lv_shifted_output__h11349,
		lv_shifted_output__h11682,
		lv_shifted_output__h12015,
		lv_shifted_output__h12348,
		lv_shifted_output__h12681,
		lv_shifted_output__h13014,
		lv_shifted_output__h13347,
		lv_shifted_output__h13680,
		lv_shifted_output__h14013,
		lv_shifted_output__h14346,
		lv_shifted_output__h14679,
		lv_shifted_output__h15012,
		lv_shifted_output__h15345,
		lv_shifted_output__h15678,
		lv_shifted_output__h16011,
		lv_shifted_output__h16344,
		lv_shifted_output__h16677,
		lv_shifted_output__h17010,
		lv_shifted_output__h17343,
		lv_shifted_output__h17676,
		lv_shifted_output__h18009,
		lv_shifted_output__h18342,
		lv_shifted_output__h18675,
		lv_shifted_output__h19008,
		lv_shifted_output__h19341,
		lv_shifted_output__h19674,
		lv_shifted_output__h20007,
		lv_shifted_output__h20340,
		lv_shifted_output__h20673,
		lv_shifted_output__h21006,
		lv_shifted_output__h9727,
		x__h10704,
		x__h10945,
		x__h11278,
		x__h11611,
		x__h11944,
		x__h12277,
		x__h12610,
		x__h12943,
		x__h13276,
		x__h13609,
		x__h13942,
		x__h14275,
		x__h14608,
		x__h14941,
		x__h15274,
		x__h15607,
		x__h15940,
		x__h16273,
		x__h16606,
		x__h16939,
		x__h17272,
		x__h17605,
		x__h17938,
		x__h18271,
		x__h18604,
		x__h18937,
		x__h19270,
		x__h19603,
		x__h19936,
		x__h20269,
		x__h20602,
		x__h20935,
		x__h23900,
		x__h8771;
  wire [7 : 0] addr___2__h25951,
	       addr__h25895,
	       v__h25858,
	       v__h25916,
	       v__h25974,
	       v__h26410,
	       x__h26118,
	       x__h26227;
  wire [3 : 0] x__h21254, x__h21399, x__h26317, x__h26422;
  wire NOT_rg_alu_packet_BITS_39_TO_32_ULE_10_04___d205,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_11_22___d223,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_12_40___d241,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_13_58___d259,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_14_76___d277,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_15_94___d295,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_16_12___d313,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_17_30___d331,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_18_48___d349,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_19_66___d367,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_1_2___d43,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_20_84___d385,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_21_02___d403,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_22_20___d421,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_23_38___d439,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_24_56___d457,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_25_74___d475,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_26_92___d493,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_27_10___d511,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_28_28___d529,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_29_46___d547,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_2_0___d61,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_30_64___d565,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82___d583,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_3_8___d79,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_4_6___d97,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_5_14___d115,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_6_32___d133,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_7_50___d151,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_8_68___d169,
       NOT_rg_alu_packet_BITS_39_TO_32_ULE_9_86___d187,
       rg_i_var_32_EQ_rg_alu_packet_BITS_87_TO_80_33___d634,
       rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627,
       rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13,
       rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621,
       rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16,
       rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5_1_ETC___d639,
       rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617,
       rg_operand_out_0_4_SLE_IF_wr_operand_0_whas_TH_ETC___d27,
       rg_operand_out_10_08_SLE_IF_wr_operand_10_whas_ETC___d211,
       rg_operand_out_11_26_SLE_IF_wr_operand_11_whas_ETC___d229,
       rg_operand_out_12_44_SLE_IF_wr_operand_12_whas_ETC___d247,
       rg_operand_out_13_62_SLE_IF_wr_operand_13_whas_ETC___d265,
       rg_operand_out_14_80_SLE_IF_wr_operand_14_whas_ETC___d283,
       rg_operand_out_15_98_SLE_IF_wr_operand_15_whas_ETC___d301,
       rg_operand_out_16_16_SLE_IF_wr_operand_16_whas_ETC___d319,
       rg_operand_out_17_34_SLE_IF_wr_operand_17_whas_ETC___d337,
       rg_operand_out_18_52_SLE_IF_wr_operand_18_whas_ETC___d355,
       rg_operand_out_19_70_SLE_IF_wr_operand_19_whas_ETC___d373,
       rg_operand_out_1_6_SLE_IF_wr_operand_1_whas__4_ETC___d49,
       rg_operand_out_20_88_SLE_IF_wr_operand_20_whas_ETC___d391,
       rg_operand_out_21_06_SLE_IF_wr_operand_21_whas_ETC___d409,
       rg_operand_out_22_24_SLE_IF_wr_operand_22_whas_ETC___d427,
       rg_operand_out_23_42_SLE_IF_wr_operand_23_whas_ETC___d445,
       rg_operand_out_24_60_SLE_IF_wr_operand_24_whas_ETC___d463,
       rg_operand_out_25_78_SLE_IF_wr_operand_25_whas_ETC___d481,
       rg_operand_out_26_96_SLE_IF_wr_operand_26_whas_ETC___d499,
       rg_operand_out_27_14_SLE_IF_wr_operand_27_whas_ETC___d517,
       rg_operand_out_28_32_SLE_IF_wr_operand_28_whas_ETC___d535,
       rg_operand_out_29_50_SLE_IF_wr_operand_29_whas_ETC___d553,
       rg_operand_out_2_4_SLE_IF_wr_operand_2_whas__2_ETC___d67,
       rg_operand_out_30_68_SLE_IF_wr_operand_30_whas_ETC___d571,
       rg_operand_out_31_86_SLE_IF_wr_operand_31_whas_ETC___d589,
       rg_operand_out_3_2_SLE_IF_wr_operand_3_whas__0_ETC___d85,
       rg_operand_out_4_00_SLE_IF_wr_operand_4_whas___ETC___d103,
       rg_operand_out_5_18_SLE_IF_wr_operand_5_whas___ETC___d121,
       rg_operand_out_6_36_SLE_IF_wr_operand_6_whas___ETC___d139,
       rg_operand_out_7_54_SLE_IF_wr_operand_7_whas___ETC___d157,
       rg_operand_out_8_72_SLE_IF_wr_operand_8_whas___ETC___d175,
       rg_operand_out_9_90_SLE_IF_wr_operand_9_whas___ETC___d193;

  // action method subifc_put_alu_params_put
  assign RDY_subifc_put_alu_params_put = !rg_alu_packet[120] ;

  // actionvalue method mv_send_req_op
  assign mv_send_req_op =
	     { rg_which_buffer, rg_scol_addr, rg_alu_packet[39:32] } ;
  assign RDY_mv_send_req_op = rg_alu_packet[120] && !rg_req_complete ;

  // action method subifc_recv_op_0_put
  assign RDY_subifc_recv_op_0_put = 1'd1 ;

  // action method subifc_recv_op_1_put
  assign RDY_subifc_recv_op_1_put = 1'd1 ;

  // action method subifc_recv_op_2_put
  assign RDY_subifc_recv_op_2_put = 1'd1 ;

  // action method subifc_recv_op_3_put
  assign RDY_subifc_recv_op_3_put = 1'd1 ;

  // action method subifc_recv_op_4_put
  assign RDY_subifc_recv_op_4_put = 1'd1 ;

  // action method subifc_recv_op_5_put
  assign RDY_subifc_recv_op_5_put = 1'd1 ;

  // action method subifc_recv_op_6_put
  assign RDY_subifc_recv_op_6_put = 1'd1 ;

  // action method subifc_recv_op_7_put
  assign RDY_subifc_recv_op_7_put = 1'd1 ;

  // action method subifc_recv_op_8_put
  assign RDY_subifc_recv_op_8_put = 1'd1 ;

  // action method subifc_recv_op_9_put
  assign RDY_subifc_recv_op_9_put = 1'd1 ;

  // action method subifc_recv_op_10_put
  assign RDY_subifc_recv_op_10_put = 1'd1 ;

  // action method subifc_recv_op_11_put
  assign RDY_subifc_recv_op_11_put = 1'd1 ;

  // action method subifc_recv_op_12_put
  assign RDY_subifc_recv_op_12_put = 1'd1 ;

  // action method subifc_recv_op_13_put
  assign RDY_subifc_recv_op_13_put = 1'd1 ;

  // action method subifc_recv_op_14_put
  assign RDY_subifc_recv_op_14_put = 1'd1 ;

  // action method subifc_recv_op_15_put
  assign RDY_subifc_recv_op_15_put = 1'd1 ;

  // action method subifc_recv_op_16_put
  assign RDY_subifc_recv_op_16_put = 1'd1 ;

  // action method subifc_recv_op_17_put
  assign RDY_subifc_recv_op_17_put = 1'd1 ;

  // action method subifc_recv_op_18_put
  assign RDY_subifc_recv_op_18_put = 1'd1 ;

  // action method subifc_recv_op_19_put
  assign RDY_subifc_recv_op_19_put = 1'd1 ;

  // action method subifc_recv_op_20_put
  assign RDY_subifc_recv_op_20_put = 1'd1 ;

  // action method subifc_recv_op_21_put
  assign RDY_subifc_recv_op_21_put = 1'd1 ;

  // action method subifc_recv_op_22_put
  assign RDY_subifc_recv_op_22_put = 1'd1 ;

  // action method subifc_recv_op_23_put
  assign RDY_subifc_recv_op_23_put = 1'd1 ;

  // action method subifc_recv_op_24_put
  assign RDY_subifc_recv_op_24_put = 1'd1 ;

  // action method subifc_recv_op_25_put
  assign RDY_subifc_recv_op_25_put = 1'd1 ;

  // action method subifc_recv_op_26_put
  assign RDY_subifc_recv_op_26_put = 1'd1 ;

  // action method subifc_recv_op_27_put
  assign RDY_subifc_recv_op_27_put = 1'd1 ;

  // action method subifc_recv_op_28_put
  assign RDY_subifc_recv_op_28_put = 1'd1 ;

  // action method subifc_recv_op_29_put
  assign RDY_subifc_recv_op_29_put = 1'd1 ;

  // action method subifc_recv_op_30_put
  assign RDY_subifc_recv_op_30_put = 1'd1 ;

  // action method subifc_recv_op_31_put
  assign RDY_subifc_recv_op_31_put = 1'd1 ;

  // actionvalue method mav_put_result
  assign mav_put_result =
	     { rg_which_buffer,
	       rg_output_addr,
	       IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d800 } ;
  assign RDY_mav_put_result = rg_alu_packet[120] ;

  // actionvalue method subifc_get_alu_complete_get
  assign subifc_get_alu_complete_get = 1'd1 ;
  assign RDY_subifc_get_alu_complete_get =
	     rg_alu_packet[120] && rg_alu_complete ;

  // rule RL_rl_perform_computation
  assign WILL_FIRE_RL_rl_perform_computation =
	     rg_alu_packet[120] && !rg_alu_complete && !EN_mav_put_result ;

  // inputs to muxes for submodule ports
  assign MUX_rg_alu_complete$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 &&
	     rg_req_complete ;
  assign MUX_rg_i_var$write_1__SEL_1 =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 &&
	     rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 ;
  assign MUX_rg_icol_addr$write_1__SEL_1 =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 ;
  assign MUX_rg_k_var$write_1__SEL_1 =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 ;
  assign MUX_rg_operand_out_0$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_alu_packet[39:32] != 8'd0 &&
	     EN_subifc_recv_op_0_put ;
  assign MUX_rg_operand_out_1$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_1_2___d43 &&
	     EN_subifc_recv_op_1_put ;
  assign MUX_rg_operand_out_10$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_10_04___d205 &&
	     EN_subifc_recv_op_10_put ;
  assign MUX_rg_operand_out_11$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_11_22___d223 &&
	     EN_subifc_recv_op_11_put ;
  assign MUX_rg_operand_out_12$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_12_40___d241 &&
	     EN_subifc_recv_op_12_put ;
  assign MUX_rg_operand_out_13$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_13_58___d259 &&
	     EN_subifc_recv_op_13_put ;
  assign MUX_rg_operand_out_14$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_14_76___d277 &&
	     EN_subifc_recv_op_14_put ;
  assign MUX_rg_operand_out_15$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_15_94___d295 &&
	     EN_subifc_recv_op_15_put ;
  assign MUX_rg_operand_out_16$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_16_12___d313 &&
	     EN_subifc_recv_op_16_put ;
  assign MUX_rg_operand_out_17$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_17_30___d331 &&
	     EN_subifc_recv_op_17_put ;
  assign MUX_rg_operand_out_18$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_18_48___d349 &&
	     EN_subifc_recv_op_18_put ;
  assign MUX_rg_operand_out_19$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_19_66___d367 &&
	     EN_subifc_recv_op_19_put ;
  assign MUX_rg_operand_out_2$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_2_0___d61 &&
	     EN_subifc_recv_op_2_put ;
  assign MUX_rg_operand_out_20$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_20_84___d385 &&
	     EN_subifc_recv_op_20_put ;
  assign MUX_rg_operand_out_21$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_21_02___d403 &&
	     EN_subifc_recv_op_21_put ;
  assign MUX_rg_operand_out_22$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_22_20___d421 &&
	     EN_subifc_recv_op_22_put ;
  assign MUX_rg_operand_out_23$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_23_38___d439 &&
	     EN_subifc_recv_op_23_put ;
  assign MUX_rg_operand_out_24$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_24_56___d457 &&
	     EN_subifc_recv_op_24_put ;
  assign MUX_rg_operand_out_25$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_25_74___d475 &&
	     EN_subifc_recv_op_25_put ;
  assign MUX_rg_operand_out_26$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_26_92___d493 &&
	     EN_subifc_recv_op_26_put ;
  assign MUX_rg_operand_out_27$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_27_10___d511 &&
	     EN_subifc_recv_op_27_put ;
  assign MUX_rg_operand_out_28$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_28_28___d529 &&
	     EN_subifc_recv_op_28_put ;
  assign MUX_rg_operand_out_29$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_29_46___d547 &&
	     EN_subifc_recv_op_29_put ;
  assign MUX_rg_operand_out_3$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_3_8___d79 &&
	     EN_subifc_recv_op_3_put ;
  assign MUX_rg_operand_out_30$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_30_64___d565 &&
	     EN_subifc_recv_op_30_put ;
  assign MUX_rg_operand_out_31$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82___d583 &&
	     EN_subifc_recv_op_31_put ;
  assign MUX_rg_operand_out_4$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_4_6___d97 &&
	     EN_subifc_recv_op_4_put ;
  assign MUX_rg_operand_out_5$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_5_14___d115 &&
	     EN_subifc_recv_op_5_put ;
  assign MUX_rg_operand_out_6$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_6_32___d133 &&
	     EN_subifc_recv_op_6_put ;
  assign MUX_rg_operand_out_7$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_7_50___d151 &&
	     EN_subifc_recv_op_7_put ;
  assign MUX_rg_operand_out_8$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_8_68___d169 &&
	     EN_subifc_recv_op_8_put ;
  assign MUX_rg_operand_out_9$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_9_86___d187 &&
	     EN_subifc_recv_op_9_put ;
  assign MUX_rg_output_addr$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign MUX_rg_req_complete$write_1__SEL_1 =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5_1_ETC___d639 ;
  assign MUX_rg_alu_packet$write_1__VAL_2 =
	     { 1'd1, subifc_put_alu_params_put } ;
  assign MUX_rg_i_var$write_1__VAL_1 =
	     rg_i_var_32_EQ_rg_alu_packet_BITS_87_TO_80_33___d634 ?
	       8'd1 :
	       x__h26118 ;
  assign MUX_rg_j_var$write_1__VAL_1 =
	     rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 ?
	       8'd1 :
	       x__h26227 ;
  assign MUX_rg_k_var$write_1__VAL_1 =
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 ?
	       4'd1 :
	       x__h26317 ;
  assign MUX_rg_l_var$write_1__VAL_1 =
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 ?
	       4'd1 :
	       x__h26422 ;
  assign MUX_rg_operand_out_0$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h8771 ;
  assign MUX_rg_operand_out_0$write_1__VAL_2 =
	     subifc_put_alu_params_put[31] ? x__h23900 : 32'd0 ;
  assign MUX_rg_operand_out_1$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h10945 ;
  assign MUX_rg_operand_out_10$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h13942 ;
  assign MUX_rg_operand_out_11$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h14275 ;
  assign MUX_rg_operand_out_12$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h14608 ;
  assign MUX_rg_operand_out_13$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h14941 ;
  assign MUX_rg_operand_out_14$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h15274 ;
  assign MUX_rg_operand_out_15$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h15607 ;
  assign MUX_rg_operand_out_16$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h15940 ;
  assign MUX_rg_operand_out_17$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h16273 ;
  assign MUX_rg_operand_out_18$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h16606 ;
  assign MUX_rg_operand_out_19$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h16939 ;
  assign MUX_rg_operand_out_2$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h11278 ;
  assign MUX_rg_operand_out_20$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h17272 ;
  assign MUX_rg_operand_out_21$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h17605 ;
  assign MUX_rg_operand_out_22$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h17938 ;
  assign MUX_rg_operand_out_23$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h18271 ;
  assign MUX_rg_operand_out_24$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h18604 ;
  assign MUX_rg_operand_out_25$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h18937 ;
  assign MUX_rg_operand_out_26$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h19270 ;
  assign MUX_rg_operand_out_27$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h19603 ;
  assign MUX_rg_operand_out_28$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h19936 ;
  assign MUX_rg_operand_out_29$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h20269 ;
  assign MUX_rg_operand_out_3$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h11611 ;
  assign MUX_rg_operand_out_30$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h20602 ;
  assign MUX_rg_operand_out_31$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h20935 ;
  assign MUX_rg_operand_out_4$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h11944 ;
  assign MUX_rg_operand_out_5$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h12277 ;
  assign MUX_rg_operand_out_6$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h12610 ;
  assign MUX_rg_operand_out_7$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h12943 ;
  assign MUX_rg_operand_out_8$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h13276 ;
  assign MUX_rg_operand_out_9$write_1__VAL_1 =
	     (rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	      rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16) ?
	       x__h10704 :
	       x__h13609 ;
  assign MUX_rg_output_addr$write_1__VAL_1 = rg_output_addr + 8'd1 ;
  assign MUX_rg_scol_addr$write_1__VAL_2 =
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 ?
	       v__h25858 :
	       v__h26410 ;

  // inlined wires
  assign wr_operand_out_0$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_alu_packet[39:32] != 8'd0 &&
	     EN_subifc_recv_op_0_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_1$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_1_2___d43 &&
	     EN_subifc_recv_op_1_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_2$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_2_0___d61 &&
	     EN_subifc_recv_op_2_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_3$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_3_8___d79 &&
	     EN_subifc_recv_op_3_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_4$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_4_6___d97 &&
	     EN_subifc_recv_op_4_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_5$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_5_14___d115 &&
	     EN_subifc_recv_op_5_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_6$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_6_32___d133 &&
	     EN_subifc_recv_op_6_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_7$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_7_50___d151 &&
	     EN_subifc_recv_op_7_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_8$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_8_68___d169 &&
	     EN_subifc_recv_op_8_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_9$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_9_86___d187 &&
	     EN_subifc_recv_op_9_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_10$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_10_04___d205 &&
	     EN_subifc_recv_op_10_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_11$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_11_22___d223 &&
	     EN_subifc_recv_op_11_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_12$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_12_40___d241 &&
	     EN_subifc_recv_op_12_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_13$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_13_58___d259 &&
	     EN_subifc_recv_op_13_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_14$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_14_76___d277 &&
	     EN_subifc_recv_op_14_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_15$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_15_94___d295 &&
	     EN_subifc_recv_op_15_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_16$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_16_12___d313 &&
	     EN_subifc_recv_op_16_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_17$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_17_30___d331 &&
	     EN_subifc_recv_op_17_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_18$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_18_48___d349 &&
	     EN_subifc_recv_op_18_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_19$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_19_66___d367 &&
	     EN_subifc_recv_op_19_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_20$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_20_84___d385 &&
	     EN_subifc_recv_op_20_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_21$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_21_02___d403 &&
	     EN_subifc_recv_op_21_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_22$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_22_20___d421 &&
	     EN_subifc_recv_op_22_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_23$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_23_38___d439 &&
	     EN_subifc_recv_op_23_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_24$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_24_56___d457 &&
	     EN_subifc_recv_op_24_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_25$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_25_74___d475 &&
	     EN_subifc_recv_op_25_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_26$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_26_92___d493 &&
	     EN_subifc_recv_op_26_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_27$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_27_10___d511 &&
	     EN_subifc_recv_op_27_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_28$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_28_28___d529 &&
	     EN_subifc_recv_op_28_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_29$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_29_46___d547 &&
	     EN_subifc_recv_op_29_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_30$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_30_64___d565 &&
	     EN_subifc_recv_op_30_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;
  assign wr_operand_out_31$whas =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82___d583 &&
	     EN_subifc_recv_op_31_put &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;

  // register rg_alu_complete
  assign rg_alu_complete$D_IN = MUX_rg_alu_complete$write_1__SEL_1 ;
  assign rg_alu_complete$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 &&
	     rg_req_complete ||
	     EN_subifc_put_alu_params_put ||
	     EN_subifc_get_alu_complete_get ;

  // register rg_alu_packet
  assign rg_alu_packet$D_IN =
	     EN_subifc_get_alu_complete_get ?
	       121'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_rg_alu_packet$write_1__VAL_2 ;
  assign rg_alu_packet$EN =
	     EN_subifc_get_alu_complete_get || EN_subifc_put_alu_params_put ;

  // register rg_i_var
  assign rg_i_var$D_IN =
	     MUX_rg_i_var$write_1__SEL_1 ?
	       MUX_rg_i_var$write_1__VAL_1 :
	       8'd1 ;
  assign rg_i_var$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 &&
	     rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_icol_addr
  assign rg_icol_addr$D_IN =
	     MUX_rg_icol_addr$write_1__SEL_1 ?
	       v__h25916 :
	       subifc_put_alu_params_put[110:103] ;
  assign rg_icol_addr$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_irow_addr
  assign rg_irow_addr$D_IN =
	     MUX_rg_i_var$write_1__SEL_1 ?
	       v__h25974 :
	       subifc_put_alu_params_put[110:103] ;
  assign rg_irow_addr$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 &&
	     rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_j_var
  assign rg_j_var$D_IN =
	     MUX_rg_icol_addr$write_1__SEL_1 ?
	       MUX_rg_j_var$write_1__VAL_1 :
	       8'd1 ;
  assign rg_j_var$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_k_out
  assign rg_k_out$D_IN =
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 ?
	       4'd1 :
	       x__h21399 ;
  assign rg_k_out$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ;

  // register rg_k_var
  assign rg_k_var$D_IN =
	     MUX_rg_k_var$write_1__SEL_1 ?
	       MUX_rg_k_var$write_1__VAL_1 :
	       4'd1 ;
  assign rg_k_var$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_l_out
  assign rg_l_out$D_IN =
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ?
	       4'd1 :
	       x__h21254 ;
  assign rg_l_out$EN = WILL_FIRE_RL_rl_perform_computation ;

  // register rg_l_var
  assign rg_l_var$D_IN =
	     EN_mv_send_req_op ? MUX_rg_l_var$write_1__VAL_1 : 4'd1 ;
  assign rg_l_var$EN = EN_mv_send_req_op || EN_subifc_put_alu_params_put ;

  // register rg_operand_out_0
  assign rg_operand_out_0$D_IN =
	     MUX_rg_operand_out_0$write_1__SEL_1 ?
	       MUX_rg_operand_out_0$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_0$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_alu_packet[39:32] != 8'd0 &&
	     EN_subifc_recv_op_0_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_1
  assign rg_operand_out_1$D_IN =
	     MUX_rg_operand_out_1$write_1__SEL_1 ?
	       MUX_rg_operand_out_1$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_1$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_1_2___d43 &&
	     EN_subifc_recv_op_1_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_10
  assign rg_operand_out_10$D_IN =
	     MUX_rg_operand_out_10$write_1__SEL_1 ?
	       MUX_rg_operand_out_10$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_10$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_10_04___d205 &&
	     EN_subifc_recv_op_10_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_11
  assign rg_operand_out_11$D_IN =
	     MUX_rg_operand_out_11$write_1__SEL_1 ?
	       MUX_rg_operand_out_11$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_11$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_11_22___d223 &&
	     EN_subifc_recv_op_11_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_12
  assign rg_operand_out_12$D_IN =
	     MUX_rg_operand_out_12$write_1__SEL_1 ?
	       MUX_rg_operand_out_12$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_12$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_12_40___d241 &&
	     EN_subifc_recv_op_12_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_13
  assign rg_operand_out_13$D_IN =
	     MUX_rg_operand_out_13$write_1__SEL_1 ?
	       MUX_rg_operand_out_13$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_13$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_13_58___d259 &&
	     EN_subifc_recv_op_13_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_14
  assign rg_operand_out_14$D_IN =
	     MUX_rg_operand_out_14$write_1__SEL_1 ?
	       MUX_rg_operand_out_14$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_14$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_14_76___d277 &&
	     EN_subifc_recv_op_14_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_15
  assign rg_operand_out_15$D_IN =
	     MUX_rg_operand_out_15$write_1__SEL_1 ?
	       MUX_rg_operand_out_15$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_15$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_15_94___d295 &&
	     EN_subifc_recv_op_15_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_16
  assign rg_operand_out_16$D_IN =
	     MUX_rg_operand_out_16$write_1__SEL_1 ?
	       MUX_rg_operand_out_16$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_16$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_16_12___d313 &&
	     EN_subifc_recv_op_16_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_17
  assign rg_operand_out_17$D_IN =
	     MUX_rg_operand_out_17$write_1__SEL_1 ?
	       MUX_rg_operand_out_17$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_17$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_17_30___d331 &&
	     EN_subifc_recv_op_17_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_18
  assign rg_operand_out_18$D_IN =
	     MUX_rg_operand_out_18$write_1__SEL_1 ?
	       MUX_rg_operand_out_18$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_18$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_18_48___d349 &&
	     EN_subifc_recv_op_18_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_19
  assign rg_operand_out_19$D_IN =
	     MUX_rg_operand_out_19$write_1__SEL_1 ?
	       MUX_rg_operand_out_19$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_19$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_19_66___d367 &&
	     EN_subifc_recv_op_19_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_2
  assign rg_operand_out_2$D_IN =
	     MUX_rg_operand_out_2$write_1__SEL_1 ?
	       MUX_rg_operand_out_2$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_2$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_2_0___d61 &&
	     EN_subifc_recv_op_2_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_20
  assign rg_operand_out_20$D_IN =
	     MUX_rg_operand_out_20$write_1__SEL_1 ?
	       MUX_rg_operand_out_20$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_20$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_20_84___d385 &&
	     EN_subifc_recv_op_20_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_21
  assign rg_operand_out_21$D_IN =
	     MUX_rg_operand_out_21$write_1__SEL_1 ?
	       MUX_rg_operand_out_21$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_21$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_21_02___d403 &&
	     EN_subifc_recv_op_21_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_22
  assign rg_operand_out_22$D_IN =
	     MUX_rg_operand_out_22$write_1__SEL_1 ?
	       MUX_rg_operand_out_22$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_22$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_22_20___d421 &&
	     EN_subifc_recv_op_22_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_23
  assign rg_operand_out_23$D_IN =
	     MUX_rg_operand_out_23$write_1__SEL_1 ?
	       MUX_rg_operand_out_23$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_23$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_23_38___d439 &&
	     EN_subifc_recv_op_23_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_24
  assign rg_operand_out_24$D_IN =
	     MUX_rg_operand_out_24$write_1__SEL_1 ?
	       MUX_rg_operand_out_24$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_24$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_24_56___d457 &&
	     EN_subifc_recv_op_24_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_25
  assign rg_operand_out_25$D_IN =
	     MUX_rg_operand_out_25$write_1__SEL_1 ?
	       MUX_rg_operand_out_25$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_25$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_25_74___d475 &&
	     EN_subifc_recv_op_25_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_26
  assign rg_operand_out_26$D_IN =
	     MUX_rg_operand_out_26$write_1__SEL_1 ?
	       MUX_rg_operand_out_26$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_26$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_26_92___d493 &&
	     EN_subifc_recv_op_26_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_27
  assign rg_operand_out_27$D_IN =
	     MUX_rg_operand_out_27$write_1__SEL_1 ?
	       MUX_rg_operand_out_27$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_27$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_27_10___d511 &&
	     EN_subifc_recv_op_27_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_28
  assign rg_operand_out_28$D_IN =
	     MUX_rg_operand_out_28$write_1__SEL_1 ?
	       MUX_rg_operand_out_28$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_28$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_28_28___d529 &&
	     EN_subifc_recv_op_28_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_29
  assign rg_operand_out_29$D_IN =
	     MUX_rg_operand_out_29$write_1__SEL_1 ?
	       MUX_rg_operand_out_29$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_29$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_29_46___d547 &&
	     EN_subifc_recv_op_29_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_3
  assign rg_operand_out_3$D_IN =
	     MUX_rg_operand_out_3$write_1__SEL_1 ?
	       MUX_rg_operand_out_3$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_3$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_3_8___d79 &&
	     EN_subifc_recv_op_3_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_30
  assign rg_operand_out_30$D_IN =
	     MUX_rg_operand_out_30$write_1__SEL_1 ?
	       MUX_rg_operand_out_30$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_30$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_30_64___d565 &&
	     EN_subifc_recv_op_30_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_31
  assign rg_operand_out_31$D_IN =
	     MUX_rg_operand_out_31$write_1__SEL_1 ?
	       MUX_rg_operand_out_31$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_31$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82___d583 &&
	     EN_subifc_recv_op_31_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_4
  assign rg_operand_out_4$D_IN =
	     MUX_rg_operand_out_4$write_1__SEL_1 ?
	       MUX_rg_operand_out_4$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_4$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_4_6___d97 &&
	     EN_subifc_recv_op_4_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_5
  assign rg_operand_out_5$D_IN =
	     MUX_rg_operand_out_5$write_1__SEL_1 ?
	       MUX_rg_operand_out_5$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_5$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_5_14___d115 &&
	     EN_subifc_recv_op_5_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_6
  assign rg_operand_out_6$D_IN =
	     MUX_rg_operand_out_6$write_1__SEL_1 ?
	       MUX_rg_operand_out_6$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_6$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_6_32___d133 &&
	     EN_subifc_recv_op_6_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_7
  assign rg_operand_out_7$D_IN =
	     MUX_rg_operand_out_7$write_1__SEL_1 ?
	       MUX_rg_operand_out_7$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_7$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_7_50___d151 &&
	     EN_subifc_recv_op_7_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_8
  assign rg_operand_out_8$D_IN =
	     MUX_rg_operand_out_8$write_1__SEL_1 ?
	       MUX_rg_operand_out_8$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_8$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_8_68___d169 &&
	     EN_subifc_recv_op_8_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_operand_out_9
  assign rg_operand_out_9$D_IN =
	     MUX_rg_operand_out_9$write_1__SEL_1 ?
	       MUX_rg_operand_out_9$write_1__VAL_1 :
	       MUX_rg_operand_out_0$write_1__VAL_2 ;
  assign rg_operand_out_9$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     NOT_rg_alu_packet_BITS_39_TO_32_ULE_9_86___d187 &&
	     EN_subifc_recv_op_9_put ||
	     EN_subifc_put_alu_params_put ;

  // register rg_output_addr
  assign rg_output_addr$D_IN =
	     MUX_rg_output_addr$write_1__SEL_1 ?
	       MUX_rg_output_addr$write_1__VAL_1 :
	       subifc_put_alu_params_put[95:88] ;
  assign rg_output_addr$EN =
	     WILL_FIRE_RL_rl_perform_computation &&
	     rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	     rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_req_complete
  assign rg_req_complete$D_IN = MUX_rg_req_complete$write_1__SEL_1 ;
  assign rg_req_complete$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5_1_ETC___d639 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_scol_addr
  assign rg_scol_addr$D_IN =
	     EN_subifc_put_alu_params_put ?
	       subifc_put_alu_params_put[110:103] :
	       MUX_rg_scol_addr$write_1__VAL_2 ;
  assign rg_scol_addr$EN = EN_subifc_put_alu_params_put || EN_mv_send_req_op ;

  // register rg_srow_addr
  assign rg_srow_addr$D_IN =
	     MUX_rg_k_var$write_1__SEL_1 ?
	       v__h25858 :
	       subifc_put_alu_params_put[110:103] ;
  assign rg_srow_addr$EN =
	     EN_mv_send_req_op &&
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 ||
	     EN_subifc_put_alu_params_put ;

  // register rg_which_buffer
  assign rg_which_buffer$D_IN = subifc_put_alu_params_put[95] ;
  assign rg_which_buffer$EN = EN_subifc_put_alu_params_put ;

  // remaining internal signals
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d669 =
	     { (NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82___d583 &&
		wr_operand_out_31$whas) ?
		 x_wget__h7293 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_30_64___d565 &&
		wr_operand_out_30$whas) ?
		 x_wget__h7244 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_29_46___d547 &&
		wr_operand_out_29$whas) ?
		 x_wget__h7195 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d678 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d669,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_28_28___d529 &&
		wr_operand_out_28$whas) ?
		 x_wget__h7146 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_27_10___d511 &&
		wr_operand_out_27$whas) ?
		 x_wget__h7097 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d687 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d678,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_26_92___d493 &&
		wr_operand_out_26$whas) ?
		 x_wget__h7048 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_25_74___d475 &&
		wr_operand_out_25$whas) ?
		 x_wget__h6999 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d696 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d687,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_24_56___d457 &&
		wr_operand_out_24$whas) ?
		 x_wget__h6950 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_23_38___d439 &&
		wr_operand_out_23$whas) ?
		 x_wget__h6901 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d705 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d696,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_22_20___d421 &&
		wr_operand_out_22$whas) ?
		 x_wget__h6852 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_21_02___d403 &&
		wr_operand_out_21$whas) ?
		 x_wget__h6803 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d714 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d705,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_20_84___d385 &&
		wr_operand_out_20$whas) ?
		 x_wget__h6754 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_19_66___d367 &&
		wr_operand_out_19$whas) ?
		 x_wget__h6705 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d723 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d714,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_18_48___d349 &&
		wr_operand_out_18$whas) ?
		 x_wget__h6656 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_17_30___d331 &&
		wr_operand_out_17$whas) ?
		 x_wget__h6607 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d732 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d723,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_16_12___d313 &&
		wr_operand_out_16$whas) ?
		 x_wget__h6558 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_15_94___d295 &&
		wr_operand_out_15$whas) ?
		 x_wget__h6509 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d741 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d732,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_14_76___d277 &&
		wr_operand_out_14$whas) ?
		 x_wget__h6460 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_13_58___d259 &&
		wr_operand_out_13$whas) ?
		 x_wget__h6411 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d750 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d741,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_12_40___d241 &&
		wr_operand_out_12$whas) ?
		 x_wget__h6362 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_11_22___d223 &&
		wr_operand_out_11$whas) ?
		 x_wget__h6313 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d759 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d750,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_10_04___d205 &&
		wr_operand_out_10$whas) ?
		 x_wget__h6264 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_9_86___d187 &&
		wr_operand_out_9$whas) ?
		 x_wget__h6215 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d768 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d759,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_8_68___d169 &&
		wr_operand_out_8$whas) ?
		 x_wget__h6166 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_7_50___d151 &&
		wr_operand_out_7$whas) ?
		 x_wget__h6117 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d777 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d768,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_6_32___d133 &&
		wr_operand_out_6$whas) ?
		 x_wget__h6068 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_5_14___d115 &&
		wr_operand_out_5$whas) ?
		 x_wget__h6019 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d786 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d777,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_4_6___d97 &&
		wr_operand_out_4$whas) ?
		 x_wget__h5970 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_3_8___d79 &&
		wr_operand_out_3$whas) ?
		 x_wget__h5921 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d795 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d786,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_2_0___d61 &&
		wr_operand_out_2$whas) ?
		 x_wget__h5872 :
		 32'd0,
	       (NOT_rg_alu_packet_BITS_39_TO_32_ULE_1_2___d43 &&
		wr_operand_out_1$whas) ?
		 x_wget__h5823 :
		 32'd0 } ;
  assign IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d800 =
	     { IF_NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82_8_ETC___d795,
	       (rg_alu_packet[39:32] != 8'd0 && wr_operand_out_0$whas) ?
		 x_wget__h5774 :
		 32'd0,
	       rg_alu_packet[39:32] } ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_10_04___d205 =
	     rg_alu_packet[39:32] > 8'd10 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_11_22___d223 =
	     rg_alu_packet[39:32] > 8'd11 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_12_40___d241 =
	     rg_alu_packet[39:32] > 8'd12 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_13_58___d259 =
	     rg_alu_packet[39:32] > 8'd13 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_14_76___d277 =
	     rg_alu_packet[39:32] > 8'd14 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_15_94___d295 =
	     rg_alu_packet[39:32] > 8'd15 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_16_12___d313 =
	     rg_alu_packet[39:32] > 8'd16 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_17_30___d331 =
	     rg_alu_packet[39:32] > 8'd17 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_18_48___d349 =
	     rg_alu_packet[39:32] > 8'd18 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_19_66___d367 =
	     rg_alu_packet[39:32] > 8'd19 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_1_2___d43 =
	     rg_alu_packet[39:32] > 8'd1 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_20_84___d385 =
	     rg_alu_packet[39:32] > 8'd20 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_21_02___d403 =
	     rg_alu_packet[39:32] > 8'd21 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_22_20___d421 =
	     rg_alu_packet[39:32] > 8'd22 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_23_38___d439 =
	     rg_alu_packet[39:32] > 8'd23 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_24_56___d457 =
	     rg_alu_packet[39:32] > 8'd24 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_25_74___d475 =
	     rg_alu_packet[39:32] > 8'd25 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_26_92___d493 =
	     rg_alu_packet[39:32] > 8'd26 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_27_10___d511 =
	     rg_alu_packet[39:32] > 8'd27 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_28_28___d529 =
	     rg_alu_packet[39:32] > 8'd28 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_29_46___d547 =
	     rg_alu_packet[39:32] > 8'd29 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_2_0___d61 =
	     rg_alu_packet[39:32] > 8'd2 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_30_64___d565 =
	     rg_alu_packet[39:32] > 8'd30 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_31_82___d583 =
	     rg_alu_packet[39:32] > 8'd31 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_3_8___d79 =
	     rg_alu_packet[39:32] > 8'd3 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_4_6___d97 =
	     rg_alu_packet[39:32] > 8'd4 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_5_14___d115 =
	     rg_alu_packet[39:32] > 8'd5 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_6_32___d133 =
	     rg_alu_packet[39:32] > 8'd6 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_7_50___d151 =
	     rg_alu_packet[39:32] > 8'd7 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_8_68___d169 =
	     rg_alu_packet[39:32] > 8'd8 ;
  assign NOT_rg_alu_packet_BITS_39_TO_32_ULE_9_86___d187 =
	     rg_alu_packet[39:32] > 8'd9 ;
  assign addr___2__h25951 = rg_icol_addr + rg_alu_packet[55:48] ;
  assign addr__h25895 = rg_srow_addr + rg_alu_packet[47:40] ;
  assign lv_outp___1__h10644 =
	     rg_operand_out_0_4_SLE_IF_wr_operand_0_whas_TH_ETC___d27 ?
	       rg_operand_out_0 :
	       subifc_recv_op_0_put ;
  assign lv_outp___1__h10651 = rg_operand_out_0 + subifc_recv_op_0_put ;
  assign lv_outp___1__h11022 =
	     rg_operand_out_1_6_SLE_IF_wr_operand_1_whas__4_ETC___d49 ?
	       subifc_recv_op_1_put :
	       rg_operand_out_1 ;
  assign lv_outp___1__h11049 =
	     rg_operand_out_1_6_SLE_IF_wr_operand_1_whas__4_ETC___d49 ?
	       rg_operand_out_1 :
	       subifc_recv_op_1_put ;
  assign lv_outp___1__h11056 = rg_operand_out_1 + subifc_recv_op_1_put ;
  assign lv_outp___1__h11355 =
	     rg_operand_out_2_4_SLE_IF_wr_operand_2_whas__2_ETC___d67 ?
	       subifc_recv_op_2_put :
	       rg_operand_out_2 ;
  assign lv_outp___1__h11382 =
	     rg_operand_out_2_4_SLE_IF_wr_operand_2_whas__2_ETC___d67 ?
	       rg_operand_out_2 :
	       subifc_recv_op_2_put ;
  assign lv_outp___1__h11389 = rg_operand_out_2 + subifc_recv_op_2_put ;
  assign lv_outp___1__h11688 =
	     rg_operand_out_3_2_SLE_IF_wr_operand_3_whas__0_ETC___d85 ?
	       subifc_recv_op_3_put :
	       rg_operand_out_3 ;
  assign lv_outp___1__h11715 =
	     rg_operand_out_3_2_SLE_IF_wr_operand_3_whas__0_ETC___d85 ?
	       rg_operand_out_3 :
	       subifc_recv_op_3_put ;
  assign lv_outp___1__h11722 = rg_operand_out_3 + subifc_recv_op_3_put ;
  assign lv_outp___1__h12021 =
	     rg_operand_out_4_00_SLE_IF_wr_operand_4_whas___ETC___d103 ?
	       subifc_recv_op_4_put :
	       rg_operand_out_4 ;
  assign lv_outp___1__h12048 =
	     rg_operand_out_4_00_SLE_IF_wr_operand_4_whas___ETC___d103 ?
	       rg_operand_out_4 :
	       subifc_recv_op_4_put ;
  assign lv_outp___1__h12055 = rg_operand_out_4 + subifc_recv_op_4_put ;
  assign lv_outp___1__h12354 =
	     rg_operand_out_5_18_SLE_IF_wr_operand_5_whas___ETC___d121 ?
	       subifc_recv_op_5_put :
	       rg_operand_out_5 ;
  assign lv_outp___1__h12381 =
	     rg_operand_out_5_18_SLE_IF_wr_operand_5_whas___ETC___d121 ?
	       rg_operand_out_5 :
	       subifc_recv_op_5_put ;
  assign lv_outp___1__h12388 = rg_operand_out_5 + subifc_recv_op_5_put ;
  assign lv_outp___1__h12687 =
	     rg_operand_out_6_36_SLE_IF_wr_operand_6_whas___ETC___d139 ?
	       subifc_recv_op_6_put :
	       rg_operand_out_6 ;
  assign lv_outp___1__h12714 =
	     rg_operand_out_6_36_SLE_IF_wr_operand_6_whas___ETC___d139 ?
	       rg_operand_out_6 :
	       subifc_recv_op_6_put ;
  assign lv_outp___1__h12721 = rg_operand_out_6 + subifc_recv_op_6_put ;
  assign lv_outp___1__h13020 =
	     rg_operand_out_7_54_SLE_IF_wr_operand_7_whas___ETC___d157 ?
	       subifc_recv_op_7_put :
	       rg_operand_out_7 ;
  assign lv_outp___1__h13047 =
	     rg_operand_out_7_54_SLE_IF_wr_operand_7_whas___ETC___d157 ?
	       rg_operand_out_7 :
	       subifc_recv_op_7_put ;
  assign lv_outp___1__h13054 = rg_operand_out_7 + subifc_recv_op_7_put ;
  assign lv_outp___1__h13353 =
	     rg_operand_out_8_72_SLE_IF_wr_operand_8_whas___ETC___d175 ?
	       subifc_recv_op_8_put :
	       rg_operand_out_8 ;
  assign lv_outp___1__h13380 =
	     rg_operand_out_8_72_SLE_IF_wr_operand_8_whas___ETC___d175 ?
	       rg_operand_out_8 :
	       subifc_recv_op_8_put ;
  assign lv_outp___1__h13387 = rg_operand_out_8 + subifc_recv_op_8_put ;
  assign lv_outp___1__h13686 =
	     rg_operand_out_9_90_SLE_IF_wr_operand_9_whas___ETC___d193 ?
	       subifc_recv_op_9_put :
	       rg_operand_out_9 ;
  assign lv_outp___1__h13713 =
	     rg_operand_out_9_90_SLE_IF_wr_operand_9_whas___ETC___d193 ?
	       rg_operand_out_9 :
	       subifc_recv_op_9_put ;
  assign lv_outp___1__h13720 = rg_operand_out_9 + subifc_recv_op_9_put ;
  assign lv_outp___1__h14019 =
	     rg_operand_out_10_08_SLE_IF_wr_operand_10_whas_ETC___d211 ?
	       subifc_recv_op_10_put :
	       rg_operand_out_10 ;
  assign lv_outp___1__h14046 =
	     rg_operand_out_10_08_SLE_IF_wr_operand_10_whas_ETC___d211 ?
	       rg_operand_out_10 :
	       subifc_recv_op_10_put ;
  assign lv_outp___1__h14053 = rg_operand_out_10 + subifc_recv_op_10_put ;
  assign lv_outp___1__h14352 =
	     rg_operand_out_11_26_SLE_IF_wr_operand_11_whas_ETC___d229 ?
	       subifc_recv_op_11_put :
	       rg_operand_out_11 ;
  assign lv_outp___1__h14379 =
	     rg_operand_out_11_26_SLE_IF_wr_operand_11_whas_ETC___d229 ?
	       rg_operand_out_11 :
	       subifc_recv_op_11_put ;
  assign lv_outp___1__h14386 = rg_operand_out_11 + subifc_recv_op_11_put ;
  assign lv_outp___1__h14685 =
	     rg_operand_out_12_44_SLE_IF_wr_operand_12_whas_ETC___d247 ?
	       subifc_recv_op_12_put :
	       rg_operand_out_12 ;
  assign lv_outp___1__h14712 =
	     rg_operand_out_12_44_SLE_IF_wr_operand_12_whas_ETC___d247 ?
	       rg_operand_out_12 :
	       subifc_recv_op_12_put ;
  assign lv_outp___1__h14719 = rg_operand_out_12 + subifc_recv_op_12_put ;
  assign lv_outp___1__h15018 =
	     rg_operand_out_13_62_SLE_IF_wr_operand_13_whas_ETC___d265 ?
	       subifc_recv_op_13_put :
	       rg_operand_out_13 ;
  assign lv_outp___1__h15045 =
	     rg_operand_out_13_62_SLE_IF_wr_operand_13_whas_ETC___d265 ?
	       rg_operand_out_13 :
	       subifc_recv_op_13_put ;
  assign lv_outp___1__h15052 = rg_operand_out_13 + subifc_recv_op_13_put ;
  assign lv_outp___1__h15351 =
	     rg_operand_out_14_80_SLE_IF_wr_operand_14_whas_ETC___d283 ?
	       subifc_recv_op_14_put :
	       rg_operand_out_14 ;
  assign lv_outp___1__h15378 =
	     rg_operand_out_14_80_SLE_IF_wr_operand_14_whas_ETC___d283 ?
	       rg_operand_out_14 :
	       subifc_recv_op_14_put ;
  assign lv_outp___1__h15385 = rg_operand_out_14 + subifc_recv_op_14_put ;
  assign lv_outp___1__h15684 =
	     rg_operand_out_15_98_SLE_IF_wr_operand_15_whas_ETC___d301 ?
	       subifc_recv_op_15_put :
	       rg_operand_out_15 ;
  assign lv_outp___1__h15711 =
	     rg_operand_out_15_98_SLE_IF_wr_operand_15_whas_ETC___d301 ?
	       rg_operand_out_15 :
	       subifc_recv_op_15_put ;
  assign lv_outp___1__h15718 = rg_operand_out_15 + subifc_recv_op_15_put ;
  assign lv_outp___1__h16017 =
	     rg_operand_out_16_16_SLE_IF_wr_operand_16_whas_ETC___d319 ?
	       subifc_recv_op_16_put :
	       rg_operand_out_16 ;
  assign lv_outp___1__h16044 =
	     rg_operand_out_16_16_SLE_IF_wr_operand_16_whas_ETC___d319 ?
	       rg_operand_out_16 :
	       subifc_recv_op_16_put ;
  assign lv_outp___1__h16051 = rg_operand_out_16 + subifc_recv_op_16_put ;
  assign lv_outp___1__h16350 =
	     rg_operand_out_17_34_SLE_IF_wr_operand_17_whas_ETC___d337 ?
	       subifc_recv_op_17_put :
	       rg_operand_out_17 ;
  assign lv_outp___1__h16377 =
	     rg_operand_out_17_34_SLE_IF_wr_operand_17_whas_ETC___d337 ?
	       rg_operand_out_17 :
	       subifc_recv_op_17_put ;
  assign lv_outp___1__h16384 = rg_operand_out_17 + subifc_recv_op_17_put ;
  assign lv_outp___1__h16683 =
	     rg_operand_out_18_52_SLE_IF_wr_operand_18_whas_ETC___d355 ?
	       subifc_recv_op_18_put :
	       rg_operand_out_18 ;
  assign lv_outp___1__h16710 =
	     rg_operand_out_18_52_SLE_IF_wr_operand_18_whas_ETC___d355 ?
	       rg_operand_out_18 :
	       subifc_recv_op_18_put ;
  assign lv_outp___1__h16717 = rg_operand_out_18 + subifc_recv_op_18_put ;
  assign lv_outp___1__h17016 =
	     rg_operand_out_19_70_SLE_IF_wr_operand_19_whas_ETC___d373 ?
	       subifc_recv_op_19_put :
	       rg_operand_out_19 ;
  assign lv_outp___1__h17043 =
	     rg_operand_out_19_70_SLE_IF_wr_operand_19_whas_ETC___d373 ?
	       rg_operand_out_19 :
	       subifc_recv_op_19_put ;
  assign lv_outp___1__h17050 = rg_operand_out_19 + subifc_recv_op_19_put ;
  assign lv_outp___1__h17349 =
	     rg_operand_out_20_88_SLE_IF_wr_operand_20_whas_ETC___d391 ?
	       subifc_recv_op_20_put :
	       rg_operand_out_20 ;
  assign lv_outp___1__h17376 =
	     rg_operand_out_20_88_SLE_IF_wr_operand_20_whas_ETC___d391 ?
	       rg_operand_out_20 :
	       subifc_recv_op_20_put ;
  assign lv_outp___1__h17383 = rg_operand_out_20 + subifc_recv_op_20_put ;
  assign lv_outp___1__h17682 =
	     rg_operand_out_21_06_SLE_IF_wr_operand_21_whas_ETC___d409 ?
	       subifc_recv_op_21_put :
	       rg_operand_out_21 ;
  assign lv_outp___1__h17709 =
	     rg_operand_out_21_06_SLE_IF_wr_operand_21_whas_ETC___d409 ?
	       rg_operand_out_21 :
	       subifc_recv_op_21_put ;
  assign lv_outp___1__h17716 = rg_operand_out_21 + subifc_recv_op_21_put ;
  assign lv_outp___1__h18015 =
	     rg_operand_out_22_24_SLE_IF_wr_operand_22_whas_ETC___d427 ?
	       subifc_recv_op_22_put :
	       rg_operand_out_22 ;
  assign lv_outp___1__h18042 =
	     rg_operand_out_22_24_SLE_IF_wr_operand_22_whas_ETC___d427 ?
	       rg_operand_out_22 :
	       subifc_recv_op_22_put ;
  assign lv_outp___1__h18049 = rg_operand_out_22 + subifc_recv_op_22_put ;
  assign lv_outp___1__h18348 =
	     rg_operand_out_23_42_SLE_IF_wr_operand_23_whas_ETC___d445 ?
	       subifc_recv_op_23_put :
	       rg_operand_out_23 ;
  assign lv_outp___1__h18375 =
	     rg_operand_out_23_42_SLE_IF_wr_operand_23_whas_ETC___d445 ?
	       rg_operand_out_23 :
	       subifc_recv_op_23_put ;
  assign lv_outp___1__h18382 = rg_operand_out_23 + subifc_recv_op_23_put ;
  assign lv_outp___1__h18681 =
	     rg_operand_out_24_60_SLE_IF_wr_operand_24_whas_ETC___d463 ?
	       subifc_recv_op_24_put :
	       rg_operand_out_24 ;
  assign lv_outp___1__h18708 =
	     rg_operand_out_24_60_SLE_IF_wr_operand_24_whas_ETC___d463 ?
	       rg_operand_out_24 :
	       subifc_recv_op_24_put ;
  assign lv_outp___1__h18715 = rg_operand_out_24 + subifc_recv_op_24_put ;
  assign lv_outp___1__h19014 =
	     rg_operand_out_25_78_SLE_IF_wr_operand_25_whas_ETC___d481 ?
	       subifc_recv_op_25_put :
	       rg_operand_out_25 ;
  assign lv_outp___1__h19041 =
	     rg_operand_out_25_78_SLE_IF_wr_operand_25_whas_ETC___d481 ?
	       rg_operand_out_25 :
	       subifc_recv_op_25_put ;
  assign lv_outp___1__h19048 = rg_operand_out_25 + subifc_recv_op_25_put ;
  assign lv_outp___1__h19347 =
	     rg_operand_out_26_96_SLE_IF_wr_operand_26_whas_ETC___d499 ?
	       subifc_recv_op_26_put :
	       rg_operand_out_26 ;
  assign lv_outp___1__h19374 =
	     rg_operand_out_26_96_SLE_IF_wr_operand_26_whas_ETC___d499 ?
	       rg_operand_out_26 :
	       subifc_recv_op_26_put ;
  assign lv_outp___1__h19381 = rg_operand_out_26 + subifc_recv_op_26_put ;
  assign lv_outp___1__h19680 =
	     rg_operand_out_27_14_SLE_IF_wr_operand_27_whas_ETC___d517 ?
	       subifc_recv_op_27_put :
	       rg_operand_out_27 ;
  assign lv_outp___1__h19707 =
	     rg_operand_out_27_14_SLE_IF_wr_operand_27_whas_ETC___d517 ?
	       rg_operand_out_27 :
	       subifc_recv_op_27_put ;
  assign lv_outp___1__h19714 = rg_operand_out_27 + subifc_recv_op_27_put ;
  assign lv_outp___1__h20013 =
	     rg_operand_out_28_32_SLE_IF_wr_operand_28_whas_ETC___d535 ?
	       subifc_recv_op_28_put :
	       rg_operand_out_28 ;
  assign lv_outp___1__h20040 =
	     rg_operand_out_28_32_SLE_IF_wr_operand_28_whas_ETC___d535 ?
	       rg_operand_out_28 :
	       subifc_recv_op_28_put ;
  assign lv_outp___1__h20047 = rg_operand_out_28 + subifc_recv_op_28_put ;
  assign lv_outp___1__h20346 =
	     rg_operand_out_29_50_SLE_IF_wr_operand_29_whas_ETC___d553 ?
	       subifc_recv_op_29_put :
	       rg_operand_out_29 ;
  assign lv_outp___1__h20373 =
	     rg_operand_out_29_50_SLE_IF_wr_operand_29_whas_ETC___d553 ?
	       rg_operand_out_29 :
	       subifc_recv_op_29_put ;
  assign lv_outp___1__h20380 = rg_operand_out_29 + subifc_recv_op_29_put ;
  assign lv_outp___1__h20679 =
	     rg_operand_out_30_68_SLE_IF_wr_operand_30_whas_ETC___d571 ?
	       subifc_recv_op_30_put :
	       rg_operand_out_30 ;
  assign lv_outp___1__h20706 =
	     rg_operand_out_30_68_SLE_IF_wr_operand_30_whas_ETC___d571 ?
	       rg_operand_out_30 :
	       subifc_recv_op_30_put ;
  assign lv_outp___1__h20713 = rg_operand_out_30 + subifc_recv_op_30_put ;
  assign lv_outp___1__h21012 =
	     rg_operand_out_31_86_SLE_IF_wr_operand_31_whas_ETC___d589 ?
	       subifc_recv_op_31_put :
	       rg_operand_out_31 ;
  assign lv_outp___1__h21039 =
	     rg_operand_out_31_86_SLE_IF_wr_operand_31_whas_ETC___d589 ?
	       rg_operand_out_31 :
	       subifc_recv_op_31_put ;
  assign lv_outp___1__h21046 = rg_operand_out_31 + subifc_recv_op_31_put ;
  assign lv_outp___1__h9737 =
	     rg_operand_out_0_4_SLE_IF_wr_operand_0_whas_TH_ETC___d27 ?
	       subifc_recv_op_0_put :
	       rg_operand_out_0 ;
  assign lv_shifted_output__h11016 =
	     rg_operand_out_1 << subifc_recv_op_1_put ;
  assign lv_shifted_output__h11349 =
	     rg_operand_out_2 << subifc_recv_op_2_put ;
  assign lv_shifted_output__h11682 =
	     rg_operand_out_3 << subifc_recv_op_3_put ;
  assign lv_shifted_output__h12015 =
	     rg_operand_out_4 << subifc_recv_op_4_put ;
  assign lv_shifted_output__h12348 =
	     rg_operand_out_5 << subifc_recv_op_5_put ;
  assign lv_shifted_output__h12681 =
	     rg_operand_out_6 << subifc_recv_op_6_put ;
  assign lv_shifted_output__h13014 =
	     rg_operand_out_7 << subifc_recv_op_7_put ;
  assign lv_shifted_output__h13347 =
	     rg_operand_out_8 << subifc_recv_op_8_put ;
  assign lv_shifted_output__h13680 =
	     rg_operand_out_9 << subifc_recv_op_9_put ;
  assign lv_shifted_output__h14013 =
	     rg_operand_out_10 << subifc_recv_op_10_put ;
  assign lv_shifted_output__h14346 =
	     rg_operand_out_11 << subifc_recv_op_11_put ;
  assign lv_shifted_output__h14679 =
	     rg_operand_out_12 << subifc_recv_op_12_put ;
  assign lv_shifted_output__h15012 =
	     rg_operand_out_13 << subifc_recv_op_13_put ;
  assign lv_shifted_output__h15345 =
	     rg_operand_out_14 << subifc_recv_op_14_put ;
  assign lv_shifted_output__h15678 =
	     rg_operand_out_15 << subifc_recv_op_15_put ;
  assign lv_shifted_output__h16011 =
	     rg_operand_out_16 << subifc_recv_op_16_put ;
  assign lv_shifted_output__h16344 =
	     rg_operand_out_17 << subifc_recv_op_17_put ;
  assign lv_shifted_output__h16677 =
	     rg_operand_out_18 << subifc_recv_op_18_put ;
  assign lv_shifted_output__h17010 =
	     rg_operand_out_19 << subifc_recv_op_19_put ;
  assign lv_shifted_output__h17343 =
	     rg_operand_out_20 << subifc_recv_op_20_put ;
  assign lv_shifted_output__h17676 =
	     rg_operand_out_21 << subifc_recv_op_21_put ;
  assign lv_shifted_output__h18009 =
	     rg_operand_out_22 << subifc_recv_op_22_put ;
  assign lv_shifted_output__h18342 =
	     rg_operand_out_23 << subifc_recv_op_23_put ;
  assign lv_shifted_output__h18675 =
	     rg_operand_out_24 << subifc_recv_op_24_put ;
  assign lv_shifted_output__h19008 =
	     rg_operand_out_25 << subifc_recv_op_25_put ;
  assign lv_shifted_output__h19341 =
	     rg_operand_out_26 << subifc_recv_op_26_put ;
  assign lv_shifted_output__h19674 =
	     rg_operand_out_27 << subifc_recv_op_27_put ;
  assign lv_shifted_output__h20007 =
	     rg_operand_out_28 << subifc_recv_op_28_put ;
  assign lv_shifted_output__h20340 =
	     rg_operand_out_29 << subifc_recv_op_29_put ;
  assign lv_shifted_output__h20673 =
	     rg_operand_out_30 << subifc_recv_op_30_put ;
  assign lv_shifted_output__h21006 =
	     rg_operand_out_31 << subifc_recv_op_31_put ;
  assign lv_shifted_output__h9727 = rg_operand_out_0 << subifc_recv_op_0_put ;
  assign rg_i_var_32_EQ_rg_alu_packet_BITS_87_TO_80_33___d634 =
	     rg_i_var == rg_alu_packet[87:80] ;
  assign rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 =
	     rg_j_var == rg_alu_packet[79:72] ;
  assign rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 =
	     rg_k_out == rg_alu_packet[71:68] ;
  assign rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 =
	     rg_k_var == rg_alu_packet[71:68] ;
  assign rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16 =
	     rg_l_out == rg_alu_packet[67:64] ;
  assign rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5_1_ETC___d639 =
	     rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 &&
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 &&
	     rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 &&
	     rg_i_var_32_EQ_rg_alu_packet_BITS_87_TO_80_33___d634 ;
  assign rg_l_var_16_EQ_rg_alu_packet_BITS_67_TO_64_5___d617 =
	     rg_l_var == rg_alu_packet[67:64] ;
  assign rg_operand_out_0_4_SLE_IF_wr_operand_0_whas_TH_ETC___d27 =
	     (rg_operand_out_0 ^ 32'h80000000) <=
	     (subifc_recv_op_0_put ^ 32'h80000000) ;
  assign rg_operand_out_10_08_SLE_IF_wr_operand_10_whas_ETC___d211 =
	     (rg_operand_out_10 ^ 32'h80000000) <=
	     (subifc_recv_op_10_put ^ 32'h80000000) ;
  assign rg_operand_out_11_26_SLE_IF_wr_operand_11_whas_ETC___d229 =
	     (rg_operand_out_11 ^ 32'h80000000) <=
	     (subifc_recv_op_11_put ^ 32'h80000000) ;
  assign rg_operand_out_12_44_SLE_IF_wr_operand_12_whas_ETC___d247 =
	     (rg_operand_out_12 ^ 32'h80000000) <=
	     (subifc_recv_op_12_put ^ 32'h80000000) ;
  assign rg_operand_out_13_62_SLE_IF_wr_operand_13_whas_ETC___d265 =
	     (rg_operand_out_13 ^ 32'h80000000) <=
	     (subifc_recv_op_13_put ^ 32'h80000000) ;
  assign rg_operand_out_14_80_SLE_IF_wr_operand_14_whas_ETC___d283 =
	     (rg_operand_out_14 ^ 32'h80000000) <=
	     (subifc_recv_op_14_put ^ 32'h80000000) ;
  assign rg_operand_out_15_98_SLE_IF_wr_operand_15_whas_ETC___d301 =
	     (rg_operand_out_15 ^ 32'h80000000) <=
	     (subifc_recv_op_15_put ^ 32'h80000000) ;
  assign rg_operand_out_16_16_SLE_IF_wr_operand_16_whas_ETC___d319 =
	     (rg_operand_out_16 ^ 32'h80000000) <=
	     (subifc_recv_op_16_put ^ 32'h80000000) ;
  assign rg_operand_out_17_34_SLE_IF_wr_operand_17_whas_ETC___d337 =
	     (rg_operand_out_17 ^ 32'h80000000) <=
	     (subifc_recv_op_17_put ^ 32'h80000000) ;
  assign rg_operand_out_18_52_SLE_IF_wr_operand_18_whas_ETC___d355 =
	     (rg_operand_out_18 ^ 32'h80000000) <=
	     (subifc_recv_op_18_put ^ 32'h80000000) ;
  assign rg_operand_out_19_70_SLE_IF_wr_operand_19_whas_ETC___d373 =
	     (rg_operand_out_19 ^ 32'h80000000) <=
	     (subifc_recv_op_19_put ^ 32'h80000000) ;
  assign rg_operand_out_1_6_SLE_IF_wr_operand_1_whas__4_ETC___d49 =
	     (rg_operand_out_1 ^ 32'h80000000) <=
	     (subifc_recv_op_1_put ^ 32'h80000000) ;
  assign rg_operand_out_20_88_SLE_IF_wr_operand_20_whas_ETC___d391 =
	     (rg_operand_out_20 ^ 32'h80000000) <=
	     (subifc_recv_op_20_put ^ 32'h80000000) ;
  assign rg_operand_out_21_06_SLE_IF_wr_operand_21_whas_ETC___d409 =
	     (rg_operand_out_21 ^ 32'h80000000) <=
	     (subifc_recv_op_21_put ^ 32'h80000000) ;
  assign rg_operand_out_22_24_SLE_IF_wr_operand_22_whas_ETC___d427 =
	     (rg_operand_out_22 ^ 32'h80000000) <=
	     (subifc_recv_op_22_put ^ 32'h80000000) ;
  assign rg_operand_out_23_42_SLE_IF_wr_operand_23_whas_ETC___d445 =
	     (rg_operand_out_23 ^ 32'h80000000) <=
	     (subifc_recv_op_23_put ^ 32'h80000000) ;
  assign rg_operand_out_24_60_SLE_IF_wr_operand_24_whas_ETC___d463 =
	     (rg_operand_out_24 ^ 32'h80000000) <=
	     (subifc_recv_op_24_put ^ 32'h80000000) ;
  assign rg_operand_out_25_78_SLE_IF_wr_operand_25_whas_ETC___d481 =
	     (rg_operand_out_25 ^ 32'h80000000) <=
	     (subifc_recv_op_25_put ^ 32'h80000000) ;
  assign rg_operand_out_26_96_SLE_IF_wr_operand_26_whas_ETC___d499 =
	     (rg_operand_out_26 ^ 32'h80000000) <=
	     (subifc_recv_op_26_put ^ 32'h80000000) ;
  assign rg_operand_out_27_14_SLE_IF_wr_operand_27_whas_ETC___d517 =
	     (rg_operand_out_27 ^ 32'h80000000) <=
	     (subifc_recv_op_27_put ^ 32'h80000000) ;
  assign rg_operand_out_28_32_SLE_IF_wr_operand_28_whas_ETC___d535 =
	     (rg_operand_out_28 ^ 32'h80000000) <=
	     (subifc_recv_op_28_put ^ 32'h80000000) ;
  assign rg_operand_out_29_50_SLE_IF_wr_operand_29_whas_ETC___d553 =
	     (rg_operand_out_29 ^ 32'h80000000) <=
	     (subifc_recv_op_29_put ^ 32'h80000000) ;
  assign rg_operand_out_2_4_SLE_IF_wr_operand_2_whas__2_ETC___d67 =
	     (rg_operand_out_2 ^ 32'h80000000) <=
	     (subifc_recv_op_2_put ^ 32'h80000000) ;
  assign rg_operand_out_30_68_SLE_IF_wr_operand_30_whas_ETC___d571 =
	     (rg_operand_out_30 ^ 32'h80000000) <=
	     (subifc_recv_op_30_put ^ 32'h80000000) ;
  assign rg_operand_out_31_86_SLE_IF_wr_operand_31_whas_ETC___d589 =
	     (rg_operand_out_31 ^ 32'h80000000) <=
	     (subifc_recv_op_31_put ^ 32'h80000000) ;
  assign rg_operand_out_3_2_SLE_IF_wr_operand_3_whas__0_ETC___d85 =
	     (rg_operand_out_3 ^ 32'h80000000) <=
	     (subifc_recv_op_3_put ^ 32'h80000000) ;
  assign rg_operand_out_4_00_SLE_IF_wr_operand_4_whas___ETC___d103 =
	     (rg_operand_out_4 ^ 32'h80000000) <=
	     (subifc_recv_op_4_put ^ 32'h80000000) ;
  assign rg_operand_out_5_18_SLE_IF_wr_operand_5_whas___ETC___d121 =
	     (rg_operand_out_5 ^ 32'h80000000) <=
	     (subifc_recv_op_5_put ^ 32'h80000000) ;
  assign rg_operand_out_6_36_SLE_IF_wr_operand_6_whas___ETC___d139 =
	     (rg_operand_out_6 ^ 32'h80000000) <=
	     (subifc_recv_op_6_put ^ 32'h80000000) ;
  assign rg_operand_out_7_54_SLE_IF_wr_operand_7_whas___ETC___d157 =
	     (rg_operand_out_7 ^ 32'h80000000) <=
	     (subifc_recv_op_7_put ^ 32'h80000000) ;
  assign rg_operand_out_8_72_SLE_IF_wr_operand_8_whas___ETC___d175 =
	     (rg_operand_out_8 ^ 32'h80000000) <=
	     (subifc_recv_op_8_put ^ 32'h80000000) ;
  assign rg_operand_out_9_90_SLE_IF_wr_operand_9_whas___ETC___d193 =
	     (rg_operand_out_9 ^ 32'h80000000) <=
	     (subifc_recv_op_9_put ^ 32'h80000000) ;
  assign v__h25858 =
	     rg_k_var_20_EQ_rg_alu_packet_BITS_71_TO_68_2___d621 ?
	       v__h25916 :
	       addr__h25895 ;
  assign v__h25916 =
	     rg_j_var_25_EQ_rg_alu_packet_BITS_79_TO_72_26___d627 ?
	       v__h25974 :
	       addr___2__h25951 ;
  assign v__h25974 = rg_irow_addr + rg_alu_packet[63:56] ;
  assign v__h26410 = rg_scol_addr + 8'd1 ;
  assign x__h10704 =
	     rg_alu_packet[31] ? { 24'd0, rg_alu_packet[30:23] } : 32'd0 ;
  assign x__h10945 = x_wget__h5823 ;
  assign x__h11278 = x_wget__h5872 ;
  assign x__h11611 = x_wget__h5921 ;
  assign x__h11944 = x_wget__h5970 ;
  assign x__h12277 = x_wget__h6019 ;
  assign x__h12610 = x_wget__h6068 ;
  assign x__h12943 = x_wget__h6117 ;
  assign x__h13276 = x_wget__h6166 ;
  assign x__h13609 = x_wget__h6215 ;
  assign x__h13942 = x_wget__h6264 ;
  assign x__h14275 = x_wget__h6313 ;
  assign x__h14608 = x_wget__h6362 ;
  assign x__h14941 = x_wget__h6411 ;
  assign x__h15274 = x_wget__h6460 ;
  assign x__h15607 = x_wget__h6509 ;
  assign x__h15940 = x_wget__h6558 ;
  assign x__h16273 = x_wget__h6607 ;
  assign x__h16606 = x_wget__h6656 ;
  assign x__h16939 = x_wget__h6705 ;
  assign x__h17272 = x_wget__h6754 ;
  assign x__h17605 = x_wget__h6803 ;
  assign x__h17938 = x_wget__h6852 ;
  assign x__h18271 = x_wget__h6901 ;
  assign x__h18604 = x_wget__h6950 ;
  assign x__h18937 = x_wget__h6999 ;
  assign x__h19270 = x_wget__h7048 ;
  assign x__h19603 = x_wget__h7097 ;
  assign x__h19936 = x_wget__h7146 ;
  assign x__h20269 = x_wget__h7195 ;
  assign x__h20602 = x_wget__h7244 ;
  assign x__h20935 = x_wget__h7293 ;
  assign x__h21254 = rg_l_out + 4'd1 ;
  assign x__h21399 = rg_k_out + 4'd1 ;
  assign x__h23900 = { 24'd0, subifc_put_alu_params_put[30:23] } ;
  assign x__h26118 = rg_i_var + 8'd1 ;
  assign x__h26227 = rg_j_var + 8'd1 ;
  assign x__h26317 = rg_k_var + 4'd1 ;
  assign x__h26422 = rg_l_var + 4'd1 ;
  assign x__h8771 = x_wget__h5774 ;
  always@(rg_alu_packet or
	  lv_outp___1__h9737 or
	  lv_outp___1__h10644 or
	  lv_outp___1__h10651 or lv_shifted_output__h9727)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h5774 = lv_outp___1__h9737;
      2'd1: x_wget__h5774 = lv_outp___1__h10644;
      2'd2: x_wget__h5774 = lv_outp___1__h10651;
      2'd3: x_wget__h5774 = lv_shifted_output__h9727;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h11022 or
	  lv_outp___1__h11049 or
	  lv_outp___1__h11056 or lv_shifted_output__h11016)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h5823 = lv_outp___1__h11022;
      2'd1: x_wget__h5823 = lv_outp___1__h11049;
      2'd2: x_wget__h5823 = lv_outp___1__h11056;
      2'd3: x_wget__h5823 = lv_shifted_output__h11016;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h11355 or
	  lv_outp___1__h11382 or
	  lv_outp___1__h11389 or lv_shifted_output__h11349)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h5872 = lv_outp___1__h11355;
      2'd1: x_wget__h5872 = lv_outp___1__h11382;
      2'd2: x_wget__h5872 = lv_outp___1__h11389;
      2'd3: x_wget__h5872 = lv_shifted_output__h11349;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h11688 or
	  lv_outp___1__h11715 or
	  lv_outp___1__h11722 or lv_shifted_output__h11682)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h5921 = lv_outp___1__h11688;
      2'd1: x_wget__h5921 = lv_outp___1__h11715;
      2'd2: x_wget__h5921 = lv_outp___1__h11722;
      2'd3: x_wget__h5921 = lv_shifted_output__h11682;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h12021 or
	  lv_outp___1__h12048 or
	  lv_outp___1__h12055 or lv_shifted_output__h12015)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h5970 = lv_outp___1__h12021;
      2'd1: x_wget__h5970 = lv_outp___1__h12048;
      2'd2: x_wget__h5970 = lv_outp___1__h12055;
      2'd3: x_wget__h5970 = lv_shifted_output__h12015;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h12354 or
	  lv_outp___1__h12381 or
	  lv_outp___1__h12388 or lv_shifted_output__h12348)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6019 = lv_outp___1__h12354;
      2'd1: x_wget__h6019 = lv_outp___1__h12381;
      2'd2: x_wget__h6019 = lv_outp___1__h12388;
      2'd3: x_wget__h6019 = lv_shifted_output__h12348;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h12687 or
	  lv_outp___1__h12714 or
	  lv_outp___1__h12721 or lv_shifted_output__h12681)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6068 = lv_outp___1__h12687;
      2'd1: x_wget__h6068 = lv_outp___1__h12714;
      2'd2: x_wget__h6068 = lv_outp___1__h12721;
      2'd3: x_wget__h6068 = lv_shifted_output__h12681;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h13020 or
	  lv_outp___1__h13047 or
	  lv_outp___1__h13054 or lv_shifted_output__h13014)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6117 = lv_outp___1__h13020;
      2'd1: x_wget__h6117 = lv_outp___1__h13047;
      2'd2: x_wget__h6117 = lv_outp___1__h13054;
      2'd3: x_wget__h6117 = lv_shifted_output__h13014;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h13353 or
	  lv_outp___1__h13380 or
	  lv_outp___1__h13387 or lv_shifted_output__h13347)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6166 = lv_outp___1__h13353;
      2'd1: x_wget__h6166 = lv_outp___1__h13380;
      2'd2: x_wget__h6166 = lv_outp___1__h13387;
      2'd3: x_wget__h6166 = lv_shifted_output__h13347;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h13686 or
	  lv_outp___1__h13713 or
	  lv_outp___1__h13720 or lv_shifted_output__h13680)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6215 = lv_outp___1__h13686;
      2'd1: x_wget__h6215 = lv_outp___1__h13713;
      2'd2: x_wget__h6215 = lv_outp___1__h13720;
      2'd3: x_wget__h6215 = lv_shifted_output__h13680;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h14019 or
	  lv_outp___1__h14046 or
	  lv_outp___1__h14053 or lv_shifted_output__h14013)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6264 = lv_outp___1__h14019;
      2'd1: x_wget__h6264 = lv_outp___1__h14046;
      2'd2: x_wget__h6264 = lv_outp___1__h14053;
      2'd3: x_wget__h6264 = lv_shifted_output__h14013;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h14352 or
	  lv_outp___1__h14379 or
	  lv_outp___1__h14386 or lv_shifted_output__h14346)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6313 = lv_outp___1__h14352;
      2'd1: x_wget__h6313 = lv_outp___1__h14379;
      2'd2: x_wget__h6313 = lv_outp___1__h14386;
      2'd3: x_wget__h6313 = lv_shifted_output__h14346;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h14685 or
	  lv_outp___1__h14712 or
	  lv_outp___1__h14719 or lv_shifted_output__h14679)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6362 = lv_outp___1__h14685;
      2'd1: x_wget__h6362 = lv_outp___1__h14712;
      2'd2: x_wget__h6362 = lv_outp___1__h14719;
      2'd3: x_wget__h6362 = lv_shifted_output__h14679;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h15018 or
	  lv_outp___1__h15045 or
	  lv_outp___1__h15052 or lv_shifted_output__h15012)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6411 = lv_outp___1__h15018;
      2'd1: x_wget__h6411 = lv_outp___1__h15045;
      2'd2: x_wget__h6411 = lv_outp___1__h15052;
      2'd3: x_wget__h6411 = lv_shifted_output__h15012;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h15351 or
	  lv_outp___1__h15378 or
	  lv_outp___1__h15385 or lv_shifted_output__h15345)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6460 = lv_outp___1__h15351;
      2'd1: x_wget__h6460 = lv_outp___1__h15378;
      2'd2: x_wget__h6460 = lv_outp___1__h15385;
      2'd3: x_wget__h6460 = lv_shifted_output__h15345;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h15684 or
	  lv_outp___1__h15711 or
	  lv_outp___1__h15718 or lv_shifted_output__h15678)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6509 = lv_outp___1__h15684;
      2'd1: x_wget__h6509 = lv_outp___1__h15711;
      2'd2: x_wget__h6509 = lv_outp___1__h15718;
      2'd3: x_wget__h6509 = lv_shifted_output__h15678;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h16017 or
	  lv_outp___1__h16044 or
	  lv_outp___1__h16051 or lv_shifted_output__h16011)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6558 = lv_outp___1__h16017;
      2'd1: x_wget__h6558 = lv_outp___1__h16044;
      2'd2: x_wget__h6558 = lv_outp___1__h16051;
      2'd3: x_wget__h6558 = lv_shifted_output__h16011;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h16350 or
	  lv_outp___1__h16377 or
	  lv_outp___1__h16384 or lv_shifted_output__h16344)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6607 = lv_outp___1__h16350;
      2'd1: x_wget__h6607 = lv_outp___1__h16377;
      2'd2: x_wget__h6607 = lv_outp___1__h16384;
      2'd3: x_wget__h6607 = lv_shifted_output__h16344;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h16683 or
	  lv_outp___1__h16710 or
	  lv_outp___1__h16717 or lv_shifted_output__h16677)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6656 = lv_outp___1__h16683;
      2'd1: x_wget__h6656 = lv_outp___1__h16710;
      2'd2: x_wget__h6656 = lv_outp___1__h16717;
      2'd3: x_wget__h6656 = lv_shifted_output__h16677;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h17016 or
	  lv_outp___1__h17043 or
	  lv_outp___1__h17050 or lv_shifted_output__h17010)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6705 = lv_outp___1__h17016;
      2'd1: x_wget__h6705 = lv_outp___1__h17043;
      2'd2: x_wget__h6705 = lv_outp___1__h17050;
      2'd3: x_wget__h6705 = lv_shifted_output__h17010;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h17349 or
	  lv_outp___1__h17376 or
	  lv_outp___1__h17383 or lv_shifted_output__h17343)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6754 = lv_outp___1__h17349;
      2'd1: x_wget__h6754 = lv_outp___1__h17376;
      2'd2: x_wget__h6754 = lv_outp___1__h17383;
      2'd3: x_wget__h6754 = lv_shifted_output__h17343;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h17682 or
	  lv_outp___1__h17709 or
	  lv_outp___1__h17716 or lv_shifted_output__h17676)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6803 = lv_outp___1__h17682;
      2'd1: x_wget__h6803 = lv_outp___1__h17709;
      2'd2: x_wget__h6803 = lv_outp___1__h17716;
      2'd3: x_wget__h6803 = lv_shifted_output__h17676;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h18015 or
	  lv_outp___1__h18042 or
	  lv_outp___1__h18049 or lv_shifted_output__h18009)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6852 = lv_outp___1__h18015;
      2'd1: x_wget__h6852 = lv_outp___1__h18042;
      2'd2: x_wget__h6852 = lv_outp___1__h18049;
      2'd3: x_wget__h6852 = lv_shifted_output__h18009;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h18348 or
	  lv_outp___1__h18375 or
	  lv_outp___1__h18382 or lv_shifted_output__h18342)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6901 = lv_outp___1__h18348;
      2'd1: x_wget__h6901 = lv_outp___1__h18375;
      2'd2: x_wget__h6901 = lv_outp___1__h18382;
      2'd3: x_wget__h6901 = lv_shifted_output__h18342;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h18681 or
	  lv_outp___1__h18708 or
	  lv_outp___1__h18715 or lv_shifted_output__h18675)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6950 = lv_outp___1__h18681;
      2'd1: x_wget__h6950 = lv_outp___1__h18708;
      2'd2: x_wget__h6950 = lv_outp___1__h18715;
      2'd3: x_wget__h6950 = lv_shifted_output__h18675;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h19014 or
	  lv_outp___1__h19041 or
	  lv_outp___1__h19048 or lv_shifted_output__h19008)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h6999 = lv_outp___1__h19014;
      2'd1: x_wget__h6999 = lv_outp___1__h19041;
      2'd2: x_wget__h6999 = lv_outp___1__h19048;
      2'd3: x_wget__h6999 = lv_shifted_output__h19008;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h19347 or
	  lv_outp___1__h19374 or
	  lv_outp___1__h19381 or lv_shifted_output__h19341)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h7048 = lv_outp___1__h19347;
      2'd1: x_wget__h7048 = lv_outp___1__h19374;
      2'd2: x_wget__h7048 = lv_outp___1__h19381;
      2'd3: x_wget__h7048 = lv_shifted_output__h19341;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h19680 or
	  lv_outp___1__h19707 or
	  lv_outp___1__h19714 or lv_shifted_output__h19674)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h7097 = lv_outp___1__h19680;
      2'd1: x_wget__h7097 = lv_outp___1__h19707;
      2'd2: x_wget__h7097 = lv_outp___1__h19714;
      2'd3: x_wget__h7097 = lv_shifted_output__h19674;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h20013 or
	  lv_outp___1__h20040 or
	  lv_outp___1__h20047 or lv_shifted_output__h20007)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h7146 = lv_outp___1__h20013;
      2'd1: x_wget__h7146 = lv_outp___1__h20040;
      2'd2: x_wget__h7146 = lv_outp___1__h20047;
      2'd3: x_wget__h7146 = lv_shifted_output__h20007;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h20346 or
	  lv_outp___1__h20373 or
	  lv_outp___1__h20380 or lv_shifted_output__h20340)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h7195 = lv_outp___1__h20346;
      2'd1: x_wget__h7195 = lv_outp___1__h20373;
      2'd2: x_wget__h7195 = lv_outp___1__h20380;
      2'd3: x_wget__h7195 = lv_shifted_output__h20340;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h20679 or
	  lv_outp___1__h20706 or
	  lv_outp___1__h20713 or lv_shifted_output__h20673)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h7244 = lv_outp___1__h20679;
      2'd1: x_wget__h7244 = lv_outp___1__h20706;
      2'd2: x_wget__h7244 = lv_outp___1__h20713;
      2'd3: x_wget__h7244 = lv_shifted_output__h20673;
    endcase
  end
  always@(rg_alu_packet or
	  lv_outp___1__h21012 or
	  lv_outp___1__h21039 or
	  lv_outp___1__h21046 or lv_shifted_output__h21006)
  begin
    case (rg_alu_packet[119:118])
      2'd0: x_wget__h7293 = lv_outp___1__h21012;
      2'd1: x_wget__h7293 = lv_outp___1__h21039;
      2'd2: x_wget__h7293 = lv_outp___1__h21046;
      2'd3: x_wget__h7293 = lv_shifted_output__h21006;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_alu_complete <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_alu_packet <= `BSV_ASSIGNMENT_DELAY
	    121'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	rg_i_var <= `BSV_ASSIGNMENT_DELAY 8'd1;
	rg_icol_addr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_irow_addr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_j_var <= `BSV_ASSIGNMENT_DELAY 8'd1;
	rg_k_out <= `BSV_ASSIGNMENT_DELAY 4'd1;
	rg_k_var <= `BSV_ASSIGNMENT_DELAY 4'd1;
	rg_l_out <= `BSV_ASSIGNMENT_DELAY 4'd1;
	rg_l_var <= `BSV_ASSIGNMENT_DELAY 4'd1;
	rg_operand_out_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_10 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_11 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_12 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_13 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_14 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_15 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_16 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_17 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_18 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_19 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_20 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_21 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_22 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_23 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_24 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_25 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_26 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_27 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_28 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_29 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_30 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_31 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_4 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_5 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_6 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_7 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_8 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_operand_out_9 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_output_addr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_req_complete <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_scol_addr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_srow_addr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_which_buffer <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_alu_complete$EN)
	  rg_alu_complete <= `BSV_ASSIGNMENT_DELAY rg_alu_complete$D_IN;
	if (rg_alu_packet$EN)
	  rg_alu_packet <= `BSV_ASSIGNMENT_DELAY rg_alu_packet$D_IN;
	if (rg_i_var$EN) rg_i_var <= `BSV_ASSIGNMENT_DELAY rg_i_var$D_IN;
	if (rg_icol_addr$EN)
	  rg_icol_addr <= `BSV_ASSIGNMENT_DELAY rg_icol_addr$D_IN;
	if (rg_irow_addr$EN)
	  rg_irow_addr <= `BSV_ASSIGNMENT_DELAY rg_irow_addr$D_IN;
	if (rg_j_var$EN) rg_j_var <= `BSV_ASSIGNMENT_DELAY rg_j_var$D_IN;
	if (rg_k_out$EN) rg_k_out <= `BSV_ASSIGNMENT_DELAY rg_k_out$D_IN;
	if (rg_k_var$EN) rg_k_var <= `BSV_ASSIGNMENT_DELAY rg_k_var$D_IN;
	if (rg_l_out$EN) rg_l_out <= `BSV_ASSIGNMENT_DELAY rg_l_out$D_IN;
	if (rg_l_var$EN) rg_l_var <= `BSV_ASSIGNMENT_DELAY rg_l_var$D_IN;
	if (rg_operand_out_0$EN)
	  rg_operand_out_0 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_0$D_IN;
	if (rg_operand_out_1$EN)
	  rg_operand_out_1 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_1$D_IN;
	if (rg_operand_out_10$EN)
	  rg_operand_out_10 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_10$D_IN;
	if (rg_operand_out_11$EN)
	  rg_operand_out_11 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_11$D_IN;
	if (rg_operand_out_12$EN)
	  rg_operand_out_12 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_12$D_IN;
	if (rg_operand_out_13$EN)
	  rg_operand_out_13 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_13$D_IN;
	if (rg_operand_out_14$EN)
	  rg_operand_out_14 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_14$D_IN;
	if (rg_operand_out_15$EN)
	  rg_operand_out_15 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_15$D_IN;
	if (rg_operand_out_16$EN)
	  rg_operand_out_16 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_16$D_IN;
	if (rg_operand_out_17$EN)
	  rg_operand_out_17 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_17$D_IN;
	if (rg_operand_out_18$EN)
	  rg_operand_out_18 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_18$D_IN;
	if (rg_operand_out_19$EN)
	  rg_operand_out_19 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_19$D_IN;
	if (rg_operand_out_2$EN)
	  rg_operand_out_2 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_2$D_IN;
	if (rg_operand_out_20$EN)
	  rg_operand_out_20 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_20$D_IN;
	if (rg_operand_out_21$EN)
	  rg_operand_out_21 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_21$D_IN;
	if (rg_operand_out_22$EN)
	  rg_operand_out_22 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_22$D_IN;
	if (rg_operand_out_23$EN)
	  rg_operand_out_23 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_23$D_IN;
	if (rg_operand_out_24$EN)
	  rg_operand_out_24 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_24$D_IN;
	if (rg_operand_out_25$EN)
	  rg_operand_out_25 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_25$D_IN;
	if (rg_operand_out_26$EN)
	  rg_operand_out_26 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_26$D_IN;
	if (rg_operand_out_27$EN)
	  rg_operand_out_27 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_27$D_IN;
	if (rg_operand_out_28$EN)
	  rg_operand_out_28 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_28$D_IN;
	if (rg_operand_out_29$EN)
	  rg_operand_out_29 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_29$D_IN;
	if (rg_operand_out_3$EN)
	  rg_operand_out_3 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_3$D_IN;
	if (rg_operand_out_30$EN)
	  rg_operand_out_30 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_30$D_IN;
	if (rg_operand_out_31$EN)
	  rg_operand_out_31 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_31$D_IN;
	if (rg_operand_out_4$EN)
	  rg_operand_out_4 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_4$D_IN;
	if (rg_operand_out_5$EN)
	  rg_operand_out_5 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_5$D_IN;
	if (rg_operand_out_6$EN)
	  rg_operand_out_6 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_6$D_IN;
	if (rg_operand_out_7$EN)
	  rg_operand_out_7 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_7$D_IN;
	if (rg_operand_out_8$EN)
	  rg_operand_out_8 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_8$D_IN;
	if (rg_operand_out_9$EN)
	  rg_operand_out_9 <= `BSV_ASSIGNMENT_DELAY rg_operand_out_9$D_IN;
	if (rg_output_addr$EN)
	  rg_output_addr <= `BSV_ASSIGNMENT_DELAY rg_output_addr$D_IN;
	if (rg_req_complete$EN)
	  rg_req_complete <= `BSV_ASSIGNMENT_DELAY rg_req_complete$D_IN;
	if (rg_scol_addr$EN)
	  rg_scol_addr <= `BSV_ASSIGNMENT_DELAY rg_scol_addr$D_IN;
	if (rg_srow_addr$EN)
	  rg_srow_addr <= `BSV_ASSIGNMENT_DELAY rg_srow_addr$D_IN;
	if (rg_which_buffer$EN)
	  rg_which_buffer <= `BSV_ASSIGNMENT_DELAY rg_which_buffer$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_alu_complete = 1'h0;
    rg_alu_packet = 121'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_i_var = 8'hAA;
    rg_icol_addr = 8'hAA;
    rg_irow_addr = 8'hAA;
    rg_j_var = 8'hAA;
    rg_k_out = 4'hA;
    rg_k_var = 4'hA;
    rg_l_out = 4'hA;
    rg_l_var = 4'hA;
    rg_operand_out_0 = 32'hAAAAAAAA;
    rg_operand_out_1 = 32'hAAAAAAAA;
    rg_operand_out_10 = 32'hAAAAAAAA;
    rg_operand_out_11 = 32'hAAAAAAAA;
    rg_operand_out_12 = 32'hAAAAAAAA;
    rg_operand_out_13 = 32'hAAAAAAAA;
    rg_operand_out_14 = 32'hAAAAAAAA;
    rg_operand_out_15 = 32'hAAAAAAAA;
    rg_operand_out_16 = 32'hAAAAAAAA;
    rg_operand_out_17 = 32'hAAAAAAAA;
    rg_operand_out_18 = 32'hAAAAAAAA;
    rg_operand_out_19 = 32'hAAAAAAAA;
    rg_operand_out_2 = 32'hAAAAAAAA;
    rg_operand_out_20 = 32'hAAAAAAAA;
    rg_operand_out_21 = 32'hAAAAAAAA;
    rg_operand_out_22 = 32'hAAAAAAAA;
    rg_operand_out_23 = 32'hAAAAAAAA;
    rg_operand_out_24 = 32'hAAAAAAAA;
    rg_operand_out_25 = 32'hAAAAAAAA;
    rg_operand_out_26 = 32'hAAAAAAAA;
    rg_operand_out_27 = 32'hAAAAAAAA;
    rg_operand_out_28 = 32'hAAAAAAAA;
    rg_operand_out_29 = 32'hAAAAAAAA;
    rg_operand_out_3 = 32'hAAAAAAAA;
    rg_operand_out_30 = 32'hAAAAAAAA;
    rg_operand_out_31 = 32'hAAAAAAAA;
    rg_operand_out_4 = 32'hAAAAAAAA;
    rg_operand_out_5 = 32'hAAAAAAAA;
    rg_operand_out_6 = 32'hAAAAAAAA;
    rg_operand_out_7 = 32'hAAAAAAAA;
    rg_operand_out_8 = 32'hAAAAAAAA;
    rg_operand_out_9 = 32'hAAAAAAAA;
    rg_output_addr = 8'hAA;
    rg_req_complete = 1'h0;
    rg_scol_addr = 8'hAA;
    rg_srow_addr = 8'hAA;
    rg_which_buffer = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_put_result)
	begin
	  v__h29032 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_put_result)
	$display(v__h29032, "method mav_put_result firing");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_perform_computation &&
	  rg_alu_packet[39:32] != 8'd0 &&
	  EN_subifc_recv_op_0_put &&
	  rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	  rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16)
	begin
	  v__h10768 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_perform_computation &&
	  rg_alu_packet[39:32] != 8'd0 &&
	  EN_subifc_recv_op_0_put &&
	  rg_k_out_1_EQ_rg_alu_packet_BITS_71_TO_68_2___d13 &&
	  rg_l_out_4_EQ_rg_alu_packet_BITS_67_TO_64_5___d16)
	$display(v__h10768, "writing output to buffer from talu");
  end
  // synopsys translate_on
endmodule  // mktensoralu

