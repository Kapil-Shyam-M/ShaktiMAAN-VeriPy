//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Thu Jan 20 13:01:50 IST 2022
//
//
// Ports:
// Name                         I/O  size props
// RDY_ibuf_0_portA_request_put   O     1
// ibuf_0_portA_response_get      O     8
// RDY_ibuf_0_portA_response_get  O     1
// RDY_ibuf_0_portB_request_put   O     1
// ibuf_0_portB_response_get      O     8
// RDY_ibuf_0_portB_response_get  O     1
// RDY_ibuf_1_portA_request_put   O     1
// ibuf_1_portA_response_get      O     8
// RDY_ibuf_1_portA_response_get  O     1
// RDY_ibuf_1_portB_request_put   O     1
// ibuf_1_portB_response_get      O     8
// RDY_ibuf_1_portB_response_get  O     1
// RDY_ibuf_2_portA_request_put   O     1
// ibuf_2_portA_response_get      O     8
// RDY_ibuf_2_portA_response_get  O     1
// RDY_ibuf_2_portB_request_put   O     1
// ibuf_2_portB_response_get      O     8
// RDY_ibuf_2_portB_response_get  O     1
// RDY_ibuf_3_portA_request_put   O     1
// ibuf_3_portA_response_get      O     8
// RDY_ibuf_3_portA_response_get  O     1
// RDY_ibuf_3_portB_request_put   O     1
// ibuf_3_portB_response_get      O     8
// RDY_ibuf_3_portB_response_get  O     1
// RDY_ibuf_4_portA_request_put   O     1
// ibuf_4_portA_response_get      O     8
// RDY_ibuf_4_portA_response_get  O     1
// RDY_ibuf_4_portB_request_put   O     1
// ibuf_4_portB_response_get      O     8
// RDY_ibuf_4_portB_response_get  O     1
// RDY_ibuf_5_portA_request_put   O     1
// ibuf_5_portA_response_get      O     8
// RDY_ibuf_5_portA_response_get  O     1
// RDY_ibuf_5_portB_request_put   O     1
// ibuf_5_portB_response_get      O     8
// RDY_ibuf_5_portB_response_get  O     1
// RDY_ibuf_6_portA_request_put   O     1
// ibuf_6_portA_response_get      O     8
// RDY_ibuf_6_portA_response_get  O     1
// RDY_ibuf_6_portB_request_put   O     1
// ibuf_6_portB_response_get      O     8
// RDY_ibuf_6_portB_response_get  O     1
// RDY_ibuf_7_portA_request_put   O     1
// ibuf_7_portA_response_get      O     8
// RDY_ibuf_7_portA_response_get  O     1
// RDY_ibuf_7_portB_request_put   O     1
// ibuf_7_portB_response_get      O     8
// RDY_ibuf_7_portB_response_get  O     1
// RDY_ibuf_8_portA_request_put   O     1
// ibuf_8_portA_response_get      O     8
// RDY_ibuf_8_portA_response_get  O     1
// RDY_ibuf_8_portB_request_put   O     1
// ibuf_8_portB_response_get      O     8
// RDY_ibuf_8_portB_response_get  O     1
// RDY_ibuf_9_portA_request_put   O     1
// ibuf_9_portA_response_get      O     8
// RDY_ibuf_9_portA_response_get  O     1
// RDY_ibuf_9_portB_request_put   O     1
// ibuf_9_portB_response_get      O     8
// RDY_ibuf_9_portB_response_get  O     1
// RDY_ibuf_10_portA_request_put  O     1
// ibuf_10_portA_response_get     O     8
// RDY_ibuf_10_portA_response_get  O     1
// RDY_ibuf_10_portB_request_put  O     1
// ibuf_10_portB_response_get     O     8
// RDY_ibuf_10_portB_response_get  O     1
// RDY_ibuf_11_portA_request_put  O     1
// ibuf_11_portA_response_get     O     8
// RDY_ibuf_11_portA_response_get  O     1
// RDY_ibuf_11_portB_request_put  O     1
// ibuf_11_portB_response_get     O     8
// RDY_ibuf_11_portB_response_get  O     1
// RDY_ibuf_12_portA_request_put  O     1
// ibuf_12_portA_response_get     O     8
// RDY_ibuf_12_portA_response_get  O     1
// RDY_ibuf_12_portB_request_put  O     1
// ibuf_12_portB_response_get     O     8
// RDY_ibuf_12_portB_response_get  O     1
// RDY_ibuf_13_portA_request_put  O     1
// ibuf_13_portA_response_get     O     8
// RDY_ibuf_13_portA_response_get  O     1
// RDY_ibuf_13_portB_request_put  O     1
// ibuf_13_portB_response_get     O     8
// RDY_ibuf_13_portB_response_get  O     1
// RDY_ibuf_14_portA_request_put  O     1
// ibuf_14_portA_response_get     O     8
// RDY_ibuf_14_portA_response_get  O     1
// RDY_ibuf_14_portB_request_put  O     1
// ibuf_14_portB_response_get     O     8
// RDY_ibuf_14_portB_response_get  O     1
// RDY_ibuf_15_portA_request_put  O     1
// ibuf_15_portA_response_get     O     8
// RDY_ibuf_15_portA_response_get  O     1
// RDY_ibuf_15_portB_request_put  O     1
// ibuf_15_portB_response_get     O     8
// RDY_ibuf_15_portB_response_get  O     1
// RDY_ibuf_16_portA_request_put  O     1
// ibuf_16_portA_response_get     O     8
// RDY_ibuf_16_portA_response_get  O     1
// RDY_ibuf_16_portB_request_put  O     1
// ibuf_16_portB_response_get     O     8
// RDY_ibuf_16_portB_response_get  O     1
// RDY_ibuf_17_portA_request_put  O     1
// ibuf_17_portA_response_get     O     8
// RDY_ibuf_17_portA_response_get  O     1
// RDY_ibuf_17_portB_request_put  O     1
// ibuf_17_portB_response_get     O     8
// RDY_ibuf_17_portB_response_get  O     1
// RDY_ibuf_18_portA_request_put  O     1
// ibuf_18_portA_response_get     O     8
// RDY_ibuf_18_portA_response_get  O     1
// RDY_ibuf_18_portB_request_put  O     1
// ibuf_18_portB_response_get     O     8
// RDY_ibuf_18_portB_response_get  O     1
// RDY_ibuf_19_portA_request_put  O     1
// ibuf_19_portA_response_get     O     8
// RDY_ibuf_19_portA_response_get  O     1
// RDY_ibuf_19_portB_request_put  O     1
// ibuf_19_portB_response_get     O     8
// RDY_ibuf_19_portB_response_get  O     1
// RDY_ibuf_20_portA_request_put  O     1
// ibuf_20_portA_response_get     O     8
// RDY_ibuf_20_portA_response_get  O     1
// RDY_ibuf_20_portB_request_put  O     1
// ibuf_20_portB_response_get     O     8
// RDY_ibuf_20_portB_response_get  O     1
// RDY_ibuf_21_portA_request_put  O     1
// ibuf_21_portA_response_get     O     8
// RDY_ibuf_21_portA_response_get  O     1
// RDY_ibuf_21_portB_request_put  O     1
// ibuf_21_portB_response_get     O     8
// RDY_ibuf_21_portB_response_get  O     1
// RDY_ibuf_22_portA_request_put  O     1
// ibuf_22_portA_response_get     O     8
// RDY_ibuf_22_portA_response_get  O     1
// RDY_ibuf_22_portB_request_put  O     1
// ibuf_22_portB_response_get     O     8
// RDY_ibuf_22_portB_response_get  O     1
// RDY_ibuf_23_portA_request_put  O     1
// ibuf_23_portA_response_get     O     8
// RDY_ibuf_23_portA_response_get  O     1
// RDY_ibuf_23_portB_request_put  O     1
// ibuf_23_portB_response_get     O     8
// RDY_ibuf_23_portB_response_get  O     1
// RDY_ibuf_24_portA_request_put  O     1
// ibuf_24_portA_response_get     O     8
// RDY_ibuf_24_portA_response_get  O     1
// RDY_ibuf_24_portB_request_put  O     1
// ibuf_24_portB_response_get     O     8
// RDY_ibuf_24_portB_response_get  O     1
// RDY_ibuf_25_portA_request_put  O     1
// ibuf_25_portA_response_get     O     8
// RDY_ibuf_25_portA_response_get  O     1
// RDY_ibuf_25_portB_request_put  O     1
// ibuf_25_portB_response_get     O     8
// RDY_ibuf_25_portB_response_get  O     1
// RDY_ibuf_26_portA_request_put  O     1
// ibuf_26_portA_response_get     O     8
// RDY_ibuf_26_portA_response_get  O     1
// RDY_ibuf_26_portB_request_put  O     1
// ibuf_26_portB_response_get     O     8
// RDY_ibuf_26_portB_response_get  O     1
// RDY_ibuf_27_portA_request_put  O     1
// ibuf_27_portA_response_get     O     8
// RDY_ibuf_27_portA_response_get  O     1
// RDY_ibuf_27_portB_request_put  O     1
// ibuf_27_portB_response_get     O     8
// RDY_ibuf_27_portB_response_get  O     1
// RDY_ibuf_28_portA_request_put  O     1
// ibuf_28_portA_response_get     O     8
// RDY_ibuf_28_portA_response_get  O     1
// RDY_ibuf_28_portB_request_put  O     1
// ibuf_28_portB_response_get     O     8
// RDY_ibuf_28_portB_response_get  O     1
// RDY_ibuf_29_portA_request_put  O     1
// ibuf_29_portA_response_get     O     8
// RDY_ibuf_29_portA_response_get  O     1
// RDY_ibuf_29_portB_request_put  O     1
// ibuf_29_portB_response_get     O     8
// RDY_ibuf_29_portB_response_get  O     1
// RDY_ibuf_30_portA_request_put  O     1
// ibuf_30_portA_response_get     O     8
// RDY_ibuf_30_portA_response_get  O     1
// RDY_ibuf_30_portB_request_put  O     1
// ibuf_30_portB_response_get     O     8
// RDY_ibuf_30_portB_response_get  O     1
// RDY_ibuf_31_portA_request_put  O     1
// ibuf_31_portA_response_get     O     8
// RDY_ibuf_31_portA_response_get  O     1
// RDY_ibuf_31_portB_request_put  O     1
// ibuf_31_portB_response_get     O     8
// RDY_ibuf_31_portB_response_get  O     1
// RDY_wbuf_0_portA_request_put   O     1
// wbuf_0_portA_response_get      O     8
// RDY_wbuf_0_portA_response_get  O     1
// RDY_wbuf_0_portB_request_put   O     1
// wbuf_0_portB_response_get      O     8
// RDY_wbuf_0_portB_response_get  O     1
// RDY_wbuf_1_portA_request_put   O     1
// wbuf_1_portA_response_get      O     8
// RDY_wbuf_1_portA_response_get  O     1
// RDY_wbuf_1_portB_request_put   O     1
// wbuf_1_portB_response_get      O     8
// RDY_wbuf_1_portB_response_get  O     1
// RDY_wbuf_2_portA_request_put   O     1
// wbuf_2_portA_response_get      O     8
// RDY_wbuf_2_portA_response_get  O     1
// RDY_wbuf_2_portB_request_put   O     1
// wbuf_2_portB_response_get      O     8
// RDY_wbuf_2_portB_response_get  O     1
// RDY_wbuf_3_portA_request_put   O     1
// wbuf_3_portA_response_get      O     8
// RDY_wbuf_3_portA_response_get  O     1
// RDY_wbuf_3_portB_request_put   O     1
// wbuf_3_portB_response_get      O     8
// RDY_wbuf_3_portB_response_get  O     1
// RDY_wbuf_4_portA_request_put   O     1
// wbuf_4_portA_response_get      O     8
// RDY_wbuf_4_portA_response_get  O     1
// RDY_wbuf_4_portB_request_put   O     1
// wbuf_4_portB_response_get      O     8
// RDY_wbuf_4_portB_response_get  O     1
// RDY_wbuf_5_portA_request_put   O     1
// wbuf_5_portA_response_get      O     8
// RDY_wbuf_5_portA_response_get  O     1
// RDY_wbuf_5_portB_request_put   O     1
// wbuf_5_portB_response_get      O     8
// RDY_wbuf_5_portB_response_get  O     1
// RDY_wbuf_6_portA_request_put   O     1
// wbuf_6_portA_response_get      O     8
// RDY_wbuf_6_portA_response_get  O     1
// RDY_wbuf_6_portB_request_put   O     1
// wbuf_6_portB_response_get      O     8
// RDY_wbuf_6_portB_response_get  O     1
// RDY_wbuf_7_portA_request_put   O     1
// wbuf_7_portA_response_get      O     8
// RDY_wbuf_7_portA_response_get  O     1
// RDY_wbuf_7_portB_request_put   O     1
// wbuf_7_portB_response_get      O     8
// RDY_wbuf_7_portB_response_get  O     1
// RDY_wbuf_8_portA_request_put   O     1
// wbuf_8_portA_response_get      O     8
// RDY_wbuf_8_portA_response_get  O     1
// RDY_wbuf_8_portB_request_put   O     1
// wbuf_8_portB_response_get      O     8
// RDY_wbuf_8_portB_response_get  O     1
// RDY_wbuf_9_portA_request_put   O     1
// wbuf_9_portA_response_get      O     8
// RDY_wbuf_9_portA_response_get  O     1
// RDY_wbuf_9_portB_request_put   O     1
// wbuf_9_portB_response_get      O     8
// RDY_wbuf_9_portB_response_get  O     1
// RDY_wbuf_10_portA_request_put  O     1
// wbuf_10_portA_response_get     O     8
// RDY_wbuf_10_portA_response_get  O     1
// RDY_wbuf_10_portB_request_put  O     1
// wbuf_10_portB_response_get     O     8
// RDY_wbuf_10_portB_response_get  O     1
// RDY_wbuf_11_portA_request_put  O     1
// wbuf_11_portA_response_get     O     8
// RDY_wbuf_11_portA_response_get  O     1
// RDY_wbuf_11_portB_request_put  O     1
// wbuf_11_portB_response_get     O     8
// RDY_wbuf_11_portB_response_get  O     1
// RDY_wbuf_12_portA_request_put  O     1
// wbuf_12_portA_response_get     O     8
// RDY_wbuf_12_portA_response_get  O     1
// RDY_wbuf_12_portB_request_put  O     1
// wbuf_12_portB_response_get     O     8
// RDY_wbuf_12_portB_response_get  O     1
// RDY_wbuf_13_portA_request_put  O     1
// wbuf_13_portA_response_get     O     8
// RDY_wbuf_13_portA_response_get  O     1
// RDY_wbuf_13_portB_request_put  O     1
// wbuf_13_portB_response_get     O     8
// RDY_wbuf_13_portB_response_get  O     1
// RDY_wbuf_14_portA_request_put  O     1
// wbuf_14_portA_response_get     O     8
// RDY_wbuf_14_portA_response_get  O     1
// RDY_wbuf_14_portB_request_put  O     1
// wbuf_14_portB_response_get     O     8
// RDY_wbuf_14_portB_response_get  O     1
// RDY_wbuf_15_portA_request_put  O     1
// wbuf_15_portA_response_get     O     8
// RDY_wbuf_15_portA_response_get  O     1
// RDY_wbuf_15_portB_request_put  O     1
// wbuf_15_portB_response_get     O     8
// RDY_wbuf_15_portB_response_get  O     1
// RDY_wbuf_16_portA_request_put  O     1
// wbuf_16_portA_response_get     O     8
// RDY_wbuf_16_portA_response_get  O     1
// RDY_wbuf_16_portB_request_put  O     1
// wbuf_16_portB_response_get     O     8
// RDY_wbuf_16_portB_response_get  O     1
// RDY_wbuf_17_portA_request_put  O     1
// wbuf_17_portA_response_get     O     8
// RDY_wbuf_17_portA_response_get  O     1
// RDY_wbuf_17_portB_request_put  O     1
// wbuf_17_portB_response_get     O     8
// RDY_wbuf_17_portB_response_get  O     1
// RDY_wbuf_18_portA_request_put  O     1
// wbuf_18_portA_response_get     O     8
// RDY_wbuf_18_portA_response_get  O     1
// RDY_wbuf_18_portB_request_put  O     1
// wbuf_18_portB_response_get     O     8
// RDY_wbuf_18_portB_response_get  O     1
// RDY_wbuf_19_portA_request_put  O     1
// wbuf_19_portA_response_get     O     8
// RDY_wbuf_19_portA_response_get  O     1
// RDY_wbuf_19_portB_request_put  O     1
// wbuf_19_portB_response_get     O     8
// RDY_wbuf_19_portB_response_get  O     1
// RDY_wbuf_20_portA_request_put  O     1
// wbuf_20_portA_response_get     O     8
// RDY_wbuf_20_portA_response_get  O     1
// RDY_wbuf_20_portB_request_put  O     1
// wbuf_20_portB_response_get     O     8
// RDY_wbuf_20_portB_response_get  O     1
// RDY_wbuf_21_portA_request_put  O     1
// wbuf_21_portA_response_get     O     8
// RDY_wbuf_21_portA_response_get  O     1
// RDY_wbuf_21_portB_request_put  O     1
// wbuf_21_portB_response_get     O     8
// RDY_wbuf_21_portB_response_get  O     1
// RDY_wbuf_22_portA_request_put  O     1
// wbuf_22_portA_response_get     O     8
// RDY_wbuf_22_portA_response_get  O     1
// RDY_wbuf_22_portB_request_put  O     1
// wbuf_22_portB_response_get     O     8
// RDY_wbuf_22_portB_response_get  O     1
// RDY_wbuf_23_portA_request_put  O     1
// wbuf_23_portA_response_get     O     8
// RDY_wbuf_23_portA_response_get  O     1
// RDY_wbuf_23_portB_request_put  O     1
// wbuf_23_portB_response_get     O     8
// RDY_wbuf_23_portB_response_get  O     1
// RDY_wbuf_24_portA_request_put  O     1
// wbuf_24_portA_response_get     O     8
// RDY_wbuf_24_portA_response_get  O     1
// RDY_wbuf_24_portB_request_put  O     1
// wbuf_24_portB_response_get     O     8
// RDY_wbuf_24_portB_response_get  O     1
// RDY_wbuf_25_portA_request_put  O     1
// wbuf_25_portA_response_get     O     8
// RDY_wbuf_25_portA_response_get  O     1
// RDY_wbuf_25_portB_request_put  O     1
// wbuf_25_portB_response_get     O     8
// RDY_wbuf_25_portB_response_get  O     1
// RDY_wbuf_26_portA_request_put  O     1
// wbuf_26_portA_response_get     O     8
// RDY_wbuf_26_portA_response_get  O     1
// RDY_wbuf_26_portB_request_put  O     1
// wbuf_26_portB_response_get     O     8
// RDY_wbuf_26_portB_response_get  O     1
// RDY_wbuf_27_portA_request_put  O     1
// wbuf_27_portA_response_get     O     8
// RDY_wbuf_27_portA_response_get  O     1
// RDY_wbuf_27_portB_request_put  O     1
// wbuf_27_portB_response_get     O     8
// RDY_wbuf_27_portB_response_get  O     1
// RDY_wbuf_28_portA_request_put  O     1
// wbuf_28_portA_response_get     O     8
// RDY_wbuf_28_portA_response_get  O     1
// RDY_wbuf_28_portB_request_put  O     1
// wbuf_28_portB_response_get     O     8
// RDY_wbuf_28_portB_response_get  O     1
// RDY_wbuf_29_portA_request_put  O     1
// wbuf_29_portA_response_get     O     8
// RDY_wbuf_29_portA_response_get  O     1
// RDY_wbuf_29_portB_request_put  O     1
// wbuf_29_portB_response_get     O     8
// RDY_wbuf_29_portB_response_get  O     1
// RDY_wbuf_30_portA_request_put  O     1
// wbuf_30_portA_response_get     O     8
// RDY_wbuf_30_portA_response_get  O     1
// RDY_wbuf_30_portB_request_put  O     1
// wbuf_30_portB_response_get     O     8
// RDY_wbuf_30_portB_response_get  O     1
// RDY_wbuf_31_portA_request_put  O     1
// wbuf_31_portA_response_get     O     8
// RDY_wbuf_31_portA_response_get  O     1
// RDY_wbuf_31_portB_request_put  O     1
// wbuf_31_portB_response_get     O     8
// RDY_wbuf_31_portB_response_get  O     1
// RDY_obuf1_0_portA_request_put  O     1
// obuf1_0_portA_response_get     O    32
// RDY_obuf1_0_portA_response_get  O     1
// RDY_obuf1_0_portB_request_put  O     1
// obuf1_0_portB_response_get     O    32
// RDY_obuf1_0_portB_response_get  O     1
// RDY_obuf1_1_portA_request_put  O     1
// obuf1_1_portA_response_get     O    32
// RDY_obuf1_1_portA_response_get  O     1
// RDY_obuf1_1_portB_request_put  O     1
// obuf1_1_portB_response_get     O    32
// RDY_obuf1_1_portB_response_get  O     1
// RDY_obuf1_2_portA_request_put  O     1
// obuf1_2_portA_response_get     O    32
// RDY_obuf1_2_portA_response_get  O     1
// RDY_obuf1_2_portB_request_put  O     1
// obuf1_2_portB_response_get     O    32
// RDY_obuf1_2_portB_response_get  O     1
// RDY_obuf1_3_portA_request_put  O     1
// obuf1_3_portA_response_get     O    32
// RDY_obuf1_3_portA_response_get  O     1
// RDY_obuf1_3_portB_request_put  O     1
// obuf1_3_portB_response_get     O    32
// RDY_obuf1_3_portB_response_get  O     1
// RDY_obuf1_4_portA_request_put  O     1
// obuf1_4_portA_response_get     O    32
// RDY_obuf1_4_portA_response_get  O     1
// RDY_obuf1_4_portB_request_put  O     1
// obuf1_4_portB_response_get     O    32
// RDY_obuf1_4_portB_response_get  O     1
// RDY_obuf1_5_portA_request_put  O     1
// obuf1_5_portA_response_get     O    32
// RDY_obuf1_5_portA_response_get  O     1
// RDY_obuf1_5_portB_request_put  O     1
// obuf1_5_portB_response_get     O    32
// RDY_obuf1_5_portB_response_get  O     1
// RDY_obuf1_6_portA_request_put  O     1
// obuf1_6_portA_response_get     O    32
// RDY_obuf1_6_portA_response_get  O     1
// RDY_obuf1_6_portB_request_put  O     1
// obuf1_6_portB_response_get     O    32
// RDY_obuf1_6_portB_response_get  O     1
// RDY_obuf1_7_portA_request_put  O     1
// obuf1_7_portA_response_get     O    32
// RDY_obuf1_7_portA_response_get  O     1
// RDY_obuf1_7_portB_request_put  O     1
// obuf1_7_portB_response_get     O    32
// RDY_obuf1_7_portB_response_get  O     1
// RDY_obuf1_8_portA_request_put  O     1
// obuf1_8_portA_response_get     O    32
// RDY_obuf1_8_portA_response_get  O     1
// RDY_obuf1_8_portB_request_put  O     1
// obuf1_8_portB_response_get     O    32
// RDY_obuf1_8_portB_response_get  O     1
// RDY_obuf1_9_portA_request_put  O     1
// obuf1_9_portA_response_get     O    32
// RDY_obuf1_9_portA_response_get  O     1
// RDY_obuf1_9_portB_request_put  O     1
// obuf1_9_portB_response_get     O    32
// RDY_obuf1_9_portB_response_get  O     1
// RDY_obuf1_10_portA_request_put  O     1
// obuf1_10_portA_response_get    O    32
// RDY_obuf1_10_portA_response_get  O     1
// RDY_obuf1_10_portB_request_put  O     1
// obuf1_10_portB_response_get    O    32
// RDY_obuf1_10_portB_response_get  O     1
// RDY_obuf1_11_portA_request_put  O     1
// obuf1_11_portA_response_get    O    32
// RDY_obuf1_11_portA_response_get  O     1
// RDY_obuf1_11_portB_request_put  O     1
// obuf1_11_portB_response_get    O    32
// RDY_obuf1_11_portB_response_get  O     1
// RDY_obuf1_12_portA_request_put  O     1
// obuf1_12_portA_response_get    O    32
// RDY_obuf1_12_portA_response_get  O     1
// RDY_obuf1_12_portB_request_put  O     1
// obuf1_12_portB_response_get    O    32
// RDY_obuf1_12_portB_response_get  O     1
// RDY_obuf1_13_portA_request_put  O     1
// obuf1_13_portA_response_get    O    32
// RDY_obuf1_13_portA_response_get  O     1
// RDY_obuf1_13_portB_request_put  O     1
// obuf1_13_portB_response_get    O    32
// RDY_obuf1_13_portB_response_get  O     1
// RDY_obuf1_14_portA_request_put  O     1
// obuf1_14_portA_response_get    O    32
// RDY_obuf1_14_portA_response_get  O     1
// RDY_obuf1_14_portB_request_put  O     1
// obuf1_14_portB_response_get    O    32
// RDY_obuf1_14_portB_response_get  O     1
// RDY_obuf1_15_portA_request_put  O     1
// obuf1_15_portA_response_get    O    32
// RDY_obuf1_15_portA_response_get  O     1
// RDY_obuf1_15_portB_request_put  O     1
// obuf1_15_portB_response_get    O    32
// RDY_obuf1_15_portB_response_get  O     1
// RDY_obuf1_16_portA_request_put  O     1
// obuf1_16_portA_response_get    O    32
// RDY_obuf1_16_portA_response_get  O     1
// RDY_obuf1_16_portB_request_put  O     1
// obuf1_16_portB_response_get    O    32
// RDY_obuf1_16_portB_response_get  O     1
// RDY_obuf1_17_portA_request_put  O     1
// obuf1_17_portA_response_get    O    32
// RDY_obuf1_17_portA_response_get  O     1
// RDY_obuf1_17_portB_request_put  O     1
// obuf1_17_portB_response_get    O    32
// RDY_obuf1_17_portB_response_get  O     1
// RDY_obuf1_18_portA_request_put  O     1
// obuf1_18_portA_response_get    O    32
// RDY_obuf1_18_portA_response_get  O     1
// RDY_obuf1_18_portB_request_put  O     1
// obuf1_18_portB_response_get    O    32
// RDY_obuf1_18_portB_response_get  O     1
// RDY_obuf1_19_portA_request_put  O     1
// obuf1_19_portA_response_get    O    32
// RDY_obuf1_19_portA_response_get  O     1
// RDY_obuf1_19_portB_request_put  O     1
// obuf1_19_portB_response_get    O    32
// RDY_obuf1_19_portB_response_get  O     1
// RDY_obuf1_20_portA_request_put  O     1
// obuf1_20_portA_response_get    O    32
// RDY_obuf1_20_portA_response_get  O     1
// RDY_obuf1_20_portB_request_put  O     1
// obuf1_20_portB_response_get    O    32
// RDY_obuf1_20_portB_response_get  O     1
// RDY_obuf1_21_portA_request_put  O     1
// obuf1_21_portA_response_get    O    32
// RDY_obuf1_21_portA_response_get  O     1
// RDY_obuf1_21_portB_request_put  O     1
// obuf1_21_portB_response_get    O    32
// RDY_obuf1_21_portB_response_get  O     1
// RDY_obuf1_22_portA_request_put  O     1
// obuf1_22_portA_response_get    O    32
// RDY_obuf1_22_portA_response_get  O     1
// RDY_obuf1_22_portB_request_put  O     1
// obuf1_22_portB_response_get    O    32
// RDY_obuf1_22_portB_response_get  O     1
// RDY_obuf1_23_portA_request_put  O     1
// obuf1_23_portA_response_get    O    32
// RDY_obuf1_23_portA_response_get  O     1
// RDY_obuf1_23_portB_request_put  O     1
// obuf1_23_portB_response_get    O    32
// RDY_obuf1_23_portB_response_get  O     1
// RDY_obuf1_24_portA_request_put  O     1
// obuf1_24_portA_response_get    O    32
// RDY_obuf1_24_portA_response_get  O     1
// RDY_obuf1_24_portB_request_put  O     1
// obuf1_24_portB_response_get    O    32
// RDY_obuf1_24_portB_response_get  O     1
// RDY_obuf1_25_portA_request_put  O     1
// obuf1_25_portA_response_get    O    32
// RDY_obuf1_25_portA_response_get  O     1
// RDY_obuf1_25_portB_request_put  O     1
// obuf1_25_portB_response_get    O    32
// RDY_obuf1_25_portB_response_get  O     1
// RDY_obuf1_26_portA_request_put  O     1
// obuf1_26_portA_response_get    O    32
// RDY_obuf1_26_portA_response_get  O     1
// RDY_obuf1_26_portB_request_put  O     1
// obuf1_26_portB_response_get    O    32
// RDY_obuf1_26_portB_response_get  O     1
// RDY_obuf1_27_portA_request_put  O     1
// obuf1_27_portA_response_get    O    32
// RDY_obuf1_27_portA_response_get  O     1
// RDY_obuf1_27_portB_request_put  O     1
// obuf1_27_portB_response_get    O    32
// RDY_obuf1_27_portB_response_get  O     1
// RDY_obuf1_28_portA_request_put  O     1
// obuf1_28_portA_response_get    O    32
// RDY_obuf1_28_portA_response_get  O     1
// RDY_obuf1_28_portB_request_put  O     1
// obuf1_28_portB_response_get    O    32
// RDY_obuf1_28_portB_response_get  O     1
// RDY_obuf1_29_portA_request_put  O     1
// obuf1_29_portA_response_get    O    32
// RDY_obuf1_29_portA_response_get  O     1
// RDY_obuf1_29_portB_request_put  O     1
// obuf1_29_portB_response_get    O    32
// RDY_obuf1_29_portB_response_get  O     1
// RDY_obuf1_30_portA_request_put  O     1
// obuf1_30_portA_response_get    O    32
// RDY_obuf1_30_portA_response_get  O     1
// RDY_obuf1_30_portB_request_put  O     1
// obuf1_30_portB_response_get    O    32
// RDY_obuf1_30_portB_response_get  O     1
// RDY_obuf1_31_portA_request_put  O     1
// obuf1_31_portA_response_get    O    32
// RDY_obuf1_31_portA_response_get  O     1
// RDY_obuf1_31_portB_request_put  O     1
// obuf1_31_portB_response_get    O    32
// RDY_obuf1_31_portB_response_get  O     1
// RDY_obuf2_0_portA_request_put  O     1
// obuf2_0_portA_response_get     O    32
// RDY_obuf2_0_portA_response_get  O     1
// RDY_obuf2_0_portB_request_put  O     1
// obuf2_0_portB_response_get     O    32
// RDY_obuf2_0_portB_response_get  O     1
// RDY_obuf2_1_portA_request_put  O     1
// obuf2_1_portA_response_get     O    32
// RDY_obuf2_1_portA_response_get  O     1
// RDY_obuf2_1_portB_request_put  O     1
// obuf2_1_portB_response_get     O    32
// RDY_obuf2_1_portB_response_get  O     1
// RDY_obuf2_2_portA_request_put  O     1
// obuf2_2_portA_response_get     O    32
// RDY_obuf2_2_portA_response_get  O     1
// RDY_obuf2_2_portB_request_put  O     1
// obuf2_2_portB_response_get     O    32
// RDY_obuf2_2_portB_response_get  O     1
// RDY_obuf2_3_portA_request_put  O     1
// obuf2_3_portA_response_get     O    32
// RDY_obuf2_3_portA_response_get  O     1
// RDY_obuf2_3_portB_request_put  O     1
// obuf2_3_portB_response_get     O    32
// RDY_obuf2_3_portB_response_get  O     1
// RDY_obuf2_4_portA_request_put  O     1
// obuf2_4_portA_response_get     O    32
// RDY_obuf2_4_portA_response_get  O     1
// RDY_obuf2_4_portB_request_put  O     1
// obuf2_4_portB_response_get     O    32
// RDY_obuf2_4_portB_response_get  O     1
// RDY_obuf2_5_portA_request_put  O     1
// obuf2_5_portA_response_get     O    32
// RDY_obuf2_5_portA_response_get  O     1
// RDY_obuf2_5_portB_request_put  O     1
// obuf2_5_portB_response_get     O    32
// RDY_obuf2_5_portB_response_get  O     1
// RDY_obuf2_6_portA_request_put  O     1
// obuf2_6_portA_response_get     O    32
// RDY_obuf2_6_portA_response_get  O     1
// RDY_obuf2_6_portB_request_put  O     1
// obuf2_6_portB_response_get     O    32
// RDY_obuf2_6_portB_response_get  O     1
// RDY_obuf2_7_portA_request_put  O     1
// obuf2_7_portA_response_get     O    32
// RDY_obuf2_7_portA_response_get  O     1
// RDY_obuf2_7_portB_request_put  O     1
// obuf2_7_portB_response_get     O    32
// RDY_obuf2_7_portB_response_get  O     1
// RDY_obuf2_8_portA_request_put  O     1
// obuf2_8_portA_response_get     O    32
// RDY_obuf2_8_portA_response_get  O     1
// RDY_obuf2_8_portB_request_put  O     1
// obuf2_8_portB_response_get     O    32
// RDY_obuf2_8_portB_response_get  O     1
// RDY_obuf2_9_portA_request_put  O     1
// obuf2_9_portA_response_get     O    32
// RDY_obuf2_9_portA_response_get  O     1
// RDY_obuf2_9_portB_request_put  O     1
// obuf2_9_portB_response_get     O    32
// RDY_obuf2_9_portB_response_get  O     1
// RDY_obuf2_10_portA_request_put  O     1
// obuf2_10_portA_response_get    O    32
// RDY_obuf2_10_portA_response_get  O     1
// RDY_obuf2_10_portB_request_put  O     1
// obuf2_10_portB_response_get    O    32
// RDY_obuf2_10_portB_response_get  O     1
// RDY_obuf2_11_portA_request_put  O     1
// obuf2_11_portA_response_get    O    32
// RDY_obuf2_11_portA_response_get  O     1
// RDY_obuf2_11_portB_request_put  O     1
// obuf2_11_portB_response_get    O    32
// RDY_obuf2_11_portB_response_get  O     1
// RDY_obuf2_12_portA_request_put  O     1
// obuf2_12_portA_response_get    O    32
// RDY_obuf2_12_portA_response_get  O     1
// RDY_obuf2_12_portB_request_put  O     1
// obuf2_12_portB_response_get    O    32
// RDY_obuf2_12_portB_response_get  O     1
// RDY_obuf2_13_portA_request_put  O     1
// obuf2_13_portA_response_get    O    32
// RDY_obuf2_13_portA_response_get  O     1
// RDY_obuf2_13_portB_request_put  O     1
// obuf2_13_portB_response_get    O    32
// RDY_obuf2_13_portB_response_get  O     1
// RDY_obuf2_14_portA_request_put  O     1
// obuf2_14_portA_response_get    O    32
// RDY_obuf2_14_portA_response_get  O     1
// RDY_obuf2_14_portB_request_put  O     1
// obuf2_14_portB_response_get    O    32
// RDY_obuf2_14_portB_response_get  O     1
// RDY_obuf2_15_portA_request_put  O     1
// obuf2_15_portA_response_get    O    32
// RDY_obuf2_15_portA_response_get  O     1
// RDY_obuf2_15_portB_request_put  O     1
// obuf2_15_portB_response_get    O    32
// RDY_obuf2_15_portB_response_get  O     1
// RDY_obuf2_16_portA_request_put  O     1
// obuf2_16_portA_response_get    O    32
// RDY_obuf2_16_portA_response_get  O     1
// RDY_obuf2_16_portB_request_put  O     1
// obuf2_16_portB_response_get    O    32
// RDY_obuf2_16_portB_response_get  O     1
// RDY_obuf2_17_portA_request_put  O     1
// obuf2_17_portA_response_get    O    32
// RDY_obuf2_17_portA_response_get  O     1
// RDY_obuf2_17_portB_request_put  O     1
// obuf2_17_portB_response_get    O    32
// RDY_obuf2_17_portB_response_get  O     1
// RDY_obuf2_18_portA_request_put  O     1
// obuf2_18_portA_response_get    O    32
// RDY_obuf2_18_portA_response_get  O     1
// RDY_obuf2_18_portB_request_put  O     1
// obuf2_18_portB_response_get    O    32
// RDY_obuf2_18_portB_response_get  O     1
// RDY_obuf2_19_portA_request_put  O     1
// obuf2_19_portA_response_get    O    32
// RDY_obuf2_19_portA_response_get  O     1
// RDY_obuf2_19_portB_request_put  O     1
// obuf2_19_portB_response_get    O    32
// RDY_obuf2_19_portB_response_get  O     1
// RDY_obuf2_20_portA_request_put  O     1
// obuf2_20_portA_response_get    O    32
// RDY_obuf2_20_portA_response_get  O     1
// RDY_obuf2_20_portB_request_put  O     1
// obuf2_20_portB_response_get    O    32
// RDY_obuf2_20_portB_response_get  O     1
// RDY_obuf2_21_portA_request_put  O     1
// obuf2_21_portA_response_get    O    32
// RDY_obuf2_21_portA_response_get  O     1
// RDY_obuf2_21_portB_request_put  O     1
// obuf2_21_portB_response_get    O    32
// RDY_obuf2_21_portB_response_get  O     1
// RDY_obuf2_22_portA_request_put  O     1
// obuf2_22_portA_response_get    O    32
// RDY_obuf2_22_portA_response_get  O     1
// RDY_obuf2_22_portB_request_put  O     1
// obuf2_22_portB_response_get    O    32
// RDY_obuf2_22_portB_response_get  O     1
// RDY_obuf2_23_portA_request_put  O     1
// obuf2_23_portA_response_get    O    32
// RDY_obuf2_23_portA_response_get  O     1
// RDY_obuf2_23_portB_request_put  O     1
// obuf2_23_portB_response_get    O    32
// RDY_obuf2_23_portB_response_get  O     1
// RDY_obuf2_24_portA_request_put  O     1
// obuf2_24_portA_response_get    O    32
// RDY_obuf2_24_portA_response_get  O     1
// RDY_obuf2_24_portB_request_put  O     1
// obuf2_24_portB_response_get    O    32
// RDY_obuf2_24_portB_response_get  O     1
// RDY_obuf2_25_portA_request_put  O     1
// obuf2_25_portA_response_get    O    32
// RDY_obuf2_25_portA_response_get  O     1
// RDY_obuf2_25_portB_request_put  O     1
// obuf2_25_portB_response_get    O    32
// RDY_obuf2_25_portB_response_get  O     1
// RDY_obuf2_26_portA_request_put  O     1
// obuf2_26_portA_response_get    O    32
// RDY_obuf2_26_portA_response_get  O     1
// RDY_obuf2_26_portB_request_put  O     1
// obuf2_26_portB_response_get    O    32
// RDY_obuf2_26_portB_response_get  O     1
// RDY_obuf2_27_portA_request_put  O     1
// obuf2_27_portA_response_get    O    32
// RDY_obuf2_27_portA_response_get  O     1
// RDY_obuf2_27_portB_request_put  O     1
// obuf2_27_portB_response_get    O    32
// RDY_obuf2_27_portB_response_get  O     1
// RDY_obuf2_28_portA_request_put  O     1
// obuf2_28_portA_response_get    O    32
// RDY_obuf2_28_portA_response_get  O     1
// RDY_obuf2_28_portB_request_put  O     1
// obuf2_28_portB_response_get    O    32
// RDY_obuf2_28_portB_response_get  O     1
// RDY_obuf2_29_portA_request_put  O     1
// obuf2_29_portA_response_get    O    32
// RDY_obuf2_29_portA_response_get  O     1
// RDY_obuf2_29_portB_request_put  O     1
// obuf2_29_portB_response_get    O    32
// RDY_obuf2_29_portB_response_get  O     1
// RDY_obuf2_30_portA_request_put  O     1
// obuf2_30_portA_response_get    O    32
// RDY_obuf2_30_portA_response_get  O     1
// RDY_obuf2_30_portB_request_put  O     1
// obuf2_30_portB_response_get    O    32
// RDY_obuf2_30_portB_response_get  O     1
// RDY_obuf2_31_portA_request_put  O     1
// obuf2_31_portA_response_get    O    32
// RDY_obuf2_31_portA_response_get  O     1
// RDY_obuf2_31_portB_request_put  O     1
// obuf2_31_portB_response_get    O    32
// RDY_obuf2_31_portB_response_get  O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ibuf_0_portA_request_put       I    18
// ibuf_0_portB_request_put       I    18
// ibuf_1_portA_request_put       I    18
// ibuf_1_portB_request_put       I    18
// ibuf_2_portA_request_put       I    18
// ibuf_2_portB_request_put       I    18
// ibuf_3_portA_request_put       I    18
// ibuf_3_portB_request_put       I    18
// ibuf_4_portA_request_put       I    18
// ibuf_4_portB_request_put       I    18
// ibuf_5_portA_request_put       I    18
// ibuf_5_portB_request_put       I    18
// ibuf_6_portA_request_put       I    18
// ibuf_6_portB_request_put       I    18
// ibuf_7_portA_request_put       I    18
// ibuf_7_portB_request_put       I    18
// ibuf_8_portA_request_put       I    18
// ibuf_8_portB_request_put       I    18
// ibuf_9_portA_request_put       I    18
// ibuf_9_portB_request_put       I    18
// ibuf_10_portA_request_put      I    18
// ibuf_10_portB_request_put      I    18
// ibuf_11_portA_request_put      I    18
// ibuf_11_portB_request_put      I    18
// ibuf_12_portA_request_put      I    18
// ibuf_12_portB_request_put      I    18
// ibuf_13_portA_request_put      I    18
// ibuf_13_portB_request_put      I    18
// ibuf_14_portA_request_put      I    18
// ibuf_14_portB_request_put      I    18
// ibuf_15_portA_request_put      I    18
// ibuf_15_portB_request_put      I    18
// ibuf_16_portA_request_put      I    18
// ibuf_16_portB_request_put      I    18
// ibuf_17_portA_request_put      I    18
// ibuf_17_portB_request_put      I    18
// ibuf_18_portA_request_put      I    18
// ibuf_18_portB_request_put      I    18
// ibuf_19_portA_request_put      I    18
// ibuf_19_portB_request_put      I    18
// ibuf_20_portA_request_put      I    18
// ibuf_20_portB_request_put      I    18
// ibuf_21_portA_request_put      I    18
// ibuf_21_portB_request_put      I    18
// ibuf_22_portA_request_put      I    18
// ibuf_22_portB_request_put      I    18
// ibuf_23_portA_request_put      I    18
// ibuf_23_portB_request_put      I    18
// ibuf_24_portA_request_put      I    18
// ibuf_24_portB_request_put      I    18
// ibuf_25_portA_request_put      I    18
// ibuf_25_portB_request_put      I    18
// ibuf_26_portA_request_put      I    18
// ibuf_26_portB_request_put      I    18
// ibuf_27_portA_request_put      I    18
// ibuf_27_portB_request_put      I    18
// ibuf_28_portA_request_put      I    18
// ibuf_28_portB_request_put      I    18
// ibuf_29_portA_request_put      I    18
// ibuf_29_portB_request_put      I    18
// ibuf_30_portA_request_put      I    18
// ibuf_30_portB_request_put      I    18
// ibuf_31_portA_request_put      I    18
// ibuf_31_portB_request_put      I    18
// wbuf_0_portA_request_put       I    18
// wbuf_0_portB_request_put       I    18
// wbuf_1_portA_request_put       I    18
// wbuf_1_portB_request_put       I    18
// wbuf_2_portA_request_put       I    18
// wbuf_2_portB_request_put       I    18
// wbuf_3_portA_request_put       I    18
// wbuf_3_portB_request_put       I    18
// wbuf_4_portA_request_put       I    18
// wbuf_4_portB_request_put       I    18
// wbuf_5_portA_request_put       I    18
// wbuf_5_portB_request_put       I    18
// wbuf_6_portA_request_put       I    18
// wbuf_6_portB_request_put       I    18
// wbuf_7_portA_request_put       I    18
// wbuf_7_portB_request_put       I    18
// wbuf_8_portA_request_put       I    18
// wbuf_8_portB_request_put       I    18
// wbuf_9_portA_request_put       I    18
// wbuf_9_portB_request_put       I    18
// wbuf_10_portA_request_put      I    18
// wbuf_10_portB_request_put      I    18
// wbuf_11_portA_request_put      I    18
// wbuf_11_portB_request_put      I    18
// wbuf_12_portA_request_put      I    18
// wbuf_12_portB_request_put      I    18
// wbuf_13_portA_request_put      I    18
// wbuf_13_portB_request_put      I    18
// wbuf_14_portA_request_put      I    18
// wbuf_14_portB_request_put      I    18
// wbuf_15_portA_request_put      I    18
// wbuf_15_portB_request_put      I    18
// wbuf_16_portA_request_put      I    18
// wbuf_16_portB_request_put      I    18
// wbuf_17_portA_request_put      I    18
// wbuf_17_portB_request_put      I    18
// wbuf_18_portA_request_put      I    18
// wbuf_18_portB_request_put      I    18
// wbuf_19_portA_request_put      I    18
// wbuf_19_portB_request_put      I    18
// wbuf_20_portA_request_put      I    18
// wbuf_20_portB_request_put      I    18
// wbuf_21_portA_request_put      I    18
// wbuf_21_portB_request_put      I    18
// wbuf_22_portA_request_put      I    18
// wbuf_22_portB_request_put      I    18
// wbuf_23_portA_request_put      I    18
// wbuf_23_portB_request_put      I    18
// wbuf_24_portA_request_put      I    18
// wbuf_24_portB_request_put      I    18
// wbuf_25_portA_request_put      I    18
// wbuf_25_portB_request_put      I    18
// wbuf_26_portA_request_put      I    18
// wbuf_26_portB_request_put      I    18
// wbuf_27_portA_request_put      I    18
// wbuf_27_portB_request_put      I    18
// wbuf_28_portA_request_put      I    18
// wbuf_28_portB_request_put      I    18
// wbuf_29_portA_request_put      I    18
// wbuf_29_portB_request_put      I    18
// wbuf_30_portA_request_put      I    18
// wbuf_30_portB_request_put      I    18
// wbuf_31_portA_request_put      I    18
// wbuf_31_portB_request_put      I    18
// obuf1_0_portA_request_put      I    42
// obuf1_0_portB_request_put      I    42
// obuf1_1_portA_request_put      I    42
// obuf1_1_portB_request_put      I    42
// obuf1_2_portA_request_put      I    42
// obuf1_2_portB_request_put      I    42
// obuf1_3_portA_request_put      I    42
// obuf1_3_portB_request_put      I    42
// obuf1_4_portA_request_put      I    42
// obuf1_4_portB_request_put      I    42
// obuf1_5_portA_request_put      I    42
// obuf1_5_portB_request_put      I    42
// obuf1_6_portA_request_put      I    42
// obuf1_6_portB_request_put      I    42
// obuf1_7_portA_request_put      I    42
// obuf1_7_portB_request_put      I    42
// obuf1_8_portA_request_put      I    42
// obuf1_8_portB_request_put      I    42
// obuf1_9_portA_request_put      I    42
// obuf1_9_portB_request_put      I    42
// obuf1_10_portA_request_put     I    42
// obuf1_10_portB_request_put     I    42
// obuf1_11_portA_request_put     I    42
// obuf1_11_portB_request_put     I    42
// obuf1_12_portA_request_put     I    42
// obuf1_12_portB_request_put     I    42
// obuf1_13_portA_request_put     I    42
// obuf1_13_portB_request_put     I    42
// obuf1_14_portA_request_put     I    42
// obuf1_14_portB_request_put     I    42
// obuf1_15_portA_request_put     I    42
// obuf1_15_portB_request_put     I    42
// obuf1_16_portA_request_put     I    42
// obuf1_16_portB_request_put     I    42
// obuf1_17_portA_request_put     I    42
// obuf1_17_portB_request_put     I    42
// obuf1_18_portA_request_put     I    42
// obuf1_18_portB_request_put     I    42
// obuf1_19_portA_request_put     I    42
// obuf1_19_portB_request_put     I    42
// obuf1_20_portA_request_put     I    42
// obuf1_20_portB_request_put     I    42
// obuf1_21_portA_request_put     I    42
// obuf1_21_portB_request_put     I    42
// obuf1_22_portA_request_put     I    42
// obuf1_22_portB_request_put     I    42
// obuf1_23_portA_request_put     I    42
// obuf1_23_portB_request_put     I    42
// obuf1_24_portA_request_put     I    42
// obuf1_24_portB_request_put     I    42
// obuf1_25_portA_request_put     I    42
// obuf1_25_portB_request_put     I    42
// obuf1_26_portA_request_put     I    42
// obuf1_26_portB_request_put     I    42
// obuf1_27_portA_request_put     I    42
// obuf1_27_portB_request_put     I    42
// obuf1_28_portA_request_put     I    42
// obuf1_28_portB_request_put     I    42
// obuf1_29_portA_request_put     I    42
// obuf1_29_portB_request_put     I    42
// obuf1_30_portA_request_put     I    42
// obuf1_30_portB_request_put     I    42
// obuf1_31_portA_request_put     I    42
// obuf1_31_portB_request_put     I    42
// obuf2_0_portA_request_put      I    42
// obuf2_0_portB_request_put      I    42
// obuf2_1_portA_request_put      I    42
// obuf2_1_portB_request_put      I    42
// obuf2_2_portA_request_put      I    42
// obuf2_2_portB_request_put      I    42
// obuf2_3_portA_request_put      I    42
// obuf2_3_portB_request_put      I    42
// obuf2_4_portA_request_put      I    42
// obuf2_4_portB_request_put      I    42
// obuf2_5_portA_request_put      I    42
// obuf2_5_portB_request_put      I    42
// obuf2_6_portA_request_put      I    42
// obuf2_6_portB_request_put      I    42
// obuf2_7_portA_request_put      I    42
// obuf2_7_portB_request_put      I    42
// obuf2_8_portA_request_put      I    42
// obuf2_8_portB_request_put      I    42
// obuf2_9_portA_request_put      I    42
// obuf2_9_portB_request_put      I    42
// obuf2_10_portA_request_put     I    42
// obuf2_10_portB_request_put     I    42
// obuf2_11_portA_request_put     I    42
// obuf2_11_portB_request_put     I    42
// obuf2_12_portA_request_put     I    42
// obuf2_12_portB_request_put     I    42
// obuf2_13_portA_request_put     I    42
// obuf2_13_portB_request_put     I    42
// obuf2_14_portA_request_put     I    42
// obuf2_14_portB_request_put     I    42
// obuf2_15_portA_request_put     I    42
// obuf2_15_portB_request_put     I    42
// obuf2_16_portA_request_put     I    42
// obuf2_16_portB_request_put     I    42
// obuf2_17_portA_request_put     I    42
// obuf2_17_portB_request_put     I    42
// obuf2_18_portA_request_put     I    42
// obuf2_18_portB_request_put     I    42
// obuf2_19_portA_request_put     I    42
// obuf2_19_portB_request_put     I    42
// obuf2_20_portA_request_put     I    42
// obuf2_20_portB_request_put     I    42
// obuf2_21_portA_request_put     I    42
// obuf2_21_portB_request_put     I    42
// obuf2_22_portA_request_put     I    42
// obuf2_22_portB_request_put     I    42
// obuf2_23_portA_request_put     I    42
// obuf2_23_portB_request_put     I    42
// obuf2_24_portA_request_put     I    42
// obuf2_24_portB_request_put     I    42
// obuf2_25_portA_request_put     I    42
// obuf2_25_portB_request_put     I    42
// obuf2_26_portA_request_put     I    42
// obuf2_26_portB_request_put     I    42
// obuf2_27_portA_request_put     I    42
// obuf2_27_portB_request_put     I    42
// obuf2_28_portA_request_put     I    42
// obuf2_28_portB_request_put     I    42
// obuf2_29_portA_request_put     I    42
// obuf2_29_portB_request_put     I    42
// obuf2_30_portA_request_put     I    42
// obuf2_30_portB_request_put     I    42
// obuf2_31_portA_request_put     I    42
// obuf2_31_portB_request_put     I    42
// EN_ibuf_0_portA_request_put    I     1
// EN_ibuf_0_portB_request_put    I     1
// EN_ibuf_0_portAClear           I     1
// EN_ibuf_0_portBClear           I     1
// EN_ibuf_1_portA_request_put    I     1
// EN_ibuf_1_portB_request_put    I     1
// EN_ibuf_1_portAClear           I     1
// EN_ibuf_1_portBClear           I     1
// EN_ibuf_2_portA_request_put    I     1
// EN_ibuf_2_portB_request_put    I     1
// EN_ibuf_2_portAClear           I     1
// EN_ibuf_2_portBClear           I     1
// EN_ibuf_3_portA_request_put    I     1
// EN_ibuf_3_portB_request_put    I     1
// EN_ibuf_3_portAClear           I     1
// EN_ibuf_3_portBClear           I     1
// EN_ibuf_4_portA_request_put    I     1
// EN_ibuf_4_portB_request_put    I     1
// EN_ibuf_4_portAClear           I     1
// EN_ibuf_4_portBClear           I     1
// EN_ibuf_5_portA_request_put    I     1
// EN_ibuf_5_portB_request_put    I     1
// EN_ibuf_5_portAClear           I     1
// EN_ibuf_5_portBClear           I     1
// EN_ibuf_6_portA_request_put    I     1
// EN_ibuf_6_portB_request_put    I     1
// EN_ibuf_6_portAClear           I     1
// EN_ibuf_6_portBClear           I     1
// EN_ibuf_7_portA_request_put    I     1
// EN_ibuf_7_portB_request_put    I     1
// EN_ibuf_7_portAClear           I     1
// EN_ibuf_7_portBClear           I     1
// EN_ibuf_8_portA_request_put    I     1
// EN_ibuf_8_portB_request_put    I     1
// EN_ibuf_8_portAClear           I     1
// EN_ibuf_8_portBClear           I     1
// EN_ibuf_9_portA_request_put    I     1
// EN_ibuf_9_portB_request_put    I     1
// EN_ibuf_9_portAClear           I     1
// EN_ibuf_9_portBClear           I     1
// EN_ibuf_10_portA_request_put   I     1
// EN_ibuf_10_portB_request_put   I     1
// EN_ibuf_10_portAClear          I     1
// EN_ibuf_10_portBClear          I     1
// EN_ibuf_11_portA_request_put   I     1
// EN_ibuf_11_portB_request_put   I     1
// EN_ibuf_11_portAClear          I     1
// EN_ibuf_11_portBClear          I     1
// EN_ibuf_12_portA_request_put   I     1
// EN_ibuf_12_portB_request_put   I     1
// EN_ibuf_12_portAClear          I     1
// EN_ibuf_12_portBClear          I     1
// EN_ibuf_13_portA_request_put   I     1
// EN_ibuf_13_portB_request_put   I     1
// EN_ibuf_13_portAClear          I     1
// EN_ibuf_13_portBClear          I     1
// EN_ibuf_14_portA_request_put   I     1
// EN_ibuf_14_portB_request_put   I     1
// EN_ibuf_14_portAClear          I     1
// EN_ibuf_14_portBClear          I     1
// EN_ibuf_15_portA_request_put   I     1
// EN_ibuf_15_portB_request_put   I     1
// EN_ibuf_15_portAClear          I     1
// EN_ibuf_15_portBClear          I     1
// EN_ibuf_16_portA_request_put   I     1
// EN_ibuf_16_portB_request_put   I     1
// EN_ibuf_16_portAClear          I     1
// EN_ibuf_16_portBClear          I     1
// EN_ibuf_17_portA_request_put   I     1
// EN_ibuf_17_portB_request_put   I     1
// EN_ibuf_17_portAClear          I     1
// EN_ibuf_17_portBClear          I     1
// EN_ibuf_18_portA_request_put   I     1
// EN_ibuf_18_portB_request_put   I     1
// EN_ibuf_18_portAClear          I     1
// EN_ibuf_18_portBClear          I     1
// EN_ibuf_19_portA_request_put   I     1
// EN_ibuf_19_portB_request_put   I     1
// EN_ibuf_19_portAClear          I     1
// EN_ibuf_19_portBClear          I     1
// EN_ibuf_20_portA_request_put   I     1
// EN_ibuf_20_portB_request_put   I     1
// EN_ibuf_20_portAClear          I     1
// EN_ibuf_20_portBClear          I     1
// EN_ibuf_21_portA_request_put   I     1
// EN_ibuf_21_portB_request_put   I     1
// EN_ibuf_21_portAClear          I     1
// EN_ibuf_21_portBClear          I     1
// EN_ibuf_22_portA_request_put   I     1
// EN_ibuf_22_portB_request_put   I     1
// EN_ibuf_22_portAClear          I     1
// EN_ibuf_22_portBClear          I     1
// EN_ibuf_23_portA_request_put   I     1
// EN_ibuf_23_portB_request_put   I     1
// EN_ibuf_23_portAClear          I     1
// EN_ibuf_23_portBClear          I     1
// EN_ibuf_24_portA_request_put   I     1
// EN_ibuf_24_portB_request_put   I     1
// EN_ibuf_24_portAClear          I     1
// EN_ibuf_24_portBClear          I     1
// EN_ibuf_25_portA_request_put   I     1
// EN_ibuf_25_portB_request_put   I     1
// EN_ibuf_25_portAClear          I     1
// EN_ibuf_25_portBClear          I     1
// EN_ibuf_26_portA_request_put   I     1
// EN_ibuf_26_portB_request_put   I     1
// EN_ibuf_26_portAClear          I     1
// EN_ibuf_26_portBClear          I     1
// EN_ibuf_27_portA_request_put   I     1
// EN_ibuf_27_portB_request_put   I     1
// EN_ibuf_27_portAClear          I     1
// EN_ibuf_27_portBClear          I     1
// EN_ibuf_28_portA_request_put   I     1
// EN_ibuf_28_portB_request_put   I     1
// EN_ibuf_28_portAClear          I     1
// EN_ibuf_28_portBClear          I     1
// EN_ibuf_29_portA_request_put   I     1
// EN_ibuf_29_portB_request_put   I     1
// EN_ibuf_29_portAClear          I     1
// EN_ibuf_29_portBClear          I     1
// EN_ibuf_30_portA_request_put   I     1
// EN_ibuf_30_portB_request_put   I     1
// EN_ibuf_30_portAClear          I     1
// EN_ibuf_30_portBClear          I     1
// EN_ibuf_31_portA_request_put   I     1
// EN_ibuf_31_portB_request_put   I     1
// EN_ibuf_31_portAClear          I     1
// EN_ibuf_31_portBClear          I     1
// EN_wbuf_0_portA_request_put    I     1
// EN_wbuf_0_portB_request_put    I     1
// EN_wbuf_0_portAClear           I     1
// EN_wbuf_0_portBClear           I     1
// EN_wbuf_1_portA_request_put    I     1
// EN_wbuf_1_portB_request_put    I     1
// EN_wbuf_1_portAClear           I     1
// EN_wbuf_1_portBClear           I     1
// EN_wbuf_2_portA_request_put    I     1
// EN_wbuf_2_portB_request_put    I     1
// EN_wbuf_2_portAClear           I     1
// EN_wbuf_2_portBClear           I     1
// EN_wbuf_3_portA_request_put    I     1
// EN_wbuf_3_portB_request_put    I     1
// EN_wbuf_3_portAClear           I     1
// EN_wbuf_3_portBClear           I     1
// EN_wbuf_4_portA_request_put    I     1
// EN_wbuf_4_portB_request_put    I     1
// EN_wbuf_4_portAClear           I     1
// EN_wbuf_4_portBClear           I     1
// EN_wbuf_5_portA_request_put    I     1
// EN_wbuf_5_portB_request_put    I     1
// EN_wbuf_5_portAClear           I     1
// EN_wbuf_5_portBClear           I     1
// EN_wbuf_6_portA_request_put    I     1
// EN_wbuf_6_portB_request_put    I     1
// EN_wbuf_6_portAClear           I     1
// EN_wbuf_6_portBClear           I     1
// EN_wbuf_7_portA_request_put    I     1
// EN_wbuf_7_portB_request_put    I     1
// EN_wbuf_7_portAClear           I     1
// EN_wbuf_7_portBClear           I     1
// EN_wbuf_8_portA_request_put    I     1
// EN_wbuf_8_portB_request_put    I     1
// EN_wbuf_8_portAClear           I     1
// EN_wbuf_8_portBClear           I     1
// EN_wbuf_9_portA_request_put    I     1
// EN_wbuf_9_portB_request_put    I     1
// EN_wbuf_9_portAClear           I     1
// EN_wbuf_9_portBClear           I     1
// EN_wbuf_10_portA_request_put   I     1
// EN_wbuf_10_portB_request_put   I     1
// EN_wbuf_10_portAClear          I     1
// EN_wbuf_10_portBClear          I     1
// EN_wbuf_11_portA_request_put   I     1
// EN_wbuf_11_portB_request_put   I     1
// EN_wbuf_11_portAClear          I     1
// EN_wbuf_11_portBClear          I     1
// EN_wbuf_12_portA_request_put   I     1
// EN_wbuf_12_portB_request_put   I     1
// EN_wbuf_12_portAClear          I     1
// EN_wbuf_12_portBClear          I     1
// EN_wbuf_13_portA_request_put   I     1
// EN_wbuf_13_portB_request_put   I     1
// EN_wbuf_13_portAClear          I     1
// EN_wbuf_13_portBClear          I     1
// EN_wbuf_14_portA_request_put   I     1
// EN_wbuf_14_portB_request_put   I     1
// EN_wbuf_14_portAClear          I     1
// EN_wbuf_14_portBClear          I     1
// EN_wbuf_15_portA_request_put   I     1
// EN_wbuf_15_portB_request_put   I     1
// EN_wbuf_15_portAClear          I     1
// EN_wbuf_15_portBClear          I     1
// EN_wbuf_16_portA_request_put   I     1
// EN_wbuf_16_portB_request_put   I     1
// EN_wbuf_16_portAClear          I     1
// EN_wbuf_16_portBClear          I     1
// EN_wbuf_17_portA_request_put   I     1
// EN_wbuf_17_portB_request_put   I     1
// EN_wbuf_17_portAClear          I     1
// EN_wbuf_17_portBClear          I     1
// EN_wbuf_18_portA_request_put   I     1
// EN_wbuf_18_portB_request_put   I     1
// EN_wbuf_18_portAClear          I     1
// EN_wbuf_18_portBClear          I     1
// EN_wbuf_19_portA_request_put   I     1
// EN_wbuf_19_portB_request_put   I     1
// EN_wbuf_19_portAClear          I     1
// EN_wbuf_19_portBClear          I     1
// EN_wbuf_20_portA_request_put   I     1
// EN_wbuf_20_portB_request_put   I     1
// EN_wbuf_20_portAClear          I     1
// EN_wbuf_20_portBClear          I     1
// EN_wbuf_21_portA_request_put   I     1
// EN_wbuf_21_portB_request_put   I     1
// EN_wbuf_21_portAClear          I     1
// EN_wbuf_21_portBClear          I     1
// EN_wbuf_22_portA_request_put   I     1
// EN_wbuf_22_portB_request_put   I     1
// EN_wbuf_22_portAClear          I     1
// EN_wbuf_22_portBClear          I     1
// EN_wbuf_23_portA_request_put   I     1
// EN_wbuf_23_portB_request_put   I     1
// EN_wbuf_23_portAClear          I     1
// EN_wbuf_23_portBClear          I     1
// EN_wbuf_24_portA_request_put   I     1
// EN_wbuf_24_portB_request_put   I     1
// EN_wbuf_24_portAClear          I     1
// EN_wbuf_24_portBClear          I     1
// EN_wbuf_25_portA_request_put   I     1
// EN_wbuf_25_portB_request_put   I     1
// EN_wbuf_25_portAClear          I     1
// EN_wbuf_25_portBClear          I     1
// EN_wbuf_26_portA_request_put   I     1
// EN_wbuf_26_portB_request_put   I     1
// EN_wbuf_26_portAClear          I     1
// EN_wbuf_26_portBClear          I     1
// EN_wbuf_27_portA_request_put   I     1
// EN_wbuf_27_portB_request_put   I     1
// EN_wbuf_27_portAClear          I     1
// EN_wbuf_27_portBClear          I     1
// EN_wbuf_28_portA_request_put   I     1
// EN_wbuf_28_portB_request_put   I     1
// EN_wbuf_28_portAClear          I     1
// EN_wbuf_28_portBClear          I     1
// EN_wbuf_29_portA_request_put   I     1
// EN_wbuf_29_portB_request_put   I     1
// EN_wbuf_29_portAClear          I     1
// EN_wbuf_29_portBClear          I     1
// EN_wbuf_30_portA_request_put   I     1
// EN_wbuf_30_portB_request_put   I     1
// EN_wbuf_30_portAClear          I     1
// EN_wbuf_30_portBClear          I     1
// EN_wbuf_31_portA_request_put   I     1
// EN_wbuf_31_portB_request_put   I     1
// EN_wbuf_31_portAClear          I     1
// EN_wbuf_31_portBClear          I     1
// EN_obuf1_0_portA_request_put   I     1
// EN_obuf1_0_portB_request_put   I     1
// EN_obuf1_0_portAClear          I     1
// EN_obuf1_0_portBClear          I     1
// EN_obuf1_1_portA_request_put   I     1
// EN_obuf1_1_portB_request_put   I     1
// EN_obuf1_1_portAClear          I     1
// EN_obuf1_1_portBClear          I     1
// EN_obuf1_2_portA_request_put   I     1
// EN_obuf1_2_portB_request_put   I     1
// EN_obuf1_2_portAClear          I     1
// EN_obuf1_2_portBClear          I     1
// EN_obuf1_3_portA_request_put   I     1
// EN_obuf1_3_portB_request_put   I     1
// EN_obuf1_3_portAClear          I     1
// EN_obuf1_3_portBClear          I     1
// EN_obuf1_4_portA_request_put   I     1
// EN_obuf1_4_portB_request_put   I     1
// EN_obuf1_4_portAClear          I     1
// EN_obuf1_4_portBClear          I     1
// EN_obuf1_5_portA_request_put   I     1
// EN_obuf1_5_portB_request_put   I     1
// EN_obuf1_5_portAClear          I     1
// EN_obuf1_5_portBClear          I     1
// EN_obuf1_6_portA_request_put   I     1
// EN_obuf1_6_portB_request_put   I     1
// EN_obuf1_6_portAClear          I     1
// EN_obuf1_6_portBClear          I     1
// EN_obuf1_7_portA_request_put   I     1
// EN_obuf1_7_portB_request_put   I     1
// EN_obuf1_7_portAClear          I     1
// EN_obuf1_7_portBClear          I     1
// EN_obuf1_8_portA_request_put   I     1
// EN_obuf1_8_portB_request_put   I     1
// EN_obuf1_8_portAClear          I     1
// EN_obuf1_8_portBClear          I     1
// EN_obuf1_9_portA_request_put   I     1
// EN_obuf1_9_portB_request_put   I     1
// EN_obuf1_9_portAClear          I     1
// EN_obuf1_9_portBClear          I     1
// EN_obuf1_10_portA_request_put  I     1
// EN_obuf1_10_portB_request_put  I     1
// EN_obuf1_10_portAClear         I     1
// EN_obuf1_10_portBClear         I     1
// EN_obuf1_11_portA_request_put  I     1
// EN_obuf1_11_portB_request_put  I     1
// EN_obuf1_11_portAClear         I     1
// EN_obuf1_11_portBClear         I     1
// EN_obuf1_12_portA_request_put  I     1
// EN_obuf1_12_portB_request_put  I     1
// EN_obuf1_12_portAClear         I     1
// EN_obuf1_12_portBClear         I     1
// EN_obuf1_13_portA_request_put  I     1
// EN_obuf1_13_portB_request_put  I     1
// EN_obuf1_13_portAClear         I     1
// EN_obuf1_13_portBClear         I     1
// EN_obuf1_14_portA_request_put  I     1
// EN_obuf1_14_portB_request_put  I     1
// EN_obuf1_14_portAClear         I     1
// EN_obuf1_14_portBClear         I     1
// EN_obuf1_15_portA_request_put  I     1
// EN_obuf1_15_portB_request_put  I     1
// EN_obuf1_15_portAClear         I     1
// EN_obuf1_15_portBClear         I     1
// EN_obuf1_16_portA_request_put  I     1
// EN_obuf1_16_portB_request_put  I     1
// EN_obuf1_16_portAClear         I     1
// EN_obuf1_16_portBClear         I     1
// EN_obuf1_17_portA_request_put  I     1
// EN_obuf1_17_portB_request_put  I     1
// EN_obuf1_17_portAClear         I     1
// EN_obuf1_17_portBClear         I     1
// EN_obuf1_18_portA_request_put  I     1
// EN_obuf1_18_portB_request_put  I     1
// EN_obuf1_18_portAClear         I     1
// EN_obuf1_18_portBClear         I     1
// EN_obuf1_19_portA_request_put  I     1
// EN_obuf1_19_portB_request_put  I     1
// EN_obuf1_19_portAClear         I     1
// EN_obuf1_19_portBClear         I     1
// EN_obuf1_20_portA_request_put  I     1
// EN_obuf1_20_portB_request_put  I     1
// EN_obuf1_20_portAClear         I     1
// EN_obuf1_20_portBClear         I     1
// EN_obuf1_21_portA_request_put  I     1
// EN_obuf1_21_portB_request_put  I     1
// EN_obuf1_21_portAClear         I     1
// EN_obuf1_21_portBClear         I     1
// EN_obuf1_22_portA_request_put  I     1
// EN_obuf1_22_portB_request_put  I     1
// EN_obuf1_22_portAClear         I     1
// EN_obuf1_22_portBClear         I     1
// EN_obuf1_23_portA_request_put  I     1
// EN_obuf1_23_portB_request_put  I     1
// EN_obuf1_23_portAClear         I     1
// EN_obuf1_23_portBClear         I     1
// EN_obuf1_24_portA_request_put  I     1
// EN_obuf1_24_portB_request_put  I     1
// EN_obuf1_24_portAClear         I     1
// EN_obuf1_24_portBClear         I     1
// EN_obuf1_25_portA_request_put  I     1
// EN_obuf1_25_portB_request_put  I     1
// EN_obuf1_25_portAClear         I     1
// EN_obuf1_25_portBClear         I     1
// EN_obuf1_26_portA_request_put  I     1
// EN_obuf1_26_portB_request_put  I     1
// EN_obuf1_26_portAClear         I     1
// EN_obuf1_26_portBClear         I     1
// EN_obuf1_27_portA_request_put  I     1
// EN_obuf1_27_portB_request_put  I     1
// EN_obuf1_27_portAClear         I     1
// EN_obuf1_27_portBClear         I     1
// EN_obuf1_28_portA_request_put  I     1
// EN_obuf1_28_portB_request_put  I     1
// EN_obuf1_28_portAClear         I     1
// EN_obuf1_28_portBClear         I     1
// EN_obuf1_29_portA_request_put  I     1
// EN_obuf1_29_portB_request_put  I     1
// EN_obuf1_29_portAClear         I     1
// EN_obuf1_29_portBClear         I     1
// EN_obuf1_30_portA_request_put  I     1
// EN_obuf1_30_portB_request_put  I     1
// EN_obuf1_30_portAClear         I     1
// EN_obuf1_30_portBClear         I     1
// EN_obuf1_31_portA_request_put  I     1
// EN_obuf1_31_portB_request_put  I     1
// EN_obuf1_31_portAClear         I     1
// EN_obuf1_31_portBClear         I     1
// EN_obuf2_0_portA_request_put   I     1
// EN_obuf2_0_portB_request_put   I     1
// EN_obuf2_0_portAClear          I     1
// EN_obuf2_0_portBClear          I     1
// EN_obuf2_1_portA_request_put   I     1
// EN_obuf2_1_portB_request_put   I     1
// EN_obuf2_1_portAClear          I     1
// EN_obuf2_1_portBClear          I     1
// EN_obuf2_2_portA_request_put   I     1
// EN_obuf2_2_portB_request_put   I     1
// EN_obuf2_2_portAClear          I     1
// EN_obuf2_2_portBClear          I     1
// EN_obuf2_3_portA_request_put   I     1
// EN_obuf2_3_portB_request_put   I     1
// EN_obuf2_3_portAClear          I     1
// EN_obuf2_3_portBClear          I     1
// EN_obuf2_4_portA_request_put   I     1
// EN_obuf2_4_portB_request_put   I     1
// EN_obuf2_4_portAClear          I     1
// EN_obuf2_4_portBClear          I     1
// EN_obuf2_5_portA_request_put   I     1
// EN_obuf2_5_portB_request_put   I     1
// EN_obuf2_5_portAClear          I     1
// EN_obuf2_5_portBClear          I     1
// EN_obuf2_6_portA_request_put   I     1
// EN_obuf2_6_portB_request_put   I     1
// EN_obuf2_6_portAClear          I     1
// EN_obuf2_6_portBClear          I     1
// EN_obuf2_7_portA_request_put   I     1
// EN_obuf2_7_portB_request_put   I     1
// EN_obuf2_7_portAClear          I     1
// EN_obuf2_7_portBClear          I     1
// EN_obuf2_8_portA_request_put   I     1
// EN_obuf2_8_portB_request_put   I     1
// EN_obuf2_8_portAClear          I     1
// EN_obuf2_8_portBClear          I     1
// EN_obuf2_9_portA_request_put   I     1
// EN_obuf2_9_portB_request_put   I     1
// EN_obuf2_9_portAClear          I     1
// EN_obuf2_9_portBClear          I     1
// EN_obuf2_10_portA_request_put  I     1
// EN_obuf2_10_portB_request_put  I     1
// EN_obuf2_10_portAClear         I     1
// EN_obuf2_10_portBClear         I     1
// EN_obuf2_11_portA_request_put  I     1
// EN_obuf2_11_portB_request_put  I     1
// EN_obuf2_11_portAClear         I     1
// EN_obuf2_11_portBClear         I     1
// EN_obuf2_12_portA_request_put  I     1
// EN_obuf2_12_portB_request_put  I     1
// EN_obuf2_12_portAClear         I     1
// EN_obuf2_12_portBClear         I     1
// EN_obuf2_13_portA_request_put  I     1
// EN_obuf2_13_portB_request_put  I     1
// EN_obuf2_13_portAClear         I     1
// EN_obuf2_13_portBClear         I     1
// EN_obuf2_14_portA_request_put  I     1
// EN_obuf2_14_portB_request_put  I     1
// EN_obuf2_14_portAClear         I     1
// EN_obuf2_14_portBClear         I     1
// EN_obuf2_15_portA_request_put  I     1
// EN_obuf2_15_portB_request_put  I     1
// EN_obuf2_15_portAClear         I     1
// EN_obuf2_15_portBClear         I     1
// EN_obuf2_16_portA_request_put  I     1
// EN_obuf2_16_portB_request_put  I     1
// EN_obuf2_16_portAClear         I     1
// EN_obuf2_16_portBClear         I     1
// EN_obuf2_17_portA_request_put  I     1
// EN_obuf2_17_portB_request_put  I     1
// EN_obuf2_17_portAClear         I     1
// EN_obuf2_17_portBClear         I     1
// EN_obuf2_18_portA_request_put  I     1
// EN_obuf2_18_portB_request_put  I     1
// EN_obuf2_18_portAClear         I     1
// EN_obuf2_18_portBClear         I     1
// EN_obuf2_19_portA_request_put  I     1
// EN_obuf2_19_portB_request_put  I     1
// EN_obuf2_19_portAClear         I     1
// EN_obuf2_19_portBClear         I     1
// EN_obuf2_20_portA_request_put  I     1
// EN_obuf2_20_portB_request_put  I     1
// EN_obuf2_20_portAClear         I     1
// EN_obuf2_20_portBClear         I     1
// EN_obuf2_21_portA_request_put  I     1
// EN_obuf2_21_portB_request_put  I     1
// EN_obuf2_21_portAClear         I     1
// EN_obuf2_21_portBClear         I     1
// EN_obuf2_22_portA_request_put  I     1
// EN_obuf2_22_portB_request_put  I     1
// EN_obuf2_22_portAClear         I     1
// EN_obuf2_22_portBClear         I     1
// EN_obuf2_23_portA_request_put  I     1
// EN_obuf2_23_portB_request_put  I     1
// EN_obuf2_23_portAClear         I     1
// EN_obuf2_23_portBClear         I     1
// EN_obuf2_24_portA_request_put  I     1
// EN_obuf2_24_portB_request_put  I     1
// EN_obuf2_24_portAClear         I     1
// EN_obuf2_24_portBClear         I     1
// EN_obuf2_25_portA_request_put  I     1
// EN_obuf2_25_portB_request_put  I     1
// EN_obuf2_25_portAClear         I     1
// EN_obuf2_25_portBClear         I     1
// EN_obuf2_26_portA_request_put  I     1
// EN_obuf2_26_portB_request_put  I     1
// EN_obuf2_26_portAClear         I     1
// EN_obuf2_26_portBClear         I     1
// EN_obuf2_27_portA_request_put  I     1
// EN_obuf2_27_portB_request_put  I     1
// EN_obuf2_27_portAClear         I     1
// EN_obuf2_27_portBClear         I     1
// EN_obuf2_28_portA_request_put  I     1
// EN_obuf2_28_portB_request_put  I     1
// EN_obuf2_28_portAClear         I     1
// EN_obuf2_28_portBClear         I     1
// EN_obuf2_29_portA_request_put  I     1
// EN_obuf2_29_portB_request_put  I     1
// EN_obuf2_29_portAClear         I     1
// EN_obuf2_29_portBClear         I     1
// EN_obuf2_30_portA_request_put  I     1
// EN_obuf2_30_portB_request_put  I     1
// EN_obuf2_30_portAClear         I     1
// EN_obuf2_30_portBClear         I     1
// EN_obuf2_31_portA_request_put  I     1
// EN_obuf2_31_portB_request_put  I     1
// EN_obuf2_31_portAClear         I     1
// EN_obuf2_31_portBClear         I     1
// EN_ibuf_0_portA_response_get   I     1
// EN_ibuf_0_portB_response_get   I     1
// EN_ibuf_1_portA_response_get   I     1
// EN_ibuf_1_portB_response_get   I     1
// EN_ibuf_2_portA_response_get   I     1
// EN_ibuf_2_portB_response_get   I     1
// EN_ibuf_3_portA_response_get   I     1
// EN_ibuf_3_portB_response_get   I     1
// EN_ibuf_4_portA_response_get   I     1
// EN_ibuf_4_portB_response_get   I     1
// EN_ibuf_5_portA_response_get   I     1
// EN_ibuf_5_portB_response_get   I     1
// EN_ibuf_6_portA_response_get   I     1
// EN_ibuf_6_portB_response_get   I     1
// EN_ibuf_7_portA_response_get   I     1
// EN_ibuf_7_portB_response_get   I     1
// EN_ibuf_8_portA_response_get   I     1
// EN_ibuf_8_portB_response_get   I     1
// EN_ibuf_9_portA_response_get   I     1
// EN_ibuf_9_portB_response_get   I     1
// EN_ibuf_10_portA_response_get  I     1
// EN_ibuf_10_portB_response_get  I     1
// EN_ibuf_11_portA_response_get  I     1
// EN_ibuf_11_portB_response_get  I     1
// EN_ibuf_12_portA_response_get  I     1
// EN_ibuf_12_portB_response_get  I     1
// EN_ibuf_13_portA_response_get  I     1
// EN_ibuf_13_portB_response_get  I     1
// EN_ibuf_14_portA_response_get  I     1
// EN_ibuf_14_portB_response_get  I     1
// EN_ibuf_15_portA_response_get  I     1
// EN_ibuf_15_portB_response_get  I     1
// EN_ibuf_16_portA_response_get  I     1
// EN_ibuf_16_portB_response_get  I     1
// EN_ibuf_17_portA_response_get  I     1
// EN_ibuf_17_portB_response_get  I     1
// EN_ibuf_18_portA_response_get  I     1
// EN_ibuf_18_portB_response_get  I     1
// EN_ibuf_19_portA_response_get  I     1
// EN_ibuf_19_portB_response_get  I     1
// EN_ibuf_20_portA_response_get  I     1
// EN_ibuf_20_portB_response_get  I     1
// EN_ibuf_21_portA_response_get  I     1
// EN_ibuf_21_portB_response_get  I     1
// EN_ibuf_22_portA_response_get  I     1
// EN_ibuf_22_portB_response_get  I     1
// EN_ibuf_23_portA_response_get  I     1
// EN_ibuf_23_portB_response_get  I     1
// EN_ibuf_24_portA_response_get  I     1
// EN_ibuf_24_portB_response_get  I     1
// EN_ibuf_25_portA_response_get  I     1
// EN_ibuf_25_portB_response_get  I     1
// EN_ibuf_26_portA_response_get  I     1
// EN_ibuf_26_portB_response_get  I     1
// EN_ibuf_27_portA_response_get  I     1
// EN_ibuf_27_portB_response_get  I     1
// EN_ibuf_28_portA_response_get  I     1
// EN_ibuf_28_portB_response_get  I     1
// EN_ibuf_29_portA_response_get  I     1
// EN_ibuf_29_portB_response_get  I     1
// EN_ibuf_30_portA_response_get  I     1
// EN_ibuf_30_portB_response_get  I     1
// EN_ibuf_31_portA_response_get  I     1
// EN_ibuf_31_portB_response_get  I     1
// EN_wbuf_0_portA_response_get   I     1
// EN_wbuf_0_portB_response_get   I     1
// EN_wbuf_1_portA_response_get   I     1
// EN_wbuf_1_portB_response_get   I     1
// EN_wbuf_2_portA_response_get   I     1
// EN_wbuf_2_portB_response_get   I     1
// EN_wbuf_3_portA_response_get   I     1
// EN_wbuf_3_portB_response_get   I     1
// EN_wbuf_4_portA_response_get   I     1
// EN_wbuf_4_portB_response_get   I     1
// EN_wbuf_5_portA_response_get   I     1
// EN_wbuf_5_portB_response_get   I     1
// EN_wbuf_6_portA_response_get   I     1
// EN_wbuf_6_portB_response_get   I     1
// EN_wbuf_7_portA_response_get   I     1
// EN_wbuf_7_portB_response_get   I     1
// EN_wbuf_8_portA_response_get   I     1
// EN_wbuf_8_portB_response_get   I     1
// EN_wbuf_9_portA_response_get   I     1
// EN_wbuf_9_portB_response_get   I     1
// EN_wbuf_10_portA_response_get  I     1
// EN_wbuf_10_portB_response_get  I     1
// EN_wbuf_11_portA_response_get  I     1
// EN_wbuf_11_portB_response_get  I     1
// EN_wbuf_12_portA_response_get  I     1
// EN_wbuf_12_portB_response_get  I     1
// EN_wbuf_13_portA_response_get  I     1
// EN_wbuf_13_portB_response_get  I     1
// EN_wbuf_14_portA_response_get  I     1
// EN_wbuf_14_portB_response_get  I     1
// EN_wbuf_15_portA_response_get  I     1
// EN_wbuf_15_portB_response_get  I     1
// EN_wbuf_16_portA_response_get  I     1
// EN_wbuf_16_portB_response_get  I     1
// EN_wbuf_17_portA_response_get  I     1
// EN_wbuf_17_portB_response_get  I     1
// EN_wbuf_18_portA_response_get  I     1
// EN_wbuf_18_portB_response_get  I     1
// EN_wbuf_19_portA_response_get  I     1
// EN_wbuf_19_portB_response_get  I     1
// EN_wbuf_20_portA_response_get  I     1
// EN_wbuf_20_portB_response_get  I     1
// EN_wbuf_21_portA_response_get  I     1
// EN_wbuf_21_portB_response_get  I     1
// EN_wbuf_22_portA_response_get  I     1
// EN_wbuf_22_portB_response_get  I     1
// EN_wbuf_23_portA_response_get  I     1
// EN_wbuf_23_portB_response_get  I     1
// EN_wbuf_24_portA_response_get  I     1
// EN_wbuf_24_portB_response_get  I     1
// EN_wbuf_25_portA_response_get  I     1
// EN_wbuf_25_portB_response_get  I     1
// EN_wbuf_26_portA_response_get  I     1
// EN_wbuf_26_portB_response_get  I     1
// EN_wbuf_27_portA_response_get  I     1
// EN_wbuf_27_portB_response_get  I     1
// EN_wbuf_28_portA_response_get  I     1
// EN_wbuf_28_portB_response_get  I     1
// EN_wbuf_29_portA_response_get  I     1
// EN_wbuf_29_portB_response_get  I     1
// EN_wbuf_30_portA_response_get  I     1
// EN_wbuf_30_portB_response_get  I     1
// EN_wbuf_31_portA_response_get  I     1
// EN_wbuf_31_portB_response_get  I     1
// EN_obuf1_0_portA_response_get  I     1
// EN_obuf1_0_portB_response_get  I     1
// EN_obuf1_1_portA_response_get  I     1
// EN_obuf1_1_portB_response_get  I     1
// EN_obuf1_2_portA_response_get  I     1
// EN_obuf1_2_portB_response_get  I     1
// EN_obuf1_3_portA_response_get  I     1
// EN_obuf1_3_portB_response_get  I     1
// EN_obuf1_4_portA_response_get  I     1
// EN_obuf1_4_portB_response_get  I     1
// EN_obuf1_5_portA_response_get  I     1
// EN_obuf1_5_portB_response_get  I     1
// EN_obuf1_6_portA_response_get  I     1
// EN_obuf1_6_portB_response_get  I     1
// EN_obuf1_7_portA_response_get  I     1
// EN_obuf1_7_portB_response_get  I     1
// EN_obuf1_8_portA_response_get  I     1
// EN_obuf1_8_portB_response_get  I     1
// EN_obuf1_9_portA_response_get  I     1
// EN_obuf1_9_portB_response_get  I     1
// EN_obuf1_10_portA_response_get  I     1
// EN_obuf1_10_portB_response_get  I     1
// EN_obuf1_11_portA_response_get  I     1
// EN_obuf1_11_portB_response_get  I     1
// EN_obuf1_12_portA_response_get  I     1
// EN_obuf1_12_portB_response_get  I     1
// EN_obuf1_13_portA_response_get  I     1
// EN_obuf1_13_portB_response_get  I     1
// EN_obuf1_14_portA_response_get  I     1
// EN_obuf1_14_portB_response_get  I     1
// EN_obuf1_15_portA_response_get  I     1
// EN_obuf1_15_portB_response_get  I     1
// EN_obuf1_16_portA_response_get  I     1
// EN_obuf1_16_portB_response_get  I     1
// EN_obuf1_17_portA_response_get  I     1
// EN_obuf1_17_portB_response_get  I     1
// EN_obuf1_18_portA_response_get  I     1
// EN_obuf1_18_portB_response_get  I     1
// EN_obuf1_19_portA_response_get  I     1
// EN_obuf1_19_portB_response_get  I     1
// EN_obuf1_20_portA_response_get  I     1
// EN_obuf1_20_portB_response_get  I     1
// EN_obuf1_21_portA_response_get  I     1
// EN_obuf1_21_portB_response_get  I     1
// EN_obuf1_22_portA_response_get  I     1
// EN_obuf1_22_portB_response_get  I     1
// EN_obuf1_23_portA_response_get  I     1
// EN_obuf1_23_portB_response_get  I     1
// EN_obuf1_24_portA_response_get  I     1
// EN_obuf1_24_portB_response_get  I     1
// EN_obuf1_25_portA_response_get  I     1
// EN_obuf1_25_portB_response_get  I     1
// EN_obuf1_26_portA_response_get  I     1
// EN_obuf1_26_portB_response_get  I     1
// EN_obuf1_27_portA_response_get  I     1
// EN_obuf1_27_portB_response_get  I     1
// EN_obuf1_28_portA_response_get  I     1
// EN_obuf1_28_portB_response_get  I     1
// EN_obuf1_29_portA_response_get  I     1
// EN_obuf1_29_portB_response_get  I     1
// EN_obuf1_30_portA_response_get  I     1
// EN_obuf1_30_portB_response_get  I     1
// EN_obuf1_31_portA_response_get  I     1
// EN_obuf1_31_portB_response_get  I     1
// EN_obuf2_0_portA_response_get  I     1
// EN_obuf2_0_portB_response_get  I     1
// EN_obuf2_1_portA_response_get  I     1
// EN_obuf2_1_portB_response_get  I     1
// EN_obuf2_2_portA_response_get  I     1
// EN_obuf2_2_portB_response_get  I     1
// EN_obuf2_3_portA_response_get  I     1
// EN_obuf2_3_portB_response_get  I     1
// EN_obuf2_4_portA_response_get  I     1
// EN_obuf2_4_portB_response_get  I     1
// EN_obuf2_5_portA_response_get  I     1
// EN_obuf2_5_portB_response_get  I     1
// EN_obuf2_6_portA_response_get  I     1
// EN_obuf2_6_portB_response_get  I     1
// EN_obuf2_7_portA_response_get  I     1
// EN_obuf2_7_portB_response_get  I     1
// EN_obuf2_8_portA_response_get  I     1
// EN_obuf2_8_portB_response_get  I     1
// EN_obuf2_9_portA_response_get  I     1
// EN_obuf2_9_portB_response_get  I     1
// EN_obuf2_10_portA_response_get  I     1
// EN_obuf2_10_portB_response_get  I     1
// EN_obuf2_11_portA_response_get  I     1
// EN_obuf2_11_portB_response_get  I     1
// EN_obuf2_12_portA_response_get  I     1
// EN_obuf2_12_portB_response_get  I     1
// EN_obuf2_13_portA_response_get  I     1
// EN_obuf2_13_portB_response_get  I     1
// EN_obuf2_14_portA_response_get  I     1
// EN_obuf2_14_portB_response_get  I     1
// EN_obuf2_15_portA_response_get  I     1
// EN_obuf2_15_portB_response_get  I     1
// EN_obuf2_16_portA_response_get  I     1
// EN_obuf2_16_portB_response_get  I     1
// EN_obuf2_17_portA_response_get  I     1
// EN_obuf2_17_portB_response_get  I     1
// EN_obuf2_18_portA_response_get  I     1
// EN_obuf2_18_portB_response_get  I     1
// EN_obuf2_19_portA_response_get  I     1
// EN_obuf2_19_portB_response_get  I     1
// EN_obuf2_20_portA_response_get  I     1
// EN_obuf2_20_portB_response_get  I     1
// EN_obuf2_21_portA_response_get  I     1
// EN_obuf2_21_portB_response_get  I     1
// EN_obuf2_22_portA_response_get  I     1
// EN_obuf2_22_portB_response_get  I     1
// EN_obuf2_23_portA_response_get  I     1
// EN_obuf2_23_portB_response_get  I     1
// EN_obuf2_24_portA_response_get  I     1
// EN_obuf2_24_portB_response_get  I     1
// EN_obuf2_25_portA_response_get  I     1
// EN_obuf2_25_portB_response_get  I     1
// EN_obuf2_26_portA_response_get  I     1
// EN_obuf2_26_portB_response_get  I     1
// EN_obuf2_27_portA_response_get  I     1
// EN_obuf2_27_portB_response_get  I     1
// EN_obuf2_28_portA_response_get  I     1
// EN_obuf2_28_portB_response_get  I     1
// EN_obuf2_29_portA_response_get  I     1
// EN_obuf2_29_portB_response_get  I     1
// EN_obuf2_30_portA_response_get  I     1
// EN_obuf2_30_portB_response_get  I     1
// EN_obuf2_31_portA_response_get  I     1
// EN_obuf2_31_portB_response_get  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkonchip_buffers(CLK,
			RST_N,

			ibuf_0_portA_request_put,
			EN_ibuf_0_portA_request_put,
			RDY_ibuf_0_portA_request_put,

			EN_ibuf_0_portA_response_get,
			ibuf_0_portA_response_get,
			RDY_ibuf_0_portA_response_get,

			ibuf_0_portB_request_put,
			EN_ibuf_0_portB_request_put,
			RDY_ibuf_0_portB_request_put,

			EN_ibuf_0_portB_response_get,
			ibuf_0_portB_response_get,
			RDY_ibuf_0_portB_response_get,

			EN_ibuf_0_portAClear,

			EN_ibuf_0_portBClear,

			ibuf_1_portA_request_put,
			EN_ibuf_1_portA_request_put,
			RDY_ibuf_1_portA_request_put,

			EN_ibuf_1_portA_response_get,
			ibuf_1_portA_response_get,
			RDY_ibuf_1_portA_response_get,

			ibuf_1_portB_request_put,
			EN_ibuf_1_portB_request_put,
			RDY_ibuf_1_portB_request_put,

			EN_ibuf_1_portB_response_get,
			ibuf_1_portB_response_get,
			RDY_ibuf_1_portB_response_get,

			EN_ibuf_1_portAClear,

			EN_ibuf_1_portBClear,

			ibuf_2_portA_request_put,
			EN_ibuf_2_portA_request_put,
			RDY_ibuf_2_portA_request_put,

			EN_ibuf_2_portA_response_get,
			ibuf_2_portA_response_get,
			RDY_ibuf_2_portA_response_get,

			ibuf_2_portB_request_put,
			EN_ibuf_2_portB_request_put,
			RDY_ibuf_2_portB_request_put,

			EN_ibuf_2_portB_response_get,
			ibuf_2_portB_response_get,
			RDY_ibuf_2_portB_response_get,

			EN_ibuf_2_portAClear,

			EN_ibuf_2_portBClear,

			ibuf_3_portA_request_put,
			EN_ibuf_3_portA_request_put,
			RDY_ibuf_3_portA_request_put,

			EN_ibuf_3_portA_response_get,
			ibuf_3_portA_response_get,
			RDY_ibuf_3_portA_response_get,

			ibuf_3_portB_request_put,
			EN_ibuf_3_portB_request_put,
			RDY_ibuf_3_portB_request_put,

			EN_ibuf_3_portB_response_get,
			ibuf_3_portB_response_get,
			RDY_ibuf_3_portB_response_get,

			EN_ibuf_3_portAClear,

			EN_ibuf_3_portBClear,

			ibuf_4_portA_request_put,
			EN_ibuf_4_portA_request_put,
			RDY_ibuf_4_portA_request_put,

			EN_ibuf_4_portA_response_get,
			ibuf_4_portA_response_get,
			RDY_ibuf_4_portA_response_get,

			ibuf_4_portB_request_put,
			EN_ibuf_4_portB_request_put,
			RDY_ibuf_4_portB_request_put,

			EN_ibuf_4_portB_response_get,
			ibuf_4_portB_response_get,
			RDY_ibuf_4_portB_response_get,

			EN_ibuf_4_portAClear,

			EN_ibuf_4_portBClear,

			ibuf_5_portA_request_put,
			EN_ibuf_5_portA_request_put,
			RDY_ibuf_5_portA_request_put,

			EN_ibuf_5_portA_response_get,
			ibuf_5_portA_response_get,
			RDY_ibuf_5_portA_response_get,

			ibuf_5_portB_request_put,
			EN_ibuf_5_portB_request_put,
			RDY_ibuf_5_portB_request_put,

			EN_ibuf_5_portB_response_get,
			ibuf_5_portB_response_get,
			RDY_ibuf_5_portB_response_get,

			EN_ibuf_5_portAClear,

			EN_ibuf_5_portBClear,

			ibuf_6_portA_request_put,
			EN_ibuf_6_portA_request_put,
			RDY_ibuf_6_portA_request_put,

			EN_ibuf_6_portA_response_get,
			ibuf_6_portA_response_get,
			RDY_ibuf_6_portA_response_get,

			ibuf_6_portB_request_put,
			EN_ibuf_6_portB_request_put,
			RDY_ibuf_6_portB_request_put,

			EN_ibuf_6_portB_response_get,
			ibuf_6_portB_response_get,
			RDY_ibuf_6_portB_response_get,

			EN_ibuf_6_portAClear,

			EN_ibuf_6_portBClear,

			ibuf_7_portA_request_put,
			EN_ibuf_7_portA_request_put,
			RDY_ibuf_7_portA_request_put,

			EN_ibuf_7_portA_response_get,
			ibuf_7_portA_response_get,
			RDY_ibuf_7_portA_response_get,

			ibuf_7_portB_request_put,
			EN_ibuf_7_portB_request_put,
			RDY_ibuf_7_portB_request_put,

			EN_ibuf_7_portB_response_get,
			ibuf_7_portB_response_get,
			RDY_ibuf_7_portB_response_get,

			EN_ibuf_7_portAClear,

			EN_ibuf_7_portBClear,

			ibuf_8_portA_request_put,
			EN_ibuf_8_portA_request_put,
			RDY_ibuf_8_portA_request_put,

			EN_ibuf_8_portA_response_get,
			ibuf_8_portA_response_get,
			RDY_ibuf_8_portA_response_get,

			ibuf_8_portB_request_put,
			EN_ibuf_8_portB_request_put,
			RDY_ibuf_8_portB_request_put,

			EN_ibuf_8_portB_response_get,
			ibuf_8_portB_response_get,
			RDY_ibuf_8_portB_response_get,

			EN_ibuf_8_portAClear,

			EN_ibuf_8_portBClear,

			ibuf_9_portA_request_put,
			EN_ibuf_9_portA_request_put,
			RDY_ibuf_9_portA_request_put,

			EN_ibuf_9_portA_response_get,
			ibuf_9_portA_response_get,
			RDY_ibuf_9_portA_response_get,

			ibuf_9_portB_request_put,
			EN_ibuf_9_portB_request_put,
			RDY_ibuf_9_portB_request_put,

			EN_ibuf_9_portB_response_get,
			ibuf_9_portB_response_get,
			RDY_ibuf_9_portB_response_get,

			EN_ibuf_9_portAClear,

			EN_ibuf_9_portBClear,

			ibuf_10_portA_request_put,
			EN_ibuf_10_portA_request_put,
			RDY_ibuf_10_portA_request_put,

			EN_ibuf_10_portA_response_get,
			ibuf_10_portA_response_get,
			RDY_ibuf_10_portA_response_get,

			ibuf_10_portB_request_put,
			EN_ibuf_10_portB_request_put,
			RDY_ibuf_10_portB_request_put,

			EN_ibuf_10_portB_response_get,
			ibuf_10_portB_response_get,
			RDY_ibuf_10_portB_response_get,

			EN_ibuf_10_portAClear,

			EN_ibuf_10_portBClear,

			ibuf_11_portA_request_put,
			EN_ibuf_11_portA_request_put,
			RDY_ibuf_11_portA_request_put,

			EN_ibuf_11_portA_response_get,
			ibuf_11_portA_response_get,
			RDY_ibuf_11_portA_response_get,

			ibuf_11_portB_request_put,
			EN_ibuf_11_portB_request_put,
			RDY_ibuf_11_portB_request_put,

			EN_ibuf_11_portB_response_get,
			ibuf_11_portB_response_get,
			RDY_ibuf_11_portB_response_get,

			EN_ibuf_11_portAClear,

			EN_ibuf_11_portBClear,

			ibuf_12_portA_request_put,
			EN_ibuf_12_portA_request_put,
			RDY_ibuf_12_portA_request_put,

			EN_ibuf_12_portA_response_get,
			ibuf_12_portA_response_get,
			RDY_ibuf_12_portA_response_get,

			ibuf_12_portB_request_put,
			EN_ibuf_12_portB_request_put,
			RDY_ibuf_12_portB_request_put,

			EN_ibuf_12_portB_response_get,
			ibuf_12_portB_response_get,
			RDY_ibuf_12_portB_response_get,

			EN_ibuf_12_portAClear,

			EN_ibuf_12_portBClear,

			ibuf_13_portA_request_put,
			EN_ibuf_13_portA_request_put,
			RDY_ibuf_13_portA_request_put,

			EN_ibuf_13_portA_response_get,
			ibuf_13_portA_response_get,
			RDY_ibuf_13_portA_response_get,

			ibuf_13_portB_request_put,
			EN_ibuf_13_portB_request_put,
			RDY_ibuf_13_portB_request_put,

			EN_ibuf_13_portB_response_get,
			ibuf_13_portB_response_get,
			RDY_ibuf_13_portB_response_get,

			EN_ibuf_13_portAClear,

			EN_ibuf_13_portBClear,

			ibuf_14_portA_request_put,
			EN_ibuf_14_portA_request_put,
			RDY_ibuf_14_portA_request_put,

			EN_ibuf_14_portA_response_get,
			ibuf_14_portA_response_get,
			RDY_ibuf_14_portA_response_get,

			ibuf_14_portB_request_put,
			EN_ibuf_14_portB_request_put,
			RDY_ibuf_14_portB_request_put,

			EN_ibuf_14_portB_response_get,
			ibuf_14_portB_response_get,
			RDY_ibuf_14_portB_response_get,

			EN_ibuf_14_portAClear,

			EN_ibuf_14_portBClear,

			ibuf_15_portA_request_put,
			EN_ibuf_15_portA_request_put,
			RDY_ibuf_15_portA_request_put,

			EN_ibuf_15_portA_response_get,
			ibuf_15_portA_response_get,
			RDY_ibuf_15_portA_response_get,

			ibuf_15_portB_request_put,
			EN_ibuf_15_portB_request_put,
			RDY_ibuf_15_portB_request_put,

			EN_ibuf_15_portB_response_get,
			ibuf_15_portB_response_get,
			RDY_ibuf_15_portB_response_get,

			EN_ibuf_15_portAClear,

			EN_ibuf_15_portBClear,

			ibuf_16_portA_request_put,
			EN_ibuf_16_portA_request_put,
			RDY_ibuf_16_portA_request_put,

			EN_ibuf_16_portA_response_get,
			ibuf_16_portA_response_get,
			RDY_ibuf_16_portA_response_get,

			ibuf_16_portB_request_put,
			EN_ibuf_16_portB_request_put,
			RDY_ibuf_16_portB_request_put,

			EN_ibuf_16_portB_response_get,
			ibuf_16_portB_response_get,
			RDY_ibuf_16_portB_response_get,

			EN_ibuf_16_portAClear,

			EN_ibuf_16_portBClear,

			ibuf_17_portA_request_put,
			EN_ibuf_17_portA_request_put,
			RDY_ibuf_17_portA_request_put,

			EN_ibuf_17_portA_response_get,
			ibuf_17_portA_response_get,
			RDY_ibuf_17_portA_response_get,

			ibuf_17_portB_request_put,
			EN_ibuf_17_portB_request_put,
			RDY_ibuf_17_portB_request_put,

			EN_ibuf_17_portB_response_get,
			ibuf_17_portB_response_get,
			RDY_ibuf_17_portB_response_get,

			EN_ibuf_17_portAClear,

			EN_ibuf_17_portBClear,

			ibuf_18_portA_request_put,
			EN_ibuf_18_portA_request_put,
			RDY_ibuf_18_portA_request_put,

			EN_ibuf_18_portA_response_get,
			ibuf_18_portA_response_get,
			RDY_ibuf_18_portA_response_get,

			ibuf_18_portB_request_put,
			EN_ibuf_18_portB_request_put,
			RDY_ibuf_18_portB_request_put,

			EN_ibuf_18_portB_response_get,
			ibuf_18_portB_response_get,
			RDY_ibuf_18_portB_response_get,

			EN_ibuf_18_portAClear,

			EN_ibuf_18_portBClear,

			ibuf_19_portA_request_put,
			EN_ibuf_19_portA_request_put,
			RDY_ibuf_19_portA_request_put,

			EN_ibuf_19_portA_response_get,
			ibuf_19_portA_response_get,
			RDY_ibuf_19_portA_response_get,

			ibuf_19_portB_request_put,
			EN_ibuf_19_portB_request_put,
			RDY_ibuf_19_portB_request_put,

			EN_ibuf_19_portB_response_get,
			ibuf_19_portB_response_get,
			RDY_ibuf_19_portB_response_get,

			EN_ibuf_19_portAClear,

			EN_ibuf_19_portBClear,

			ibuf_20_portA_request_put,
			EN_ibuf_20_portA_request_put,
			RDY_ibuf_20_portA_request_put,

			EN_ibuf_20_portA_response_get,
			ibuf_20_portA_response_get,
			RDY_ibuf_20_portA_response_get,

			ibuf_20_portB_request_put,
			EN_ibuf_20_portB_request_put,
			RDY_ibuf_20_portB_request_put,

			EN_ibuf_20_portB_response_get,
			ibuf_20_portB_response_get,
			RDY_ibuf_20_portB_response_get,

			EN_ibuf_20_portAClear,

			EN_ibuf_20_portBClear,

			ibuf_21_portA_request_put,
			EN_ibuf_21_portA_request_put,
			RDY_ibuf_21_portA_request_put,

			EN_ibuf_21_portA_response_get,
			ibuf_21_portA_response_get,
			RDY_ibuf_21_portA_response_get,

			ibuf_21_portB_request_put,
			EN_ibuf_21_portB_request_put,
			RDY_ibuf_21_portB_request_put,

			EN_ibuf_21_portB_response_get,
			ibuf_21_portB_response_get,
			RDY_ibuf_21_portB_response_get,

			EN_ibuf_21_portAClear,

			EN_ibuf_21_portBClear,

			ibuf_22_portA_request_put,
			EN_ibuf_22_portA_request_put,
			RDY_ibuf_22_portA_request_put,

			EN_ibuf_22_portA_response_get,
			ibuf_22_portA_response_get,
			RDY_ibuf_22_portA_response_get,

			ibuf_22_portB_request_put,
			EN_ibuf_22_portB_request_put,
			RDY_ibuf_22_portB_request_put,

			EN_ibuf_22_portB_response_get,
			ibuf_22_portB_response_get,
			RDY_ibuf_22_portB_response_get,

			EN_ibuf_22_portAClear,

			EN_ibuf_22_portBClear,

			ibuf_23_portA_request_put,
			EN_ibuf_23_portA_request_put,
			RDY_ibuf_23_portA_request_put,

			EN_ibuf_23_portA_response_get,
			ibuf_23_portA_response_get,
			RDY_ibuf_23_portA_response_get,

			ibuf_23_portB_request_put,
			EN_ibuf_23_portB_request_put,
			RDY_ibuf_23_portB_request_put,

			EN_ibuf_23_portB_response_get,
			ibuf_23_portB_response_get,
			RDY_ibuf_23_portB_response_get,

			EN_ibuf_23_portAClear,

			EN_ibuf_23_portBClear,

			ibuf_24_portA_request_put,
			EN_ibuf_24_portA_request_put,
			RDY_ibuf_24_portA_request_put,

			EN_ibuf_24_portA_response_get,
			ibuf_24_portA_response_get,
			RDY_ibuf_24_portA_response_get,

			ibuf_24_portB_request_put,
			EN_ibuf_24_portB_request_put,
			RDY_ibuf_24_portB_request_put,

			EN_ibuf_24_portB_response_get,
			ibuf_24_portB_response_get,
			RDY_ibuf_24_portB_response_get,

			EN_ibuf_24_portAClear,

			EN_ibuf_24_portBClear,

			ibuf_25_portA_request_put,
			EN_ibuf_25_portA_request_put,
			RDY_ibuf_25_portA_request_put,

			EN_ibuf_25_portA_response_get,
			ibuf_25_portA_response_get,
			RDY_ibuf_25_portA_response_get,

			ibuf_25_portB_request_put,
			EN_ibuf_25_portB_request_put,
			RDY_ibuf_25_portB_request_put,

			EN_ibuf_25_portB_response_get,
			ibuf_25_portB_response_get,
			RDY_ibuf_25_portB_response_get,

			EN_ibuf_25_portAClear,

			EN_ibuf_25_portBClear,

			ibuf_26_portA_request_put,
			EN_ibuf_26_portA_request_put,
			RDY_ibuf_26_portA_request_put,

			EN_ibuf_26_portA_response_get,
			ibuf_26_portA_response_get,
			RDY_ibuf_26_portA_response_get,

			ibuf_26_portB_request_put,
			EN_ibuf_26_portB_request_put,
			RDY_ibuf_26_portB_request_put,

			EN_ibuf_26_portB_response_get,
			ibuf_26_portB_response_get,
			RDY_ibuf_26_portB_response_get,

			EN_ibuf_26_portAClear,

			EN_ibuf_26_portBClear,

			ibuf_27_portA_request_put,
			EN_ibuf_27_portA_request_put,
			RDY_ibuf_27_portA_request_put,

			EN_ibuf_27_portA_response_get,
			ibuf_27_portA_response_get,
			RDY_ibuf_27_portA_response_get,

			ibuf_27_portB_request_put,
			EN_ibuf_27_portB_request_put,
			RDY_ibuf_27_portB_request_put,

			EN_ibuf_27_portB_response_get,
			ibuf_27_portB_response_get,
			RDY_ibuf_27_portB_response_get,

			EN_ibuf_27_portAClear,

			EN_ibuf_27_portBClear,

			ibuf_28_portA_request_put,
			EN_ibuf_28_portA_request_put,
			RDY_ibuf_28_portA_request_put,

			EN_ibuf_28_portA_response_get,
			ibuf_28_portA_response_get,
			RDY_ibuf_28_portA_response_get,

			ibuf_28_portB_request_put,
			EN_ibuf_28_portB_request_put,
			RDY_ibuf_28_portB_request_put,

			EN_ibuf_28_portB_response_get,
			ibuf_28_portB_response_get,
			RDY_ibuf_28_portB_response_get,

			EN_ibuf_28_portAClear,

			EN_ibuf_28_portBClear,

			ibuf_29_portA_request_put,
			EN_ibuf_29_portA_request_put,
			RDY_ibuf_29_portA_request_put,

			EN_ibuf_29_portA_response_get,
			ibuf_29_portA_response_get,
			RDY_ibuf_29_portA_response_get,

			ibuf_29_portB_request_put,
			EN_ibuf_29_portB_request_put,
			RDY_ibuf_29_portB_request_put,

			EN_ibuf_29_portB_response_get,
			ibuf_29_portB_response_get,
			RDY_ibuf_29_portB_response_get,

			EN_ibuf_29_portAClear,

			EN_ibuf_29_portBClear,

			ibuf_30_portA_request_put,
			EN_ibuf_30_portA_request_put,
			RDY_ibuf_30_portA_request_put,

			EN_ibuf_30_portA_response_get,
			ibuf_30_portA_response_get,
			RDY_ibuf_30_portA_response_get,

			ibuf_30_portB_request_put,
			EN_ibuf_30_portB_request_put,
			RDY_ibuf_30_portB_request_put,

			EN_ibuf_30_portB_response_get,
			ibuf_30_portB_response_get,
			RDY_ibuf_30_portB_response_get,

			EN_ibuf_30_portAClear,

			EN_ibuf_30_portBClear,

			ibuf_31_portA_request_put,
			EN_ibuf_31_portA_request_put,
			RDY_ibuf_31_portA_request_put,

			EN_ibuf_31_portA_response_get,
			ibuf_31_portA_response_get,
			RDY_ibuf_31_portA_response_get,

			ibuf_31_portB_request_put,
			EN_ibuf_31_portB_request_put,
			RDY_ibuf_31_portB_request_put,

			EN_ibuf_31_portB_response_get,
			ibuf_31_portB_response_get,
			RDY_ibuf_31_portB_response_get,

			EN_ibuf_31_portAClear,

			EN_ibuf_31_portBClear,

			wbuf_0_portA_request_put,
			EN_wbuf_0_portA_request_put,
			RDY_wbuf_0_portA_request_put,

			EN_wbuf_0_portA_response_get,
			wbuf_0_portA_response_get,
			RDY_wbuf_0_portA_response_get,

			wbuf_0_portB_request_put,
			EN_wbuf_0_portB_request_put,
			RDY_wbuf_0_portB_request_put,

			EN_wbuf_0_portB_response_get,
			wbuf_0_portB_response_get,
			RDY_wbuf_0_portB_response_get,

			EN_wbuf_0_portAClear,

			EN_wbuf_0_portBClear,

			wbuf_1_portA_request_put,
			EN_wbuf_1_portA_request_put,
			RDY_wbuf_1_portA_request_put,

			EN_wbuf_1_portA_response_get,
			wbuf_1_portA_response_get,
			RDY_wbuf_1_portA_response_get,

			wbuf_1_portB_request_put,
			EN_wbuf_1_portB_request_put,
			RDY_wbuf_1_portB_request_put,

			EN_wbuf_1_portB_response_get,
			wbuf_1_portB_response_get,
			RDY_wbuf_1_portB_response_get,

			EN_wbuf_1_portAClear,

			EN_wbuf_1_portBClear,

			wbuf_2_portA_request_put,
			EN_wbuf_2_portA_request_put,
			RDY_wbuf_2_portA_request_put,

			EN_wbuf_2_portA_response_get,
			wbuf_2_portA_response_get,
			RDY_wbuf_2_portA_response_get,

			wbuf_2_portB_request_put,
			EN_wbuf_2_portB_request_put,
			RDY_wbuf_2_portB_request_put,

			EN_wbuf_2_portB_response_get,
			wbuf_2_portB_response_get,
			RDY_wbuf_2_portB_response_get,

			EN_wbuf_2_portAClear,

			EN_wbuf_2_portBClear,

			wbuf_3_portA_request_put,
			EN_wbuf_3_portA_request_put,
			RDY_wbuf_3_portA_request_put,

			EN_wbuf_3_portA_response_get,
			wbuf_3_portA_response_get,
			RDY_wbuf_3_portA_response_get,

			wbuf_3_portB_request_put,
			EN_wbuf_3_portB_request_put,
			RDY_wbuf_3_portB_request_put,

			EN_wbuf_3_portB_response_get,
			wbuf_3_portB_response_get,
			RDY_wbuf_3_portB_response_get,

			EN_wbuf_3_portAClear,

			EN_wbuf_3_portBClear,

			wbuf_4_portA_request_put,
			EN_wbuf_4_portA_request_put,
			RDY_wbuf_4_portA_request_put,

			EN_wbuf_4_portA_response_get,
			wbuf_4_portA_response_get,
			RDY_wbuf_4_portA_response_get,

			wbuf_4_portB_request_put,
			EN_wbuf_4_portB_request_put,
			RDY_wbuf_4_portB_request_put,

			EN_wbuf_4_portB_response_get,
			wbuf_4_portB_response_get,
			RDY_wbuf_4_portB_response_get,

			EN_wbuf_4_portAClear,

			EN_wbuf_4_portBClear,

			wbuf_5_portA_request_put,
			EN_wbuf_5_portA_request_put,
			RDY_wbuf_5_portA_request_put,

			EN_wbuf_5_portA_response_get,
			wbuf_5_portA_response_get,
			RDY_wbuf_5_portA_response_get,

			wbuf_5_portB_request_put,
			EN_wbuf_5_portB_request_put,
			RDY_wbuf_5_portB_request_put,

			EN_wbuf_5_portB_response_get,
			wbuf_5_portB_response_get,
			RDY_wbuf_5_portB_response_get,

			EN_wbuf_5_portAClear,

			EN_wbuf_5_portBClear,

			wbuf_6_portA_request_put,
			EN_wbuf_6_portA_request_put,
			RDY_wbuf_6_portA_request_put,

			EN_wbuf_6_portA_response_get,
			wbuf_6_portA_response_get,
			RDY_wbuf_6_portA_response_get,

			wbuf_6_portB_request_put,
			EN_wbuf_6_portB_request_put,
			RDY_wbuf_6_portB_request_put,

			EN_wbuf_6_portB_response_get,
			wbuf_6_portB_response_get,
			RDY_wbuf_6_portB_response_get,

			EN_wbuf_6_portAClear,

			EN_wbuf_6_portBClear,

			wbuf_7_portA_request_put,
			EN_wbuf_7_portA_request_put,
			RDY_wbuf_7_portA_request_put,

			EN_wbuf_7_portA_response_get,
			wbuf_7_portA_response_get,
			RDY_wbuf_7_portA_response_get,

			wbuf_7_portB_request_put,
			EN_wbuf_7_portB_request_put,
			RDY_wbuf_7_portB_request_put,

			EN_wbuf_7_portB_response_get,
			wbuf_7_portB_response_get,
			RDY_wbuf_7_portB_response_get,

			EN_wbuf_7_portAClear,

			EN_wbuf_7_portBClear,

			wbuf_8_portA_request_put,
			EN_wbuf_8_portA_request_put,
			RDY_wbuf_8_portA_request_put,

			EN_wbuf_8_portA_response_get,
			wbuf_8_portA_response_get,
			RDY_wbuf_8_portA_response_get,

			wbuf_8_portB_request_put,
			EN_wbuf_8_portB_request_put,
			RDY_wbuf_8_portB_request_put,

			EN_wbuf_8_portB_response_get,
			wbuf_8_portB_response_get,
			RDY_wbuf_8_portB_response_get,

			EN_wbuf_8_portAClear,

			EN_wbuf_8_portBClear,

			wbuf_9_portA_request_put,
			EN_wbuf_9_portA_request_put,
			RDY_wbuf_9_portA_request_put,

			EN_wbuf_9_portA_response_get,
			wbuf_9_portA_response_get,
			RDY_wbuf_9_portA_response_get,

			wbuf_9_portB_request_put,
			EN_wbuf_9_portB_request_put,
			RDY_wbuf_9_portB_request_put,

			EN_wbuf_9_portB_response_get,
			wbuf_9_portB_response_get,
			RDY_wbuf_9_portB_response_get,

			EN_wbuf_9_portAClear,

			EN_wbuf_9_portBClear,

			wbuf_10_portA_request_put,
			EN_wbuf_10_portA_request_put,
			RDY_wbuf_10_portA_request_put,

			EN_wbuf_10_portA_response_get,
			wbuf_10_portA_response_get,
			RDY_wbuf_10_portA_response_get,

			wbuf_10_portB_request_put,
			EN_wbuf_10_portB_request_put,
			RDY_wbuf_10_portB_request_put,

			EN_wbuf_10_portB_response_get,
			wbuf_10_portB_response_get,
			RDY_wbuf_10_portB_response_get,

			EN_wbuf_10_portAClear,

			EN_wbuf_10_portBClear,

			wbuf_11_portA_request_put,
			EN_wbuf_11_portA_request_put,
			RDY_wbuf_11_portA_request_put,

			EN_wbuf_11_portA_response_get,
			wbuf_11_portA_response_get,
			RDY_wbuf_11_portA_response_get,

			wbuf_11_portB_request_put,
			EN_wbuf_11_portB_request_put,
			RDY_wbuf_11_portB_request_put,

			EN_wbuf_11_portB_response_get,
			wbuf_11_portB_response_get,
			RDY_wbuf_11_portB_response_get,

			EN_wbuf_11_portAClear,

			EN_wbuf_11_portBClear,

			wbuf_12_portA_request_put,
			EN_wbuf_12_portA_request_put,
			RDY_wbuf_12_portA_request_put,

			EN_wbuf_12_portA_response_get,
			wbuf_12_portA_response_get,
			RDY_wbuf_12_portA_response_get,

			wbuf_12_portB_request_put,
			EN_wbuf_12_portB_request_put,
			RDY_wbuf_12_portB_request_put,

			EN_wbuf_12_portB_response_get,
			wbuf_12_portB_response_get,
			RDY_wbuf_12_portB_response_get,

			EN_wbuf_12_portAClear,

			EN_wbuf_12_portBClear,

			wbuf_13_portA_request_put,
			EN_wbuf_13_portA_request_put,
			RDY_wbuf_13_portA_request_put,

			EN_wbuf_13_portA_response_get,
			wbuf_13_portA_response_get,
			RDY_wbuf_13_portA_response_get,

			wbuf_13_portB_request_put,
			EN_wbuf_13_portB_request_put,
			RDY_wbuf_13_portB_request_put,

			EN_wbuf_13_portB_response_get,
			wbuf_13_portB_response_get,
			RDY_wbuf_13_portB_response_get,

			EN_wbuf_13_portAClear,

			EN_wbuf_13_portBClear,

			wbuf_14_portA_request_put,
			EN_wbuf_14_portA_request_put,
			RDY_wbuf_14_portA_request_put,

			EN_wbuf_14_portA_response_get,
			wbuf_14_portA_response_get,
			RDY_wbuf_14_portA_response_get,

			wbuf_14_portB_request_put,
			EN_wbuf_14_portB_request_put,
			RDY_wbuf_14_portB_request_put,

			EN_wbuf_14_portB_response_get,
			wbuf_14_portB_response_get,
			RDY_wbuf_14_portB_response_get,

			EN_wbuf_14_portAClear,

			EN_wbuf_14_portBClear,

			wbuf_15_portA_request_put,
			EN_wbuf_15_portA_request_put,
			RDY_wbuf_15_portA_request_put,

			EN_wbuf_15_portA_response_get,
			wbuf_15_portA_response_get,
			RDY_wbuf_15_portA_response_get,

			wbuf_15_portB_request_put,
			EN_wbuf_15_portB_request_put,
			RDY_wbuf_15_portB_request_put,

			EN_wbuf_15_portB_response_get,
			wbuf_15_portB_response_get,
			RDY_wbuf_15_portB_response_get,

			EN_wbuf_15_portAClear,

			EN_wbuf_15_portBClear,

			wbuf_16_portA_request_put,
			EN_wbuf_16_portA_request_put,
			RDY_wbuf_16_portA_request_put,

			EN_wbuf_16_portA_response_get,
			wbuf_16_portA_response_get,
			RDY_wbuf_16_portA_response_get,

			wbuf_16_portB_request_put,
			EN_wbuf_16_portB_request_put,
			RDY_wbuf_16_portB_request_put,

			EN_wbuf_16_portB_response_get,
			wbuf_16_portB_response_get,
			RDY_wbuf_16_portB_response_get,

			EN_wbuf_16_portAClear,

			EN_wbuf_16_portBClear,

			wbuf_17_portA_request_put,
			EN_wbuf_17_portA_request_put,
			RDY_wbuf_17_portA_request_put,

			EN_wbuf_17_portA_response_get,
			wbuf_17_portA_response_get,
			RDY_wbuf_17_portA_response_get,

			wbuf_17_portB_request_put,
			EN_wbuf_17_portB_request_put,
			RDY_wbuf_17_portB_request_put,

			EN_wbuf_17_portB_response_get,
			wbuf_17_portB_response_get,
			RDY_wbuf_17_portB_response_get,

			EN_wbuf_17_portAClear,

			EN_wbuf_17_portBClear,

			wbuf_18_portA_request_put,
			EN_wbuf_18_portA_request_put,
			RDY_wbuf_18_portA_request_put,

			EN_wbuf_18_portA_response_get,
			wbuf_18_portA_response_get,
			RDY_wbuf_18_portA_response_get,

			wbuf_18_portB_request_put,
			EN_wbuf_18_portB_request_put,
			RDY_wbuf_18_portB_request_put,

			EN_wbuf_18_portB_response_get,
			wbuf_18_portB_response_get,
			RDY_wbuf_18_portB_response_get,

			EN_wbuf_18_portAClear,

			EN_wbuf_18_portBClear,

			wbuf_19_portA_request_put,
			EN_wbuf_19_portA_request_put,
			RDY_wbuf_19_portA_request_put,

			EN_wbuf_19_portA_response_get,
			wbuf_19_portA_response_get,
			RDY_wbuf_19_portA_response_get,

			wbuf_19_portB_request_put,
			EN_wbuf_19_portB_request_put,
			RDY_wbuf_19_portB_request_put,

			EN_wbuf_19_portB_response_get,
			wbuf_19_portB_response_get,
			RDY_wbuf_19_portB_response_get,

			EN_wbuf_19_portAClear,

			EN_wbuf_19_portBClear,

			wbuf_20_portA_request_put,
			EN_wbuf_20_portA_request_put,
			RDY_wbuf_20_portA_request_put,

			EN_wbuf_20_portA_response_get,
			wbuf_20_portA_response_get,
			RDY_wbuf_20_portA_response_get,

			wbuf_20_portB_request_put,
			EN_wbuf_20_portB_request_put,
			RDY_wbuf_20_portB_request_put,

			EN_wbuf_20_portB_response_get,
			wbuf_20_portB_response_get,
			RDY_wbuf_20_portB_response_get,

			EN_wbuf_20_portAClear,

			EN_wbuf_20_portBClear,

			wbuf_21_portA_request_put,
			EN_wbuf_21_portA_request_put,
			RDY_wbuf_21_portA_request_put,

			EN_wbuf_21_portA_response_get,
			wbuf_21_portA_response_get,
			RDY_wbuf_21_portA_response_get,

			wbuf_21_portB_request_put,
			EN_wbuf_21_portB_request_put,
			RDY_wbuf_21_portB_request_put,

			EN_wbuf_21_portB_response_get,
			wbuf_21_portB_response_get,
			RDY_wbuf_21_portB_response_get,

			EN_wbuf_21_portAClear,

			EN_wbuf_21_portBClear,

			wbuf_22_portA_request_put,
			EN_wbuf_22_portA_request_put,
			RDY_wbuf_22_portA_request_put,

			EN_wbuf_22_portA_response_get,
			wbuf_22_portA_response_get,
			RDY_wbuf_22_portA_response_get,

			wbuf_22_portB_request_put,
			EN_wbuf_22_portB_request_put,
			RDY_wbuf_22_portB_request_put,

			EN_wbuf_22_portB_response_get,
			wbuf_22_portB_response_get,
			RDY_wbuf_22_portB_response_get,

			EN_wbuf_22_portAClear,

			EN_wbuf_22_portBClear,

			wbuf_23_portA_request_put,
			EN_wbuf_23_portA_request_put,
			RDY_wbuf_23_portA_request_put,

			EN_wbuf_23_portA_response_get,
			wbuf_23_portA_response_get,
			RDY_wbuf_23_portA_response_get,

			wbuf_23_portB_request_put,
			EN_wbuf_23_portB_request_put,
			RDY_wbuf_23_portB_request_put,

			EN_wbuf_23_portB_response_get,
			wbuf_23_portB_response_get,
			RDY_wbuf_23_portB_response_get,

			EN_wbuf_23_portAClear,

			EN_wbuf_23_portBClear,

			wbuf_24_portA_request_put,
			EN_wbuf_24_portA_request_put,
			RDY_wbuf_24_portA_request_put,

			EN_wbuf_24_portA_response_get,
			wbuf_24_portA_response_get,
			RDY_wbuf_24_portA_response_get,

			wbuf_24_portB_request_put,
			EN_wbuf_24_portB_request_put,
			RDY_wbuf_24_portB_request_put,

			EN_wbuf_24_portB_response_get,
			wbuf_24_portB_response_get,
			RDY_wbuf_24_portB_response_get,

			EN_wbuf_24_portAClear,

			EN_wbuf_24_portBClear,

			wbuf_25_portA_request_put,
			EN_wbuf_25_portA_request_put,
			RDY_wbuf_25_portA_request_put,

			EN_wbuf_25_portA_response_get,
			wbuf_25_portA_response_get,
			RDY_wbuf_25_portA_response_get,

			wbuf_25_portB_request_put,
			EN_wbuf_25_portB_request_put,
			RDY_wbuf_25_portB_request_put,

			EN_wbuf_25_portB_response_get,
			wbuf_25_portB_response_get,
			RDY_wbuf_25_portB_response_get,

			EN_wbuf_25_portAClear,

			EN_wbuf_25_portBClear,

			wbuf_26_portA_request_put,
			EN_wbuf_26_portA_request_put,
			RDY_wbuf_26_portA_request_put,

			EN_wbuf_26_portA_response_get,
			wbuf_26_portA_response_get,
			RDY_wbuf_26_portA_response_get,

			wbuf_26_portB_request_put,
			EN_wbuf_26_portB_request_put,
			RDY_wbuf_26_portB_request_put,

			EN_wbuf_26_portB_response_get,
			wbuf_26_portB_response_get,
			RDY_wbuf_26_portB_response_get,

			EN_wbuf_26_portAClear,

			EN_wbuf_26_portBClear,

			wbuf_27_portA_request_put,
			EN_wbuf_27_portA_request_put,
			RDY_wbuf_27_portA_request_put,

			EN_wbuf_27_portA_response_get,
			wbuf_27_portA_response_get,
			RDY_wbuf_27_portA_response_get,

			wbuf_27_portB_request_put,
			EN_wbuf_27_portB_request_put,
			RDY_wbuf_27_portB_request_put,

			EN_wbuf_27_portB_response_get,
			wbuf_27_portB_response_get,
			RDY_wbuf_27_portB_response_get,

			EN_wbuf_27_portAClear,

			EN_wbuf_27_portBClear,

			wbuf_28_portA_request_put,
			EN_wbuf_28_portA_request_put,
			RDY_wbuf_28_portA_request_put,

			EN_wbuf_28_portA_response_get,
			wbuf_28_portA_response_get,
			RDY_wbuf_28_portA_response_get,

			wbuf_28_portB_request_put,
			EN_wbuf_28_portB_request_put,
			RDY_wbuf_28_portB_request_put,

			EN_wbuf_28_portB_response_get,
			wbuf_28_portB_response_get,
			RDY_wbuf_28_portB_response_get,

			EN_wbuf_28_portAClear,

			EN_wbuf_28_portBClear,

			wbuf_29_portA_request_put,
			EN_wbuf_29_portA_request_put,
			RDY_wbuf_29_portA_request_put,

			EN_wbuf_29_portA_response_get,
			wbuf_29_portA_response_get,
			RDY_wbuf_29_portA_response_get,

			wbuf_29_portB_request_put,
			EN_wbuf_29_portB_request_put,
			RDY_wbuf_29_portB_request_put,

			EN_wbuf_29_portB_response_get,
			wbuf_29_portB_response_get,
			RDY_wbuf_29_portB_response_get,

			EN_wbuf_29_portAClear,

			EN_wbuf_29_portBClear,

			wbuf_30_portA_request_put,
			EN_wbuf_30_portA_request_put,
			RDY_wbuf_30_portA_request_put,

			EN_wbuf_30_portA_response_get,
			wbuf_30_portA_response_get,
			RDY_wbuf_30_portA_response_get,

			wbuf_30_portB_request_put,
			EN_wbuf_30_portB_request_put,
			RDY_wbuf_30_portB_request_put,

			EN_wbuf_30_portB_response_get,
			wbuf_30_portB_response_get,
			RDY_wbuf_30_portB_response_get,

			EN_wbuf_30_portAClear,

			EN_wbuf_30_portBClear,

			wbuf_31_portA_request_put,
			EN_wbuf_31_portA_request_put,
			RDY_wbuf_31_portA_request_put,

			EN_wbuf_31_portA_response_get,
			wbuf_31_portA_response_get,
			RDY_wbuf_31_portA_response_get,

			wbuf_31_portB_request_put,
			EN_wbuf_31_portB_request_put,
			RDY_wbuf_31_portB_request_put,

			EN_wbuf_31_portB_response_get,
			wbuf_31_portB_response_get,
			RDY_wbuf_31_portB_response_get,

			EN_wbuf_31_portAClear,

			EN_wbuf_31_portBClear,

			obuf1_0_portA_request_put,
			EN_obuf1_0_portA_request_put,
			RDY_obuf1_0_portA_request_put,

			EN_obuf1_0_portA_response_get,
			obuf1_0_portA_response_get,
			RDY_obuf1_0_portA_response_get,

			obuf1_0_portB_request_put,
			EN_obuf1_0_portB_request_put,
			RDY_obuf1_0_portB_request_put,

			EN_obuf1_0_portB_response_get,
			obuf1_0_portB_response_get,
			RDY_obuf1_0_portB_response_get,

			EN_obuf1_0_portAClear,

			EN_obuf1_0_portBClear,

			obuf1_1_portA_request_put,
			EN_obuf1_1_portA_request_put,
			RDY_obuf1_1_portA_request_put,

			EN_obuf1_1_portA_response_get,
			obuf1_1_portA_response_get,
			RDY_obuf1_1_portA_response_get,

			obuf1_1_portB_request_put,
			EN_obuf1_1_portB_request_put,
			RDY_obuf1_1_portB_request_put,

			EN_obuf1_1_portB_response_get,
			obuf1_1_portB_response_get,
			RDY_obuf1_1_portB_response_get,

			EN_obuf1_1_portAClear,

			EN_obuf1_1_portBClear,

			obuf1_2_portA_request_put,
			EN_obuf1_2_portA_request_put,
			RDY_obuf1_2_portA_request_put,

			EN_obuf1_2_portA_response_get,
			obuf1_2_portA_response_get,
			RDY_obuf1_2_portA_response_get,

			obuf1_2_portB_request_put,
			EN_obuf1_2_portB_request_put,
			RDY_obuf1_2_portB_request_put,

			EN_obuf1_2_portB_response_get,
			obuf1_2_portB_response_get,
			RDY_obuf1_2_portB_response_get,

			EN_obuf1_2_portAClear,

			EN_obuf1_2_portBClear,

			obuf1_3_portA_request_put,
			EN_obuf1_3_portA_request_put,
			RDY_obuf1_3_portA_request_put,

			EN_obuf1_3_portA_response_get,
			obuf1_3_portA_response_get,
			RDY_obuf1_3_portA_response_get,

			obuf1_3_portB_request_put,
			EN_obuf1_3_portB_request_put,
			RDY_obuf1_3_portB_request_put,

			EN_obuf1_3_portB_response_get,
			obuf1_3_portB_response_get,
			RDY_obuf1_3_portB_response_get,

			EN_obuf1_3_portAClear,

			EN_obuf1_3_portBClear,

			obuf1_4_portA_request_put,
			EN_obuf1_4_portA_request_put,
			RDY_obuf1_4_portA_request_put,

			EN_obuf1_4_portA_response_get,
			obuf1_4_portA_response_get,
			RDY_obuf1_4_portA_response_get,

			obuf1_4_portB_request_put,
			EN_obuf1_4_portB_request_put,
			RDY_obuf1_4_portB_request_put,

			EN_obuf1_4_portB_response_get,
			obuf1_4_portB_response_get,
			RDY_obuf1_4_portB_response_get,

			EN_obuf1_4_portAClear,

			EN_obuf1_4_portBClear,

			obuf1_5_portA_request_put,
			EN_obuf1_5_portA_request_put,
			RDY_obuf1_5_portA_request_put,

			EN_obuf1_5_portA_response_get,
			obuf1_5_portA_response_get,
			RDY_obuf1_5_portA_response_get,

			obuf1_5_portB_request_put,
			EN_obuf1_5_portB_request_put,
			RDY_obuf1_5_portB_request_put,

			EN_obuf1_5_portB_response_get,
			obuf1_5_portB_response_get,
			RDY_obuf1_5_portB_response_get,

			EN_obuf1_5_portAClear,

			EN_obuf1_5_portBClear,

			obuf1_6_portA_request_put,
			EN_obuf1_6_portA_request_put,
			RDY_obuf1_6_portA_request_put,

			EN_obuf1_6_portA_response_get,
			obuf1_6_portA_response_get,
			RDY_obuf1_6_portA_response_get,

			obuf1_6_portB_request_put,
			EN_obuf1_6_portB_request_put,
			RDY_obuf1_6_portB_request_put,

			EN_obuf1_6_portB_response_get,
			obuf1_6_portB_response_get,
			RDY_obuf1_6_portB_response_get,

			EN_obuf1_6_portAClear,

			EN_obuf1_6_portBClear,

			obuf1_7_portA_request_put,
			EN_obuf1_7_portA_request_put,
			RDY_obuf1_7_portA_request_put,

			EN_obuf1_7_portA_response_get,
			obuf1_7_portA_response_get,
			RDY_obuf1_7_portA_response_get,

			obuf1_7_portB_request_put,
			EN_obuf1_7_portB_request_put,
			RDY_obuf1_7_portB_request_put,

			EN_obuf1_7_portB_response_get,
			obuf1_7_portB_response_get,
			RDY_obuf1_7_portB_response_get,

			EN_obuf1_7_portAClear,

			EN_obuf1_7_portBClear,

			obuf1_8_portA_request_put,
			EN_obuf1_8_portA_request_put,
			RDY_obuf1_8_portA_request_put,

			EN_obuf1_8_portA_response_get,
			obuf1_8_portA_response_get,
			RDY_obuf1_8_portA_response_get,

			obuf1_8_portB_request_put,
			EN_obuf1_8_portB_request_put,
			RDY_obuf1_8_portB_request_put,

			EN_obuf1_8_portB_response_get,
			obuf1_8_portB_response_get,
			RDY_obuf1_8_portB_response_get,

			EN_obuf1_8_portAClear,

			EN_obuf1_8_portBClear,

			obuf1_9_portA_request_put,
			EN_obuf1_9_portA_request_put,
			RDY_obuf1_9_portA_request_put,

			EN_obuf1_9_portA_response_get,
			obuf1_9_portA_response_get,
			RDY_obuf1_9_portA_response_get,

			obuf1_9_portB_request_put,
			EN_obuf1_9_portB_request_put,
			RDY_obuf1_9_portB_request_put,

			EN_obuf1_9_portB_response_get,
			obuf1_9_portB_response_get,
			RDY_obuf1_9_portB_response_get,

			EN_obuf1_9_portAClear,

			EN_obuf1_9_portBClear,

			obuf1_10_portA_request_put,
			EN_obuf1_10_portA_request_put,
			RDY_obuf1_10_portA_request_put,

			EN_obuf1_10_portA_response_get,
			obuf1_10_portA_response_get,
			RDY_obuf1_10_portA_response_get,

			obuf1_10_portB_request_put,
			EN_obuf1_10_portB_request_put,
			RDY_obuf1_10_portB_request_put,

			EN_obuf1_10_portB_response_get,
			obuf1_10_portB_response_get,
			RDY_obuf1_10_portB_response_get,

			EN_obuf1_10_portAClear,

			EN_obuf1_10_portBClear,

			obuf1_11_portA_request_put,
			EN_obuf1_11_portA_request_put,
			RDY_obuf1_11_portA_request_put,

			EN_obuf1_11_portA_response_get,
			obuf1_11_portA_response_get,
			RDY_obuf1_11_portA_response_get,

			obuf1_11_portB_request_put,
			EN_obuf1_11_portB_request_put,
			RDY_obuf1_11_portB_request_put,

			EN_obuf1_11_portB_response_get,
			obuf1_11_portB_response_get,
			RDY_obuf1_11_portB_response_get,

			EN_obuf1_11_portAClear,

			EN_obuf1_11_portBClear,

			obuf1_12_portA_request_put,
			EN_obuf1_12_portA_request_put,
			RDY_obuf1_12_portA_request_put,

			EN_obuf1_12_portA_response_get,
			obuf1_12_portA_response_get,
			RDY_obuf1_12_portA_response_get,

			obuf1_12_portB_request_put,
			EN_obuf1_12_portB_request_put,
			RDY_obuf1_12_portB_request_put,

			EN_obuf1_12_portB_response_get,
			obuf1_12_portB_response_get,
			RDY_obuf1_12_portB_response_get,

			EN_obuf1_12_portAClear,

			EN_obuf1_12_portBClear,

			obuf1_13_portA_request_put,
			EN_obuf1_13_portA_request_put,
			RDY_obuf1_13_portA_request_put,

			EN_obuf1_13_portA_response_get,
			obuf1_13_portA_response_get,
			RDY_obuf1_13_portA_response_get,

			obuf1_13_portB_request_put,
			EN_obuf1_13_portB_request_put,
			RDY_obuf1_13_portB_request_put,

			EN_obuf1_13_portB_response_get,
			obuf1_13_portB_response_get,
			RDY_obuf1_13_portB_response_get,

			EN_obuf1_13_portAClear,

			EN_obuf1_13_portBClear,

			obuf1_14_portA_request_put,
			EN_obuf1_14_portA_request_put,
			RDY_obuf1_14_portA_request_put,

			EN_obuf1_14_portA_response_get,
			obuf1_14_portA_response_get,
			RDY_obuf1_14_portA_response_get,

			obuf1_14_portB_request_put,
			EN_obuf1_14_portB_request_put,
			RDY_obuf1_14_portB_request_put,

			EN_obuf1_14_portB_response_get,
			obuf1_14_portB_response_get,
			RDY_obuf1_14_portB_response_get,

			EN_obuf1_14_portAClear,

			EN_obuf1_14_portBClear,

			obuf1_15_portA_request_put,
			EN_obuf1_15_portA_request_put,
			RDY_obuf1_15_portA_request_put,

			EN_obuf1_15_portA_response_get,
			obuf1_15_portA_response_get,
			RDY_obuf1_15_portA_response_get,

			obuf1_15_portB_request_put,
			EN_obuf1_15_portB_request_put,
			RDY_obuf1_15_portB_request_put,

			EN_obuf1_15_portB_response_get,
			obuf1_15_portB_response_get,
			RDY_obuf1_15_portB_response_get,

			EN_obuf1_15_portAClear,

			EN_obuf1_15_portBClear,

			obuf1_16_portA_request_put,
			EN_obuf1_16_portA_request_put,
			RDY_obuf1_16_portA_request_put,

			EN_obuf1_16_portA_response_get,
			obuf1_16_portA_response_get,
			RDY_obuf1_16_portA_response_get,

			obuf1_16_portB_request_put,
			EN_obuf1_16_portB_request_put,
			RDY_obuf1_16_portB_request_put,

			EN_obuf1_16_portB_response_get,
			obuf1_16_portB_response_get,
			RDY_obuf1_16_portB_response_get,

			EN_obuf1_16_portAClear,

			EN_obuf1_16_portBClear,

			obuf1_17_portA_request_put,
			EN_obuf1_17_portA_request_put,
			RDY_obuf1_17_portA_request_put,

			EN_obuf1_17_portA_response_get,
			obuf1_17_portA_response_get,
			RDY_obuf1_17_portA_response_get,

			obuf1_17_portB_request_put,
			EN_obuf1_17_portB_request_put,
			RDY_obuf1_17_portB_request_put,

			EN_obuf1_17_portB_response_get,
			obuf1_17_portB_response_get,
			RDY_obuf1_17_portB_response_get,

			EN_obuf1_17_portAClear,

			EN_obuf1_17_portBClear,

			obuf1_18_portA_request_put,
			EN_obuf1_18_portA_request_put,
			RDY_obuf1_18_portA_request_put,

			EN_obuf1_18_portA_response_get,
			obuf1_18_portA_response_get,
			RDY_obuf1_18_portA_response_get,

			obuf1_18_portB_request_put,
			EN_obuf1_18_portB_request_put,
			RDY_obuf1_18_portB_request_put,

			EN_obuf1_18_portB_response_get,
			obuf1_18_portB_response_get,
			RDY_obuf1_18_portB_response_get,

			EN_obuf1_18_portAClear,

			EN_obuf1_18_portBClear,

			obuf1_19_portA_request_put,
			EN_obuf1_19_portA_request_put,
			RDY_obuf1_19_portA_request_put,

			EN_obuf1_19_portA_response_get,
			obuf1_19_portA_response_get,
			RDY_obuf1_19_portA_response_get,

			obuf1_19_portB_request_put,
			EN_obuf1_19_portB_request_put,
			RDY_obuf1_19_portB_request_put,

			EN_obuf1_19_portB_response_get,
			obuf1_19_portB_response_get,
			RDY_obuf1_19_portB_response_get,

			EN_obuf1_19_portAClear,

			EN_obuf1_19_portBClear,

			obuf1_20_portA_request_put,
			EN_obuf1_20_portA_request_put,
			RDY_obuf1_20_portA_request_put,

			EN_obuf1_20_portA_response_get,
			obuf1_20_portA_response_get,
			RDY_obuf1_20_portA_response_get,

			obuf1_20_portB_request_put,
			EN_obuf1_20_portB_request_put,
			RDY_obuf1_20_portB_request_put,

			EN_obuf1_20_portB_response_get,
			obuf1_20_portB_response_get,
			RDY_obuf1_20_portB_response_get,

			EN_obuf1_20_portAClear,

			EN_obuf1_20_portBClear,

			obuf1_21_portA_request_put,
			EN_obuf1_21_portA_request_put,
			RDY_obuf1_21_portA_request_put,

			EN_obuf1_21_portA_response_get,
			obuf1_21_portA_response_get,
			RDY_obuf1_21_portA_response_get,

			obuf1_21_portB_request_put,
			EN_obuf1_21_portB_request_put,
			RDY_obuf1_21_portB_request_put,

			EN_obuf1_21_portB_response_get,
			obuf1_21_portB_response_get,
			RDY_obuf1_21_portB_response_get,

			EN_obuf1_21_portAClear,

			EN_obuf1_21_portBClear,

			obuf1_22_portA_request_put,
			EN_obuf1_22_portA_request_put,
			RDY_obuf1_22_portA_request_put,

			EN_obuf1_22_portA_response_get,
			obuf1_22_portA_response_get,
			RDY_obuf1_22_portA_response_get,

			obuf1_22_portB_request_put,
			EN_obuf1_22_portB_request_put,
			RDY_obuf1_22_portB_request_put,

			EN_obuf1_22_portB_response_get,
			obuf1_22_portB_response_get,
			RDY_obuf1_22_portB_response_get,

			EN_obuf1_22_portAClear,

			EN_obuf1_22_portBClear,

			obuf1_23_portA_request_put,
			EN_obuf1_23_portA_request_put,
			RDY_obuf1_23_portA_request_put,

			EN_obuf1_23_portA_response_get,
			obuf1_23_portA_response_get,
			RDY_obuf1_23_portA_response_get,

			obuf1_23_portB_request_put,
			EN_obuf1_23_portB_request_put,
			RDY_obuf1_23_portB_request_put,

			EN_obuf1_23_portB_response_get,
			obuf1_23_portB_response_get,
			RDY_obuf1_23_portB_response_get,

			EN_obuf1_23_portAClear,

			EN_obuf1_23_portBClear,

			obuf1_24_portA_request_put,
			EN_obuf1_24_portA_request_put,
			RDY_obuf1_24_portA_request_put,

			EN_obuf1_24_portA_response_get,
			obuf1_24_portA_response_get,
			RDY_obuf1_24_portA_response_get,

			obuf1_24_portB_request_put,
			EN_obuf1_24_portB_request_put,
			RDY_obuf1_24_portB_request_put,

			EN_obuf1_24_portB_response_get,
			obuf1_24_portB_response_get,
			RDY_obuf1_24_portB_response_get,

			EN_obuf1_24_portAClear,

			EN_obuf1_24_portBClear,

			obuf1_25_portA_request_put,
			EN_obuf1_25_portA_request_put,
			RDY_obuf1_25_portA_request_put,

			EN_obuf1_25_portA_response_get,
			obuf1_25_portA_response_get,
			RDY_obuf1_25_portA_response_get,

			obuf1_25_portB_request_put,
			EN_obuf1_25_portB_request_put,
			RDY_obuf1_25_portB_request_put,

			EN_obuf1_25_portB_response_get,
			obuf1_25_portB_response_get,
			RDY_obuf1_25_portB_response_get,

			EN_obuf1_25_portAClear,

			EN_obuf1_25_portBClear,

			obuf1_26_portA_request_put,
			EN_obuf1_26_portA_request_put,
			RDY_obuf1_26_portA_request_put,

			EN_obuf1_26_portA_response_get,
			obuf1_26_portA_response_get,
			RDY_obuf1_26_portA_response_get,

			obuf1_26_portB_request_put,
			EN_obuf1_26_portB_request_put,
			RDY_obuf1_26_portB_request_put,

			EN_obuf1_26_portB_response_get,
			obuf1_26_portB_response_get,
			RDY_obuf1_26_portB_response_get,

			EN_obuf1_26_portAClear,

			EN_obuf1_26_portBClear,

			obuf1_27_portA_request_put,
			EN_obuf1_27_portA_request_put,
			RDY_obuf1_27_portA_request_put,

			EN_obuf1_27_portA_response_get,
			obuf1_27_portA_response_get,
			RDY_obuf1_27_portA_response_get,

			obuf1_27_portB_request_put,
			EN_obuf1_27_portB_request_put,
			RDY_obuf1_27_portB_request_put,

			EN_obuf1_27_portB_response_get,
			obuf1_27_portB_response_get,
			RDY_obuf1_27_portB_response_get,

			EN_obuf1_27_portAClear,

			EN_obuf1_27_portBClear,

			obuf1_28_portA_request_put,
			EN_obuf1_28_portA_request_put,
			RDY_obuf1_28_portA_request_put,

			EN_obuf1_28_portA_response_get,
			obuf1_28_portA_response_get,
			RDY_obuf1_28_portA_response_get,

			obuf1_28_portB_request_put,
			EN_obuf1_28_portB_request_put,
			RDY_obuf1_28_portB_request_put,

			EN_obuf1_28_portB_response_get,
			obuf1_28_portB_response_get,
			RDY_obuf1_28_portB_response_get,

			EN_obuf1_28_portAClear,

			EN_obuf1_28_portBClear,

			obuf1_29_portA_request_put,
			EN_obuf1_29_portA_request_put,
			RDY_obuf1_29_portA_request_put,

			EN_obuf1_29_portA_response_get,
			obuf1_29_portA_response_get,
			RDY_obuf1_29_portA_response_get,

			obuf1_29_portB_request_put,
			EN_obuf1_29_portB_request_put,
			RDY_obuf1_29_portB_request_put,

			EN_obuf1_29_portB_response_get,
			obuf1_29_portB_response_get,
			RDY_obuf1_29_portB_response_get,

			EN_obuf1_29_portAClear,

			EN_obuf1_29_portBClear,

			obuf1_30_portA_request_put,
			EN_obuf1_30_portA_request_put,
			RDY_obuf1_30_portA_request_put,

			EN_obuf1_30_portA_response_get,
			obuf1_30_portA_response_get,
			RDY_obuf1_30_portA_response_get,

			obuf1_30_portB_request_put,
			EN_obuf1_30_portB_request_put,
			RDY_obuf1_30_portB_request_put,

			EN_obuf1_30_portB_response_get,
			obuf1_30_portB_response_get,
			RDY_obuf1_30_portB_response_get,

			EN_obuf1_30_portAClear,

			EN_obuf1_30_portBClear,

			obuf1_31_portA_request_put,
			EN_obuf1_31_portA_request_put,
			RDY_obuf1_31_portA_request_put,

			EN_obuf1_31_portA_response_get,
			obuf1_31_portA_response_get,
			RDY_obuf1_31_portA_response_get,

			obuf1_31_portB_request_put,
			EN_obuf1_31_portB_request_put,
			RDY_obuf1_31_portB_request_put,

			EN_obuf1_31_portB_response_get,
			obuf1_31_portB_response_get,
			RDY_obuf1_31_portB_response_get,

			EN_obuf1_31_portAClear,

			EN_obuf1_31_portBClear,

			obuf2_0_portA_request_put,
			EN_obuf2_0_portA_request_put,
			RDY_obuf2_0_portA_request_put,

			EN_obuf2_0_portA_response_get,
			obuf2_0_portA_response_get,
			RDY_obuf2_0_portA_response_get,

			obuf2_0_portB_request_put,
			EN_obuf2_0_portB_request_put,
			RDY_obuf2_0_portB_request_put,

			EN_obuf2_0_portB_response_get,
			obuf2_0_portB_response_get,
			RDY_obuf2_0_portB_response_get,

			EN_obuf2_0_portAClear,

			EN_obuf2_0_portBClear,

			obuf2_1_portA_request_put,
			EN_obuf2_1_portA_request_put,
			RDY_obuf2_1_portA_request_put,

			EN_obuf2_1_portA_response_get,
			obuf2_1_portA_response_get,
			RDY_obuf2_1_portA_response_get,

			obuf2_1_portB_request_put,
			EN_obuf2_1_portB_request_put,
			RDY_obuf2_1_portB_request_put,

			EN_obuf2_1_portB_response_get,
			obuf2_1_portB_response_get,
			RDY_obuf2_1_portB_response_get,

			EN_obuf2_1_portAClear,

			EN_obuf2_1_portBClear,

			obuf2_2_portA_request_put,
			EN_obuf2_2_portA_request_put,
			RDY_obuf2_2_portA_request_put,

			EN_obuf2_2_portA_response_get,
			obuf2_2_portA_response_get,
			RDY_obuf2_2_portA_response_get,

			obuf2_2_portB_request_put,
			EN_obuf2_2_portB_request_put,
			RDY_obuf2_2_portB_request_put,

			EN_obuf2_2_portB_response_get,
			obuf2_2_portB_response_get,
			RDY_obuf2_2_portB_response_get,

			EN_obuf2_2_portAClear,

			EN_obuf2_2_portBClear,

			obuf2_3_portA_request_put,
			EN_obuf2_3_portA_request_put,
			RDY_obuf2_3_portA_request_put,

			EN_obuf2_3_portA_response_get,
			obuf2_3_portA_response_get,
			RDY_obuf2_3_portA_response_get,

			obuf2_3_portB_request_put,
			EN_obuf2_3_portB_request_put,
			RDY_obuf2_3_portB_request_put,

			EN_obuf2_3_portB_response_get,
			obuf2_3_portB_response_get,
			RDY_obuf2_3_portB_response_get,

			EN_obuf2_3_portAClear,

			EN_obuf2_3_portBClear,

			obuf2_4_portA_request_put,
			EN_obuf2_4_portA_request_put,
			RDY_obuf2_4_portA_request_put,

			EN_obuf2_4_portA_response_get,
			obuf2_4_portA_response_get,
			RDY_obuf2_4_portA_response_get,

			obuf2_4_portB_request_put,
			EN_obuf2_4_portB_request_put,
			RDY_obuf2_4_portB_request_put,

			EN_obuf2_4_portB_response_get,
			obuf2_4_portB_response_get,
			RDY_obuf2_4_portB_response_get,

			EN_obuf2_4_portAClear,

			EN_obuf2_4_portBClear,

			obuf2_5_portA_request_put,
			EN_obuf2_5_portA_request_put,
			RDY_obuf2_5_portA_request_put,

			EN_obuf2_5_portA_response_get,
			obuf2_5_portA_response_get,
			RDY_obuf2_5_portA_response_get,

			obuf2_5_portB_request_put,
			EN_obuf2_5_portB_request_put,
			RDY_obuf2_5_portB_request_put,

			EN_obuf2_5_portB_response_get,
			obuf2_5_portB_response_get,
			RDY_obuf2_5_portB_response_get,

			EN_obuf2_5_portAClear,

			EN_obuf2_5_portBClear,

			obuf2_6_portA_request_put,
			EN_obuf2_6_portA_request_put,
			RDY_obuf2_6_portA_request_put,

			EN_obuf2_6_portA_response_get,
			obuf2_6_portA_response_get,
			RDY_obuf2_6_portA_response_get,

			obuf2_6_portB_request_put,
			EN_obuf2_6_portB_request_put,
			RDY_obuf2_6_portB_request_put,

			EN_obuf2_6_portB_response_get,
			obuf2_6_portB_response_get,
			RDY_obuf2_6_portB_response_get,

			EN_obuf2_6_portAClear,

			EN_obuf2_6_portBClear,

			obuf2_7_portA_request_put,
			EN_obuf2_7_portA_request_put,
			RDY_obuf2_7_portA_request_put,

			EN_obuf2_7_portA_response_get,
			obuf2_7_portA_response_get,
			RDY_obuf2_7_portA_response_get,

			obuf2_7_portB_request_put,
			EN_obuf2_7_portB_request_put,
			RDY_obuf2_7_portB_request_put,

			EN_obuf2_7_portB_response_get,
			obuf2_7_portB_response_get,
			RDY_obuf2_7_portB_response_get,

			EN_obuf2_7_portAClear,

			EN_obuf2_7_portBClear,

			obuf2_8_portA_request_put,
			EN_obuf2_8_portA_request_put,
			RDY_obuf2_8_portA_request_put,

			EN_obuf2_8_portA_response_get,
			obuf2_8_portA_response_get,
			RDY_obuf2_8_portA_response_get,

			obuf2_8_portB_request_put,
			EN_obuf2_8_portB_request_put,
			RDY_obuf2_8_portB_request_put,

			EN_obuf2_8_portB_response_get,
			obuf2_8_portB_response_get,
			RDY_obuf2_8_portB_response_get,

			EN_obuf2_8_portAClear,

			EN_obuf2_8_portBClear,

			obuf2_9_portA_request_put,
			EN_obuf2_9_portA_request_put,
			RDY_obuf2_9_portA_request_put,

			EN_obuf2_9_portA_response_get,
			obuf2_9_portA_response_get,
			RDY_obuf2_9_portA_response_get,

			obuf2_9_portB_request_put,
			EN_obuf2_9_portB_request_put,
			RDY_obuf2_9_portB_request_put,

			EN_obuf2_9_portB_response_get,
			obuf2_9_portB_response_get,
			RDY_obuf2_9_portB_response_get,

			EN_obuf2_9_portAClear,

			EN_obuf2_9_portBClear,

			obuf2_10_portA_request_put,
			EN_obuf2_10_portA_request_put,
			RDY_obuf2_10_portA_request_put,

			EN_obuf2_10_portA_response_get,
			obuf2_10_portA_response_get,
			RDY_obuf2_10_portA_response_get,

			obuf2_10_portB_request_put,
			EN_obuf2_10_portB_request_put,
			RDY_obuf2_10_portB_request_put,

			EN_obuf2_10_portB_response_get,
			obuf2_10_portB_response_get,
			RDY_obuf2_10_portB_response_get,

			EN_obuf2_10_portAClear,

			EN_obuf2_10_portBClear,

			obuf2_11_portA_request_put,
			EN_obuf2_11_portA_request_put,
			RDY_obuf2_11_portA_request_put,

			EN_obuf2_11_portA_response_get,
			obuf2_11_portA_response_get,
			RDY_obuf2_11_portA_response_get,

			obuf2_11_portB_request_put,
			EN_obuf2_11_portB_request_put,
			RDY_obuf2_11_portB_request_put,

			EN_obuf2_11_portB_response_get,
			obuf2_11_portB_response_get,
			RDY_obuf2_11_portB_response_get,

			EN_obuf2_11_portAClear,

			EN_obuf2_11_portBClear,

			obuf2_12_portA_request_put,
			EN_obuf2_12_portA_request_put,
			RDY_obuf2_12_portA_request_put,

			EN_obuf2_12_portA_response_get,
			obuf2_12_portA_response_get,
			RDY_obuf2_12_portA_response_get,

			obuf2_12_portB_request_put,
			EN_obuf2_12_portB_request_put,
			RDY_obuf2_12_portB_request_put,

			EN_obuf2_12_portB_response_get,
			obuf2_12_portB_response_get,
			RDY_obuf2_12_portB_response_get,

			EN_obuf2_12_portAClear,

			EN_obuf2_12_portBClear,

			obuf2_13_portA_request_put,
			EN_obuf2_13_portA_request_put,
			RDY_obuf2_13_portA_request_put,

			EN_obuf2_13_portA_response_get,
			obuf2_13_portA_response_get,
			RDY_obuf2_13_portA_response_get,

			obuf2_13_portB_request_put,
			EN_obuf2_13_portB_request_put,
			RDY_obuf2_13_portB_request_put,

			EN_obuf2_13_portB_response_get,
			obuf2_13_portB_response_get,
			RDY_obuf2_13_portB_response_get,

			EN_obuf2_13_portAClear,

			EN_obuf2_13_portBClear,

			obuf2_14_portA_request_put,
			EN_obuf2_14_portA_request_put,
			RDY_obuf2_14_portA_request_put,

			EN_obuf2_14_portA_response_get,
			obuf2_14_portA_response_get,
			RDY_obuf2_14_portA_response_get,

			obuf2_14_portB_request_put,
			EN_obuf2_14_portB_request_put,
			RDY_obuf2_14_portB_request_put,

			EN_obuf2_14_portB_response_get,
			obuf2_14_portB_response_get,
			RDY_obuf2_14_portB_response_get,

			EN_obuf2_14_portAClear,

			EN_obuf2_14_portBClear,

			obuf2_15_portA_request_put,
			EN_obuf2_15_portA_request_put,
			RDY_obuf2_15_portA_request_put,

			EN_obuf2_15_portA_response_get,
			obuf2_15_portA_response_get,
			RDY_obuf2_15_portA_response_get,

			obuf2_15_portB_request_put,
			EN_obuf2_15_portB_request_put,
			RDY_obuf2_15_portB_request_put,

			EN_obuf2_15_portB_response_get,
			obuf2_15_portB_response_get,
			RDY_obuf2_15_portB_response_get,

			EN_obuf2_15_portAClear,

			EN_obuf2_15_portBClear,

			obuf2_16_portA_request_put,
			EN_obuf2_16_portA_request_put,
			RDY_obuf2_16_portA_request_put,

			EN_obuf2_16_portA_response_get,
			obuf2_16_portA_response_get,
			RDY_obuf2_16_portA_response_get,

			obuf2_16_portB_request_put,
			EN_obuf2_16_portB_request_put,
			RDY_obuf2_16_portB_request_put,

			EN_obuf2_16_portB_response_get,
			obuf2_16_portB_response_get,
			RDY_obuf2_16_portB_response_get,

			EN_obuf2_16_portAClear,

			EN_obuf2_16_portBClear,

			obuf2_17_portA_request_put,
			EN_obuf2_17_portA_request_put,
			RDY_obuf2_17_portA_request_put,

			EN_obuf2_17_portA_response_get,
			obuf2_17_portA_response_get,
			RDY_obuf2_17_portA_response_get,

			obuf2_17_portB_request_put,
			EN_obuf2_17_portB_request_put,
			RDY_obuf2_17_portB_request_put,

			EN_obuf2_17_portB_response_get,
			obuf2_17_portB_response_get,
			RDY_obuf2_17_portB_response_get,

			EN_obuf2_17_portAClear,

			EN_obuf2_17_portBClear,

			obuf2_18_portA_request_put,
			EN_obuf2_18_portA_request_put,
			RDY_obuf2_18_portA_request_put,

			EN_obuf2_18_portA_response_get,
			obuf2_18_portA_response_get,
			RDY_obuf2_18_portA_response_get,

			obuf2_18_portB_request_put,
			EN_obuf2_18_portB_request_put,
			RDY_obuf2_18_portB_request_put,

			EN_obuf2_18_portB_response_get,
			obuf2_18_portB_response_get,
			RDY_obuf2_18_portB_response_get,

			EN_obuf2_18_portAClear,

			EN_obuf2_18_portBClear,

			obuf2_19_portA_request_put,
			EN_obuf2_19_portA_request_put,
			RDY_obuf2_19_portA_request_put,

			EN_obuf2_19_portA_response_get,
			obuf2_19_portA_response_get,
			RDY_obuf2_19_portA_response_get,

			obuf2_19_portB_request_put,
			EN_obuf2_19_portB_request_put,
			RDY_obuf2_19_portB_request_put,

			EN_obuf2_19_portB_response_get,
			obuf2_19_portB_response_get,
			RDY_obuf2_19_portB_response_get,

			EN_obuf2_19_portAClear,

			EN_obuf2_19_portBClear,

			obuf2_20_portA_request_put,
			EN_obuf2_20_portA_request_put,
			RDY_obuf2_20_portA_request_put,

			EN_obuf2_20_portA_response_get,
			obuf2_20_portA_response_get,
			RDY_obuf2_20_portA_response_get,

			obuf2_20_portB_request_put,
			EN_obuf2_20_portB_request_put,
			RDY_obuf2_20_portB_request_put,

			EN_obuf2_20_portB_response_get,
			obuf2_20_portB_response_get,
			RDY_obuf2_20_portB_response_get,

			EN_obuf2_20_portAClear,

			EN_obuf2_20_portBClear,

			obuf2_21_portA_request_put,
			EN_obuf2_21_portA_request_put,
			RDY_obuf2_21_portA_request_put,

			EN_obuf2_21_portA_response_get,
			obuf2_21_portA_response_get,
			RDY_obuf2_21_portA_response_get,

			obuf2_21_portB_request_put,
			EN_obuf2_21_portB_request_put,
			RDY_obuf2_21_portB_request_put,

			EN_obuf2_21_portB_response_get,
			obuf2_21_portB_response_get,
			RDY_obuf2_21_portB_response_get,

			EN_obuf2_21_portAClear,

			EN_obuf2_21_portBClear,

			obuf2_22_portA_request_put,
			EN_obuf2_22_portA_request_put,
			RDY_obuf2_22_portA_request_put,

			EN_obuf2_22_portA_response_get,
			obuf2_22_portA_response_get,
			RDY_obuf2_22_portA_response_get,

			obuf2_22_portB_request_put,
			EN_obuf2_22_portB_request_put,
			RDY_obuf2_22_portB_request_put,

			EN_obuf2_22_portB_response_get,
			obuf2_22_portB_response_get,
			RDY_obuf2_22_portB_response_get,

			EN_obuf2_22_portAClear,

			EN_obuf2_22_portBClear,

			obuf2_23_portA_request_put,
			EN_obuf2_23_portA_request_put,
			RDY_obuf2_23_portA_request_put,

			EN_obuf2_23_portA_response_get,
			obuf2_23_portA_response_get,
			RDY_obuf2_23_portA_response_get,

			obuf2_23_portB_request_put,
			EN_obuf2_23_portB_request_put,
			RDY_obuf2_23_portB_request_put,

			EN_obuf2_23_portB_response_get,
			obuf2_23_portB_response_get,
			RDY_obuf2_23_portB_response_get,

			EN_obuf2_23_portAClear,

			EN_obuf2_23_portBClear,

			obuf2_24_portA_request_put,
			EN_obuf2_24_portA_request_put,
			RDY_obuf2_24_portA_request_put,

			EN_obuf2_24_portA_response_get,
			obuf2_24_portA_response_get,
			RDY_obuf2_24_portA_response_get,

			obuf2_24_portB_request_put,
			EN_obuf2_24_portB_request_put,
			RDY_obuf2_24_portB_request_put,

			EN_obuf2_24_portB_response_get,
			obuf2_24_portB_response_get,
			RDY_obuf2_24_portB_response_get,

			EN_obuf2_24_portAClear,

			EN_obuf2_24_portBClear,

			obuf2_25_portA_request_put,
			EN_obuf2_25_portA_request_put,
			RDY_obuf2_25_portA_request_put,

			EN_obuf2_25_portA_response_get,
			obuf2_25_portA_response_get,
			RDY_obuf2_25_portA_response_get,

			obuf2_25_portB_request_put,
			EN_obuf2_25_portB_request_put,
			RDY_obuf2_25_portB_request_put,

			EN_obuf2_25_portB_response_get,
			obuf2_25_portB_response_get,
			RDY_obuf2_25_portB_response_get,

			EN_obuf2_25_portAClear,

			EN_obuf2_25_portBClear,

			obuf2_26_portA_request_put,
			EN_obuf2_26_portA_request_put,
			RDY_obuf2_26_portA_request_put,

			EN_obuf2_26_portA_response_get,
			obuf2_26_portA_response_get,
			RDY_obuf2_26_portA_response_get,

			obuf2_26_portB_request_put,
			EN_obuf2_26_portB_request_put,
			RDY_obuf2_26_portB_request_put,

			EN_obuf2_26_portB_response_get,
			obuf2_26_portB_response_get,
			RDY_obuf2_26_portB_response_get,

			EN_obuf2_26_portAClear,

			EN_obuf2_26_portBClear,

			obuf2_27_portA_request_put,
			EN_obuf2_27_portA_request_put,
			RDY_obuf2_27_portA_request_put,

			EN_obuf2_27_portA_response_get,
			obuf2_27_portA_response_get,
			RDY_obuf2_27_portA_response_get,

			obuf2_27_portB_request_put,
			EN_obuf2_27_portB_request_put,
			RDY_obuf2_27_portB_request_put,

			EN_obuf2_27_portB_response_get,
			obuf2_27_portB_response_get,
			RDY_obuf2_27_portB_response_get,

			EN_obuf2_27_portAClear,

			EN_obuf2_27_portBClear,

			obuf2_28_portA_request_put,
			EN_obuf2_28_portA_request_put,
			RDY_obuf2_28_portA_request_put,

			EN_obuf2_28_portA_response_get,
			obuf2_28_portA_response_get,
			RDY_obuf2_28_portA_response_get,

			obuf2_28_portB_request_put,
			EN_obuf2_28_portB_request_put,
			RDY_obuf2_28_portB_request_put,

			EN_obuf2_28_portB_response_get,
			obuf2_28_portB_response_get,
			RDY_obuf2_28_portB_response_get,

			EN_obuf2_28_portAClear,

			EN_obuf2_28_portBClear,

			obuf2_29_portA_request_put,
			EN_obuf2_29_portA_request_put,
			RDY_obuf2_29_portA_request_put,

			EN_obuf2_29_portA_response_get,
			obuf2_29_portA_response_get,
			RDY_obuf2_29_portA_response_get,

			obuf2_29_portB_request_put,
			EN_obuf2_29_portB_request_put,
			RDY_obuf2_29_portB_request_put,

			EN_obuf2_29_portB_response_get,
			obuf2_29_portB_response_get,
			RDY_obuf2_29_portB_response_get,

			EN_obuf2_29_portAClear,

			EN_obuf2_29_portBClear,

			obuf2_30_portA_request_put,
			EN_obuf2_30_portA_request_put,
			RDY_obuf2_30_portA_request_put,

			EN_obuf2_30_portA_response_get,
			obuf2_30_portA_response_get,
			RDY_obuf2_30_portA_response_get,

			obuf2_30_portB_request_put,
			EN_obuf2_30_portB_request_put,
			RDY_obuf2_30_portB_request_put,

			EN_obuf2_30_portB_response_get,
			obuf2_30_portB_response_get,
			RDY_obuf2_30_portB_response_get,

			EN_obuf2_30_portAClear,

			EN_obuf2_30_portBClear,

			obuf2_31_portA_request_put,
			EN_obuf2_31_portA_request_put,
			RDY_obuf2_31_portA_request_put,

			EN_obuf2_31_portA_response_get,
			obuf2_31_portA_response_get,
			RDY_obuf2_31_portA_response_get,

			obuf2_31_portB_request_put,
			EN_obuf2_31_portB_request_put,
			RDY_obuf2_31_portB_request_put,

			EN_obuf2_31_portB_response_get,
			obuf2_31_portB_response_get,
			RDY_obuf2_31_portB_response_get,

			EN_obuf2_31_portAClear,

			EN_obuf2_31_portBClear);
  input  CLK;
  input  RST_N;

  // action method ibuf_0_portA_request_put
  input  [17 : 0] ibuf_0_portA_request_put;
  input  EN_ibuf_0_portA_request_put;
  output RDY_ibuf_0_portA_request_put;

  // actionvalue method ibuf_0_portA_response_get
  input  EN_ibuf_0_portA_response_get;
  output [7 : 0] ibuf_0_portA_response_get;
  output RDY_ibuf_0_portA_response_get;

  // action method ibuf_0_portB_request_put
  input  [17 : 0] ibuf_0_portB_request_put;
  input  EN_ibuf_0_portB_request_put;
  output RDY_ibuf_0_portB_request_put;

  // actionvalue method ibuf_0_portB_response_get
  input  EN_ibuf_0_portB_response_get;
  output [7 : 0] ibuf_0_portB_response_get;
  output RDY_ibuf_0_portB_response_get;

  // action method ibuf_0_portAClear
  input  EN_ibuf_0_portAClear;

  // action method ibuf_0_portBClear
  input  EN_ibuf_0_portBClear;

  // action method ibuf_1_portA_request_put
  input  [17 : 0] ibuf_1_portA_request_put;
  input  EN_ibuf_1_portA_request_put;
  output RDY_ibuf_1_portA_request_put;

  // actionvalue method ibuf_1_portA_response_get
  input  EN_ibuf_1_portA_response_get;
  output [7 : 0] ibuf_1_portA_response_get;
  output RDY_ibuf_1_portA_response_get;

  // action method ibuf_1_portB_request_put
  input  [17 : 0] ibuf_1_portB_request_put;
  input  EN_ibuf_1_portB_request_put;
  output RDY_ibuf_1_portB_request_put;

  // actionvalue method ibuf_1_portB_response_get
  input  EN_ibuf_1_portB_response_get;
  output [7 : 0] ibuf_1_portB_response_get;
  output RDY_ibuf_1_portB_response_get;

  // action method ibuf_1_portAClear
  input  EN_ibuf_1_portAClear;

  // action method ibuf_1_portBClear
  input  EN_ibuf_1_portBClear;

  // action method ibuf_2_portA_request_put
  input  [17 : 0] ibuf_2_portA_request_put;
  input  EN_ibuf_2_portA_request_put;
  output RDY_ibuf_2_portA_request_put;

  // actionvalue method ibuf_2_portA_response_get
  input  EN_ibuf_2_portA_response_get;
  output [7 : 0] ibuf_2_portA_response_get;
  output RDY_ibuf_2_portA_response_get;

  // action method ibuf_2_portB_request_put
  input  [17 : 0] ibuf_2_portB_request_put;
  input  EN_ibuf_2_portB_request_put;
  output RDY_ibuf_2_portB_request_put;

  // actionvalue method ibuf_2_portB_response_get
  input  EN_ibuf_2_portB_response_get;
  output [7 : 0] ibuf_2_portB_response_get;
  output RDY_ibuf_2_portB_response_get;

  // action method ibuf_2_portAClear
  input  EN_ibuf_2_portAClear;

  // action method ibuf_2_portBClear
  input  EN_ibuf_2_portBClear;

  // action method ibuf_3_portA_request_put
  input  [17 : 0] ibuf_3_portA_request_put;
  input  EN_ibuf_3_portA_request_put;
  output RDY_ibuf_3_portA_request_put;

  // actionvalue method ibuf_3_portA_response_get
  input  EN_ibuf_3_portA_response_get;
  output [7 : 0] ibuf_3_portA_response_get;
  output RDY_ibuf_3_portA_response_get;

  // action method ibuf_3_portB_request_put
  input  [17 : 0] ibuf_3_portB_request_put;
  input  EN_ibuf_3_portB_request_put;
  output RDY_ibuf_3_portB_request_put;

  // actionvalue method ibuf_3_portB_response_get
  input  EN_ibuf_3_portB_response_get;
  output [7 : 0] ibuf_3_portB_response_get;
  output RDY_ibuf_3_portB_response_get;

  // action method ibuf_3_portAClear
  input  EN_ibuf_3_portAClear;

  // action method ibuf_3_portBClear
  input  EN_ibuf_3_portBClear;

  // action method ibuf_4_portA_request_put
  input  [17 : 0] ibuf_4_portA_request_put;
  input  EN_ibuf_4_portA_request_put;
  output RDY_ibuf_4_portA_request_put;

  // actionvalue method ibuf_4_portA_response_get
  input  EN_ibuf_4_portA_response_get;
  output [7 : 0] ibuf_4_portA_response_get;
  output RDY_ibuf_4_portA_response_get;

  // action method ibuf_4_portB_request_put
  input  [17 : 0] ibuf_4_portB_request_put;
  input  EN_ibuf_4_portB_request_put;
  output RDY_ibuf_4_portB_request_put;

  // actionvalue method ibuf_4_portB_response_get
  input  EN_ibuf_4_portB_response_get;
  output [7 : 0] ibuf_4_portB_response_get;
  output RDY_ibuf_4_portB_response_get;

  // action method ibuf_4_portAClear
  input  EN_ibuf_4_portAClear;

  // action method ibuf_4_portBClear
  input  EN_ibuf_4_portBClear;

  // action method ibuf_5_portA_request_put
  input  [17 : 0] ibuf_5_portA_request_put;
  input  EN_ibuf_5_portA_request_put;
  output RDY_ibuf_5_portA_request_put;

  // actionvalue method ibuf_5_portA_response_get
  input  EN_ibuf_5_portA_response_get;
  output [7 : 0] ibuf_5_portA_response_get;
  output RDY_ibuf_5_portA_response_get;

  // action method ibuf_5_portB_request_put
  input  [17 : 0] ibuf_5_portB_request_put;
  input  EN_ibuf_5_portB_request_put;
  output RDY_ibuf_5_portB_request_put;

  // actionvalue method ibuf_5_portB_response_get
  input  EN_ibuf_5_portB_response_get;
  output [7 : 0] ibuf_5_portB_response_get;
  output RDY_ibuf_5_portB_response_get;

  // action method ibuf_5_portAClear
  input  EN_ibuf_5_portAClear;

  // action method ibuf_5_portBClear
  input  EN_ibuf_5_portBClear;

  // action method ibuf_6_portA_request_put
  input  [17 : 0] ibuf_6_portA_request_put;
  input  EN_ibuf_6_portA_request_put;
  output RDY_ibuf_6_portA_request_put;

  // actionvalue method ibuf_6_portA_response_get
  input  EN_ibuf_6_portA_response_get;
  output [7 : 0] ibuf_6_portA_response_get;
  output RDY_ibuf_6_portA_response_get;

  // action method ibuf_6_portB_request_put
  input  [17 : 0] ibuf_6_portB_request_put;
  input  EN_ibuf_6_portB_request_put;
  output RDY_ibuf_6_portB_request_put;

  // actionvalue method ibuf_6_portB_response_get
  input  EN_ibuf_6_portB_response_get;
  output [7 : 0] ibuf_6_portB_response_get;
  output RDY_ibuf_6_portB_response_get;

  // action method ibuf_6_portAClear
  input  EN_ibuf_6_portAClear;

  // action method ibuf_6_portBClear
  input  EN_ibuf_6_portBClear;

  // action method ibuf_7_portA_request_put
  input  [17 : 0] ibuf_7_portA_request_put;
  input  EN_ibuf_7_portA_request_put;
  output RDY_ibuf_7_portA_request_put;

  // actionvalue method ibuf_7_portA_response_get
  input  EN_ibuf_7_portA_response_get;
  output [7 : 0] ibuf_7_portA_response_get;
  output RDY_ibuf_7_portA_response_get;

  // action method ibuf_7_portB_request_put
  input  [17 : 0] ibuf_7_portB_request_put;
  input  EN_ibuf_7_portB_request_put;
  output RDY_ibuf_7_portB_request_put;

  // actionvalue method ibuf_7_portB_response_get
  input  EN_ibuf_7_portB_response_get;
  output [7 : 0] ibuf_7_portB_response_get;
  output RDY_ibuf_7_portB_response_get;

  // action method ibuf_7_portAClear
  input  EN_ibuf_7_portAClear;

  // action method ibuf_7_portBClear
  input  EN_ibuf_7_portBClear;

  // action method ibuf_8_portA_request_put
  input  [17 : 0] ibuf_8_portA_request_put;
  input  EN_ibuf_8_portA_request_put;
  output RDY_ibuf_8_portA_request_put;

  // actionvalue method ibuf_8_portA_response_get
  input  EN_ibuf_8_portA_response_get;
  output [7 : 0] ibuf_8_portA_response_get;
  output RDY_ibuf_8_portA_response_get;

  // action method ibuf_8_portB_request_put
  input  [17 : 0] ibuf_8_portB_request_put;
  input  EN_ibuf_8_portB_request_put;
  output RDY_ibuf_8_portB_request_put;

  // actionvalue method ibuf_8_portB_response_get
  input  EN_ibuf_8_portB_response_get;
  output [7 : 0] ibuf_8_portB_response_get;
  output RDY_ibuf_8_portB_response_get;

  // action method ibuf_8_portAClear
  input  EN_ibuf_8_portAClear;

  // action method ibuf_8_portBClear
  input  EN_ibuf_8_portBClear;

  // action method ibuf_9_portA_request_put
  input  [17 : 0] ibuf_9_portA_request_put;
  input  EN_ibuf_9_portA_request_put;
  output RDY_ibuf_9_portA_request_put;

  // actionvalue method ibuf_9_portA_response_get
  input  EN_ibuf_9_portA_response_get;
  output [7 : 0] ibuf_9_portA_response_get;
  output RDY_ibuf_9_portA_response_get;

  // action method ibuf_9_portB_request_put
  input  [17 : 0] ibuf_9_portB_request_put;
  input  EN_ibuf_9_portB_request_put;
  output RDY_ibuf_9_portB_request_put;

  // actionvalue method ibuf_9_portB_response_get
  input  EN_ibuf_9_portB_response_get;
  output [7 : 0] ibuf_9_portB_response_get;
  output RDY_ibuf_9_portB_response_get;

  // action method ibuf_9_portAClear
  input  EN_ibuf_9_portAClear;

  // action method ibuf_9_portBClear
  input  EN_ibuf_9_portBClear;

  // action method ibuf_10_portA_request_put
  input  [17 : 0] ibuf_10_portA_request_put;
  input  EN_ibuf_10_portA_request_put;
  output RDY_ibuf_10_portA_request_put;

  // actionvalue method ibuf_10_portA_response_get
  input  EN_ibuf_10_portA_response_get;
  output [7 : 0] ibuf_10_portA_response_get;
  output RDY_ibuf_10_portA_response_get;

  // action method ibuf_10_portB_request_put
  input  [17 : 0] ibuf_10_portB_request_put;
  input  EN_ibuf_10_portB_request_put;
  output RDY_ibuf_10_portB_request_put;

  // actionvalue method ibuf_10_portB_response_get
  input  EN_ibuf_10_portB_response_get;
  output [7 : 0] ibuf_10_portB_response_get;
  output RDY_ibuf_10_portB_response_get;

  // action method ibuf_10_portAClear
  input  EN_ibuf_10_portAClear;

  // action method ibuf_10_portBClear
  input  EN_ibuf_10_portBClear;

  // action method ibuf_11_portA_request_put
  input  [17 : 0] ibuf_11_portA_request_put;
  input  EN_ibuf_11_portA_request_put;
  output RDY_ibuf_11_portA_request_put;

  // actionvalue method ibuf_11_portA_response_get
  input  EN_ibuf_11_portA_response_get;
  output [7 : 0] ibuf_11_portA_response_get;
  output RDY_ibuf_11_portA_response_get;

  // action method ibuf_11_portB_request_put
  input  [17 : 0] ibuf_11_portB_request_put;
  input  EN_ibuf_11_portB_request_put;
  output RDY_ibuf_11_portB_request_put;

  // actionvalue method ibuf_11_portB_response_get
  input  EN_ibuf_11_portB_response_get;
  output [7 : 0] ibuf_11_portB_response_get;
  output RDY_ibuf_11_portB_response_get;

  // action method ibuf_11_portAClear
  input  EN_ibuf_11_portAClear;

  // action method ibuf_11_portBClear
  input  EN_ibuf_11_portBClear;

  // action method ibuf_12_portA_request_put
  input  [17 : 0] ibuf_12_portA_request_put;
  input  EN_ibuf_12_portA_request_put;
  output RDY_ibuf_12_portA_request_put;

  // actionvalue method ibuf_12_portA_response_get
  input  EN_ibuf_12_portA_response_get;
  output [7 : 0] ibuf_12_portA_response_get;
  output RDY_ibuf_12_portA_response_get;

  // action method ibuf_12_portB_request_put
  input  [17 : 0] ibuf_12_portB_request_put;
  input  EN_ibuf_12_portB_request_put;
  output RDY_ibuf_12_portB_request_put;

  // actionvalue method ibuf_12_portB_response_get
  input  EN_ibuf_12_portB_response_get;
  output [7 : 0] ibuf_12_portB_response_get;
  output RDY_ibuf_12_portB_response_get;

  // action method ibuf_12_portAClear
  input  EN_ibuf_12_portAClear;

  // action method ibuf_12_portBClear
  input  EN_ibuf_12_portBClear;

  // action method ibuf_13_portA_request_put
  input  [17 : 0] ibuf_13_portA_request_put;
  input  EN_ibuf_13_portA_request_put;
  output RDY_ibuf_13_portA_request_put;

  // actionvalue method ibuf_13_portA_response_get
  input  EN_ibuf_13_portA_response_get;
  output [7 : 0] ibuf_13_portA_response_get;
  output RDY_ibuf_13_portA_response_get;

  // action method ibuf_13_portB_request_put
  input  [17 : 0] ibuf_13_portB_request_put;
  input  EN_ibuf_13_portB_request_put;
  output RDY_ibuf_13_portB_request_put;

  // actionvalue method ibuf_13_portB_response_get
  input  EN_ibuf_13_portB_response_get;
  output [7 : 0] ibuf_13_portB_response_get;
  output RDY_ibuf_13_portB_response_get;

  // action method ibuf_13_portAClear
  input  EN_ibuf_13_portAClear;

  // action method ibuf_13_portBClear
  input  EN_ibuf_13_portBClear;

  // action method ibuf_14_portA_request_put
  input  [17 : 0] ibuf_14_portA_request_put;
  input  EN_ibuf_14_portA_request_put;
  output RDY_ibuf_14_portA_request_put;

  // actionvalue method ibuf_14_portA_response_get
  input  EN_ibuf_14_portA_response_get;
  output [7 : 0] ibuf_14_portA_response_get;
  output RDY_ibuf_14_portA_response_get;

  // action method ibuf_14_portB_request_put
  input  [17 : 0] ibuf_14_portB_request_put;
  input  EN_ibuf_14_portB_request_put;
  output RDY_ibuf_14_portB_request_put;

  // actionvalue method ibuf_14_portB_response_get
  input  EN_ibuf_14_portB_response_get;
  output [7 : 0] ibuf_14_portB_response_get;
  output RDY_ibuf_14_portB_response_get;

  // action method ibuf_14_portAClear
  input  EN_ibuf_14_portAClear;

  // action method ibuf_14_portBClear
  input  EN_ibuf_14_portBClear;

  // action method ibuf_15_portA_request_put
  input  [17 : 0] ibuf_15_portA_request_put;
  input  EN_ibuf_15_portA_request_put;
  output RDY_ibuf_15_portA_request_put;

  // actionvalue method ibuf_15_portA_response_get
  input  EN_ibuf_15_portA_response_get;
  output [7 : 0] ibuf_15_portA_response_get;
  output RDY_ibuf_15_portA_response_get;

  // action method ibuf_15_portB_request_put
  input  [17 : 0] ibuf_15_portB_request_put;
  input  EN_ibuf_15_portB_request_put;
  output RDY_ibuf_15_portB_request_put;

  // actionvalue method ibuf_15_portB_response_get
  input  EN_ibuf_15_portB_response_get;
  output [7 : 0] ibuf_15_portB_response_get;
  output RDY_ibuf_15_portB_response_get;

  // action method ibuf_15_portAClear
  input  EN_ibuf_15_portAClear;

  // action method ibuf_15_portBClear
  input  EN_ibuf_15_portBClear;

  // action method ibuf_16_portA_request_put
  input  [17 : 0] ibuf_16_portA_request_put;
  input  EN_ibuf_16_portA_request_put;
  output RDY_ibuf_16_portA_request_put;

  // actionvalue method ibuf_16_portA_response_get
  input  EN_ibuf_16_portA_response_get;
  output [7 : 0] ibuf_16_portA_response_get;
  output RDY_ibuf_16_portA_response_get;

  // action method ibuf_16_portB_request_put
  input  [17 : 0] ibuf_16_portB_request_put;
  input  EN_ibuf_16_portB_request_put;
  output RDY_ibuf_16_portB_request_put;

  // actionvalue method ibuf_16_portB_response_get
  input  EN_ibuf_16_portB_response_get;
  output [7 : 0] ibuf_16_portB_response_get;
  output RDY_ibuf_16_portB_response_get;

  // action method ibuf_16_portAClear
  input  EN_ibuf_16_portAClear;

  // action method ibuf_16_portBClear
  input  EN_ibuf_16_portBClear;

  // action method ibuf_17_portA_request_put
  input  [17 : 0] ibuf_17_portA_request_put;
  input  EN_ibuf_17_portA_request_put;
  output RDY_ibuf_17_portA_request_put;

  // actionvalue method ibuf_17_portA_response_get
  input  EN_ibuf_17_portA_response_get;
  output [7 : 0] ibuf_17_portA_response_get;
  output RDY_ibuf_17_portA_response_get;

  // action method ibuf_17_portB_request_put
  input  [17 : 0] ibuf_17_portB_request_put;
  input  EN_ibuf_17_portB_request_put;
  output RDY_ibuf_17_portB_request_put;

  // actionvalue method ibuf_17_portB_response_get
  input  EN_ibuf_17_portB_response_get;
  output [7 : 0] ibuf_17_portB_response_get;
  output RDY_ibuf_17_portB_response_get;

  // action method ibuf_17_portAClear
  input  EN_ibuf_17_portAClear;

  // action method ibuf_17_portBClear
  input  EN_ibuf_17_portBClear;

  // action method ibuf_18_portA_request_put
  input  [17 : 0] ibuf_18_portA_request_put;
  input  EN_ibuf_18_portA_request_put;
  output RDY_ibuf_18_portA_request_put;

  // actionvalue method ibuf_18_portA_response_get
  input  EN_ibuf_18_portA_response_get;
  output [7 : 0] ibuf_18_portA_response_get;
  output RDY_ibuf_18_portA_response_get;

  // action method ibuf_18_portB_request_put
  input  [17 : 0] ibuf_18_portB_request_put;
  input  EN_ibuf_18_portB_request_put;
  output RDY_ibuf_18_portB_request_put;

  // actionvalue method ibuf_18_portB_response_get
  input  EN_ibuf_18_portB_response_get;
  output [7 : 0] ibuf_18_portB_response_get;
  output RDY_ibuf_18_portB_response_get;

  // action method ibuf_18_portAClear
  input  EN_ibuf_18_portAClear;

  // action method ibuf_18_portBClear
  input  EN_ibuf_18_portBClear;

  // action method ibuf_19_portA_request_put
  input  [17 : 0] ibuf_19_portA_request_put;
  input  EN_ibuf_19_portA_request_put;
  output RDY_ibuf_19_portA_request_put;

  // actionvalue method ibuf_19_portA_response_get
  input  EN_ibuf_19_portA_response_get;
  output [7 : 0] ibuf_19_portA_response_get;
  output RDY_ibuf_19_portA_response_get;

  // action method ibuf_19_portB_request_put
  input  [17 : 0] ibuf_19_portB_request_put;
  input  EN_ibuf_19_portB_request_put;
  output RDY_ibuf_19_portB_request_put;

  // actionvalue method ibuf_19_portB_response_get
  input  EN_ibuf_19_portB_response_get;
  output [7 : 0] ibuf_19_portB_response_get;
  output RDY_ibuf_19_portB_response_get;

  // action method ibuf_19_portAClear
  input  EN_ibuf_19_portAClear;

  // action method ibuf_19_portBClear
  input  EN_ibuf_19_portBClear;

  // action method ibuf_20_portA_request_put
  input  [17 : 0] ibuf_20_portA_request_put;
  input  EN_ibuf_20_portA_request_put;
  output RDY_ibuf_20_portA_request_put;

  // actionvalue method ibuf_20_portA_response_get
  input  EN_ibuf_20_portA_response_get;
  output [7 : 0] ibuf_20_portA_response_get;
  output RDY_ibuf_20_portA_response_get;

  // action method ibuf_20_portB_request_put
  input  [17 : 0] ibuf_20_portB_request_put;
  input  EN_ibuf_20_portB_request_put;
  output RDY_ibuf_20_portB_request_put;

  // actionvalue method ibuf_20_portB_response_get
  input  EN_ibuf_20_portB_response_get;
  output [7 : 0] ibuf_20_portB_response_get;
  output RDY_ibuf_20_portB_response_get;

  // action method ibuf_20_portAClear
  input  EN_ibuf_20_portAClear;

  // action method ibuf_20_portBClear
  input  EN_ibuf_20_portBClear;

  // action method ibuf_21_portA_request_put
  input  [17 : 0] ibuf_21_portA_request_put;
  input  EN_ibuf_21_portA_request_put;
  output RDY_ibuf_21_portA_request_put;

  // actionvalue method ibuf_21_portA_response_get
  input  EN_ibuf_21_portA_response_get;
  output [7 : 0] ibuf_21_portA_response_get;
  output RDY_ibuf_21_portA_response_get;

  // action method ibuf_21_portB_request_put
  input  [17 : 0] ibuf_21_portB_request_put;
  input  EN_ibuf_21_portB_request_put;
  output RDY_ibuf_21_portB_request_put;

  // actionvalue method ibuf_21_portB_response_get
  input  EN_ibuf_21_portB_response_get;
  output [7 : 0] ibuf_21_portB_response_get;
  output RDY_ibuf_21_portB_response_get;

  // action method ibuf_21_portAClear
  input  EN_ibuf_21_portAClear;

  // action method ibuf_21_portBClear
  input  EN_ibuf_21_portBClear;

  // action method ibuf_22_portA_request_put
  input  [17 : 0] ibuf_22_portA_request_put;
  input  EN_ibuf_22_portA_request_put;
  output RDY_ibuf_22_portA_request_put;

  // actionvalue method ibuf_22_portA_response_get
  input  EN_ibuf_22_portA_response_get;
  output [7 : 0] ibuf_22_portA_response_get;
  output RDY_ibuf_22_portA_response_get;

  // action method ibuf_22_portB_request_put
  input  [17 : 0] ibuf_22_portB_request_put;
  input  EN_ibuf_22_portB_request_put;
  output RDY_ibuf_22_portB_request_put;

  // actionvalue method ibuf_22_portB_response_get
  input  EN_ibuf_22_portB_response_get;
  output [7 : 0] ibuf_22_portB_response_get;
  output RDY_ibuf_22_portB_response_get;

  // action method ibuf_22_portAClear
  input  EN_ibuf_22_portAClear;

  // action method ibuf_22_portBClear
  input  EN_ibuf_22_portBClear;

  // action method ibuf_23_portA_request_put
  input  [17 : 0] ibuf_23_portA_request_put;
  input  EN_ibuf_23_portA_request_put;
  output RDY_ibuf_23_portA_request_put;

  // actionvalue method ibuf_23_portA_response_get
  input  EN_ibuf_23_portA_response_get;
  output [7 : 0] ibuf_23_portA_response_get;
  output RDY_ibuf_23_portA_response_get;

  // action method ibuf_23_portB_request_put
  input  [17 : 0] ibuf_23_portB_request_put;
  input  EN_ibuf_23_portB_request_put;
  output RDY_ibuf_23_portB_request_put;

  // actionvalue method ibuf_23_portB_response_get
  input  EN_ibuf_23_portB_response_get;
  output [7 : 0] ibuf_23_portB_response_get;
  output RDY_ibuf_23_portB_response_get;

  // action method ibuf_23_portAClear
  input  EN_ibuf_23_portAClear;

  // action method ibuf_23_portBClear
  input  EN_ibuf_23_portBClear;

  // action method ibuf_24_portA_request_put
  input  [17 : 0] ibuf_24_portA_request_put;
  input  EN_ibuf_24_portA_request_put;
  output RDY_ibuf_24_portA_request_put;

  // actionvalue method ibuf_24_portA_response_get
  input  EN_ibuf_24_portA_response_get;
  output [7 : 0] ibuf_24_portA_response_get;
  output RDY_ibuf_24_portA_response_get;

  // action method ibuf_24_portB_request_put
  input  [17 : 0] ibuf_24_portB_request_put;
  input  EN_ibuf_24_portB_request_put;
  output RDY_ibuf_24_portB_request_put;

  // actionvalue method ibuf_24_portB_response_get
  input  EN_ibuf_24_portB_response_get;
  output [7 : 0] ibuf_24_portB_response_get;
  output RDY_ibuf_24_portB_response_get;

  // action method ibuf_24_portAClear
  input  EN_ibuf_24_portAClear;

  // action method ibuf_24_portBClear
  input  EN_ibuf_24_portBClear;

  // action method ibuf_25_portA_request_put
  input  [17 : 0] ibuf_25_portA_request_put;
  input  EN_ibuf_25_portA_request_put;
  output RDY_ibuf_25_portA_request_put;

  // actionvalue method ibuf_25_portA_response_get
  input  EN_ibuf_25_portA_response_get;
  output [7 : 0] ibuf_25_portA_response_get;
  output RDY_ibuf_25_portA_response_get;

  // action method ibuf_25_portB_request_put
  input  [17 : 0] ibuf_25_portB_request_put;
  input  EN_ibuf_25_portB_request_put;
  output RDY_ibuf_25_portB_request_put;

  // actionvalue method ibuf_25_portB_response_get
  input  EN_ibuf_25_portB_response_get;
  output [7 : 0] ibuf_25_portB_response_get;
  output RDY_ibuf_25_portB_response_get;

  // action method ibuf_25_portAClear
  input  EN_ibuf_25_portAClear;

  // action method ibuf_25_portBClear
  input  EN_ibuf_25_portBClear;

  // action method ibuf_26_portA_request_put
  input  [17 : 0] ibuf_26_portA_request_put;
  input  EN_ibuf_26_portA_request_put;
  output RDY_ibuf_26_portA_request_put;

  // actionvalue method ibuf_26_portA_response_get
  input  EN_ibuf_26_portA_response_get;
  output [7 : 0] ibuf_26_portA_response_get;
  output RDY_ibuf_26_portA_response_get;

  // action method ibuf_26_portB_request_put
  input  [17 : 0] ibuf_26_portB_request_put;
  input  EN_ibuf_26_portB_request_put;
  output RDY_ibuf_26_portB_request_put;

  // actionvalue method ibuf_26_portB_response_get
  input  EN_ibuf_26_portB_response_get;
  output [7 : 0] ibuf_26_portB_response_get;
  output RDY_ibuf_26_portB_response_get;

  // action method ibuf_26_portAClear
  input  EN_ibuf_26_portAClear;

  // action method ibuf_26_portBClear
  input  EN_ibuf_26_portBClear;

  // action method ibuf_27_portA_request_put
  input  [17 : 0] ibuf_27_portA_request_put;
  input  EN_ibuf_27_portA_request_put;
  output RDY_ibuf_27_portA_request_put;

  // actionvalue method ibuf_27_portA_response_get
  input  EN_ibuf_27_portA_response_get;
  output [7 : 0] ibuf_27_portA_response_get;
  output RDY_ibuf_27_portA_response_get;

  // action method ibuf_27_portB_request_put
  input  [17 : 0] ibuf_27_portB_request_put;
  input  EN_ibuf_27_portB_request_put;
  output RDY_ibuf_27_portB_request_put;

  // actionvalue method ibuf_27_portB_response_get
  input  EN_ibuf_27_portB_response_get;
  output [7 : 0] ibuf_27_portB_response_get;
  output RDY_ibuf_27_portB_response_get;

  // action method ibuf_27_portAClear
  input  EN_ibuf_27_portAClear;

  // action method ibuf_27_portBClear
  input  EN_ibuf_27_portBClear;

  // action method ibuf_28_portA_request_put
  input  [17 : 0] ibuf_28_portA_request_put;
  input  EN_ibuf_28_portA_request_put;
  output RDY_ibuf_28_portA_request_put;

  // actionvalue method ibuf_28_portA_response_get
  input  EN_ibuf_28_portA_response_get;
  output [7 : 0] ibuf_28_portA_response_get;
  output RDY_ibuf_28_portA_response_get;

  // action method ibuf_28_portB_request_put
  input  [17 : 0] ibuf_28_portB_request_put;
  input  EN_ibuf_28_portB_request_put;
  output RDY_ibuf_28_portB_request_put;

  // actionvalue method ibuf_28_portB_response_get
  input  EN_ibuf_28_portB_response_get;
  output [7 : 0] ibuf_28_portB_response_get;
  output RDY_ibuf_28_portB_response_get;

  // action method ibuf_28_portAClear
  input  EN_ibuf_28_portAClear;

  // action method ibuf_28_portBClear
  input  EN_ibuf_28_portBClear;

  // action method ibuf_29_portA_request_put
  input  [17 : 0] ibuf_29_portA_request_put;
  input  EN_ibuf_29_portA_request_put;
  output RDY_ibuf_29_portA_request_put;

  // actionvalue method ibuf_29_portA_response_get
  input  EN_ibuf_29_portA_response_get;
  output [7 : 0] ibuf_29_portA_response_get;
  output RDY_ibuf_29_portA_response_get;

  // action method ibuf_29_portB_request_put
  input  [17 : 0] ibuf_29_portB_request_put;
  input  EN_ibuf_29_portB_request_put;
  output RDY_ibuf_29_portB_request_put;

  // actionvalue method ibuf_29_portB_response_get
  input  EN_ibuf_29_portB_response_get;
  output [7 : 0] ibuf_29_portB_response_get;
  output RDY_ibuf_29_portB_response_get;

  // action method ibuf_29_portAClear
  input  EN_ibuf_29_portAClear;

  // action method ibuf_29_portBClear
  input  EN_ibuf_29_portBClear;

  // action method ibuf_30_portA_request_put
  input  [17 : 0] ibuf_30_portA_request_put;
  input  EN_ibuf_30_portA_request_put;
  output RDY_ibuf_30_portA_request_put;

  // actionvalue method ibuf_30_portA_response_get
  input  EN_ibuf_30_portA_response_get;
  output [7 : 0] ibuf_30_portA_response_get;
  output RDY_ibuf_30_portA_response_get;

  // action method ibuf_30_portB_request_put
  input  [17 : 0] ibuf_30_portB_request_put;
  input  EN_ibuf_30_portB_request_put;
  output RDY_ibuf_30_portB_request_put;

  // actionvalue method ibuf_30_portB_response_get
  input  EN_ibuf_30_portB_response_get;
  output [7 : 0] ibuf_30_portB_response_get;
  output RDY_ibuf_30_portB_response_get;

  // action method ibuf_30_portAClear
  input  EN_ibuf_30_portAClear;

  // action method ibuf_30_portBClear
  input  EN_ibuf_30_portBClear;

  // action method ibuf_31_portA_request_put
  input  [17 : 0] ibuf_31_portA_request_put;
  input  EN_ibuf_31_portA_request_put;
  output RDY_ibuf_31_portA_request_put;

  // actionvalue method ibuf_31_portA_response_get
  input  EN_ibuf_31_portA_response_get;
  output [7 : 0] ibuf_31_portA_response_get;
  output RDY_ibuf_31_portA_response_get;

  // action method ibuf_31_portB_request_put
  input  [17 : 0] ibuf_31_portB_request_put;
  input  EN_ibuf_31_portB_request_put;
  output RDY_ibuf_31_portB_request_put;

  // actionvalue method ibuf_31_portB_response_get
  input  EN_ibuf_31_portB_response_get;
  output [7 : 0] ibuf_31_portB_response_get;
  output RDY_ibuf_31_portB_response_get;

  // action method ibuf_31_portAClear
  input  EN_ibuf_31_portAClear;

  // action method ibuf_31_portBClear
  input  EN_ibuf_31_portBClear;

  // action method wbuf_0_portA_request_put
  input  [17 : 0] wbuf_0_portA_request_put;
  input  EN_wbuf_0_portA_request_put;
  output RDY_wbuf_0_portA_request_put;

  // actionvalue method wbuf_0_portA_response_get
  input  EN_wbuf_0_portA_response_get;
  output [7 : 0] wbuf_0_portA_response_get;
  output RDY_wbuf_0_portA_response_get;

  // action method wbuf_0_portB_request_put
  input  [17 : 0] wbuf_0_portB_request_put;
  input  EN_wbuf_0_portB_request_put;
  output RDY_wbuf_0_portB_request_put;

  // actionvalue method wbuf_0_portB_response_get
  input  EN_wbuf_0_portB_response_get;
  output [7 : 0] wbuf_0_portB_response_get;
  output RDY_wbuf_0_portB_response_get;

  // action method wbuf_0_portAClear
  input  EN_wbuf_0_portAClear;

  // action method wbuf_0_portBClear
  input  EN_wbuf_0_portBClear;

  // action method wbuf_1_portA_request_put
  input  [17 : 0] wbuf_1_portA_request_put;
  input  EN_wbuf_1_portA_request_put;
  output RDY_wbuf_1_portA_request_put;

  // actionvalue method wbuf_1_portA_response_get
  input  EN_wbuf_1_portA_response_get;
  output [7 : 0] wbuf_1_portA_response_get;
  output RDY_wbuf_1_portA_response_get;

  // action method wbuf_1_portB_request_put
  input  [17 : 0] wbuf_1_portB_request_put;
  input  EN_wbuf_1_portB_request_put;
  output RDY_wbuf_1_portB_request_put;

  // actionvalue method wbuf_1_portB_response_get
  input  EN_wbuf_1_portB_response_get;
  output [7 : 0] wbuf_1_portB_response_get;
  output RDY_wbuf_1_portB_response_get;

  // action method wbuf_1_portAClear
  input  EN_wbuf_1_portAClear;

  // action method wbuf_1_portBClear
  input  EN_wbuf_1_portBClear;

  // action method wbuf_2_portA_request_put
  input  [17 : 0] wbuf_2_portA_request_put;
  input  EN_wbuf_2_portA_request_put;
  output RDY_wbuf_2_portA_request_put;

  // actionvalue method wbuf_2_portA_response_get
  input  EN_wbuf_2_portA_response_get;
  output [7 : 0] wbuf_2_portA_response_get;
  output RDY_wbuf_2_portA_response_get;

  // action method wbuf_2_portB_request_put
  input  [17 : 0] wbuf_2_portB_request_put;
  input  EN_wbuf_2_portB_request_put;
  output RDY_wbuf_2_portB_request_put;

  // actionvalue method wbuf_2_portB_response_get
  input  EN_wbuf_2_portB_response_get;
  output [7 : 0] wbuf_2_portB_response_get;
  output RDY_wbuf_2_portB_response_get;

  // action method wbuf_2_portAClear
  input  EN_wbuf_2_portAClear;

  // action method wbuf_2_portBClear
  input  EN_wbuf_2_portBClear;

  // action method wbuf_3_portA_request_put
  input  [17 : 0] wbuf_3_portA_request_put;
  input  EN_wbuf_3_portA_request_put;
  output RDY_wbuf_3_portA_request_put;

  // actionvalue method wbuf_3_portA_response_get
  input  EN_wbuf_3_portA_response_get;
  output [7 : 0] wbuf_3_portA_response_get;
  output RDY_wbuf_3_portA_response_get;

  // action method wbuf_3_portB_request_put
  input  [17 : 0] wbuf_3_portB_request_put;
  input  EN_wbuf_3_portB_request_put;
  output RDY_wbuf_3_portB_request_put;

  // actionvalue method wbuf_3_portB_response_get
  input  EN_wbuf_3_portB_response_get;
  output [7 : 0] wbuf_3_portB_response_get;
  output RDY_wbuf_3_portB_response_get;

  // action method wbuf_3_portAClear
  input  EN_wbuf_3_portAClear;

  // action method wbuf_3_portBClear
  input  EN_wbuf_3_portBClear;

  // action method wbuf_4_portA_request_put
  input  [17 : 0] wbuf_4_portA_request_put;
  input  EN_wbuf_4_portA_request_put;
  output RDY_wbuf_4_portA_request_put;

  // actionvalue method wbuf_4_portA_response_get
  input  EN_wbuf_4_portA_response_get;
  output [7 : 0] wbuf_4_portA_response_get;
  output RDY_wbuf_4_portA_response_get;

  // action method wbuf_4_portB_request_put
  input  [17 : 0] wbuf_4_portB_request_put;
  input  EN_wbuf_4_portB_request_put;
  output RDY_wbuf_4_portB_request_put;

  // actionvalue method wbuf_4_portB_response_get
  input  EN_wbuf_4_portB_response_get;
  output [7 : 0] wbuf_4_portB_response_get;
  output RDY_wbuf_4_portB_response_get;

  // action method wbuf_4_portAClear
  input  EN_wbuf_4_portAClear;

  // action method wbuf_4_portBClear
  input  EN_wbuf_4_portBClear;

  // action method wbuf_5_portA_request_put
  input  [17 : 0] wbuf_5_portA_request_put;
  input  EN_wbuf_5_portA_request_put;
  output RDY_wbuf_5_portA_request_put;

  // actionvalue method wbuf_5_portA_response_get
  input  EN_wbuf_5_portA_response_get;
  output [7 : 0] wbuf_5_portA_response_get;
  output RDY_wbuf_5_portA_response_get;

  // action method wbuf_5_portB_request_put
  input  [17 : 0] wbuf_5_portB_request_put;
  input  EN_wbuf_5_portB_request_put;
  output RDY_wbuf_5_portB_request_put;

  // actionvalue method wbuf_5_portB_response_get
  input  EN_wbuf_5_portB_response_get;
  output [7 : 0] wbuf_5_portB_response_get;
  output RDY_wbuf_5_portB_response_get;

  // action method wbuf_5_portAClear
  input  EN_wbuf_5_portAClear;

  // action method wbuf_5_portBClear
  input  EN_wbuf_5_portBClear;

  // action method wbuf_6_portA_request_put
  input  [17 : 0] wbuf_6_portA_request_put;
  input  EN_wbuf_6_portA_request_put;
  output RDY_wbuf_6_portA_request_put;

  // actionvalue method wbuf_6_portA_response_get
  input  EN_wbuf_6_portA_response_get;
  output [7 : 0] wbuf_6_portA_response_get;
  output RDY_wbuf_6_portA_response_get;

  // action method wbuf_6_portB_request_put
  input  [17 : 0] wbuf_6_portB_request_put;
  input  EN_wbuf_6_portB_request_put;
  output RDY_wbuf_6_portB_request_put;

  // actionvalue method wbuf_6_portB_response_get
  input  EN_wbuf_6_portB_response_get;
  output [7 : 0] wbuf_6_portB_response_get;
  output RDY_wbuf_6_portB_response_get;

  // action method wbuf_6_portAClear
  input  EN_wbuf_6_portAClear;

  // action method wbuf_6_portBClear
  input  EN_wbuf_6_portBClear;

  // action method wbuf_7_portA_request_put
  input  [17 : 0] wbuf_7_portA_request_put;
  input  EN_wbuf_7_portA_request_put;
  output RDY_wbuf_7_portA_request_put;

  // actionvalue method wbuf_7_portA_response_get
  input  EN_wbuf_7_portA_response_get;
  output [7 : 0] wbuf_7_portA_response_get;
  output RDY_wbuf_7_portA_response_get;

  // action method wbuf_7_portB_request_put
  input  [17 : 0] wbuf_7_portB_request_put;
  input  EN_wbuf_7_portB_request_put;
  output RDY_wbuf_7_portB_request_put;

  // actionvalue method wbuf_7_portB_response_get
  input  EN_wbuf_7_portB_response_get;
  output [7 : 0] wbuf_7_portB_response_get;
  output RDY_wbuf_7_portB_response_get;

  // action method wbuf_7_portAClear
  input  EN_wbuf_7_portAClear;

  // action method wbuf_7_portBClear
  input  EN_wbuf_7_portBClear;

  // action method wbuf_8_portA_request_put
  input  [17 : 0] wbuf_8_portA_request_put;
  input  EN_wbuf_8_portA_request_put;
  output RDY_wbuf_8_portA_request_put;

  // actionvalue method wbuf_8_portA_response_get
  input  EN_wbuf_8_portA_response_get;
  output [7 : 0] wbuf_8_portA_response_get;
  output RDY_wbuf_8_portA_response_get;

  // action method wbuf_8_portB_request_put
  input  [17 : 0] wbuf_8_portB_request_put;
  input  EN_wbuf_8_portB_request_put;
  output RDY_wbuf_8_portB_request_put;

  // actionvalue method wbuf_8_portB_response_get
  input  EN_wbuf_8_portB_response_get;
  output [7 : 0] wbuf_8_portB_response_get;
  output RDY_wbuf_8_portB_response_get;

  // action method wbuf_8_portAClear
  input  EN_wbuf_8_portAClear;

  // action method wbuf_8_portBClear
  input  EN_wbuf_8_portBClear;

  // action method wbuf_9_portA_request_put
  input  [17 : 0] wbuf_9_portA_request_put;
  input  EN_wbuf_9_portA_request_put;
  output RDY_wbuf_9_portA_request_put;

  // actionvalue method wbuf_9_portA_response_get
  input  EN_wbuf_9_portA_response_get;
  output [7 : 0] wbuf_9_portA_response_get;
  output RDY_wbuf_9_portA_response_get;

  // action method wbuf_9_portB_request_put
  input  [17 : 0] wbuf_9_portB_request_put;
  input  EN_wbuf_9_portB_request_put;
  output RDY_wbuf_9_portB_request_put;

  // actionvalue method wbuf_9_portB_response_get
  input  EN_wbuf_9_portB_response_get;
  output [7 : 0] wbuf_9_portB_response_get;
  output RDY_wbuf_9_portB_response_get;

  // action method wbuf_9_portAClear
  input  EN_wbuf_9_portAClear;

  // action method wbuf_9_portBClear
  input  EN_wbuf_9_portBClear;

  // action method wbuf_10_portA_request_put
  input  [17 : 0] wbuf_10_portA_request_put;
  input  EN_wbuf_10_portA_request_put;
  output RDY_wbuf_10_portA_request_put;

  // actionvalue method wbuf_10_portA_response_get
  input  EN_wbuf_10_portA_response_get;
  output [7 : 0] wbuf_10_portA_response_get;
  output RDY_wbuf_10_portA_response_get;

  // action method wbuf_10_portB_request_put
  input  [17 : 0] wbuf_10_portB_request_put;
  input  EN_wbuf_10_portB_request_put;
  output RDY_wbuf_10_portB_request_put;

  // actionvalue method wbuf_10_portB_response_get
  input  EN_wbuf_10_portB_response_get;
  output [7 : 0] wbuf_10_portB_response_get;
  output RDY_wbuf_10_portB_response_get;

  // action method wbuf_10_portAClear
  input  EN_wbuf_10_portAClear;

  // action method wbuf_10_portBClear
  input  EN_wbuf_10_portBClear;

  // action method wbuf_11_portA_request_put
  input  [17 : 0] wbuf_11_portA_request_put;
  input  EN_wbuf_11_portA_request_put;
  output RDY_wbuf_11_portA_request_put;

  // actionvalue method wbuf_11_portA_response_get
  input  EN_wbuf_11_portA_response_get;
  output [7 : 0] wbuf_11_portA_response_get;
  output RDY_wbuf_11_portA_response_get;

  // action method wbuf_11_portB_request_put
  input  [17 : 0] wbuf_11_portB_request_put;
  input  EN_wbuf_11_portB_request_put;
  output RDY_wbuf_11_portB_request_put;

  // actionvalue method wbuf_11_portB_response_get
  input  EN_wbuf_11_portB_response_get;
  output [7 : 0] wbuf_11_portB_response_get;
  output RDY_wbuf_11_portB_response_get;

  // action method wbuf_11_portAClear
  input  EN_wbuf_11_portAClear;

  // action method wbuf_11_portBClear
  input  EN_wbuf_11_portBClear;

  // action method wbuf_12_portA_request_put
  input  [17 : 0] wbuf_12_portA_request_put;
  input  EN_wbuf_12_portA_request_put;
  output RDY_wbuf_12_portA_request_put;

  // actionvalue method wbuf_12_portA_response_get
  input  EN_wbuf_12_portA_response_get;
  output [7 : 0] wbuf_12_portA_response_get;
  output RDY_wbuf_12_portA_response_get;

  // action method wbuf_12_portB_request_put
  input  [17 : 0] wbuf_12_portB_request_put;
  input  EN_wbuf_12_portB_request_put;
  output RDY_wbuf_12_portB_request_put;

  // actionvalue method wbuf_12_portB_response_get
  input  EN_wbuf_12_portB_response_get;
  output [7 : 0] wbuf_12_portB_response_get;
  output RDY_wbuf_12_portB_response_get;

  // action method wbuf_12_portAClear
  input  EN_wbuf_12_portAClear;

  // action method wbuf_12_portBClear
  input  EN_wbuf_12_portBClear;

  // action method wbuf_13_portA_request_put
  input  [17 : 0] wbuf_13_portA_request_put;
  input  EN_wbuf_13_portA_request_put;
  output RDY_wbuf_13_portA_request_put;

  // actionvalue method wbuf_13_portA_response_get
  input  EN_wbuf_13_portA_response_get;
  output [7 : 0] wbuf_13_portA_response_get;
  output RDY_wbuf_13_portA_response_get;

  // action method wbuf_13_portB_request_put
  input  [17 : 0] wbuf_13_portB_request_put;
  input  EN_wbuf_13_portB_request_put;
  output RDY_wbuf_13_portB_request_put;

  // actionvalue method wbuf_13_portB_response_get
  input  EN_wbuf_13_portB_response_get;
  output [7 : 0] wbuf_13_portB_response_get;
  output RDY_wbuf_13_portB_response_get;

  // action method wbuf_13_portAClear
  input  EN_wbuf_13_portAClear;

  // action method wbuf_13_portBClear
  input  EN_wbuf_13_portBClear;

  // action method wbuf_14_portA_request_put
  input  [17 : 0] wbuf_14_portA_request_put;
  input  EN_wbuf_14_portA_request_put;
  output RDY_wbuf_14_portA_request_put;

  // actionvalue method wbuf_14_portA_response_get
  input  EN_wbuf_14_portA_response_get;
  output [7 : 0] wbuf_14_portA_response_get;
  output RDY_wbuf_14_portA_response_get;

  // action method wbuf_14_portB_request_put
  input  [17 : 0] wbuf_14_portB_request_put;
  input  EN_wbuf_14_portB_request_put;
  output RDY_wbuf_14_portB_request_put;

  // actionvalue method wbuf_14_portB_response_get
  input  EN_wbuf_14_portB_response_get;
  output [7 : 0] wbuf_14_portB_response_get;
  output RDY_wbuf_14_portB_response_get;

  // action method wbuf_14_portAClear
  input  EN_wbuf_14_portAClear;

  // action method wbuf_14_portBClear
  input  EN_wbuf_14_portBClear;

  // action method wbuf_15_portA_request_put
  input  [17 : 0] wbuf_15_portA_request_put;
  input  EN_wbuf_15_portA_request_put;
  output RDY_wbuf_15_portA_request_put;

  // actionvalue method wbuf_15_portA_response_get
  input  EN_wbuf_15_portA_response_get;
  output [7 : 0] wbuf_15_portA_response_get;
  output RDY_wbuf_15_portA_response_get;

  // action method wbuf_15_portB_request_put
  input  [17 : 0] wbuf_15_portB_request_put;
  input  EN_wbuf_15_portB_request_put;
  output RDY_wbuf_15_portB_request_put;

  // actionvalue method wbuf_15_portB_response_get
  input  EN_wbuf_15_portB_response_get;
  output [7 : 0] wbuf_15_portB_response_get;
  output RDY_wbuf_15_portB_response_get;

  // action method wbuf_15_portAClear
  input  EN_wbuf_15_portAClear;

  // action method wbuf_15_portBClear
  input  EN_wbuf_15_portBClear;

  // action method wbuf_16_portA_request_put
  input  [17 : 0] wbuf_16_portA_request_put;
  input  EN_wbuf_16_portA_request_put;
  output RDY_wbuf_16_portA_request_put;

  // actionvalue method wbuf_16_portA_response_get
  input  EN_wbuf_16_portA_response_get;
  output [7 : 0] wbuf_16_portA_response_get;
  output RDY_wbuf_16_portA_response_get;

  // action method wbuf_16_portB_request_put
  input  [17 : 0] wbuf_16_portB_request_put;
  input  EN_wbuf_16_portB_request_put;
  output RDY_wbuf_16_portB_request_put;

  // actionvalue method wbuf_16_portB_response_get
  input  EN_wbuf_16_portB_response_get;
  output [7 : 0] wbuf_16_portB_response_get;
  output RDY_wbuf_16_portB_response_get;

  // action method wbuf_16_portAClear
  input  EN_wbuf_16_portAClear;

  // action method wbuf_16_portBClear
  input  EN_wbuf_16_portBClear;

  // action method wbuf_17_portA_request_put
  input  [17 : 0] wbuf_17_portA_request_put;
  input  EN_wbuf_17_portA_request_put;
  output RDY_wbuf_17_portA_request_put;

  // actionvalue method wbuf_17_portA_response_get
  input  EN_wbuf_17_portA_response_get;
  output [7 : 0] wbuf_17_portA_response_get;
  output RDY_wbuf_17_portA_response_get;

  // action method wbuf_17_portB_request_put
  input  [17 : 0] wbuf_17_portB_request_put;
  input  EN_wbuf_17_portB_request_put;
  output RDY_wbuf_17_portB_request_put;

  // actionvalue method wbuf_17_portB_response_get
  input  EN_wbuf_17_portB_response_get;
  output [7 : 0] wbuf_17_portB_response_get;
  output RDY_wbuf_17_portB_response_get;

  // action method wbuf_17_portAClear
  input  EN_wbuf_17_portAClear;

  // action method wbuf_17_portBClear
  input  EN_wbuf_17_portBClear;

  // action method wbuf_18_portA_request_put
  input  [17 : 0] wbuf_18_portA_request_put;
  input  EN_wbuf_18_portA_request_put;
  output RDY_wbuf_18_portA_request_put;

  // actionvalue method wbuf_18_portA_response_get
  input  EN_wbuf_18_portA_response_get;
  output [7 : 0] wbuf_18_portA_response_get;
  output RDY_wbuf_18_portA_response_get;

  // action method wbuf_18_portB_request_put
  input  [17 : 0] wbuf_18_portB_request_put;
  input  EN_wbuf_18_portB_request_put;
  output RDY_wbuf_18_portB_request_put;

  // actionvalue method wbuf_18_portB_response_get
  input  EN_wbuf_18_portB_response_get;
  output [7 : 0] wbuf_18_portB_response_get;
  output RDY_wbuf_18_portB_response_get;

  // action method wbuf_18_portAClear
  input  EN_wbuf_18_portAClear;

  // action method wbuf_18_portBClear
  input  EN_wbuf_18_portBClear;

  // action method wbuf_19_portA_request_put
  input  [17 : 0] wbuf_19_portA_request_put;
  input  EN_wbuf_19_portA_request_put;
  output RDY_wbuf_19_portA_request_put;

  // actionvalue method wbuf_19_portA_response_get
  input  EN_wbuf_19_portA_response_get;
  output [7 : 0] wbuf_19_portA_response_get;
  output RDY_wbuf_19_portA_response_get;

  // action method wbuf_19_portB_request_put
  input  [17 : 0] wbuf_19_portB_request_put;
  input  EN_wbuf_19_portB_request_put;
  output RDY_wbuf_19_portB_request_put;

  // actionvalue method wbuf_19_portB_response_get
  input  EN_wbuf_19_portB_response_get;
  output [7 : 0] wbuf_19_portB_response_get;
  output RDY_wbuf_19_portB_response_get;

  // action method wbuf_19_portAClear
  input  EN_wbuf_19_portAClear;

  // action method wbuf_19_portBClear
  input  EN_wbuf_19_portBClear;

  // action method wbuf_20_portA_request_put
  input  [17 : 0] wbuf_20_portA_request_put;
  input  EN_wbuf_20_portA_request_put;
  output RDY_wbuf_20_portA_request_put;

  // actionvalue method wbuf_20_portA_response_get
  input  EN_wbuf_20_portA_response_get;
  output [7 : 0] wbuf_20_portA_response_get;
  output RDY_wbuf_20_portA_response_get;

  // action method wbuf_20_portB_request_put
  input  [17 : 0] wbuf_20_portB_request_put;
  input  EN_wbuf_20_portB_request_put;
  output RDY_wbuf_20_portB_request_put;

  // actionvalue method wbuf_20_portB_response_get
  input  EN_wbuf_20_portB_response_get;
  output [7 : 0] wbuf_20_portB_response_get;
  output RDY_wbuf_20_portB_response_get;

  // action method wbuf_20_portAClear
  input  EN_wbuf_20_portAClear;

  // action method wbuf_20_portBClear
  input  EN_wbuf_20_portBClear;

  // action method wbuf_21_portA_request_put
  input  [17 : 0] wbuf_21_portA_request_put;
  input  EN_wbuf_21_portA_request_put;
  output RDY_wbuf_21_portA_request_put;

  // actionvalue method wbuf_21_portA_response_get
  input  EN_wbuf_21_portA_response_get;
  output [7 : 0] wbuf_21_portA_response_get;
  output RDY_wbuf_21_portA_response_get;

  // action method wbuf_21_portB_request_put
  input  [17 : 0] wbuf_21_portB_request_put;
  input  EN_wbuf_21_portB_request_put;
  output RDY_wbuf_21_portB_request_put;

  // actionvalue method wbuf_21_portB_response_get
  input  EN_wbuf_21_portB_response_get;
  output [7 : 0] wbuf_21_portB_response_get;
  output RDY_wbuf_21_portB_response_get;

  // action method wbuf_21_portAClear
  input  EN_wbuf_21_portAClear;

  // action method wbuf_21_portBClear
  input  EN_wbuf_21_portBClear;

  // action method wbuf_22_portA_request_put
  input  [17 : 0] wbuf_22_portA_request_put;
  input  EN_wbuf_22_portA_request_put;
  output RDY_wbuf_22_portA_request_put;

  // actionvalue method wbuf_22_portA_response_get
  input  EN_wbuf_22_portA_response_get;
  output [7 : 0] wbuf_22_portA_response_get;
  output RDY_wbuf_22_portA_response_get;

  // action method wbuf_22_portB_request_put
  input  [17 : 0] wbuf_22_portB_request_put;
  input  EN_wbuf_22_portB_request_put;
  output RDY_wbuf_22_portB_request_put;

  // actionvalue method wbuf_22_portB_response_get
  input  EN_wbuf_22_portB_response_get;
  output [7 : 0] wbuf_22_portB_response_get;
  output RDY_wbuf_22_portB_response_get;

  // action method wbuf_22_portAClear
  input  EN_wbuf_22_portAClear;

  // action method wbuf_22_portBClear
  input  EN_wbuf_22_portBClear;

  // action method wbuf_23_portA_request_put
  input  [17 : 0] wbuf_23_portA_request_put;
  input  EN_wbuf_23_portA_request_put;
  output RDY_wbuf_23_portA_request_put;

  // actionvalue method wbuf_23_portA_response_get
  input  EN_wbuf_23_portA_response_get;
  output [7 : 0] wbuf_23_portA_response_get;
  output RDY_wbuf_23_portA_response_get;

  // action method wbuf_23_portB_request_put
  input  [17 : 0] wbuf_23_portB_request_put;
  input  EN_wbuf_23_portB_request_put;
  output RDY_wbuf_23_portB_request_put;

  // actionvalue method wbuf_23_portB_response_get
  input  EN_wbuf_23_portB_response_get;
  output [7 : 0] wbuf_23_portB_response_get;
  output RDY_wbuf_23_portB_response_get;

  // action method wbuf_23_portAClear
  input  EN_wbuf_23_portAClear;

  // action method wbuf_23_portBClear
  input  EN_wbuf_23_portBClear;

  // action method wbuf_24_portA_request_put
  input  [17 : 0] wbuf_24_portA_request_put;
  input  EN_wbuf_24_portA_request_put;
  output RDY_wbuf_24_portA_request_put;

  // actionvalue method wbuf_24_portA_response_get
  input  EN_wbuf_24_portA_response_get;
  output [7 : 0] wbuf_24_portA_response_get;
  output RDY_wbuf_24_portA_response_get;

  // action method wbuf_24_portB_request_put
  input  [17 : 0] wbuf_24_portB_request_put;
  input  EN_wbuf_24_portB_request_put;
  output RDY_wbuf_24_portB_request_put;

  // actionvalue method wbuf_24_portB_response_get
  input  EN_wbuf_24_portB_response_get;
  output [7 : 0] wbuf_24_portB_response_get;
  output RDY_wbuf_24_portB_response_get;

  // action method wbuf_24_portAClear
  input  EN_wbuf_24_portAClear;

  // action method wbuf_24_portBClear
  input  EN_wbuf_24_portBClear;

  // action method wbuf_25_portA_request_put
  input  [17 : 0] wbuf_25_portA_request_put;
  input  EN_wbuf_25_portA_request_put;
  output RDY_wbuf_25_portA_request_put;

  // actionvalue method wbuf_25_portA_response_get
  input  EN_wbuf_25_portA_response_get;
  output [7 : 0] wbuf_25_portA_response_get;
  output RDY_wbuf_25_portA_response_get;

  // action method wbuf_25_portB_request_put
  input  [17 : 0] wbuf_25_portB_request_put;
  input  EN_wbuf_25_portB_request_put;
  output RDY_wbuf_25_portB_request_put;

  // actionvalue method wbuf_25_portB_response_get
  input  EN_wbuf_25_portB_response_get;
  output [7 : 0] wbuf_25_portB_response_get;
  output RDY_wbuf_25_portB_response_get;

  // action method wbuf_25_portAClear
  input  EN_wbuf_25_portAClear;

  // action method wbuf_25_portBClear
  input  EN_wbuf_25_portBClear;

  // action method wbuf_26_portA_request_put
  input  [17 : 0] wbuf_26_portA_request_put;
  input  EN_wbuf_26_portA_request_put;
  output RDY_wbuf_26_portA_request_put;

  // actionvalue method wbuf_26_portA_response_get
  input  EN_wbuf_26_portA_response_get;
  output [7 : 0] wbuf_26_portA_response_get;
  output RDY_wbuf_26_portA_response_get;

  // action method wbuf_26_portB_request_put
  input  [17 : 0] wbuf_26_portB_request_put;
  input  EN_wbuf_26_portB_request_put;
  output RDY_wbuf_26_portB_request_put;

  // actionvalue method wbuf_26_portB_response_get
  input  EN_wbuf_26_portB_response_get;
  output [7 : 0] wbuf_26_portB_response_get;
  output RDY_wbuf_26_portB_response_get;

  // action method wbuf_26_portAClear
  input  EN_wbuf_26_portAClear;

  // action method wbuf_26_portBClear
  input  EN_wbuf_26_portBClear;

  // action method wbuf_27_portA_request_put
  input  [17 : 0] wbuf_27_portA_request_put;
  input  EN_wbuf_27_portA_request_put;
  output RDY_wbuf_27_portA_request_put;

  // actionvalue method wbuf_27_portA_response_get
  input  EN_wbuf_27_portA_response_get;
  output [7 : 0] wbuf_27_portA_response_get;
  output RDY_wbuf_27_portA_response_get;

  // action method wbuf_27_portB_request_put
  input  [17 : 0] wbuf_27_portB_request_put;
  input  EN_wbuf_27_portB_request_put;
  output RDY_wbuf_27_portB_request_put;

  // actionvalue method wbuf_27_portB_response_get
  input  EN_wbuf_27_portB_response_get;
  output [7 : 0] wbuf_27_portB_response_get;
  output RDY_wbuf_27_portB_response_get;

  // action method wbuf_27_portAClear
  input  EN_wbuf_27_portAClear;

  // action method wbuf_27_portBClear
  input  EN_wbuf_27_portBClear;

  // action method wbuf_28_portA_request_put
  input  [17 : 0] wbuf_28_portA_request_put;
  input  EN_wbuf_28_portA_request_put;
  output RDY_wbuf_28_portA_request_put;

  // actionvalue method wbuf_28_portA_response_get
  input  EN_wbuf_28_portA_response_get;
  output [7 : 0] wbuf_28_portA_response_get;
  output RDY_wbuf_28_portA_response_get;

  // action method wbuf_28_portB_request_put
  input  [17 : 0] wbuf_28_portB_request_put;
  input  EN_wbuf_28_portB_request_put;
  output RDY_wbuf_28_portB_request_put;

  // actionvalue method wbuf_28_portB_response_get
  input  EN_wbuf_28_portB_response_get;
  output [7 : 0] wbuf_28_portB_response_get;
  output RDY_wbuf_28_portB_response_get;

  // action method wbuf_28_portAClear
  input  EN_wbuf_28_portAClear;

  // action method wbuf_28_portBClear
  input  EN_wbuf_28_portBClear;

  // action method wbuf_29_portA_request_put
  input  [17 : 0] wbuf_29_portA_request_put;
  input  EN_wbuf_29_portA_request_put;
  output RDY_wbuf_29_portA_request_put;

  // actionvalue method wbuf_29_portA_response_get
  input  EN_wbuf_29_portA_response_get;
  output [7 : 0] wbuf_29_portA_response_get;
  output RDY_wbuf_29_portA_response_get;

  // action method wbuf_29_portB_request_put
  input  [17 : 0] wbuf_29_portB_request_put;
  input  EN_wbuf_29_portB_request_put;
  output RDY_wbuf_29_portB_request_put;

  // actionvalue method wbuf_29_portB_response_get
  input  EN_wbuf_29_portB_response_get;
  output [7 : 0] wbuf_29_portB_response_get;
  output RDY_wbuf_29_portB_response_get;

  // action method wbuf_29_portAClear
  input  EN_wbuf_29_portAClear;

  // action method wbuf_29_portBClear
  input  EN_wbuf_29_portBClear;

  // action method wbuf_30_portA_request_put
  input  [17 : 0] wbuf_30_portA_request_put;
  input  EN_wbuf_30_portA_request_put;
  output RDY_wbuf_30_portA_request_put;

  // actionvalue method wbuf_30_portA_response_get
  input  EN_wbuf_30_portA_response_get;
  output [7 : 0] wbuf_30_portA_response_get;
  output RDY_wbuf_30_portA_response_get;

  // action method wbuf_30_portB_request_put
  input  [17 : 0] wbuf_30_portB_request_put;
  input  EN_wbuf_30_portB_request_put;
  output RDY_wbuf_30_portB_request_put;

  // actionvalue method wbuf_30_portB_response_get
  input  EN_wbuf_30_portB_response_get;
  output [7 : 0] wbuf_30_portB_response_get;
  output RDY_wbuf_30_portB_response_get;

  // action method wbuf_30_portAClear
  input  EN_wbuf_30_portAClear;

  // action method wbuf_30_portBClear
  input  EN_wbuf_30_portBClear;

  // action method wbuf_31_portA_request_put
  input  [17 : 0] wbuf_31_portA_request_put;
  input  EN_wbuf_31_portA_request_put;
  output RDY_wbuf_31_portA_request_put;

  // actionvalue method wbuf_31_portA_response_get
  input  EN_wbuf_31_portA_response_get;
  output [7 : 0] wbuf_31_portA_response_get;
  output RDY_wbuf_31_portA_response_get;

  // action method wbuf_31_portB_request_put
  input  [17 : 0] wbuf_31_portB_request_put;
  input  EN_wbuf_31_portB_request_put;
  output RDY_wbuf_31_portB_request_put;

  // actionvalue method wbuf_31_portB_response_get
  input  EN_wbuf_31_portB_response_get;
  output [7 : 0] wbuf_31_portB_response_get;
  output RDY_wbuf_31_portB_response_get;

  // action method wbuf_31_portAClear
  input  EN_wbuf_31_portAClear;

  // action method wbuf_31_portBClear
  input  EN_wbuf_31_portBClear;

  // action method obuf1_0_portA_request_put
  input  [41 : 0] obuf1_0_portA_request_put;
  input  EN_obuf1_0_portA_request_put;
  output RDY_obuf1_0_portA_request_put;

  // actionvalue method obuf1_0_portA_response_get
  input  EN_obuf1_0_portA_response_get;
  output [31 : 0] obuf1_0_portA_response_get;
  output RDY_obuf1_0_portA_response_get;

  // action method obuf1_0_portB_request_put
  input  [41 : 0] obuf1_0_portB_request_put;
  input  EN_obuf1_0_portB_request_put;
  output RDY_obuf1_0_portB_request_put;

  // actionvalue method obuf1_0_portB_response_get
  input  EN_obuf1_0_portB_response_get;
  output [31 : 0] obuf1_0_portB_response_get;
  output RDY_obuf1_0_portB_response_get;

  // action method obuf1_0_portAClear
  input  EN_obuf1_0_portAClear;

  // action method obuf1_0_portBClear
  input  EN_obuf1_0_portBClear;

  // action method obuf1_1_portA_request_put
  input  [41 : 0] obuf1_1_portA_request_put;
  input  EN_obuf1_1_portA_request_put;
  output RDY_obuf1_1_portA_request_put;

  // actionvalue method obuf1_1_portA_response_get
  input  EN_obuf1_1_portA_response_get;
  output [31 : 0] obuf1_1_portA_response_get;
  output RDY_obuf1_1_portA_response_get;

  // action method obuf1_1_portB_request_put
  input  [41 : 0] obuf1_1_portB_request_put;
  input  EN_obuf1_1_portB_request_put;
  output RDY_obuf1_1_portB_request_put;

  // actionvalue method obuf1_1_portB_response_get
  input  EN_obuf1_1_portB_response_get;
  output [31 : 0] obuf1_1_portB_response_get;
  output RDY_obuf1_1_portB_response_get;

  // action method obuf1_1_portAClear
  input  EN_obuf1_1_portAClear;

  // action method obuf1_1_portBClear
  input  EN_obuf1_1_portBClear;

  // action method obuf1_2_portA_request_put
  input  [41 : 0] obuf1_2_portA_request_put;
  input  EN_obuf1_2_portA_request_put;
  output RDY_obuf1_2_portA_request_put;

  // actionvalue method obuf1_2_portA_response_get
  input  EN_obuf1_2_portA_response_get;
  output [31 : 0] obuf1_2_portA_response_get;
  output RDY_obuf1_2_portA_response_get;

  // action method obuf1_2_portB_request_put
  input  [41 : 0] obuf1_2_portB_request_put;
  input  EN_obuf1_2_portB_request_put;
  output RDY_obuf1_2_portB_request_put;

  // actionvalue method obuf1_2_portB_response_get
  input  EN_obuf1_2_portB_response_get;
  output [31 : 0] obuf1_2_portB_response_get;
  output RDY_obuf1_2_portB_response_get;

  // action method obuf1_2_portAClear
  input  EN_obuf1_2_portAClear;

  // action method obuf1_2_portBClear
  input  EN_obuf1_2_portBClear;

  // action method obuf1_3_portA_request_put
  input  [41 : 0] obuf1_3_portA_request_put;
  input  EN_obuf1_3_portA_request_put;
  output RDY_obuf1_3_portA_request_put;

  // actionvalue method obuf1_3_portA_response_get
  input  EN_obuf1_3_portA_response_get;
  output [31 : 0] obuf1_3_portA_response_get;
  output RDY_obuf1_3_portA_response_get;

  // action method obuf1_3_portB_request_put
  input  [41 : 0] obuf1_3_portB_request_put;
  input  EN_obuf1_3_portB_request_put;
  output RDY_obuf1_3_portB_request_put;

  // actionvalue method obuf1_3_portB_response_get
  input  EN_obuf1_3_portB_response_get;
  output [31 : 0] obuf1_3_portB_response_get;
  output RDY_obuf1_3_portB_response_get;

  // action method obuf1_3_portAClear
  input  EN_obuf1_3_portAClear;

  // action method obuf1_3_portBClear
  input  EN_obuf1_3_portBClear;

  // action method obuf1_4_portA_request_put
  input  [41 : 0] obuf1_4_portA_request_put;
  input  EN_obuf1_4_portA_request_put;
  output RDY_obuf1_4_portA_request_put;

  // actionvalue method obuf1_4_portA_response_get
  input  EN_obuf1_4_portA_response_get;
  output [31 : 0] obuf1_4_portA_response_get;
  output RDY_obuf1_4_portA_response_get;

  // action method obuf1_4_portB_request_put
  input  [41 : 0] obuf1_4_portB_request_put;
  input  EN_obuf1_4_portB_request_put;
  output RDY_obuf1_4_portB_request_put;

  // actionvalue method obuf1_4_portB_response_get
  input  EN_obuf1_4_portB_response_get;
  output [31 : 0] obuf1_4_portB_response_get;
  output RDY_obuf1_4_portB_response_get;

  // action method obuf1_4_portAClear
  input  EN_obuf1_4_portAClear;

  // action method obuf1_4_portBClear
  input  EN_obuf1_4_portBClear;

  // action method obuf1_5_portA_request_put
  input  [41 : 0] obuf1_5_portA_request_put;
  input  EN_obuf1_5_portA_request_put;
  output RDY_obuf1_5_portA_request_put;

  // actionvalue method obuf1_5_portA_response_get
  input  EN_obuf1_5_portA_response_get;
  output [31 : 0] obuf1_5_portA_response_get;
  output RDY_obuf1_5_portA_response_get;

  // action method obuf1_5_portB_request_put
  input  [41 : 0] obuf1_5_portB_request_put;
  input  EN_obuf1_5_portB_request_put;
  output RDY_obuf1_5_portB_request_put;

  // actionvalue method obuf1_5_portB_response_get
  input  EN_obuf1_5_portB_response_get;
  output [31 : 0] obuf1_5_portB_response_get;
  output RDY_obuf1_5_portB_response_get;

  // action method obuf1_5_portAClear
  input  EN_obuf1_5_portAClear;

  // action method obuf1_5_portBClear
  input  EN_obuf1_5_portBClear;

  // action method obuf1_6_portA_request_put
  input  [41 : 0] obuf1_6_portA_request_put;
  input  EN_obuf1_6_portA_request_put;
  output RDY_obuf1_6_portA_request_put;

  // actionvalue method obuf1_6_portA_response_get
  input  EN_obuf1_6_portA_response_get;
  output [31 : 0] obuf1_6_portA_response_get;
  output RDY_obuf1_6_portA_response_get;

  // action method obuf1_6_portB_request_put
  input  [41 : 0] obuf1_6_portB_request_put;
  input  EN_obuf1_6_portB_request_put;
  output RDY_obuf1_6_portB_request_put;

  // actionvalue method obuf1_6_portB_response_get
  input  EN_obuf1_6_portB_response_get;
  output [31 : 0] obuf1_6_portB_response_get;
  output RDY_obuf1_6_portB_response_get;

  // action method obuf1_6_portAClear
  input  EN_obuf1_6_portAClear;

  // action method obuf1_6_portBClear
  input  EN_obuf1_6_portBClear;

  // action method obuf1_7_portA_request_put
  input  [41 : 0] obuf1_7_portA_request_put;
  input  EN_obuf1_7_portA_request_put;
  output RDY_obuf1_7_portA_request_put;

  // actionvalue method obuf1_7_portA_response_get
  input  EN_obuf1_7_portA_response_get;
  output [31 : 0] obuf1_7_portA_response_get;
  output RDY_obuf1_7_portA_response_get;

  // action method obuf1_7_portB_request_put
  input  [41 : 0] obuf1_7_portB_request_put;
  input  EN_obuf1_7_portB_request_put;
  output RDY_obuf1_7_portB_request_put;

  // actionvalue method obuf1_7_portB_response_get
  input  EN_obuf1_7_portB_response_get;
  output [31 : 0] obuf1_7_portB_response_get;
  output RDY_obuf1_7_portB_response_get;

  // action method obuf1_7_portAClear
  input  EN_obuf1_7_portAClear;

  // action method obuf1_7_portBClear
  input  EN_obuf1_7_portBClear;

  // action method obuf1_8_portA_request_put
  input  [41 : 0] obuf1_8_portA_request_put;
  input  EN_obuf1_8_portA_request_put;
  output RDY_obuf1_8_portA_request_put;

  // actionvalue method obuf1_8_portA_response_get
  input  EN_obuf1_8_portA_response_get;
  output [31 : 0] obuf1_8_portA_response_get;
  output RDY_obuf1_8_portA_response_get;

  // action method obuf1_8_portB_request_put
  input  [41 : 0] obuf1_8_portB_request_put;
  input  EN_obuf1_8_portB_request_put;
  output RDY_obuf1_8_portB_request_put;

  // actionvalue method obuf1_8_portB_response_get
  input  EN_obuf1_8_portB_response_get;
  output [31 : 0] obuf1_8_portB_response_get;
  output RDY_obuf1_8_portB_response_get;

  // action method obuf1_8_portAClear
  input  EN_obuf1_8_portAClear;

  // action method obuf1_8_portBClear
  input  EN_obuf1_8_portBClear;

  // action method obuf1_9_portA_request_put
  input  [41 : 0] obuf1_9_portA_request_put;
  input  EN_obuf1_9_portA_request_put;
  output RDY_obuf1_9_portA_request_put;

  // actionvalue method obuf1_9_portA_response_get
  input  EN_obuf1_9_portA_response_get;
  output [31 : 0] obuf1_9_portA_response_get;
  output RDY_obuf1_9_portA_response_get;

  // action method obuf1_9_portB_request_put
  input  [41 : 0] obuf1_9_portB_request_put;
  input  EN_obuf1_9_portB_request_put;
  output RDY_obuf1_9_portB_request_put;

  // actionvalue method obuf1_9_portB_response_get
  input  EN_obuf1_9_portB_response_get;
  output [31 : 0] obuf1_9_portB_response_get;
  output RDY_obuf1_9_portB_response_get;

  // action method obuf1_9_portAClear
  input  EN_obuf1_9_portAClear;

  // action method obuf1_9_portBClear
  input  EN_obuf1_9_portBClear;

  // action method obuf1_10_portA_request_put
  input  [41 : 0] obuf1_10_portA_request_put;
  input  EN_obuf1_10_portA_request_put;
  output RDY_obuf1_10_portA_request_put;

  // actionvalue method obuf1_10_portA_response_get
  input  EN_obuf1_10_portA_response_get;
  output [31 : 0] obuf1_10_portA_response_get;
  output RDY_obuf1_10_portA_response_get;

  // action method obuf1_10_portB_request_put
  input  [41 : 0] obuf1_10_portB_request_put;
  input  EN_obuf1_10_portB_request_put;
  output RDY_obuf1_10_portB_request_put;

  // actionvalue method obuf1_10_portB_response_get
  input  EN_obuf1_10_portB_response_get;
  output [31 : 0] obuf1_10_portB_response_get;
  output RDY_obuf1_10_portB_response_get;

  // action method obuf1_10_portAClear
  input  EN_obuf1_10_portAClear;

  // action method obuf1_10_portBClear
  input  EN_obuf1_10_portBClear;

  // action method obuf1_11_portA_request_put
  input  [41 : 0] obuf1_11_portA_request_put;
  input  EN_obuf1_11_portA_request_put;
  output RDY_obuf1_11_portA_request_put;

  // actionvalue method obuf1_11_portA_response_get
  input  EN_obuf1_11_portA_response_get;
  output [31 : 0] obuf1_11_portA_response_get;
  output RDY_obuf1_11_portA_response_get;

  // action method obuf1_11_portB_request_put
  input  [41 : 0] obuf1_11_portB_request_put;
  input  EN_obuf1_11_portB_request_put;
  output RDY_obuf1_11_portB_request_put;

  // actionvalue method obuf1_11_portB_response_get
  input  EN_obuf1_11_portB_response_get;
  output [31 : 0] obuf1_11_portB_response_get;
  output RDY_obuf1_11_portB_response_get;

  // action method obuf1_11_portAClear
  input  EN_obuf1_11_portAClear;

  // action method obuf1_11_portBClear
  input  EN_obuf1_11_portBClear;

  // action method obuf1_12_portA_request_put
  input  [41 : 0] obuf1_12_portA_request_put;
  input  EN_obuf1_12_portA_request_put;
  output RDY_obuf1_12_portA_request_put;

  // actionvalue method obuf1_12_portA_response_get
  input  EN_obuf1_12_portA_response_get;
  output [31 : 0] obuf1_12_portA_response_get;
  output RDY_obuf1_12_portA_response_get;

  // action method obuf1_12_portB_request_put
  input  [41 : 0] obuf1_12_portB_request_put;
  input  EN_obuf1_12_portB_request_put;
  output RDY_obuf1_12_portB_request_put;

  // actionvalue method obuf1_12_portB_response_get
  input  EN_obuf1_12_portB_response_get;
  output [31 : 0] obuf1_12_portB_response_get;
  output RDY_obuf1_12_portB_response_get;

  // action method obuf1_12_portAClear
  input  EN_obuf1_12_portAClear;

  // action method obuf1_12_portBClear
  input  EN_obuf1_12_portBClear;

  // action method obuf1_13_portA_request_put
  input  [41 : 0] obuf1_13_portA_request_put;
  input  EN_obuf1_13_portA_request_put;
  output RDY_obuf1_13_portA_request_put;

  // actionvalue method obuf1_13_portA_response_get
  input  EN_obuf1_13_portA_response_get;
  output [31 : 0] obuf1_13_portA_response_get;
  output RDY_obuf1_13_portA_response_get;

  // action method obuf1_13_portB_request_put
  input  [41 : 0] obuf1_13_portB_request_put;
  input  EN_obuf1_13_portB_request_put;
  output RDY_obuf1_13_portB_request_put;

  // actionvalue method obuf1_13_portB_response_get
  input  EN_obuf1_13_portB_response_get;
  output [31 : 0] obuf1_13_portB_response_get;
  output RDY_obuf1_13_portB_response_get;

  // action method obuf1_13_portAClear
  input  EN_obuf1_13_portAClear;

  // action method obuf1_13_portBClear
  input  EN_obuf1_13_portBClear;

  // action method obuf1_14_portA_request_put
  input  [41 : 0] obuf1_14_portA_request_put;
  input  EN_obuf1_14_portA_request_put;
  output RDY_obuf1_14_portA_request_put;

  // actionvalue method obuf1_14_portA_response_get
  input  EN_obuf1_14_portA_response_get;
  output [31 : 0] obuf1_14_portA_response_get;
  output RDY_obuf1_14_portA_response_get;

  // action method obuf1_14_portB_request_put
  input  [41 : 0] obuf1_14_portB_request_put;
  input  EN_obuf1_14_portB_request_put;
  output RDY_obuf1_14_portB_request_put;

  // actionvalue method obuf1_14_portB_response_get
  input  EN_obuf1_14_portB_response_get;
  output [31 : 0] obuf1_14_portB_response_get;
  output RDY_obuf1_14_portB_response_get;

  // action method obuf1_14_portAClear
  input  EN_obuf1_14_portAClear;

  // action method obuf1_14_portBClear
  input  EN_obuf1_14_portBClear;

  // action method obuf1_15_portA_request_put
  input  [41 : 0] obuf1_15_portA_request_put;
  input  EN_obuf1_15_portA_request_put;
  output RDY_obuf1_15_portA_request_put;

  // actionvalue method obuf1_15_portA_response_get
  input  EN_obuf1_15_portA_response_get;
  output [31 : 0] obuf1_15_portA_response_get;
  output RDY_obuf1_15_portA_response_get;

  // action method obuf1_15_portB_request_put
  input  [41 : 0] obuf1_15_portB_request_put;
  input  EN_obuf1_15_portB_request_put;
  output RDY_obuf1_15_portB_request_put;

  // actionvalue method obuf1_15_portB_response_get
  input  EN_obuf1_15_portB_response_get;
  output [31 : 0] obuf1_15_portB_response_get;
  output RDY_obuf1_15_portB_response_get;

  // action method obuf1_15_portAClear
  input  EN_obuf1_15_portAClear;

  // action method obuf1_15_portBClear
  input  EN_obuf1_15_portBClear;

  // action method obuf1_16_portA_request_put
  input  [41 : 0] obuf1_16_portA_request_put;
  input  EN_obuf1_16_portA_request_put;
  output RDY_obuf1_16_portA_request_put;

  // actionvalue method obuf1_16_portA_response_get
  input  EN_obuf1_16_portA_response_get;
  output [31 : 0] obuf1_16_portA_response_get;
  output RDY_obuf1_16_portA_response_get;

  // action method obuf1_16_portB_request_put
  input  [41 : 0] obuf1_16_portB_request_put;
  input  EN_obuf1_16_portB_request_put;
  output RDY_obuf1_16_portB_request_put;

  // actionvalue method obuf1_16_portB_response_get
  input  EN_obuf1_16_portB_response_get;
  output [31 : 0] obuf1_16_portB_response_get;
  output RDY_obuf1_16_portB_response_get;

  // action method obuf1_16_portAClear
  input  EN_obuf1_16_portAClear;

  // action method obuf1_16_portBClear
  input  EN_obuf1_16_portBClear;

  // action method obuf1_17_portA_request_put
  input  [41 : 0] obuf1_17_portA_request_put;
  input  EN_obuf1_17_portA_request_put;
  output RDY_obuf1_17_portA_request_put;

  // actionvalue method obuf1_17_portA_response_get
  input  EN_obuf1_17_portA_response_get;
  output [31 : 0] obuf1_17_portA_response_get;
  output RDY_obuf1_17_portA_response_get;

  // action method obuf1_17_portB_request_put
  input  [41 : 0] obuf1_17_portB_request_put;
  input  EN_obuf1_17_portB_request_put;
  output RDY_obuf1_17_portB_request_put;

  // actionvalue method obuf1_17_portB_response_get
  input  EN_obuf1_17_portB_response_get;
  output [31 : 0] obuf1_17_portB_response_get;
  output RDY_obuf1_17_portB_response_get;

  // action method obuf1_17_portAClear
  input  EN_obuf1_17_portAClear;

  // action method obuf1_17_portBClear
  input  EN_obuf1_17_portBClear;

  // action method obuf1_18_portA_request_put
  input  [41 : 0] obuf1_18_portA_request_put;
  input  EN_obuf1_18_portA_request_put;
  output RDY_obuf1_18_portA_request_put;

  // actionvalue method obuf1_18_portA_response_get
  input  EN_obuf1_18_portA_response_get;
  output [31 : 0] obuf1_18_portA_response_get;
  output RDY_obuf1_18_portA_response_get;

  // action method obuf1_18_portB_request_put
  input  [41 : 0] obuf1_18_portB_request_put;
  input  EN_obuf1_18_portB_request_put;
  output RDY_obuf1_18_portB_request_put;

  // actionvalue method obuf1_18_portB_response_get
  input  EN_obuf1_18_portB_response_get;
  output [31 : 0] obuf1_18_portB_response_get;
  output RDY_obuf1_18_portB_response_get;

  // action method obuf1_18_portAClear
  input  EN_obuf1_18_portAClear;

  // action method obuf1_18_portBClear
  input  EN_obuf1_18_portBClear;

  // action method obuf1_19_portA_request_put
  input  [41 : 0] obuf1_19_portA_request_put;
  input  EN_obuf1_19_portA_request_put;
  output RDY_obuf1_19_portA_request_put;

  // actionvalue method obuf1_19_portA_response_get
  input  EN_obuf1_19_portA_response_get;
  output [31 : 0] obuf1_19_portA_response_get;
  output RDY_obuf1_19_portA_response_get;

  // action method obuf1_19_portB_request_put
  input  [41 : 0] obuf1_19_portB_request_put;
  input  EN_obuf1_19_portB_request_put;
  output RDY_obuf1_19_portB_request_put;

  // actionvalue method obuf1_19_portB_response_get
  input  EN_obuf1_19_portB_response_get;
  output [31 : 0] obuf1_19_portB_response_get;
  output RDY_obuf1_19_portB_response_get;

  // action method obuf1_19_portAClear
  input  EN_obuf1_19_portAClear;

  // action method obuf1_19_portBClear
  input  EN_obuf1_19_portBClear;

  // action method obuf1_20_portA_request_put
  input  [41 : 0] obuf1_20_portA_request_put;
  input  EN_obuf1_20_portA_request_put;
  output RDY_obuf1_20_portA_request_put;

  // actionvalue method obuf1_20_portA_response_get
  input  EN_obuf1_20_portA_response_get;
  output [31 : 0] obuf1_20_portA_response_get;
  output RDY_obuf1_20_portA_response_get;

  // action method obuf1_20_portB_request_put
  input  [41 : 0] obuf1_20_portB_request_put;
  input  EN_obuf1_20_portB_request_put;
  output RDY_obuf1_20_portB_request_put;

  // actionvalue method obuf1_20_portB_response_get
  input  EN_obuf1_20_portB_response_get;
  output [31 : 0] obuf1_20_portB_response_get;
  output RDY_obuf1_20_portB_response_get;

  // action method obuf1_20_portAClear
  input  EN_obuf1_20_portAClear;

  // action method obuf1_20_portBClear
  input  EN_obuf1_20_portBClear;

  // action method obuf1_21_portA_request_put
  input  [41 : 0] obuf1_21_portA_request_put;
  input  EN_obuf1_21_portA_request_put;
  output RDY_obuf1_21_portA_request_put;

  // actionvalue method obuf1_21_portA_response_get
  input  EN_obuf1_21_portA_response_get;
  output [31 : 0] obuf1_21_portA_response_get;
  output RDY_obuf1_21_portA_response_get;

  // action method obuf1_21_portB_request_put
  input  [41 : 0] obuf1_21_portB_request_put;
  input  EN_obuf1_21_portB_request_put;
  output RDY_obuf1_21_portB_request_put;

  // actionvalue method obuf1_21_portB_response_get
  input  EN_obuf1_21_portB_response_get;
  output [31 : 0] obuf1_21_portB_response_get;
  output RDY_obuf1_21_portB_response_get;

  // action method obuf1_21_portAClear
  input  EN_obuf1_21_portAClear;

  // action method obuf1_21_portBClear
  input  EN_obuf1_21_portBClear;

  // action method obuf1_22_portA_request_put
  input  [41 : 0] obuf1_22_portA_request_put;
  input  EN_obuf1_22_portA_request_put;
  output RDY_obuf1_22_portA_request_put;

  // actionvalue method obuf1_22_portA_response_get
  input  EN_obuf1_22_portA_response_get;
  output [31 : 0] obuf1_22_portA_response_get;
  output RDY_obuf1_22_portA_response_get;

  // action method obuf1_22_portB_request_put
  input  [41 : 0] obuf1_22_portB_request_put;
  input  EN_obuf1_22_portB_request_put;
  output RDY_obuf1_22_portB_request_put;

  // actionvalue method obuf1_22_portB_response_get
  input  EN_obuf1_22_portB_response_get;
  output [31 : 0] obuf1_22_portB_response_get;
  output RDY_obuf1_22_portB_response_get;

  // action method obuf1_22_portAClear
  input  EN_obuf1_22_portAClear;

  // action method obuf1_22_portBClear
  input  EN_obuf1_22_portBClear;

  // action method obuf1_23_portA_request_put
  input  [41 : 0] obuf1_23_portA_request_put;
  input  EN_obuf1_23_portA_request_put;
  output RDY_obuf1_23_portA_request_put;

  // actionvalue method obuf1_23_portA_response_get
  input  EN_obuf1_23_portA_response_get;
  output [31 : 0] obuf1_23_portA_response_get;
  output RDY_obuf1_23_portA_response_get;

  // action method obuf1_23_portB_request_put
  input  [41 : 0] obuf1_23_portB_request_put;
  input  EN_obuf1_23_portB_request_put;
  output RDY_obuf1_23_portB_request_put;

  // actionvalue method obuf1_23_portB_response_get
  input  EN_obuf1_23_portB_response_get;
  output [31 : 0] obuf1_23_portB_response_get;
  output RDY_obuf1_23_portB_response_get;

  // action method obuf1_23_portAClear
  input  EN_obuf1_23_portAClear;

  // action method obuf1_23_portBClear
  input  EN_obuf1_23_portBClear;

  // action method obuf1_24_portA_request_put
  input  [41 : 0] obuf1_24_portA_request_put;
  input  EN_obuf1_24_portA_request_put;
  output RDY_obuf1_24_portA_request_put;

  // actionvalue method obuf1_24_portA_response_get
  input  EN_obuf1_24_portA_response_get;
  output [31 : 0] obuf1_24_portA_response_get;
  output RDY_obuf1_24_portA_response_get;

  // action method obuf1_24_portB_request_put
  input  [41 : 0] obuf1_24_portB_request_put;
  input  EN_obuf1_24_portB_request_put;
  output RDY_obuf1_24_portB_request_put;

  // actionvalue method obuf1_24_portB_response_get
  input  EN_obuf1_24_portB_response_get;
  output [31 : 0] obuf1_24_portB_response_get;
  output RDY_obuf1_24_portB_response_get;

  // action method obuf1_24_portAClear
  input  EN_obuf1_24_portAClear;

  // action method obuf1_24_portBClear
  input  EN_obuf1_24_portBClear;

  // action method obuf1_25_portA_request_put
  input  [41 : 0] obuf1_25_portA_request_put;
  input  EN_obuf1_25_portA_request_put;
  output RDY_obuf1_25_portA_request_put;

  // actionvalue method obuf1_25_portA_response_get
  input  EN_obuf1_25_portA_response_get;
  output [31 : 0] obuf1_25_portA_response_get;
  output RDY_obuf1_25_portA_response_get;

  // action method obuf1_25_portB_request_put
  input  [41 : 0] obuf1_25_portB_request_put;
  input  EN_obuf1_25_portB_request_put;
  output RDY_obuf1_25_portB_request_put;

  // actionvalue method obuf1_25_portB_response_get
  input  EN_obuf1_25_portB_response_get;
  output [31 : 0] obuf1_25_portB_response_get;
  output RDY_obuf1_25_portB_response_get;

  // action method obuf1_25_portAClear
  input  EN_obuf1_25_portAClear;

  // action method obuf1_25_portBClear
  input  EN_obuf1_25_portBClear;

  // action method obuf1_26_portA_request_put
  input  [41 : 0] obuf1_26_portA_request_put;
  input  EN_obuf1_26_portA_request_put;
  output RDY_obuf1_26_portA_request_put;

  // actionvalue method obuf1_26_portA_response_get
  input  EN_obuf1_26_portA_response_get;
  output [31 : 0] obuf1_26_portA_response_get;
  output RDY_obuf1_26_portA_response_get;

  // action method obuf1_26_portB_request_put
  input  [41 : 0] obuf1_26_portB_request_put;
  input  EN_obuf1_26_portB_request_put;
  output RDY_obuf1_26_portB_request_put;

  // actionvalue method obuf1_26_portB_response_get
  input  EN_obuf1_26_portB_response_get;
  output [31 : 0] obuf1_26_portB_response_get;
  output RDY_obuf1_26_portB_response_get;

  // action method obuf1_26_portAClear
  input  EN_obuf1_26_portAClear;

  // action method obuf1_26_portBClear
  input  EN_obuf1_26_portBClear;

  // action method obuf1_27_portA_request_put
  input  [41 : 0] obuf1_27_portA_request_put;
  input  EN_obuf1_27_portA_request_put;
  output RDY_obuf1_27_portA_request_put;

  // actionvalue method obuf1_27_portA_response_get
  input  EN_obuf1_27_portA_response_get;
  output [31 : 0] obuf1_27_portA_response_get;
  output RDY_obuf1_27_portA_response_get;

  // action method obuf1_27_portB_request_put
  input  [41 : 0] obuf1_27_portB_request_put;
  input  EN_obuf1_27_portB_request_put;
  output RDY_obuf1_27_portB_request_put;

  // actionvalue method obuf1_27_portB_response_get
  input  EN_obuf1_27_portB_response_get;
  output [31 : 0] obuf1_27_portB_response_get;
  output RDY_obuf1_27_portB_response_get;

  // action method obuf1_27_portAClear
  input  EN_obuf1_27_portAClear;

  // action method obuf1_27_portBClear
  input  EN_obuf1_27_portBClear;

  // action method obuf1_28_portA_request_put
  input  [41 : 0] obuf1_28_portA_request_put;
  input  EN_obuf1_28_portA_request_put;
  output RDY_obuf1_28_portA_request_put;

  // actionvalue method obuf1_28_portA_response_get
  input  EN_obuf1_28_portA_response_get;
  output [31 : 0] obuf1_28_portA_response_get;
  output RDY_obuf1_28_portA_response_get;

  // action method obuf1_28_portB_request_put
  input  [41 : 0] obuf1_28_portB_request_put;
  input  EN_obuf1_28_portB_request_put;
  output RDY_obuf1_28_portB_request_put;

  // actionvalue method obuf1_28_portB_response_get
  input  EN_obuf1_28_portB_response_get;
  output [31 : 0] obuf1_28_portB_response_get;
  output RDY_obuf1_28_portB_response_get;

  // action method obuf1_28_portAClear
  input  EN_obuf1_28_portAClear;

  // action method obuf1_28_portBClear
  input  EN_obuf1_28_portBClear;

  // action method obuf1_29_portA_request_put
  input  [41 : 0] obuf1_29_portA_request_put;
  input  EN_obuf1_29_portA_request_put;
  output RDY_obuf1_29_portA_request_put;

  // actionvalue method obuf1_29_portA_response_get
  input  EN_obuf1_29_portA_response_get;
  output [31 : 0] obuf1_29_portA_response_get;
  output RDY_obuf1_29_portA_response_get;

  // action method obuf1_29_portB_request_put
  input  [41 : 0] obuf1_29_portB_request_put;
  input  EN_obuf1_29_portB_request_put;
  output RDY_obuf1_29_portB_request_put;

  // actionvalue method obuf1_29_portB_response_get
  input  EN_obuf1_29_portB_response_get;
  output [31 : 0] obuf1_29_portB_response_get;
  output RDY_obuf1_29_portB_response_get;

  // action method obuf1_29_portAClear
  input  EN_obuf1_29_portAClear;

  // action method obuf1_29_portBClear
  input  EN_obuf1_29_portBClear;

  // action method obuf1_30_portA_request_put
  input  [41 : 0] obuf1_30_portA_request_put;
  input  EN_obuf1_30_portA_request_put;
  output RDY_obuf1_30_portA_request_put;

  // actionvalue method obuf1_30_portA_response_get
  input  EN_obuf1_30_portA_response_get;
  output [31 : 0] obuf1_30_portA_response_get;
  output RDY_obuf1_30_portA_response_get;

  // action method obuf1_30_portB_request_put
  input  [41 : 0] obuf1_30_portB_request_put;
  input  EN_obuf1_30_portB_request_put;
  output RDY_obuf1_30_portB_request_put;

  // actionvalue method obuf1_30_portB_response_get
  input  EN_obuf1_30_portB_response_get;
  output [31 : 0] obuf1_30_portB_response_get;
  output RDY_obuf1_30_portB_response_get;

  // action method obuf1_30_portAClear
  input  EN_obuf1_30_portAClear;

  // action method obuf1_30_portBClear
  input  EN_obuf1_30_portBClear;

  // action method obuf1_31_portA_request_put
  input  [41 : 0] obuf1_31_portA_request_put;
  input  EN_obuf1_31_portA_request_put;
  output RDY_obuf1_31_portA_request_put;

  // actionvalue method obuf1_31_portA_response_get
  input  EN_obuf1_31_portA_response_get;
  output [31 : 0] obuf1_31_portA_response_get;
  output RDY_obuf1_31_portA_response_get;

  // action method obuf1_31_portB_request_put
  input  [41 : 0] obuf1_31_portB_request_put;
  input  EN_obuf1_31_portB_request_put;
  output RDY_obuf1_31_portB_request_put;

  // actionvalue method obuf1_31_portB_response_get
  input  EN_obuf1_31_portB_response_get;
  output [31 : 0] obuf1_31_portB_response_get;
  output RDY_obuf1_31_portB_response_get;

  // action method obuf1_31_portAClear
  input  EN_obuf1_31_portAClear;

  // action method obuf1_31_portBClear
  input  EN_obuf1_31_portBClear;

  // action method obuf2_0_portA_request_put
  input  [41 : 0] obuf2_0_portA_request_put;
  input  EN_obuf2_0_portA_request_put;
  output RDY_obuf2_0_portA_request_put;

  // actionvalue method obuf2_0_portA_response_get
  input  EN_obuf2_0_portA_response_get;
  output [31 : 0] obuf2_0_portA_response_get;
  output RDY_obuf2_0_portA_response_get;

  // action method obuf2_0_portB_request_put
  input  [41 : 0] obuf2_0_portB_request_put;
  input  EN_obuf2_0_portB_request_put;
  output RDY_obuf2_0_portB_request_put;

  // actionvalue method obuf2_0_portB_response_get
  input  EN_obuf2_0_portB_response_get;
  output [31 : 0] obuf2_0_portB_response_get;
  output RDY_obuf2_0_portB_response_get;

  // action method obuf2_0_portAClear
  input  EN_obuf2_0_portAClear;

  // action method obuf2_0_portBClear
  input  EN_obuf2_0_portBClear;

  // action method obuf2_1_portA_request_put
  input  [41 : 0] obuf2_1_portA_request_put;
  input  EN_obuf2_1_portA_request_put;
  output RDY_obuf2_1_portA_request_put;

  // actionvalue method obuf2_1_portA_response_get
  input  EN_obuf2_1_portA_response_get;
  output [31 : 0] obuf2_1_portA_response_get;
  output RDY_obuf2_1_portA_response_get;

  // action method obuf2_1_portB_request_put
  input  [41 : 0] obuf2_1_portB_request_put;
  input  EN_obuf2_1_portB_request_put;
  output RDY_obuf2_1_portB_request_put;

  // actionvalue method obuf2_1_portB_response_get
  input  EN_obuf2_1_portB_response_get;
  output [31 : 0] obuf2_1_portB_response_get;
  output RDY_obuf2_1_portB_response_get;

  // action method obuf2_1_portAClear
  input  EN_obuf2_1_portAClear;

  // action method obuf2_1_portBClear
  input  EN_obuf2_1_portBClear;

  // action method obuf2_2_portA_request_put
  input  [41 : 0] obuf2_2_portA_request_put;
  input  EN_obuf2_2_portA_request_put;
  output RDY_obuf2_2_portA_request_put;

  // actionvalue method obuf2_2_portA_response_get
  input  EN_obuf2_2_portA_response_get;
  output [31 : 0] obuf2_2_portA_response_get;
  output RDY_obuf2_2_portA_response_get;

  // action method obuf2_2_portB_request_put
  input  [41 : 0] obuf2_2_portB_request_put;
  input  EN_obuf2_2_portB_request_put;
  output RDY_obuf2_2_portB_request_put;

  // actionvalue method obuf2_2_portB_response_get
  input  EN_obuf2_2_portB_response_get;
  output [31 : 0] obuf2_2_portB_response_get;
  output RDY_obuf2_2_portB_response_get;

  // action method obuf2_2_portAClear
  input  EN_obuf2_2_portAClear;

  // action method obuf2_2_portBClear
  input  EN_obuf2_2_portBClear;

  // action method obuf2_3_portA_request_put
  input  [41 : 0] obuf2_3_portA_request_put;
  input  EN_obuf2_3_portA_request_put;
  output RDY_obuf2_3_portA_request_put;

  // actionvalue method obuf2_3_portA_response_get
  input  EN_obuf2_3_portA_response_get;
  output [31 : 0] obuf2_3_portA_response_get;
  output RDY_obuf2_3_portA_response_get;

  // action method obuf2_3_portB_request_put
  input  [41 : 0] obuf2_3_portB_request_put;
  input  EN_obuf2_3_portB_request_put;
  output RDY_obuf2_3_portB_request_put;

  // actionvalue method obuf2_3_portB_response_get
  input  EN_obuf2_3_portB_response_get;
  output [31 : 0] obuf2_3_portB_response_get;
  output RDY_obuf2_3_portB_response_get;

  // action method obuf2_3_portAClear
  input  EN_obuf2_3_portAClear;

  // action method obuf2_3_portBClear
  input  EN_obuf2_3_portBClear;

  // action method obuf2_4_portA_request_put
  input  [41 : 0] obuf2_4_portA_request_put;
  input  EN_obuf2_4_portA_request_put;
  output RDY_obuf2_4_portA_request_put;

  // actionvalue method obuf2_4_portA_response_get
  input  EN_obuf2_4_portA_response_get;
  output [31 : 0] obuf2_4_portA_response_get;
  output RDY_obuf2_4_portA_response_get;

  // action method obuf2_4_portB_request_put
  input  [41 : 0] obuf2_4_portB_request_put;
  input  EN_obuf2_4_portB_request_put;
  output RDY_obuf2_4_portB_request_put;

  // actionvalue method obuf2_4_portB_response_get
  input  EN_obuf2_4_portB_response_get;
  output [31 : 0] obuf2_4_portB_response_get;
  output RDY_obuf2_4_portB_response_get;

  // action method obuf2_4_portAClear
  input  EN_obuf2_4_portAClear;

  // action method obuf2_4_portBClear
  input  EN_obuf2_4_portBClear;

  // action method obuf2_5_portA_request_put
  input  [41 : 0] obuf2_5_portA_request_put;
  input  EN_obuf2_5_portA_request_put;
  output RDY_obuf2_5_portA_request_put;

  // actionvalue method obuf2_5_portA_response_get
  input  EN_obuf2_5_portA_response_get;
  output [31 : 0] obuf2_5_portA_response_get;
  output RDY_obuf2_5_portA_response_get;

  // action method obuf2_5_portB_request_put
  input  [41 : 0] obuf2_5_portB_request_put;
  input  EN_obuf2_5_portB_request_put;
  output RDY_obuf2_5_portB_request_put;

  // actionvalue method obuf2_5_portB_response_get
  input  EN_obuf2_5_portB_response_get;
  output [31 : 0] obuf2_5_portB_response_get;
  output RDY_obuf2_5_portB_response_get;

  // action method obuf2_5_portAClear
  input  EN_obuf2_5_portAClear;

  // action method obuf2_5_portBClear
  input  EN_obuf2_5_portBClear;

  // action method obuf2_6_portA_request_put
  input  [41 : 0] obuf2_6_portA_request_put;
  input  EN_obuf2_6_portA_request_put;
  output RDY_obuf2_6_portA_request_put;

  // actionvalue method obuf2_6_portA_response_get
  input  EN_obuf2_6_portA_response_get;
  output [31 : 0] obuf2_6_portA_response_get;
  output RDY_obuf2_6_portA_response_get;

  // action method obuf2_6_portB_request_put
  input  [41 : 0] obuf2_6_portB_request_put;
  input  EN_obuf2_6_portB_request_put;
  output RDY_obuf2_6_portB_request_put;

  // actionvalue method obuf2_6_portB_response_get
  input  EN_obuf2_6_portB_response_get;
  output [31 : 0] obuf2_6_portB_response_get;
  output RDY_obuf2_6_portB_response_get;

  // action method obuf2_6_portAClear
  input  EN_obuf2_6_portAClear;

  // action method obuf2_6_portBClear
  input  EN_obuf2_6_portBClear;

  // action method obuf2_7_portA_request_put
  input  [41 : 0] obuf2_7_portA_request_put;
  input  EN_obuf2_7_portA_request_put;
  output RDY_obuf2_7_portA_request_put;

  // actionvalue method obuf2_7_portA_response_get
  input  EN_obuf2_7_portA_response_get;
  output [31 : 0] obuf2_7_portA_response_get;
  output RDY_obuf2_7_portA_response_get;

  // action method obuf2_7_portB_request_put
  input  [41 : 0] obuf2_7_portB_request_put;
  input  EN_obuf2_7_portB_request_put;
  output RDY_obuf2_7_portB_request_put;

  // actionvalue method obuf2_7_portB_response_get
  input  EN_obuf2_7_portB_response_get;
  output [31 : 0] obuf2_7_portB_response_get;
  output RDY_obuf2_7_portB_response_get;

  // action method obuf2_7_portAClear
  input  EN_obuf2_7_portAClear;

  // action method obuf2_7_portBClear
  input  EN_obuf2_7_portBClear;

  // action method obuf2_8_portA_request_put
  input  [41 : 0] obuf2_8_portA_request_put;
  input  EN_obuf2_8_portA_request_put;
  output RDY_obuf2_8_portA_request_put;

  // actionvalue method obuf2_8_portA_response_get
  input  EN_obuf2_8_portA_response_get;
  output [31 : 0] obuf2_8_portA_response_get;
  output RDY_obuf2_8_portA_response_get;

  // action method obuf2_8_portB_request_put
  input  [41 : 0] obuf2_8_portB_request_put;
  input  EN_obuf2_8_portB_request_put;
  output RDY_obuf2_8_portB_request_put;

  // actionvalue method obuf2_8_portB_response_get
  input  EN_obuf2_8_portB_response_get;
  output [31 : 0] obuf2_8_portB_response_get;
  output RDY_obuf2_8_portB_response_get;

  // action method obuf2_8_portAClear
  input  EN_obuf2_8_portAClear;

  // action method obuf2_8_portBClear
  input  EN_obuf2_8_portBClear;

  // action method obuf2_9_portA_request_put
  input  [41 : 0] obuf2_9_portA_request_put;
  input  EN_obuf2_9_portA_request_put;
  output RDY_obuf2_9_portA_request_put;

  // actionvalue method obuf2_9_portA_response_get
  input  EN_obuf2_9_portA_response_get;
  output [31 : 0] obuf2_9_portA_response_get;
  output RDY_obuf2_9_portA_response_get;

  // action method obuf2_9_portB_request_put
  input  [41 : 0] obuf2_9_portB_request_put;
  input  EN_obuf2_9_portB_request_put;
  output RDY_obuf2_9_portB_request_put;

  // actionvalue method obuf2_9_portB_response_get
  input  EN_obuf2_9_portB_response_get;
  output [31 : 0] obuf2_9_portB_response_get;
  output RDY_obuf2_9_portB_response_get;

  // action method obuf2_9_portAClear
  input  EN_obuf2_9_portAClear;

  // action method obuf2_9_portBClear
  input  EN_obuf2_9_portBClear;

  // action method obuf2_10_portA_request_put
  input  [41 : 0] obuf2_10_portA_request_put;
  input  EN_obuf2_10_portA_request_put;
  output RDY_obuf2_10_portA_request_put;

  // actionvalue method obuf2_10_portA_response_get
  input  EN_obuf2_10_portA_response_get;
  output [31 : 0] obuf2_10_portA_response_get;
  output RDY_obuf2_10_portA_response_get;

  // action method obuf2_10_portB_request_put
  input  [41 : 0] obuf2_10_portB_request_put;
  input  EN_obuf2_10_portB_request_put;
  output RDY_obuf2_10_portB_request_put;

  // actionvalue method obuf2_10_portB_response_get
  input  EN_obuf2_10_portB_response_get;
  output [31 : 0] obuf2_10_portB_response_get;
  output RDY_obuf2_10_portB_response_get;

  // action method obuf2_10_portAClear
  input  EN_obuf2_10_portAClear;

  // action method obuf2_10_portBClear
  input  EN_obuf2_10_portBClear;

  // action method obuf2_11_portA_request_put
  input  [41 : 0] obuf2_11_portA_request_put;
  input  EN_obuf2_11_portA_request_put;
  output RDY_obuf2_11_portA_request_put;

  // actionvalue method obuf2_11_portA_response_get
  input  EN_obuf2_11_portA_response_get;
  output [31 : 0] obuf2_11_portA_response_get;
  output RDY_obuf2_11_portA_response_get;

  // action method obuf2_11_portB_request_put
  input  [41 : 0] obuf2_11_portB_request_put;
  input  EN_obuf2_11_portB_request_put;
  output RDY_obuf2_11_portB_request_put;

  // actionvalue method obuf2_11_portB_response_get
  input  EN_obuf2_11_portB_response_get;
  output [31 : 0] obuf2_11_portB_response_get;
  output RDY_obuf2_11_portB_response_get;

  // action method obuf2_11_portAClear
  input  EN_obuf2_11_portAClear;

  // action method obuf2_11_portBClear
  input  EN_obuf2_11_portBClear;

  // action method obuf2_12_portA_request_put
  input  [41 : 0] obuf2_12_portA_request_put;
  input  EN_obuf2_12_portA_request_put;
  output RDY_obuf2_12_portA_request_put;

  // actionvalue method obuf2_12_portA_response_get
  input  EN_obuf2_12_portA_response_get;
  output [31 : 0] obuf2_12_portA_response_get;
  output RDY_obuf2_12_portA_response_get;

  // action method obuf2_12_portB_request_put
  input  [41 : 0] obuf2_12_portB_request_put;
  input  EN_obuf2_12_portB_request_put;
  output RDY_obuf2_12_portB_request_put;

  // actionvalue method obuf2_12_portB_response_get
  input  EN_obuf2_12_portB_response_get;
  output [31 : 0] obuf2_12_portB_response_get;
  output RDY_obuf2_12_portB_response_get;

  // action method obuf2_12_portAClear
  input  EN_obuf2_12_portAClear;

  // action method obuf2_12_portBClear
  input  EN_obuf2_12_portBClear;

  // action method obuf2_13_portA_request_put
  input  [41 : 0] obuf2_13_portA_request_put;
  input  EN_obuf2_13_portA_request_put;
  output RDY_obuf2_13_portA_request_put;

  // actionvalue method obuf2_13_portA_response_get
  input  EN_obuf2_13_portA_response_get;
  output [31 : 0] obuf2_13_portA_response_get;
  output RDY_obuf2_13_portA_response_get;

  // action method obuf2_13_portB_request_put
  input  [41 : 0] obuf2_13_portB_request_put;
  input  EN_obuf2_13_portB_request_put;
  output RDY_obuf2_13_portB_request_put;

  // actionvalue method obuf2_13_portB_response_get
  input  EN_obuf2_13_portB_response_get;
  output [31 : 0] obuf2_13_portB_response_get;
  output RDY_obuf2_13_portB_response_get;

  // action method obuf2_13_portAClear
  input  EN_obuf2_13_portAClear;

  // action method obuf2_13_portBClear
  input  EN_obuf2_13_portBClear;

  // action method obuf2_14_portA_request_put
  input  [41 : 0] obuf2_14_portA_request_put;
  input  EN_obuf2_14_portA_request_put;
  output RDY_obuf2_14_portA_request_put;

  // actionvalue method obuf2_14_portA_response_get
  input  EN_obuf2_14_portA_response_get;
  output [31 : 0] obuf2_14_portA_response_get;
  output RDY_obuf2_14_portA_response_get;

  // action method obuf2_14_portB_request_put
  input  [41 : 0] obuf2_14_portB_request_put;
  input  EN_obuf2_14_portB_request_put;
  output RDY_obuf2_14_portB_request_put;

  // actionvalue method obuf2_14_portB_response_get
  input  EN_obuf2_14_portB_response_get;
  output [31 : 0] obuf2_14_portB_response_get;
  output RDY_obuf2_14_portB_response_get;

  // action method obuf2_14_portAClear
  input  EN_obuf2_14_portAClear;

  // action method obuf2_14_portBClear
  input  EN_obuf2_14_portBClear;

  // action method obuf2_15_portA_request_put
  input  [41 : 0] obuf2_15_portA_request_put;
  input  EN_obuf2_15_portA_request_put;
  output RDY_obuf2_15_portA_request_put;

  // actionvalue method obuf2_15_portA_response_get
  input  EN_obuf2_15_portA_response_get;
  output [31 : 0] obuf2_15_portA_response_get;
  output RDY_obuf2_15_portA_response_get;

  // action method obuf2_15_portB_request_put
  input  [41 : 0] obuf2_15_portB_request_put;
  input  EN_obuf2_15_portB_request_put;
  output RDY_obuf2_15_portB_request_put;

  // actionvalue method obuf2_15_portB_response_get
  input  EN_obuf2_15_portB_response_get;
  output [31 : 0] obuf2_15_portB_response_get;
  output RDY_obuf2_15_portB_response_get;

  // action method obuf2_15_portAClear
  input  EN_obuf2_15_portAClear;

  // action method obuf2_15_portBClear
  input  EN_obuf2_15_portBClear;

  // action method obuf2_16_portA_request_put
  input  [41 : 0] obuf2_16_portA_request_put;
  input  EN_obuf2_16_portA_request_put;
  output RDY_obuf2_16_portA_request_put;

  // actionvalue method obuf2_16_portA_response_get
  input  EN_obuf2_16_portA_response_get;
  output [31 : 0] obuf2_16_portA_response_get;
  output RDY_obuf2_16_portA_response_get;

  // action method obuf2_16_portB_request_put
  input  [41 : 0] obuf2_16_portB_request_put;
  input  EN_obuf2_16_portB_request_put;
  output RDY_obuf2_16_portB_request_put;

  // actionvalue method obuf2_16_portB_response_get
  input  EN_obuf2_16_portB_response_get;
  output [31 : 0] obuf2_16_portB_response_get;
  output RDY_obuf2_16_portB_response_get;

  // action method obuf2_16_portAClear
  input  EN_obuf2_16_portAClear;

  // action method obuf2_16_portBClear
  input  EN_obuf2_16_portBClear;

  // action method obuf2_17_portA_request_put
  input  [41 : 0] obuf2_17_portA_request_put;
  input  EN_obuf2_17_portA_request_put;
  output RDY_obuf2_17_portA_request_put;

  // actionvalue method obuf2_17_portA_response_get
  input  EN_obuf2_17_portA_response_get;
  output [31 : 0] obuf2_17_portA_response_get;
  output RDY_obuf2_17_portA_response_get;

  // action method obuf2_17_portB_request_put
  input  [41 : 0] obuf2_17_portB_request_put;
  input  EN_obuf2_17_portB_request_put;
  output RDY_obuf2_17_portB_request_put;

  // actionvalue method obuf2_17_portB_response_get
  input  EN_obuf2_17_portB_response_get;
  output [31 : 0] obuf2_17_portB_response_get;
  output RDY_obuf2_17_portB_response_get;

  // action method obuf2_17_portAClear
  input  EN_obuf2_17_portAClear;

  // action method obuf2_17_portBClear
  input  EN_obuf2_17_portBClear;

  // action method obuf2_18_portA_request_put
  input  [41 : 0] obuf2_18_portA_request_put;
  input  EN_obuf2_18_portA_request_put;
  output RDY_obuf2_18_portA_request_put;

  // actionvalue method obuf2_18_portA_response_get
  input  EN_obuf2_18_portA_response_get;
  output [31 : 0] obuf2_18_portA_response_get;
  output RDY_obuf2_18_portA_response_get;

  // action method obuf2_18_portB_request_put
  input  [41 : 0] obuf2_18_portB_request_put;
  input  EN_obuf2_18_portB_request_put;
  output RDY_obuf2_18_portB_request_put;

  // actionvalue method obuf2_18_portB_response_get
  input  EN_obuf2_18_portB_response_get;
  output [31 : 0] obuf2_18_portB_response_get;
  output RDY_obuf2_18_portB_response_get;

  // action method obuf2_18_portAClear
  input  EN_obuf2_18_portAClear;

  // action method obuf2_18_portBClear
  input  EN_obuf2_18_portBClear;

  // action method obuf2_19_portA_request_put
  input  [41 : 0] obuf2_19_portA_request_put;
  input  EN_obuf2_19_portA_request_put;
  output RDY_obuf2_19_portA_request_put;

  // actionvalue method obuf2_19_portA_response_get
  input  EN_obuf2_19_portA_response_get;
  output [31 : 0] obuf2_19_portA_response_get;
  output RDY_obuf2_19_portA_response_get;

  // action method obuf2_19_portB_request_put
  input  [41 : 0] obuf2_19_portB_request_put;
  input  EN_obuf2_19_portB_request_put;
  output RDY_obuf2_19_portB_request_put;

  // actionvalue method obuf2_19_portB_response_get
  input  EN_obuf2_19_portB_response_get;
  output [31 : 0] obuf2_19_portB_response_get;
  output RDY_obuf2_19_portB_response_get;

  // action method obuf2_19_portAClear
  input  EN_obuf2_19_portAClear;

  // action method obuf2_19_portBClear
  input  EN_obuf2_19_portBClear;

  // action method obuf2_20_portA_request_put
  input  [41 : 0] obuf2_20_portA_request_put;
  input  EN_obuf2_20_portA_request_put;
  output RDY_obuf2_20_portA_request_put;

  // actionvalue method obuf2_20_portA_response_get
  input  EN_obuf2_20_portA_response_get;
  output [31 : 0] obuf2_20_portA_response_get;
  output RDY_obuf2_20_portA_response_get;

  // action method obuf2_20_portB_request_put
  input  [41 : 0] obuf2_20_portB_request_put;
  input  EN_obuf2_20_portB_request_put;
  output RDY_obuf2_20_portB_request_put;

  // actionvalue method obuf2_20_portB_response_get
  input  EN_obuf2_20_portB_response_get;
  output [31 : 0] obuf2_20_portB_response_get;
  output RDY_obuf2_20_portB_response_get;

  // action method obuf2_20_portAClear
  input  EN_obuf2_20_portAClear;

  // action method obuf2_20_portBClear
  input  EN_obuf2_20_portBClear;

  // action method obuf2_21_portA_request_put
  input  [41 : 0] obuf2_21_portA_request_put;
  input  EN_obuf2_21_portA_request_put;
  output RDY_obuf2_21_portA_request_put;

  // actionvalue method obuf2_21_portA_response_get
  input  EN_obuf2_21_portA_response_get;
  output [31 : 0] obuf2_21_portA_response_get;
  output RDY_obuf2_21_portA_response_get;

  // action method obuf2_21_portB_request_put
  input  [41 : 0] obuf2_21_portB_request_put;
  input  EN_obuf2_21_portB_request_put;
  output RDY_obuf2_21_portB_request_put;

  // actionvalue method obuf2_21_portB_response_get
  input  EN_obuf2_21_portB_response_get;
  output [31 : 0] obuf2_21_portB_response_get;
  output RDY_obuf2_21_portB_response_get;

  // action method obuf2_21_portAClear
  input  EN_obuf2_21_portAClear;

  // action method obuf2_21_portBClear
  input  EN_obuf2_21_portBClear;

  // action method obuf2_22_portA_request_put
  input  [41 : 0] obuf2_22_portA_request_put;
  input  EN_obuf2_22_portA_request_put;
  output RDY_obuf2_22_portA_request_put;

  // actionvalue method obuf2_22_portA_response_get
  input  EN_obuf2_22_portA_response_get;
  output [31 : 0] obuf2_22_portA_response_get;
  output RDY_obuf2_22_portA_response_get;

  // action method obuf2_22_portB_request_put
  input  [41 : 0] obuf2_22_portB_request_put;
  input  EN_obuf2_22_portB_request_put;
  output RDY_obuf2_22_portB_request_put;

  // actionvalue method obuf2_22_portB_response_get
  input  EN_obuf2_22_portB_response_get;
  output [31 : 0] obuf2_22_portB_response_get;
  output RDY_obuf2_22_portB_response_get;

  // action method obuf2_22_portAClear
  input  EN_obuf2_22_portAClear;

  // action method obuf2_22_portBClear
  input  EN_obuf2_22_portBClear;

  // action method obuf2_23_portA_request_put
  input  [41 : 0] obuf2_23_portA_request_put;
  input  EN_obuf2_23_portA_request_put;
  output RDY_obuf2_23_portA_request_put;

  // actionvalue method obuf2_23_portA_response_get
  input  EN_obuf2_23_portA_response_get;
  output [31 : 0] obuf2_23_portA_response_get;
  output RDY_obuf2_23_portA_response_get;

  // action method obuf2_23_portB_request_put
  input  [41 : 0] obuf2_23_portB_request_put;
  input  EN_obuf2_23_portB_request_put;
  output RDY_obuf2_23_portB_request_put;

  // actionvalue method obuf2_23_portB_response_get
  input  EN_obuf2_23_portB_response_get;
  output [31 : 0] obuf2_23_portB_response_get;
  output RDY_obuf2_23_portB_response_get;

  // action method obuf2_23_portAClear
  input  EN_obuf2_23_portAClear;

  // action method obuf2_23_portBClear
  input  EN_obuf2_23_portBClear;

  // action method obuf2_24_portA_request_put
  input  [41 : 0] obuf2_24_portA_request_put;
  input  EN_obuf2_24_portA_request_put;
  output RDY_obuf2_24_portA_request_put;

  // actionvalue method obuf2_24_portA_response_get
  input  EN_obuf2_24_portA_response_get;
  output [31 : 0] obuf2_24_portA_response_get;
  output RDY_obuf2_24_portA_response_get;

  // action method obuf2_24_portB_request_put
  input  [41 : 0] obuf2_24_portB_request_put;
  input  EN_obuf2_24_portB_request_put;
  output RDY_obuf2_24_portB_request_put;

  // actionvalue method obuf2_24_portB_response_get
  input  EN_obuf2_24_portB_response_get;
  output [31 : 0] obuf2_24_portB_response_get;
  output RDY_obuf2_24_portB_response_get;

  // action method obuf2_24_portAClear
  input  EN_obuf2_24_portAClear;

  // action method obuf2_24_portBClear
  input  EN_obuf2_24_portBClear;

  // action method obuf2_25_portA_request_put
  input  [41 : 0] obuf2_25_portA_request_put;
  input  EN_obuf2_25_portA_request_put;
  output RDY_obuf2_25_portA_request_put;

  // actionvalue method obuf2_25_portA_response_get
  input  EN_obuf2_25_portA_response_get;
  output [31 : 0] obuf2_25_portA_response_get;
  output RDY_obuf2_25_portA_response_get;

  // action method obuf2_25_portB_request_put
  input  [41 : 0] obuf2_25_portB_request_put;
  input  EN_obuf2_25_portB_request_put;
  output RDY_obuf2_25_portB_request_put;

  // actionvalue method obuf2_25_portB_response_get
  input  EN_obuf2_25_portB_response_get;
  output [31 : 0] obuf2_25_portB_response_get;
  output RDY_obuf2_25_portB_response_get;

  // action method obuf2_25_portAClear
  input  EN_obuf2_25_portAClear;

  // action method obuf2_25_portBClear
  input  EN_obuf2_25_portBClear;

  // action method obuf2_26_portA_request_put
  input  [41 : 0] obuf2_26_portA_request_put;
  input  EN_obuf2_26_portA_request_put;
  output RDY_obuf2_26_portA_request_put;

  // actionvalue method obuf2_26_portA_response_get
  input  EN_obuf2_26_portA_response_get;
  output [31 : 0] obuf2_26_portA_response_get;
  output RDY_obuf2_26_portA_response_get;

  // action method obuf2_26_portB_request_put
  input  [41 : 0] obuf2_26_portB_request_put;
  input  EN_obuf2_26_portB_request_put;
  output RDY_obuf2_26_portB_request_put;

  // actionvalue method obuf2_26_portB_response_get
  input  EN_obuf2_26_portB_response_get;
  output [31 : 0] obuf2_26_portB_response_get;
  output RDY_obuf2_26_portB_response_get;

  // action method obuf2_26_portAClear
  input  EN_obuf2_26_portAClear;

  // action method obuf2_26_portBClear
  input  EN_obuf2_26_portBClear;

  // action method obuf2_27_portA_request_put
  input  [41 : 0] obuf2_27_portA_request_put;
  input  EN_obuf2_27_portA_request_put;
  output RDY_obuf2_27_portA_request_put;

  // actionvalue method obuf2_27_portA_response_get
  input  EN_obuf2_27_portA_response_get;
  output [31 : 0] obuf2_27_portA_response_get;
  output RDY_obuf2_27_portA_response_get;

  // action method obuf2_27_portB_request_put
  input  [41 : 0] obuf2_27_portB_request_put;
  input  EN_obuf2_27_portB_request_put;
  output RDY_obuf2_27_portB_request_put;

  // actionvalue method obuf2_27_portB_response_get
  input  EN_obuf2_27_portB_response_get;
  output [31 : 0] obuf2_27_portB_response_get;
  output RDY_obuf2_27_portB_response_get;

  // action method obuf2_27_portAClear
  input  EN_obuf2_27_portAClear;

  // action method obuf2_27_portBClear
  input  EN_obuf2_27_portBClear;

  // action method obuf2_28_portA_request_put
  input  [41 : 0] obuf2_28_portA_request_put;
  input  EN_obuf2_28_portA_request_put;
  output RDY_obuf2_28_portA_request_put;

  // actionvalue method obuf2_28_portA_response_get
  input  EN_obuf2_28_portA_response_get;
  output [31 : 0] obuf2_28_portA_response_get;
  output RDY_obuf2_28_portA_response_get;

  // action method obuf2_28_portB_request_put
  input  [41 : 0] obuf2_28_portB_request_put;
  input  EN_obuf2_28_portB_request_put;
  output RDY_obuf2_28_portB_request_put;

  // actionvalue method obuf2_28_portB_response_get
  input  EN_obuf2_28_portB_response_get;
  output [31 : 0] obuf2_28_portB_response_get;
  output RDY_obuf2_28_portB_response_get;

  // action method obuf2_28_portAClear
  input  EN_obuf2_28_portAClear;

  // action method obuf2_28_portBClear
  input  EN_obuf2_28_portBClear;

  // action method obuf2_29_portA_request_put
  input  [41 : 0] obuf2_29_portA_request_put;
  input  EN_obuf2_29_portA_request_put;
  output RDY_obuf2_29_portA_request_put;

  // actionvalue method obuf2_29_portA_response_get
  input  EN_obuf2_29_portA_response_get;
  output [31 : 0] obuf2_29_portA_response_get;
  output RDY_obuf2_29_portA_response_get;

  // action method obuf2_29_portB_request_put
  input  [41 : 0] obuf2_29_portB_request_put;
  input  EN_obuf2_29_portB_request_put;
  output RDY_obuf2_29_portB_request_put;

  // actionvalue method obuf2_29_portB_response_get
  input  EN_obuf2_29_portB_response_get;
  output [31 : 0] obuf2_29_portB_response_get;
  output RDY_obuf2_29_portB_response_get;

  // action method obuf2_29_portAClear
  input  EN_obuf2_29_portAClear;

  // action method obuf2_29_portBClear
  input  EN_obuf2_29_portBClear;

  // action method obuf2_30_portA_request_put
  input  [41 : 0] obuf2_30_portA_request_put;
  input  EN_obuf2_30_portA_request_put;
  output RDY_obuf2_30_portA_request_put;

  // actionvalue method obuf2_30_portA_response_get
  input  EN_obuf2_30_portA_response_get;
  output [31 : 0] obuf2_30_portA_response_get;
  output RDY_obuf2_30_portA_response_get;

  // action method obuf2_30_portB_request_put
  input  [41 : 0] obuf2_30_portB_request_put;
  input  EN_obuf2_30_portB_request_put;
  output RDY_obuf2_30_portB_request_put;

  // actionvalue method obuf2_30_portB_response_get
  input  EN_obuf2_30_portB_response_get;
  output [31 : 0] obuf2_30_portB_response_get;
  output RDY_obuf2_30_portB_response_get;

  // action method obuf2_30_portAClear
  input  EN_obuf2_30_portAClear;

  // action method obuf2_30_portBClear
  input  EN_obuf2_30_portBClear;

  // action method obuf2_31_portA_request_put
  input  [41 : 0] obuf2_31_portA_request_put;
  input  EN_obuf2_31_portA_request_put;
  output RDY_obuf2_31_portA_request_put;

  // actionvalue method obuf2_31_portA_response_get
  input  EN_obuf2_31_portA_response_get;
  output [31 : 0] obuf2_31_portA_response_get;
  output RDY_obuf2_31_portA_response_get;

  // action method obuf2_31_portB_request_put
  input  [41 : 0] obuf2_31_portB_request_put;
  input  EN_obuf2_31_portB_request_put;
  output RDY_obuf2_31_portB_request_put;

  // actionvalue method obuf2_31_portB_response_get
  input  EN_obuf2_31_portB_response_get;
  output [31 : 0] obuf2_31_portB_response_get;
  output RDY_obuf2_31_portB_response_get;

  // action method obuf2_31_portAClear
  input  EN_obuf2_31_portAClear;

  // action method obuf2_31_portBClear
  input  EN_obuf2_31_portBClear;

  // signals for module outputs
  wire [31 : 0] obuf1_0_portA_response_get,
		obuf1_0_portB_response_get,
		obuf1_10_portA_response_get,
		obuf1_10_portB_response_get,
		obuf1_11_portA_response_get,
		obuf1_11_portB_response_get,
		obuf1_12_portA_response_get,
		obuf1_12_portB_response_get,
		obuf1_13_portA_response_get,
		obuf1_13_portB_response_get,
		obuf1_14_portA_response_get,
		obuf1_14_portB_response_get,
		obuf1_15_portA_response_get,
		obuf1_15_portB_response_get,
		obuf1_16_portA_response_get,
		obuf1_16_portB_response_get,
		obuf1_17_portA_response_get,
		obuf1_17_portB_response_get,
		obuf1_18_portA_response_get,
		obuf1_18_portB_response_get,
		obuf1_19_portA_response_get,
		obuf1_19_portB_response_get,
		obuf1_1_portA_response_get,
		obuf1_1_portB_response_get,
		obuf1_20_portA_response_get,
		obuf1_20_portB_response_get,
		obuf1_21_portA_response_get,
		obuf1_21_portB_response_get,
		obuf1_22_portA_response_get,
		obuf1_22_portB_response_get,
		obuf1_23_portA_response_get,
		obuf1_23_portB_response_get,
		obuf1_24_portA_response_get,
		obuf1_24_portB_response_get,
		obuf1_25_portA_response_get,
		obuf1_25_portB_response_get,
		obuf1_26_portA_response_get,
		obuf1_26_portB_response_get,
		obuf1_27_portA_response_get,
		obuf1_27_portB_response_get,
		obuf1_28_portA_response_get,
		obuf1_28_portB_response_get,
		obuf1_29_portA_response_get,
		obuf1_29_portB_response_get,
		obuf1_2_portA_response_get,
		obuf1_2_portB_response_get,
		obuf1_30_portA_response_get,
		obuf1_30_portB_response_get,
		obuf1_31_portA_response_get,
		obuf1_31_portB_response_get,
		obuf1_3_portA_response_get,
		obuf1_3_portB_response_get,
		obuf1_4_portA_response_get,
		obuf1_4_portB_response_get,
		obuf1_5_portA_response_get,
		obuf1_5_portB_response_get,
		obuf1_6_portA_response_get,
		obuf1_6_portB_response_get,
		obuf1_7_portA_response_get,
		obuf1_7_portB_response_get,
		obuf1_8_portA_response_get,
		obuf1_8_portB_response_get,
		obuf1_9_portA_response_get,
		obuf1_9_portB_response_get,
		obuf2_0_portA_response_get,
		obuf2_0_portB_response_get,
		obuf2_10_portA_response_get,
		obuf2_10_portB_response_get,
		obuf2_11_portA_response_get,
		obuf2_11_portB_response_get,
		obuf2_12_portA_response_get,
		obuf2_12_portB_response_get,
		obuf2_13_portA_response_get,
		obuf2_13_portB_response_get,
		obuf2_14_portA_response_get,
		obuf2_14_portB_response_get,
		obuf2_15_portA_response_get,
		obuf2_15_portB_response_get,
		obuf2_16_portA_response_get,
		obuf2_16_portB_response_get,
		obuf2_17_portA_response_get,
		obuf2_17_portB_response_get,
		obuf2_18_portA_response_get,
		obuf2_18_portB_response_get,
		obuf2_19_portA_response_get,
		obuf2_19_portB_response_get,
		obuf2_1_portA_response_get,
		obuf2_1_portB_response_get,
		obuf2_20_portA_response_get,
		obuf2_20_portB_response_get,
		obuf2_21_portA_response_get,
		obuf2_21_portB_response_get,
		obuf2_22_portA_response_get,
		obuf2_22_portB_response_get,
		obuf2_23_portA_response_get,
		obuf2_23_portB_response_get,
		obuf2_24_portA_response_get,
		obuf2_24_portB_response_get,
		obuf2_25_portA_response_get,
		obuf2_25_portB_response_get,
		obuf2_26_portA_response_get,
		obuf2_26_portB_response_get,
		obuf2_27_portA_response_get,
		obuf2_27_portB_response_get,
		obuf2_28_portA_response_get,
		obuf2_28_portB_response_get,
		obuf2_29_portA_response_get,
		obuf2_29_portB_response_get,
		obuf2_2_portA_response_get,
		obuf2_2_portB_response_get,
		obuf2_30_portA_response_get,
		obuf2_30_portB_response_get,
		obuf2_31_portA_response_get,
		obuf2_31_portB_response_get,
		obuf2_3_portA_response_get,
		obuf2_3_portB_response_get,
		obuf2_4_portA_response_get,
		obuf2_4_portB_response_get,
		obuf2_5_portA_response_get,
		obuf2_5_portB_response_get,
		obuf2_6_portA_response_get,
		obuf2_6_portB_response_get,
		obuf2_7_portA_response_get,
		obuf2_7_portB_response_get,
		obuf2_8_portA_response_get,
		obuf2_8_portB_response_get,
		obuf2_9_portA_response_get,
		obuf2_9_portB_response_get;
  wire [7 : 0] ibuf_0_portA_response_get,
	       ibuf_0_portB_response_get,
	       ibuf_10_portA_response_get,
	       ibuf_10_portB_response_get,
	       ibuf_11_portA_response_get,
	       ibuf_11_portB_response_get,
	       ibuf_12_portA_response_get,
	       ibuf_12_portB_response_get,
	       ibuf_13_portA_response_get,
	       ibuf_13_portB_response_get,
	       ibuf_14_portA_response_get,
	       ibuf_14_portB_response_get,
	       ibuf_15_portA_response_get,
	       ibuf_15_portB_response_get,
	       ibuf_16_portA_response_get,
	       ibuf_16_portB_response_get,
	       ibuf_17_portA_response_get,
	       ibuf_17_portB_response_get,
	       ibuf_18_portA_response_get,
	       ibuf_18_portB_response_get,
	       ibuf_19_portA_response_get,
	       ibuf_19_portB_response_get,
	       ibuf_1_portA_response_get,
	       ibuf_1_portB_response_get,
	       ibuf_20_portA_response_get,
	       ibuf_20_portB_response_get,
	       ibuf_21_portA_response_get,
	       ibuf_21_portB_response_get,
	       ibuf_22_portA_response_get,
	       ibuf_22_portB_response_get,
	       ibuf_23_portA_response_get,
	       ibuf_23_portB_response_get,
	       ibuf_24_portA_response_get,
	       ibuf_24_portB_response_get,
	       ibuf_25_portA_response_get,
	       ibuf_25_portB_response_get,
	       ibuf_26_portA_response_get,
	       ibuf_26_portB_response_get,
	       ibuf_27_portA_response_get,
	       ibuf_27_portB_response_get,
	       ibuf_28_portA_response_get,
	       ibuf_28_portB_response_get,
	       ibuf_29_portA_response_get,
	       ibuf_29_portB_response_get,
	       ibuf_2_portA_response_get,
	       ibuf_2_portB_response_get,
	       ibuf_30_portA_response_get,
	       ibuf_30_portB_response_get,
	       ibuf_31_portA_response_get,
	       ibuf_31_portB_response_get,
	       ibuf_3_portA_response_get,
	       ibuf_3_portB_response_get,
	       ibuf_4_portA_response_get,
	       ibuf_4_portB_response_get,
	       ibuf_5_portA_response_get,
	       ibuf_5_portB_response_get,
	       ibuf_6_portA_response_get,
	       ibuf_6_portB_response_get,
	       ibuf_7_portA_response_get,
	       ibuf_7_portB_response_get,
	       ibuf_8_portA_response_get,
	       ibuf_8_portB_response_get,
	       ibuf_9_portA_response_get,
	       ibuf_9_portB_response_get,
	       wbuf_0_portA_response_get,
	       wbuf_0_portB_response_get,
	       wbuf_10_portA_response_get,
	       wbuf_10_portB_response_get,
	       wbuf_11_portA_response_get,
	       wbuf_11_portB_response_get,
	       wbuf_12_portA_response_get,
	       wbuf_12_portB_response_get,
	       wbuf_13_portA_response_get,
	       wbuf_13_portB_response_get,
	       wbuf_14_portA_response_get,
	       wbuf_14_portB_response_get,
	       wbuf_15_portA_response_get,
	       wbuf_15_portB_response_get,
	       wbuf_16_portA_response_get,
	       wbuf_16_portB_response_get,
	       wbuf_17_portA_response_get,
	       wbuf_17_portB_response_get,
	       wbuf_18_portA_response_get,
	       wbuf_18_portB_response_get,
	       wbuf_19_portA_response_get,
	       wbuf_19_portB_response_get,
	       wbuf_1_portA_response_get,
	       wbuf_1_portB_response_get,
	       wbuf_20_portA_response_get,
	       wbuf_20_portB_response_get,
	       wbuf_21_portA_response_get,
	       wbuf_21_portB_response_get,
	       wbuf_22_portA_response_get,
	       wbuf_22_portB_response_get,
	       wbuf_23_portA_response_get,
	       wbuf_23_portB_response_get,
	       wbuf_24_portA_response_get,
	       wbuf_24_portB_response_get,
	       wbuf_25_portA_response_get,
	       wbuf_25_portB_response_get,
	       wbuf_26_portA_response_get,
	       wbuf_26_portB_response_get,
	       wbuf_27_portA_response_get,
	       wbuf_27_portB_response_get,
	       wbuf_28_portA_response_get,
	       wbuf_28_portB_response_get,
	       wbuf_29_portA_response_get,
	       wbuf_29_portB_response_get,
	       wbuf_2_portA_response_get,
	       wbuf_2_portB_response_get,
	       wbuf_30_portA_response_get,
	       wbuf_30_portB_response_get,
	       wbuf_31_portA_response_get,
	       wbuf_31_portB_response_get,
	       wbuf_3_portA_response_get,
	       wbuf_3_portB_response_get,
	       wbuf_4_portA_response_get,
	       wbuf_4_portB_response_get,
	       wbuf_5_portA_response_get,
	       wbuf_5_portB_response_get,
	       wbuf_6_portA_response_get,
	       wbuf_6_portB_response_get,
	       wbuf_7_portA_response_get,
	       wbuf_7_portB_response_get,
	       wbuf_8_portA_response_get,
	       wbuf_8_portB_response_get,
	       wbuf_9_portA_response_get,
	       wbuf_9_portB_response_get;
  wire RDY_ibuf_0_portA_request_put,
       RDY_ibuf_0_portA_response_get,
       RDY_ibuf_0_portB_request_put,
       RDY_ibuf_0_portB_response_get,
       RDY_ibuf_10_portA_request_put,
       RDY_ibuf_10_portA_response_get,
       RDY_ibuf_10_portB_request_put,
       RDY_ibuf_10_portB_response_get,
       RDY_ibuf_11_portA_request_put,
       RDY_ibuf_11_portA_response_get,
       RDY_ibuf_11_portB_request_put,
       RDY_ibuf_11_portB_response_get,
       RDY_ibuf_12_portA_request_put,
       RDY_ibuf_12_portA_response_get,
       RDY_ibuf_12_portB_request_put,
       RDY_ibuf_12_portB_response_get,
       RDY_ibuf_13_portA_request_put,
       RDY_ibuf_13_portA_response_get,
       RDY_ibuf_13_portB_request_put,
       RDY_ibuf_13_portB_response_get,
       RDY_ibuf_14_portA_request_put,
       RDY_ibuf_14_portA_response_get,
       RDY_ibuf_14_portB_request_put,
       RDY_ibuf_14_portB_response_get,
       RDY_ibuf_15_portA_request_put,
       RDY_ibuf_15_portA_response_get,
       RDY_ibuf_15_portB_request_put,
       RDY_ibuf_15_portB_response_get,
       RDY_ibuf_16_portA_request_put,
       RDY_ibuf_16_portA_response_get,
       RDY_ibuf_16_portB_request_put,
       RDY_ibuf_16_portB_response_get,
       RDY_ibuf_17_portA_request_put,
       RDY_ibuf_17_portA_response_get,
       RDY_ibuf_17_portB_request_put,
       RDY_ibuf_17_portB_response_get,
       RDY_ibuf_18_portA_request_put,
       RDY_ibuf_18_portA_response_get,
       RDY_ibuf_18_portB_request_put,
       RDY_ibuf_18_portB_response_get,
       RDY_ibuf_19_portA_request_put,
       RDY_ibuf_19_portA_response_get,
       RDY_ibuf_19_portB_request_put,
       RDY_ibuf_19_portB_response_get,
       RDY_ibuf_1_portA_request_put,
       RDY_ibuf_1_portA_response_get,
       RDY_ibuf_1_portB_request_put,
       RDY_ibuf_1_portB_response_get,
       RDY_ibuf_20_portA_request_put,
       RDY_ibuf_20_portA_response_get,
       RDY_ibuf_20_portB_request_put,
       RDY_ibuf_20_portB_response_get,
       RDY_ibuf_21_portA_request_put,
       RDY_ibuf_21_portA_response_get,
       RDY_ibuf_21_portB_request_put,
       RDY_ibuf_21_portB_response_get,
       RDY_ibuf_22_portA_request_put,
       RDY_ibuf_22_portA_response_get,
       RDY_ibuf_22_portB_request_put,
       RDY_ibuf_22_portB_response_get,
       RDY_ibuf_23_portA_request_put,
       RDY_ibuf_23_portA_response_get,
       RDY_ibuf_23_portB_request_put,
       RDY_ibuf_23_portB_response_get,
       RDY_ibuf_24_portA_request_put,
       RDY_ibuf_24_portA_response_get,
       RDY_ibuf_24_portB_request_put,
       RDY_ibuf_24_portB_response_get,
       RDY_ibuf_25_portA_request_put,
       RDY_ibuf_25_portA_response_get,
       RDY_ibuf_25_portB_request_put,
       RDY_ibuf_25_portB_response_get,
       RDY_ibuf_26_portA_request_put,
       RDY_ibuf_26_portA_response_get,
       RDY_ibuf_26_portB_request_put,
       RDY_ibuf_26_portB_response_get,
       RDY_ibuf_27_portA_request_put,
       RDY_ibuf_27_portA_response_get,
       RDY_ibuf_27_portB_request_put,
       RDY_ibuf_27_portB_response_get,
       RDY_ibuf_28_portA_request_put,
       RDY_ibuf_28_portA_response_get,
       RDY_ibuf_28_portB_request_put,
       RDY_ibuf_28_portB_response_get,
       RDY_ibuf_29_portA_request_put,
       RDY_ibuf_29_portA_response_get,
       RDY_ibuf_29_portB_request_put,
       RDY_ibuf_29_portB_response_get,
       RDY_ibuf_2_portA_request_put,
       RDY_ibuf_2_portA_response_get,
       RDY_ibuf_2_portB_request_put,
       RDY_ibuf_2_portB_response_get,
       RDY_ibuf_30_portA_request_put,
       RDY_ibuf_30_portA_response_get,
       RDY_ibuf_30_portB_request_put,
       RDY_ibuf_30_portB_response_get,
       RDY_ibuf_31_portA_request_put,
       RDY_ibuf_31_portA_response_get,
       RDY_ibuf_31_portB_request_put,
       RDY_ibuf_31_portB_response_get,
       RDY_ibuf_3_portA_request_put,
       RDY_ibuf_3_portA_response_get,
       RDY_ibuf_3_portB_request_put,
       RDY_ibuf_3_portB_response_get,
       RDY_ibuf_4_portA_request_put,
       RDY_ibuf_4_portA_response_get,
       RDY_ibuf_4_portB_request_put,
       RDY_ibuf_4_portB_response_get,
       RDY_ibuf_5_portA_request_put,
       RDY_ibuf_5_portA_response_get,
       RDY_ibuf_5_portB_request_put,
       RDY_ibuf_5_portB_response_get,
       RDY_ibuf_6_portA_request_put,
       RDY_ibuf_6_portA_response_get,
       RDY_ibuf_6_portB_request_put,
       RDY_ibuf_6_portB_response_get,
       RDY_ibuf_7_portA_request_put,
       RDY_ibuf_7_portA_response_get,
       RDY_ibuf_7_portB_request_put,
       RDY_ibuf_7_portB_response_get,
       RDY_ibuf_8_portA_request_put,
       RDY_ibuf_8_portA_response_get,
       RDY_ibuf_8_portB_request_put,
       RDY_ibuf_8_portB_response_get,
       RDY_ibuf_9_portA_request_put,
       RDY_ibuf_9_portA_response_get,
       RDY_ibuf_9_portB_request_put,
       RDY_ibuf_9_portB_response_get,
       RDY_obuf1_0_portA_request_put,
       RDY_obuf1_0_portA_response_get,
       RDY_obuf1_0_portB_request_put,
       RDY_obuf1_0_portB_response_get,
       RDY_obuf1_10_portA_request_put,
       RDY_obuf1_10_portA_response_get,
       RDY_obuf1_10_portB_request_put,
       RDY_obuf1_10_portB_response_get,
       RDY_obuf1_11_portA_request_put,
       RDY_obuf1_11_portA_response_get,
       RDY_obuf1_11_portB_request_put,
       RDY_obuf1_11_portB_response_get,
       RDY_obuf1_12_portA_request_put,
       RDY_obuf1_12_portA_response_get,
       RDY_obuf1_12_portB_request_put,
       RDY_obuf1_12_portB_response_get,
       RDY_obuf1_13_portA_request_put,
       RDY_obuf1_13_portA_response_get,
       RDY_obuf1_13_portB_request_put,
       RDY_obuf1_13_portB_response_get,
       RDY_obuf1_14_portA_request_put,
       RDY_obuf1_14_portA_response_get,
       RDY_obuf1_14_portB_request_put,
       RDY_obuf1_14_portB_response_get,
       RDY_obuf1_15_portA_request_put,
       RDY_obuf1_15_portA_response_get,
       RDY_obuf1_15_portB_request_put,
       RDY_obuf1_15_portB_response_get,
       RDY_obuf1_16_portA_request_put,
       RDY_obuf1_16_portA_response_get,
       RDY_obuf1_16_portB_request_put,
       RDY_obuf1_16_portB_response_get,
       RDY_obuf1_17_portA_request_put,
       RDY_obuf1_17_portA_response_get,
       RDY_obuf1_17_portB_request_put,
       RDY_obuf1_17_portB_response_get,
       RDY_obuf1_18_portA_request_put,
       RDY_obuf1_18_portA_response_get,
       RDY_obuf1_18_portB_request_put,
       RDY_obuf1_18_portB_response_get,
       RDY_obuf1_19_portA_request_put,
       RDY_obuf1_19_portA_response_get,
       RDY_obuf1_19_portB_request_put,
       RDY_obuf1_19_portB_response_get,
       RDY_obuf1_1_portA_request_put,
       RDY_obuf1_1_portA_response_get,
       RDY_obuf1_1_portB_request_put,
       RDY_obuf1_1_portB_response_get,
       RDY_obuf1_20_portA_request_put,
       RDY_obuf1_20_portA_response_get,
       RDY_obuf1_20_portB_request_put,
       RDY_obuf1_20_portB_response_get,
       RDY_obuf1_21_portA_request_put,
       RDY_obuf1_21_portA_response_get,
       RDY_obuf1_21_portB_request_put,
       RDY_obuf1_21_portB_response_get,
       RDY_obuf1_22_portA_request_put,
       RDY_obuf1_22_portA_response_get,
       RDY_obuf1_22_portB_request_put,
       RDY_obuf1_22_portB_response_get,
       RDY_obuf1_23_portA_request_put,
       RDY_obuf1_23_portA_response_get,
       RDY_obuf1_23_portB_request_put,
       RDY_obuf1_23_portB_response_get,
       RDY_obuf1_24_portA_request_put,
       RDY_obuf1_24_portA_response_get,
       RDY_obuf1_24_portB_request_put,
       RDY_obuf1_24_portB_response_get,
       RDY_obuf1_25_portA_request_put,
       RDY_obuf1_25_portA_response_get,
       RDY_obuf1_25_portB_request_put,
       RDY_obuf1_25_portB_response_get,
       RDY_obuf1_26_portA_request_put,
       RDY_obuf1_26_portA_response_get,
       RDY_obuf1_26_portB_request_put,
       RDY_obuf1_26_portB_response_get,
       RDY_obuf1_27_portA_request_put,
       RDY_obuf1_27_portA_response_get,
       RDY_obuf1_27_portB_request_put,
       RDY_obuf1_27_portB_response_get,
       RDY_obuf1_28_portA_request_put,
       RDY_obuf1_28_portA_response_get,
       RDY_obuf1_28_portB_request_put,
       RDY_obuf1_28_portB_response_get,
       RDY_obuf1_29_portA_request_put,
       RDY_obuf1_29_portA_response_get,
       RDY_obuf1_29_portB_request_put,
       RDY_obuf1_29_portB_response_get,
       RDY_obuf1_2_portA_request_put,
       RDY_obuf1_2_portA_response_get,
       RDY_obuf1_2_portB_request_put,
       RDY_obuf1_2_portB_response_get,
       RDY_obuf1_30_portA_request_put,
       RDY_obuf1_30_portA_response_get,
       RDY_obuf1_30_portB_request_put,
       RDY_obuf1_30_portB_response_get,
       RDY_obuf1_31_portA_request_put,
       RDY_obuf1_31_portA_response_get,
       RDY_obuf1_31_portB_request_put,
       RDY_obuf1_31_portB_response_get,
       RDY_obuf1_3_portA_request_put,
       RDY_obuf1_3_portA_response_get,
       RDY_obuf1_3_portB_request_put,
       RDY_obuf1_3_portB_response_get,
       RDY_obuf1_4_portA_request_put,
       RDY_obuf1_4_portA_response_get,
       RDY_obuf1_4_portB_request_put,
       RDY_obuf1_4_portB_response_get,
       RDY_obuf1_5_portA_request_put,
       RDY_obuf1_5_portA_response_get,
       RDY_obuf1_5_portB_request_put,
       RDY_obuf1_5_portB_response_get,
       RDY_obuf1_6_portA_request_put,
       RDY_obuf1_6_portA_response_get,
       RDY_obuf1_6_portB_request_put,
       RDY_obuf1_6_portB_response_get,
       RDY_obuf1_7_portA_request_put,
       RDY_obuf1_7_portA_response_get,
       RDY_obuf1_7_portB_request_put,
       RDY_obuf1_7_portB_response_get,
       RDY_obuf1_8_portA_request_put,
       RDY_obuf1_8_portA_response_get,
       RDY_obuf1_8_portB_request_put,
       RDY_obuf1_8_portB_response_get,
       RDY_obuf1_9_portA_request_put,
       RDY_obuf1_9_portA_response_get,
       RDY_obuf1_9_portB_request_put,
       RDY_obuf1_9_portB_response_get,
       RDY_obuf2_0_portA_request_put,
       RDY_obuf2_0_portA_response_get,
       RDY_obuf2_0_portB_request_put,
       RDY_obuf2_0_portB_response_get,
       RDY_obuf2_10_portA_request_put,
       RDY_obuf2_10_portA_response_get,
       RDY_obuf2_10_portB_request_put,
       RDY_obuf2_10_portB_response_get,
       RDY_obuf2_11_portA_request_put,
       RDY_obuf2_11_portA_response_get,
       RDY_obuf2_11_portB_request_put,
       RDY_obuf2_11_portB_response_get,
       RDY_obuf2_12_portA_request_put,
       RDY_obuf2_12_portA_response_get,
       RDY_obuf2_12_portB_request_put,
       RDY_obuf2_12_portB_response_get,
       RDY_obuf2_13_portA_request_put,
       RDY_obuf2_13_portA_response_get,
       RDY_obuf2_13_portB_request_put,
       RDY_obuf2_13_portB_response_get,
       RDY_obuf2_14_portA_request_put,
       RDY_obuf2_14_portA_response_get,
       RDY_obuf2_14_portB_request_put,
       RDY_obuf2_14_portB_response_get,
       RDY_obuf2_15_portA_request_put,
       RDY_obuf2_15_portA_response_get,
       RDY_obuf2_15_portB_request_put,
       RDY_obuf2_15_portB_response_get,
       RDY_obuf2_16_portA_request_put,
       RDY_obuf2_16_portA_response_get,
       RDY_obuf2_16_portB_request_put,
       RDY_obuf2_16_portB_response_get,
       RDY_obuf2_17_portA_request_put,
       RDY_obuf2_17_portA_response_get,
       RDY_obuf2_17_portB_request_put,
       RDY_obuf2_17_portB_response_get,
       RDY_obuf2_18_portA_request_put,
       RDY_obuf2_18_portA_response_get,
       RDY_obuf2_18_portB_request_put,
       RDY_obuf2_18_portB_response_get,
       RDY_obuf2_19_portA_request_put,
       RDY_obuf2_19_portA_response_get,
       RDY_obuf2_19_portB_request_put,
       RDY_obuf2_19_portB_response_get,
       RDY_obuf2_1_portA_request_put,
       RDY_obuf2_1_portA_response_get,
       RDY_obuf2_1_portB_request_put,
       RDY_obuf2_1_portB_response_get,
       RDY_obuf2_20_portA_request_put,
       RDY_obuf2_20_portA_response_get,
       RDY_obuf2_20_portB_request_put,
       RDY_obuf2_20_portB_response_get,
       RDY_obuf2_21_portA_request_put,
       RDY_obuf2_21_portA_response_get,
       RDY_obuf2_21_portB_request_put,
       RDY_obuf2_21_portB_response_get,
       RDY_obuf2_22_portA_request_put,
       RDY_obuf2_22_portA_response_get,
       RDY_obuf2_22_portB_request_put,
       RDY_obuf2_22_portB_response_get,
       RDY_obuf2_23_portA_request_put,
       RDY_obuf2_23_portA_response_get,
       RDY_obuf2_23_portB_request_put,
       RDY_obuf2_23_portB_response_get,
       RDY_obuf2_24_portA_request_put,
       RDY_obuf2_24_portA_response_get,
       RDY_obuf2_24_portB_request_put,
       RDY_obuf2_24_portB_response_get,
       RDY_obuf2_25_portA_request_put,
       RDY_obuf2_25_portA_response_get,
       RDY_obuf2_25_portB_request_put,
       RDY_obuf2_25_portB_response_get,
       RDY_obuf2_26_portA_request_put,
       RDY_obuf2_26_portA_response_get,
       RDY_obuf2_26_portB_request_put,
       RDY_obuf2_26_portB_response_get,
       RDY_obuf2_27_portA_request_put,
       RDY_obuf2_27_portA_response_get,
       RDY_obuf2_27_portB_request_put,
       RDY_obuf2_27_portB_response_get,
       RDY_obuf2_28_portA_request_put,
       RDY_obuf2_28_portA_response_get,
       RDY_obuf2_28_portB_request_put,
       RDY_obuf2_28_portB_response_get,
       RDY_obuf2_29_portA_request_put,
       RDY_obuf2_29_portA_response_get,
       RDY_obuf2_29_portB_request_put,
       RDY_obuf2_29_portB_response_get,
       RDY_obuf2_2_portA_request_put,
       RDY_obuf2_2_portA_response_get,
       RDY_obuf2_2_portB_request_put,
       RDY_obuf2_2_portB_response_get,
       RDY_obuf2_30_portA_request_put,
       RDY_obuf2_30_portA_response_get,
       RDY_obuf2_30_portB_request_put,
       RDY_obuf2_30_portB_response_get,
       RDY_obuf2_31_portA_request_put,
       RDY_obuf2_31_portA_response_get,
       RDY_obuf2_31_portB_request_put,
       RDY_obuf2_31_portB_response_get,
       RDY_obuf2_3_portA_request_put,
       RDY_obuf2_3_portA_response_get,
       RDY_obuf2_3_portB_request_put,
       RDY_obuf2_3_portB_response_get,
       RDY_obuf2_4_portA_request_put,
       RDY_obuf2_4_portA_response_get,
       RDY_obuf2_4_portB_request_put,
       RDY_obuf2_4_portB_response_get,
       RDY_obuf2_5_portA_request_put,
       RDY_obuf2_5_portA_response_get,
       RDY_obuf2_5_portB_request_put,
       RDY_obuf2_5_portB_response_get,
       RDY_obuf2_6_portA_request_put,
       RDY_obuf2_6_portA_response_get,
       RDY_obuf2_6_portB_request_put,
       RDY_obuf2_6_portB_response_get,
       RDY_obuf2_7_portA_request_put,
       RDY_obuf2_7_portA_response_get,
       RDY_obuf2_7_portB_request_put,
       RDY_obuf2_7_portB_response_get,
       RDY_obuf2_8_portA_request_put,
       RDY_obuf2_8_portA_response_get,
       RDY_obuf2_8_portB_request_put,
       RDY_obuf2_8_portB_response_get,
       RDY_obuf2_9_portA_request_put,
       RDY_obuf2_9_portA_response_get,
       RDY_obuf2_9_portB_request_put,
       RDY_obuf2_9_portB_response_get,
       RDY_wbuf_0_portA_request_put,
       RDY_wbuf_0_portA_response_get,
       RDY_wbuf_0_portB_request_put,
       RDY_wbuf_0_portB_response_get,
       RDY_wbuf_10_portA_request_put,
       RDY_wbuf_10_portA_response_get,
       RDY_wbuf_10_portB_request_put,
       RDY_wbuf_10_portB_response_get,
       RDY_wbuf_11_portA_request_put,
       RDY_wbuf_11_portA_response_get,
       RDY_wbuf_11_portB_request_put,
       RDY_wbuf_11_portB_response_get,
       RDY_wbuf_12_portA_request_put,
       RDY_wbuf_12_portA_response_get,
       RDY_wbuf_12_portB_request_put,
       RDY_wbuf_12_portB_response_get,
       RDY_wbuf_13_portA_request_put,
       RDY_wbuf_13_portA_response_get,
       RDY_wbuf_13_portB_request_put,
       RDY_wbuf_13_portB_response_get,
       RDY_wbuf_14_portA_request_put,
       RDY_wbuf_14_portA_response_get,
       RDY_wbuf_14_portB_request_put,
       RDY_wbuf_14_portB_response_get,
       RDY_wbuf_15_portA_request_put,
       RDY_wbuf_15_portA_response_get,
       RDY_wbuf_15_portB_request_put,
       RDY_wbuf_15_portB_response_get,
       RDY_wbuf_16_portA_request_put,
       RDY_wbuf_16_portA_response_get,
       RDY_wbuf_16_portB_request_put,
       RDY_wbuf_16_portB_response_get,
       RDY_wbuf_17_portA_request_put,
       RDY_wbuf_17_portA_response_get,
       RDY_wbuf_17_portB_request_put,
       RDY_wbuf_17_portB_response_get,
       RDY_wbuf_18_portA_request_put,
       RDY_wbuf_18_portA_response_get,
       RDY_wbuf_18_portB_request_put,
       RDY_wbuf_18_portB_response_get,
       RDY_wbuf_19_portA_request_put,
       RDY_wbuf_19_portA_response_get,
       RDY_wbuf_19_portB_request_put,
       RDY_wbuf_19_portB_response_get,
       RDY_wbuf_1_portA_request_put,
       RDY_wbuf_1_portA_response_get,
       RDY_wbuf_1_portB_request_put,
       RDY_wbuf_1_portB_response_get,
       RDY_wbuf_20_portA_request_put,
       RDY_wbuf_20_portA_response_get,
       RDY_wbuf_20_portB_request_put,
       RDY_wbuf_20_portB_response_get,
       RDY_wbuf_21_portA_request_put,
       RDY_wbuf_21_portA_response_get,
       RDY_wbuf_21_portB_request_put,
       RDY_wbuf_21_portB_response_get,
       RDY_wbuf_22_portA_request_put,
       RDY_wbuf_22_portA_response_get,
       RDY_wbuf_22_portB_request_put,
       RDY_wbuf_22_portB_response_get,
       RDY_wbuf_23_portA_request_put,
       RDY_wbuf_23_portA_response_get,
       RDY_wbuf_23_portB_request_put,
       RDY_wbuf_23_portB_response_get,
       RDY_wbuf_24_portA_request_put,
       RDY_wbuf_24_portA_response_get,
       RDY_wbuf_24_portB_request_put,
       RDY_wbuf_24_portB_response_get,
       RDY_wbuf_25_portA_request_put,
       RDY_wbuf_25_portA_response_get,
       RDY_wbuf_25_portB_request_put,
       RDY_wbuf_25_portB_response_get,
       RDY_wbuf_26_portA_request_put,
       RDY_wbuf_26_portA_response_get,
       RDY_wbuf_26_portB_request_put,
       RDY_wbuf_26_portB_response_get,
       RDY_wbuf_27_portA_request_put,
       RDY_wbuf_27_portA_response_get,
       RDY_wbuf_27_portB_request_put,
       RDY_wbuf_27_portB_response_get,
       RDY_wbuf_28_portA_request_put,
       RDY_wbuf_28_portA_response_get,
       RDY_wbuf_28_portB_request_put,
       RDY_wbuf_28_portB_response_get,
       RDY_wbuf_29_portA_request_put,
       RDY_wbuf_29_portA_response_get,
       RDY_wbuf_29_portB_request_put,
       RDY_wbuf_29_portB_response_get,
       RDY_wbuf_2_portA_request_put,
       RDY_wbuf_2_portA_response_get,
       RDY_wbuf_2_portB_request_put,
       RDY_wbuf_2_portB_response_get,
       RDY_wbuf_30_portA_request_put,
       RDY_wbuf_30_portA_response_get,
       RDY_wbuf_30_portB_request_put,
       RDY_wbuf_30_portB_response_get,
       RDY_wbuf_31_portA_request_put,
       RDY_wbuf_31_portA_response_get,
       RDY_wbuf_31_portB_request_put,
       RDY_wbuf_31_portB_response_get,
       RDY_wbuf_3_portA_request_put,
       RDY_wbuf_3_portA_response_get,
       RDY_wbuf_3_portB_request_put,
       RDY_wbuf_3_portB_response_get,
       RDY_wbuf_4_portA_request_put,
       RDY_wbuf_4_portA_response_get,
       RDY_wbuf_4_portB_request_put,
       RDY_wbuf_4_portB_response_get,
       RDY_wbuf_5_portA_request_put,
       RDY_wbuf_5_portA_response_get,
       RDY_wbuf_5_portB_request_put,
       RDY_wbuf_5_portB_response_get,
       RDY_wbuf_6_portA_request_put,
       RDY_wbuf_6_portA_response_get,
       RDY_wbuf_6_portB_request_put,
       RDY_wbuf_6_portB_response_get,
       RDY_wbuf_7_portA_request_put,
       RDY_wbuf_7_portA_response_get,
       RDY_wbuf_7_portB_request_put,
       RDY_wbuf_7_portB_response_get,
       RDY_wbuf_8_portA_request_put,
       RDY_wbuf_8_portA_response_get,
       RDY_wbuf_8_portB_request_put,
       RDY_wbuf_8_portB_response_get,
       RDY_wbuf_9_portA_request_put,
       RDY_wbuf_9_portA_response_get,
       RDY_wbuf_9_portB_request_put,
       RDY_wbuf_9_portB_response_get;

  // inlined wires
  wire [1 : 0] ibuffer_0_serverAdapterA_s1_1$wget,
	       ibuffer_0_serverAdapterB_s1_1$wget,
	       ibuffer_10_serverAdapterA_s1_1$wget,
	       ibuffer_10_serverAdapterB_s1_1$wget,
	       ibuffer_11_serverAdapterA_s1_1$wget,
	       ibuffer_11_serverAdapterB_s1_1$wget,
	       ibuffer_12_serverAdapterA_s1_1$wget,
	       ibuffer_12_serverAdapterB_s1_1$wget,
	       ibuffer_13_serverAdapterA_s1_1$wget,
	       ibuffer_13_serverAdapterB_s1_1$wget,
	       ibuffer_14_serverAdapterA_s1_1$wget,
	       ibuffer_14_serverAdapterB_s1_1$wget,
	       ibuffer_15_serverAdapterA_s1_1$wget,
	       ibuffer_15_serverAdapterB_s1_1$wget,
	       ibuffer_16_serverAdapterA_s1_1$wget,
	       ibuffer_16_serverAdapterB_s1_1$wget,
	       ibuffer_17_serverAdapterA_s1_1$wget,
	       ibuffer_17_serverAdapterB_s1_1$wget,
	       ibuffer_18_serverAdapterA_s1_1$wget,
	       ibuffer_18_serverAdapterB_s1_1$wget,
	       ibuffer_19_serverAdapterA_s1_1$wget,
	       ibuffer_19_serverAdapterB_s1_1$wget,
	       ibuffer_1_serverAdapterA_s1_1$wget,
	       ibuffer_1_serverAdapterB_s1_1$wget,
	       ibuffer_20_serverAdapterA_s1_1$wget,
	       ibuffer_20_serverAdapterB_s1_1$wget,
	       ibuffer_21_serverAdapterA_s1_1$wget,
	       ibuffer_21_serverAdapterB_s1_1$wget,
	       ibuffer_22_serverAdapterA_s1_1$wget,
	       ibuffer_22_serverAdapterB_s1_1$wget,
	       ibuffer_23_serverAdapterA_s1_1$wget,
	       ibuffer_23_serverAdapterB_s1_1$wget,
	       ibuffer_24_serverAdapterA_s1_1$wget,
	       ibuffer_24_serverAdapterB_s1_1$wget,
	       ibuffer_25_serverAdapterA_s1_1$wget,
	       ibuffer_25_serverAdapterB_s1_1$wget,
	       ibuffer_26_serverAdapterA_s1_1$wget,
	       ibuffer_26_serverAdapterB_s1_1$wget,
	       ibuffer_27_serverAdapterA_s1_1$wget,
	       ibuffer_27_serverAdapterB_s1_1$wget,
	       ibuffer_28_serverAdapterA_s1_1$wget,
	       ibuffer_28_serverAdapterB_s1_1$wget,
	       ibuffer_29_serverAdapterA_s1_1$wget,
	       ibuffer_29_serverAdapterB_s1_1$wget,
	       ibuffer_2_serverAdapterA_s1_1$wget,
	       ibuffer_2_serverAdapterB_s1_1$wget,
	       ibuffer_30_serverAdapterA_s1_1$wget,
	       ibuffer_30_serverAdapterB_s1_1$wget,
	       ibuffer_31_serverAdapterA_s1_1$wget,
	       ibuffer_31_serverAdapterB_s1_1$wget,
	       ibuffer_3_serverAdapterA_s1_1$wget,
	       ibuffer_3_serverAdapterB_s1_1$wget,
	       ibuffer_4_serverAdapterA_s1_1$wget,
	       ibuffer_4_serverAdapterB_s1_1$wget,
	       ibuffer_5_serverAdapterA_s1_1$wget,
	       ibuffer_5_serverAdapterB_s1_1$wget,
	       ibuffer_6_serverAdapterA_s1_1$wget,
	       ibuffer_6_serverAdapterB_s1_1$wget,
	       ibuffer_7_serverAdapterA_s1_1$wget,
	       ibuffer_7_serverAdapterB_s1_1$wget,
	       ibuffer_8_serverAdapterA_s1_1$wget,
	       ibuffer_8_serverAdapterB_s1_1$wget,
	       ibuffer_9_serverAdapterA_s1_1$wget,
	       ibuffer_9_serverAdapterB_s1_1$wget,
	       obuffer1_0_serverAdapterA_s1_1$wget,
	       obuffer1_0_serverAdapterB_s1_1$wget,
	       obuffer1_10_serverAdapterA_s1_1$wget,
	       obuffer1_10_serverAdapterB_s1_1$wget,
	       obuffer1_11_serverAdapterA_s1_1$wget,
	       obuffer1_11_serverAdapterB_s1_1$wget,
	       obuffer1_12_serverAdapterA_s1_1$wget,
	       obuffer1_12_serverAdapterB_s1_1$wget,
	       obuffer1_13_serverAdapterA_s1_1$wget,
	       obuffer1_13_serverAdapterB_s1_1$wget,
	       obuffer1_14_serverAdapterA_s1_1$wget,
	       obuffer1_14_serverAdapterB_s1_1$wget,
	       obuffer1_15_serverAdapterA_s1_1$wget,
	       obuffer1_15_serverAdapterB_s1_1$wget,
	       obuffer1_16_serverAdapterA_s1_1$wget,
	       obuffer1_16_serverAdapterB_s1_1$wget,
	       obuffer1_17_serverAdapterA_s1_1$wget,
	       obuffer1_17_serverAdapterB_s1_1$wget,
	       obuffer1_18_serverAdapterA_s1_1$wget,
	       obuffer1_18_serverAdapterB_s1_1$wget,
	       obuffer1_19_serverAdapterA_s1_1$wget,
	       obuffer1_19_serverAdapterB_s1_1$wget,
	       obuffer1_1_serverAdapterA_s1_1$wget,
	       obuffer1_1_serverAdapterB_s1_1$wget,
	       obuffer1_20_serverAdapterA_s1_1$wget,
	       obuffer1_20_serverAdapterB_s1_1$wget,
	       obuffer1_21_serverAdapterA_s1_1$wget,
	       obuffer1_21_serverAdapterB_s1_1$wget,
	       obuffer1_22_serverAdapterA_s1_1$wget,
	       obuffer1_22_serverAdapterB_s1_1$wget,
	       obuffer1_23_serverAdapterA_s1_1$wget,
	       obuffer1_23_serverAdapterB_s1_1$wget,
	       obuffer1_24_serverAdapterA_s1_1$wget,
	       obuffer1_24_serverAdapterB_s1_1$wget,
	       obuffer1_25_serverAdapterA_s1_1$wget,
	       obuffer1_25_serverAdapterB_s1_1$wget,
	       obuffer1_26_serverAdapterA_s1_1$wget,
	       obuffer1_26_serverAdapterB_s1_1$wget,
	       obuffer1_27_serverAdapterA_s1_1$wget,
	       obuffer1_27_serverAdapterB_s1_1$wget,
	       obuffer1_28_serverAdapterA_s1_1$wget,
	       obuffer1_28_serverAdapterB_s1_1$wget,
	       obuffer1_29_serverAdapterA_s1_1$wget,
	       obuffer1_29_serverAdapterB_s1_1$wget,
	       obuffer1_2_serverAdapterA_s1_1$wget,
	       obuffer1_2_serverAdapterB_s1_1$wget,
	       obuffer1_30_serverAdapterA_s1_1$wget,
	       obuffer1_30_serverAdapterB_s1_1$wget,
	       obuffer1_31_serverAdapterA_s1_1$wget,
	       obuffer1_31_serverAdapterB_s1_1$wget,
	       obuffer1_3_serverAdapterA_s1_1$wget,
	       obuffer1_3_serverAdapterB_s1_1$wget,
	       obuffer1_4_serverAdapterA_s1_1$wget,
	       obuffer1_4_serverAdapterB_s1_1$wget,
	       obuffer1_5_serverAdapterA_s1_1$wget,
	       obuffer1_5_serverAdapterB_s1_1$wget,
	       obuffer1_6_serverAdapterA_s1_1$wget,
	       obuffer1_6_serverAdapterB_s1_1$wget,
	       obuffer1_7_serverAdapterA_s1_1$wget,
	       obuffer1_7_serverAdapterB_s1_1$wget,
	       obuffer1_8_serverAdapterA_s1_1$wget,
	       obuffer1_8_serverAdapterB_s1_1$wget,
	       obuffer1_9_serverAdapterA_s1_1$wget,
	       obuffer1_9_serverAdapterB_s1_1$wget,
	       obuffer2_0_serverAdapterA_s1_1$wget,
	       obuffer2_0_serverAdapterB_s1_1$wget,
	       obuffer2_10_serverAdapterA_s1_1$wget,
	       obuffer2_10_serverAdapterB_s1_1$wget,
	       obuffer2_11_serverAdapterA_s1_1$wget,
	       obuffer2_11_serverAdapterB_s1_1$wget,
	       obuffer2_12_serverAdapterA_s1_1$wget,
	       obuffer2_12_serverAdapterB_s1_1$wget,
	       obuffer2_13_serverAdapterA_s1_1$wget,
	       obuffer2_13_serverAdapterB_s1_1$wget,
	       obuffer2_14_serverAdapterA_s1_1$wget,
	       obuffer2_14_serverAdapterB_s1_1$wget,
	       obuffer2_15_serverAdapterA_s1_1$wget,
	       obuffer2_15_serverAdapterB_s1_1$wget,
	       obuffer2_16_serverAdapterA_s1_1$wget,
	       obuffer2_16_serverAdapterB_s1_1$wget,
	       obuffer2_17_serverAdapterA_s1_1$wget,
	       obuffer2_17_serverAdapterB_s1_1$wget,
	       obuffer2_18_serverAdapterA_s1_1$wget,
	       obuffer2_18_serverAdapterB_s1_1$wget,
	       obuffer2_19_serverAdapterA_s1_1$wget,
	       obuffer2_19_serverAdapterB_s1_1$wget,
	       obuffer2_1_serverAdapterA_s1_1$wget,
	       obuffer2_1_serverAdapterB_s1_1$wget,
	       obuffer2_20_serverAdapterA_s1_1$wget,
	       obuffer2_20_serverAdapterB_s1_1$wget,
	       obuffer2_21_serverAdapterA_s1_1$wget,
	       obuffer2_21_serverAdapterB_s1_1$wget,
	       obuffer2_22_serverAdapterA_s1_1$wget,
	       obuffer2_22_serverAdapterB_s1_1$wget,
	       obuffer2_23_serverAdapterA_s1_1$wget,
	       obuffer2_23_serverAdapterB_s1_1$wget,
	       obuffer2_24_serverAdapterA_s1_1$wget,
	       obuffer2_24_serverAdapterB_s1_1$wget,
	       obuffer2_25_serverAdapterA_s1_1$wget,
	       obuffer2_25_serverAdapterB_s1_1$wget,
	       obuffer2_26_serverAdapterA_s1_1$wget,
	       obuffer2_26_serverAdapterB_s1_1$wget,
	       obuffer2_27_serverAdapterA_s1_1$wget,
	       obuffer2_27_serverAdapterB_s1_1$wget,
	       obuffer2_28_serverAdapterA_s1_1$wget,
	       obuffer2_28_serverAdapterB_s1_1$wget,
	       obuffer2_29_serverAdapterA_s1_1$wget,
	       obuffer2_29_serverAdapterB_s1_1$wget,
	       obuffer2_2_serverAdapterA_s1_1$wget,
	       obuffer2_2_serverAdapterB_s1_1$wget,
	       obuffer2_30_serverAdapterA_s1_1$wget,
	       obuffer2_30_serverAdapterB_s1_1$wget,
	       obuffer2_31_serverAdapterA_s1_1$wget,
	       obuffer2_31_serverAdapterB_s1_1$wget,
	       obuffer2_3_serverAdapterA_s1_1$wget,
	       obuffer2_3_serverAdapterB_s1_1$wget,
	       obuffer2_4_serverAdapterA_s1_1$wget,
	       obuffer2_4_serverAdapterB_s1_1$wget,
	       obuffer2_5_serverAdapterA_s1_1$wget,
	       obuffer2_5_serverAdapterB_s1_1$wget,
	       obuffer2_6_serverAdapterA_s1_1$wget,
	       obuffer2_6_serverAdapterB_s1_1$wget,
	       obuffer2_7_serverAdapterA_s1_1$wget,
	       obuffer2_7_serverAdapterB_s1_1$wget,
	       obuffer2_8_serverAdapterA_s1_1$wget,
	       obuffer2_8_serverAdapterB_s1_1$wget,
	       obuffer2_9_serverAdapterA_s1_1$wget,
	       obuffer2_9_serverAdapterB_s1_1$wget,
	       wbuffer_0_serverAdapterA_s1_1$wget,
	       wbuffer_0_serverAdapterB_s1_1$wget,
	       wbuffer_10_serverAdapterA_s1_1$wget,
	       wbuffer_10_serverAdapterB_s1_1$wget,
	       wbuffer_11_serverAdapterA_s1_1$wget,
	       wbuffer_11_serverAdapterB_s1_1$wget,
	       wbuffer_12_serverAdapterA_s1_1$wget,
	       wbuffer_12_serverAdapterB_s1_1$wget,
	       wbuffer_13_serverAdapterA_s1_1$wget,
	       wbuffer_13_serverAdapterB_s1_1$wget,
	       wbuffer_14_serverAdapterA_s1_1$wget,
	       wbuffer_14_serverAdapterB_s1_1$wget,
	       wbuffer_15_serverAdapterA_s1_1$wget,
	       wbuffer_15_serverAdapterB_s1_1$wget,
	       wbuffer_16_serverAdapterA_s1_1$wget,
	       wbuffer_16_serverAdapterB_s1_1$wget,
	       wbuffer_17_serverAdapterA_s1_1$wget,
	       wbuffer_17_serverAdapterB_s1_1$wget,
	       wbuffer_18_serverAdapterA_s1_1$wget,
	       wbuffer_18_serverAdapterB_s1_1$wget,
	       wbuffer_19_serverAdapterA_s1_1$wget,
	       wbuffer_19_serverAdapterB_s1_1$wget,
	       wbuffer_1_serverAdapterA_s1_1$wget,
	       wbuffer_1_serverAdapterB_s1_1$wget,
	       wbuffer_20_serverAdapterA_s1_1$wget,
	       wbuffer_20_serverAdapterB_s1_1$wget,
	       wbuffer_21_serverAdapterA_s1_1$wget,
	       wbuffer_21_serverAdapterB_s1_1$wget,
	       wbuffer_22_serverAdapterA_s1_1$wget,
	       wbuffer_22_serverAdapterB_s1_1$wget,
	       wbuffer_23_serverAdapterA_s1_1$wget,
	       wbuffer_23_serverAdapterB_s1_1$wget,
	       wbuffer_24_serverAdapterA_s1_1$wget,
	       wbuffer_24_serverAdapterB_s1_1$wget,
	       wbuffer_25_serverAdapterA_s1_1$wget,
	       wbuffer_25_serverAdapterB_s1_1$wget,
	       wbuffer_26_serverAdapterA_s1_1$wget,
	       wbuffer_26_serverAdapterB_s1_1$wget,
	       wbuffer_27_serverAdapterA_s1_1$wget,
	       wbuffer_27_serverAdapterB_s1_1$wget,
	       wbuffer_28_serverAdapterA_s1_1$wget,
	       wbuffer_28_serverAdapterB_s1_1$wget,
	       wbuffer_29_serverAdapterA_s1_1$wget,
	       wbuffer_29_serverAdapterB_s1_1$wget,
	       wbuffer_2_serverAdapterA_s1_1$wget,
	       wbuffer_2_serverAdapterB_s1_1$wget,
	       wbuffer_30_serverAdapterA_s1_1$wget,
	       wbuffer_30_serverAdapterB_s1_1$wget,
	       wbuffer_31_serverAdapterA_s1_1$wget,
	       wbuffer_31_serverAdapterB_s1_1$wget,
	       wbuffer_3_serverAdapterA_s1_1$wget,
	       wbuffer_3_serverAdapterB_s1_1$wget,
	       wbuffer_4_serverAdapterA_s1_1$wget,
	       wbuffer_4_serverAdapterB_s1_1$wget,
	       wbuffer_5_serverAdapterA_s1_1$wget,
	       wbuffer_5_serverAdapterB_s1_1$wget,
	       wbuffer_6_serverAdapterA_s1_1$wget,
	       wbuffer_6_serverAdapterB_s1_1$wget,
	       wbuffer_7_serverAdapterA_s1_1$wget,
	       wbuffer_7_serverAdapterB_s1_1$wget,
	       wbuffer_8_serverAdapterA_s1_1$wget,
	       wbuffer_8_serverAdapterB_s1_1$wget,
	       wbuffer_9_serverAdapterA_s1_1$wget,
	       wbuffer_9_serverAdapterB_s1_1$wget;
  wire ibuffer_0_serverAdapterA_cnt_1$whas,
       ibuffer_0_serverAdapterA_outData_enqData$whas,
       ibuffer_0_serverAdapterA_outData_outData$whas,
       ibuffer_0_serverAdapterA_s1_1$whas,
       ibuffer_0_serverAdapterB_cnt_1$whas,
       ibuffer_0_serverAdapterB_outData_enqData$whas,
       ibuffer_0_serverAdapterB_outData_outData$whas,
       ibuffer_0_serverAdapterB_s1_1$whas,
       ibuffer_10_serverAdapterA_cnt_1$whas,
       ibuffer_10_serverAdapterA_outData_enqData$whas,
       ibuffer_10_serverAdapterA_outData_outData$whas,
       ibuffer_10_serverAdapterA_s1_1$whas,
       ibuffer_10_serverAdapterB_cnt_1$whas,
       ibuffer_10_serverAdapterB_outData_enqData$whas,
       ibuffer_10_serverAdapterB_outData_outData$whas,
       ibuffer_10_serverAdapterB_s1_1$whas,
       ibuffer_11_serverAdapterA_cnt_1$whas,
       ibuffer_11_serverAdapterA_outData_enqData$whas,
       ibuffer_11_serverAdapterA_outData_outData$whas,
       ibuffer_11_serverAdapterA_s1_1$whas,
       ibuffer_11_serverAdapterB_cnt_1$whas,
       ibuffer_11_serverAdapterB_outData_enqData$whas,
       ibuffer_11_serverAdapterB_outData_outData$whas,
       ibuffer_11_serverAdapterB_s1_1$whas,
       ibuffer_12_serverAdapterA_cnt_1$whas,
       ibuffer_12_serverAdapterA_outData_enqData$whas,
       ibuffer_12_serverAdapterA_outData_outData$whas,
       ibuffer_12_serverAdapterA_s1_1$whas,
       ibuffer_12_serverAdapterB_cnt_1$whas,
       ibuffer_12_serverAdapterB_outData_enqData$whas,
       ibuffer_12_serverAdapterB_outData_outData$whas,
       ibuffer_12_serverAdapterB_s1_1$whas,
       ibuffer_13_serverAdapterA_cnt_1$whas,
       ibuffer_13_serverAdapterA_outData_enqData$whas,
       ibuffer_13_serverAdapterA_outData_outData$whas,
       ibuffer_13_serverAdapterA_s1_1$whas,
       ibuffer_13_serverAdapterB_cnt_1$whas,
       ibuffer_13_serverAdapterB_outData_enqData$whas,
       ibuffer_13_serverAdapterB_outData_outData$whas,
       ibuffer_13_serverAdapterB_s1_1$whas,
       ibuffer_14_serverAdapterA_cnt_1$whas,
       ibuffer_14_serverAdapterA_outData_enqData$whas,
       ibuffer_14_serverAdapterA_outData_outData$whas,
       ibuffer_14_serverAdapterA_s1_1$whas,
       ibuffer_14_serverAdapterB_cnt_1$whas,
       ibuffer_14_serverAdapterB_outData_enqData$whas,
       ibuffer_14_serverAdapterB_outData_outData$whas,
       ibuffer_14_serverAdapterB_s1_1$whas,
       ibuffer_15_serverAdapterA_cnt_1$whas,
       ibuffer_15_serverAdapterA_outData_enqData$whas,
       ibuffer_15_serverAdapterA_outData_outData$whas,
       ibuffer_15_serverAdapterA_s1_1$whas,
       ibuffer_15_serverAdapterB_cnt_1$whas,
       ibuffer_15_serverAdapterB_outData_enqData$whas,
       ibuffer_15_serverAdapterB_outData_outData$whas,
       ibuffer_15_serverAdapterB_s1_1$whas,
       ibuffer_16_serverAdapterA_cnt_1$whas,
       ibuffer_16_serverAdapterA_outData_enqData$whas,
       ibuffer_16_serverAdapterA_outData_outData$whas,
       ibuffer_16_serverAdapterA_s1_1$whas,
       ibuffer_16_serverAdapterB_cnt_1$whas,
       ibuffer_16_serverAdapterB_outData_enqData$whas,
       ibuffer_16_serverAdapterB_outData_outData$whas,
       ibuffer_16_serverAdapterB_s1_1$whas,
       ibuffer_17_serverAdapterA_cnt_1$whas,
       ibuffer_17_serverAdapterA_outData_enqData$whas,
       ibuffer_17_serverAdapterA_outData_outData$whas,
       ibuffer_17_serverAdapterA_s1_1$whas,
       ibuffer_17_serverAdapterB_cnt_1$whas,
       ibuffer_17_serverAdapterB_outData_enqData$whas,
       ibuffer_17_serverAdapterB_outData_outData$whas,
       ibuffer_17_serverAdapterB_s1_1$whas,
       ibuffer_18_serverAdapterA_cnt_1$whas,
       ibuffer_18_serverAdapterA_outData_enqData$whas,
       ibuffer_18_serverAdapterA_outData_outData$whas,
       ibuffer_18_serverAdapterA_s1_1$whas,
       ibuffer_18_serverAdapterB_cnt_1$whas,
       ibuffer_18_serverAdapterB_outData_enqData$whas,
       ibuffer_18_serverAdapterB_outData_outData$whas,
       ibuffer_18_serverAdapterB_s1_1$whas,
       ibuffer_19_serverAdapterA_cnt_1$whas,
       ibuffer_19_serverAdapterA_outData_enqData$whas,
       ibuffer_19_serverAdapterA_outData_outData$whas,
       ibuffer_19_serverAdapterA_s1_1$whas,
       ibuffer_19_serverAdapterB_cnt_1$whas,
       ibuffer_19_serverAdapterB_outData_enqData$whas,
       ibuffer_19_serverAdapterB_outData_outData$whas,
       ibuffer_19_serverAdapterB_s1_1$whas,
       ibuffer_1_serverAdapterA_cnt_1$whas,
       ibuffer_1_serverAdapterA_outData_enqData$whas,
       ibuffer_1_serverAdapterA_outData_outData$whas,
       ibuffer_1_serverAdapterA_s1_1$whas,
       ibuffer_1_serverAdapterB_cnt_1$whas,
       ibuffer_1_serverAdapterB_outData_enqData$whas,
       ibuffer_1_serverAdapterB_outData_outData$whas,
       ibuffer_1_serverAdapterB_s1_1$whas,
       ibuffer_20_serverAdapterA_cnt_1$whas,
       ibuffer_20_serverAdapterA_outData_enqData$whas,
       ibuffer_20_serverAdapterA_outData_outData$whas,
       ibuffer_20_serverAdapterA_s1_1$whas,
       ibuffer_20_serverAdapterB_cnt_1$whas,
       ibuffer_20_serverAdapterB_outData_enqData$whas,
       ibuffer_20_serverAdapterB_outData_outData$whas,
       ibuffer_20_serverAdapterB_s1_1$whas,
       ibuffer_21_serverAdapterA_cnt_1$whas,
       ibuffer_21_serverAdapterA_outData_enqData$whas,
       ibuffer_21_serverAdapterA_outData_outData$whas,
       ibuffer_21_serverAdapterA_s1_1$whas,
       ibuffer_21_serverAdapterB_cnt_1$whas,
       ibuffer_21_serverAdapterB_outData_enqData$whas,
       ibuffer_21_serverAdapterB_outData_outData$whas,
       ibuffer_21_serverAdapterB_s1_1$whas,
       ibuffer_22_serverAdapterA_cnt_1$whas,
       ibuffer_22_serverAdapterA_outData_enqData$whas,
       ibuffer_22_serverAdapterA_outData_outData$whas,
       ibuffer_22_serverAdapterA_s1_1$whas,
       ibuffer_22_serverAdapterB_cnt_1$whas,
       ibuffer_22_serverAdapterB_outData_enqData$whas,
       ibuffer_22_serverAdapterB_outData_outData$whas,
       ibuffer_22_serverAdapterB_s1_1$whas,
       ibuffer_23_serverAdapterA_cnt_1$whas,
       ibuffer_23_serverAdapterA_outData_enqData$whas,
       ibuffer_23_serverAdapterA_outData_outData$whas,
       ibuffer_23_serverAdapterA_s1_1$whas,
       ibuffer_23_serverAdapterB_cnt_1$whas,
       ibuffer_23_serverAdapterB_outData_enqData$whas,
       ibuffer_23_serverAdapterB_outData_outData$whas,
       ibuffer_23_serverAdapterB_s1_1$whas,
       ibuffer_24_serverAdapterA_cnt_1$whas,
       ibuffer_24_serverAdapterA_outData_enqData$whas,
       ibuffer_24_serverAdapterA_outData_outData$whas,
       ibuffer_24_serverAdapterA_s1_1$whas,
       ibuffer_24_serverAdapterB_cnt_1$whas,
       ibuffer_24_serverAdapterB_outData_enqData$whas,
       ibuffer_24_serverAdapterB_outData_outData$whas,
       ibuffer_24_serverAdapterB_s1_1$whas,
       ibuffer_25_serverAdapterA_cnt_1$whas,
       ibuffer_25_serverAdapterA_outData_enqData$whas,
       ibuffer_25_serverAdapterA_outData_outData$whas,
       ibuffer_25_serverAdapterA_s1_1$whas,
       ibuffer_25_serverAdapterB_cnt_1$whas,
       ibuffer_25_serverAdapterB_outData_enqData$whas,
       ibuffer_25_serverAdapterB_outData_outData$whas,
       ibuffer_25_serverAdapterB_s1_1$whas,
       ibuffer_26_serverAdapterA_cnt_1$whas,
       ibuffer_26_serverAdapterA_outData_enqData$whas,
       ibuffer_26_serverAdapterA_outData_outData$whas,
       ibuffer_26_serverAdapterA_s1_1$whas,
       ibuffer_26_serverAdapterB_cnt_1$whas,
       ibuffer_26_serverAdapterB_outData_enqData$whas,
       ibuffer_26_serverAdapterB_outData_outData$whas,
       ibuffer_26_serverAdapterB_s1_1$whas,
       ibuffer_27_serverAdapterA_cnt_1$whas,
       ibuffer_27_serverAdapterA_outData_enqData$whas,
       ibuffer_27_serverAdapterA_outData_outData$whas,
       ibuffer_27_serverAdapterA_s1_1$whas,
       ibuffer_27_serverAdapterB_cnt_1$whas,
       ibuffer_27_serverAdapterB_outData_enqData$whas,
       ibuffer_27_serverAdapterB_outData_outData$whas,
       ibuffer_27_serverAdapterB_s1_1$whas,
       ibuffer_28_serverAdapterA_cnt_1$whas,
       ibuffer_28_serverAdapterA_outData_enqData$whas,
       ibuffer_28_serverAdapterA_outData_outData$whas,
       ibuffer_28_serverAdapterA_s1_1$whas,
       ibuffer_28_serverAdapterB_cnt_1$whas,
       ibuffer_28_serverAdapterB_outData_enqData$whas,
       ibuffer_28_serverAdapterB_outData_outData$whas,
       ibuffer_28_serverAdapterB_s1_1$whas,
       ibuffer_29_serverAdapterA_cnt_1$whas,
       ibuffer_29_serverAdapterA_outData_enqData$whas,
       ibuffer_29_serverAdapterA_outData_outData$whas,
       ibuffer_29_serverAdapterA_s1_1$whas,
       ibuffer_29_serverAdapterB_cnt_1$whas,
       ibuffer_29_serverAdapterB_outData_enqData$whas,
       ibuffer_29_serverAdapterB_outData_outData$whas,
       ibuffer_29_serverAdapterB_s1_1$whas,
       ibuffer_2_serverAdapterA_cnt_1$whas,
       ibuffer_2_serverAdapterA_outData_enqData$whas,
       ibuffer_2_serverAdapterA_outData_outData$whas,
       ibuffer_2_serverAdapterA_s1_1$whas,
       ibuffer_2_serverAdapterB_cnt_1$whas,
       ibuffer_2_serverAdapterB_outData_enqData$whas,
       ibuffer_2_serverAdapterB_outData_outData$whas,
       ibuffer_2_serverAdapterB_s1_1$whas,
       ibuffer_30_serverAdapterA_cnt_1$whas,
       ibuffer_30_serverAdapterA_outData_enqData$whas,
       ibuffer_30_serverAdapterA_outData_outData$whas,
       ibuffer_30_serverAdapterA_s1_1$whas,
       ibuffer_30_serverAdapterB_cnt_1$whas,
       ibuffer_30_serverAdapterB_outData_enqData$whas,
       ibuffer_30_serverAdapterB_outData_outData$whas,
       ibuffer_30_serverAdapterB_s1_1$whas,
       ibuffer_31_serverAdapterA_cnt_1$whas,
       ibuffer_31_serverAdapterA_outData_enqData$whas,
       ibuffer_31_serverAdapterA_outData_outData$whas,
       ibuffer_31_serverAdapterA_s1_1$whas,
       ibuffer_31_serverAdapterB_cnt_1$whas,
       ibuffer_31_serverAdapterB_outData_enqData$whas,
       ibuffer_31_serverAdapterB_outData_outData$whas,
       ibuffer_31_serverAdapterB_s1_1$whas,
       ibuffer_3_serverAdapterA_cnt_1$whas,
       ibuffer_3_serverAdapterA_outData_enqData$whas,
       ibuffer_3_serverAdapterA_outData_outData$whas,
       ibuffer_3_serverAdapterA_s1_1$whas,
       ibuffer_3_serverAdapterB_cnt_1$whas,
       ibuffer_3_serverAdapterB_outData_enqData$whas,
       ibuffer_3_serverAdapterB_outData_outData$whas,
       ibuffer_3_serverAdapterB_s1_1$whas,
       ibuffer_4_serverAdapterA_cnt_1$whas,
       ibuffer_4_serverAdapterA_outData_enqData$whas,
       ibuffer_4_serverAdapterA_outData_outData$whas,
       ibuffer_4_serverAdapterA_s1_1$whas,
       ibuffer_4_serverAdapterB_cnt_1$whas,
       ibuffer_4_serverAdapterB_outData_enqData$whas,
       ibuffer_4_serverAdapterB_outData_outData$whas,
       ibuffer_4_serverAdapterB_s1_1$whas,
       ibuffer_5_serverAdapterA_cnt_1$whas,
       ibuffer_5_serverAdapterA_outData_enqData$whas,
       ibuffer_5_serverAdapterA_outData_outData$whas,
       ibuffer_5_serverAdapterA_s1_1$whas,
       ibuffer_5_serverAdapterB_cnt_1$whas,
       ibuffer_5_serverAdapterB_outData_enqData$whas,
       ibuffer_5_serverAdapterB_outData_outData$whas,
       ibuffer_5_serverAdapterB_s1_1$whas,
       ibuffer_6_serverAdapterA_cnt_1$whas,
       ibuffer_6_serverAdapterA_outData_enqData$whas,
       ibuffer_6_serverAdapterA_outData_outData$whas,
       ibuffer_6_serverAdapterA_s1_1$whas,
       ibuffer_6_serverAdapterB_cnt_1$whas,
       ibuffer_6_serverAdapterB_outData_enqData$whas,
       ibuffer_6_serverAdapterB_outData_outData$whas,
       ibuffer_6_serverAdapterB_s1_1$whas,
       ibuffer_7_serverAdapterA_cnt_1$whas,
       ibuffer_7_serverAdapterA_outData_enqData$whas,
       ibuffer_7_serverAdapterA_outData_outData$whas,
       ibuffer_7_serverAdapterA_s1_1$whas,
       ibuffer_7_serverAdapterB_cnt_1$whas,
       ibuffer_7_serverAdapterB_outData_enqData$whas,
       ibuffer_7_serverAdapterB_outData_outData$whas,
       ibuffer_7_serverAdapterB_s1_1$whas,
       ibuffer_8_serverAdapterA_cnt_1$whas,
       ibuffer_8_serverAdapterA_outData_enqData$whas,
       ibuffer_8_serverAdapterA_outData_outData$whas,
       ibuffer_8_serverAdapterA_s1_1$whas,
       ibuffer_8_serverAdapterB_cnt_1$whas,
       ibuffer_8_serverAdapterB_outData_enqData$whas,
       ibuffer_8_serverAdapterB_outData_outData$whas,
       ibuffer_8_serverAdapterB_s1_1$whas,
       ibuffer_9_serverAdapterA_cnt_1$whas,
       ibuffer_9_serverAdapterA_outData_enqData$whas,
       ibuffer_9_serverAdapterA_outData_outData$whas,
       ibuffer_9_serverAdapterA_s1_1$whas,
       ibuffer_9_serverAdapterB_cnt_1$whas,
       ibuffer_9_serverAdapterB_outData_enqData$whas,
       ibuffer_9_serverAdapterB_outData_outData$whas,
       ibuffer_9_serverAdapterB_s1_1$whas,
       obuffer1_0_serverAdapterA_cnt_1$whas,
       obuffer1_0_serverAdapterA_outData_enqData$whas,
       obuffer1_0_serverAdapterA_outData_outData$whas,
       obuffer1_0_serverAdapterA_s1_1$whas,
       obuffer1_0_serverAdapterB_cnt_1$whas,
       obuffer1_0_serverAdapterB_outData_enqData$whas,
       obuffer1_0_serverAdapterB_outData_outData$whas,
       obuffer1_0_serverAdapterB_s1_1$whas,
       obuffer1_10_serverAdapterA_cnt_1$whas,
       obuffer1_10_serverAdapterA_outData_enqData$whas,
       obuffer1_10_serverAdapterA_outData_outData$whas,
       obuffer1_10_serverAdapterA_s1_1$whas,
       obuffer1_10_serverAdapterB_cnt_1$whas,
       obuffer1_10_serverAdapterB_outData_enqData$whas,
       obuffer1_10_serverAdapterB_outData_outData$whas,
       obuffer1_10_serverAdapterB_s1_1$whas,
       obuffer1_11_serverAdapterA_cnt_1$whas,
       obuffer1_11_serverAdapterA_outData_enqData$whas,
       obuffer1_11_serverAdapterA_outData_outData$whas,
       obuffer1_11_serverAdapterA_s1_1$whas,
       obuffer1_11_serverAdapterB_cnt_1$whas,
       obuffer1_11_serverAdapterB_outData_enqData$whas,
       obuffer1_11_serverAdapterB_outData_outData$whas,
       obuffer1_11_serverAdapterB_s1_1$whas,
       obuffer1_12_serverAdapterA_cnt_1$whas,
       obuffer1_12_serverAdapterA_outData_enqData$whas,
       obuffer1_12_serverAdapterA_outData_outData$whas,
       obuffer1_12_serverAdapterA_s1_1$whas,
       obuffer1_12_serverAdapterB_cnt_1$whas,
       obuffer1_12_serverAdapterB_outData_enqData$whas,
       obuffer1_12_serverAdapterB_outData_outData$whas,
       obuffer1_12_serverAdapterB_s1_1$whas,
       obuffer1_13_serverAdapterA_cnt_1$whas,
       obuffer1_13_serverAdapterA_outData_enqData$whas,
       obuffer1_13_serverAdapterA_outData_outData$whas,
       obuffer1_13_serverAdapterA_s1_1$whas,
       obuffer1_13_serverAdapterB_cnt_1$whas,
       obuffer1_13_serverAdapterB_outData_enqData$whas,
       obuffer1_13_serverAdapterB_outData_outData$whas,
       obuffer1_13_serverAdapterB_s1_1$whas,
       obuffer1_14_serverAdapterA_cnt_1$whas,
       obuffer1_14_serverAdapterA_outData_enqData$whas,
       obuffer1_14_serverAdapterA_outData_outData$whas,
       obuffer1_14_serverAdapterA_s1_1$whas,
       obuffer1_14_serverAdapterB_cnt_1$whas,
       obuffer1_14_serverAdapterB_outData_enqData$whas,
       obuffer1_14_serverAdapterB_outData_outData$whas,
       obuffer1_14_serverAdapterB_s1_1$whas,
       obuffer1_15_serverAdapterA_cnt_1$whas,
       obuffer1_15_serverAdapterA_outData_enqData$whas,
       obuffer1_15_serverAdapterA_outData_outData$whas,
       obuffer1_15_serverAdapterA_s1_1$whas,
       obuffer1_15_serverAdapterB_cnt_1$whas,
       obuffer1_15_serverAdapterB_outData_enqData$whas,
       obuffer1_15_serverAdapterB_outData_outData$whas,
       obuffer1_15_serverAdapterB_s1_1$whas,
       obuffer1_16_serverAdapterA_cnt_1$whas,
       obuffer1_16_serverAdapterA_outData_enqData$whas,
       obuffer1_16_serverAdapterA_outData_outData$whas,
       obuffer1_16_serverAdapterA_s1_1$whas,
       obuffer1_16_serverAdapterB_cnt_1$whas,
       obuffer1_16_serverAdapterB_outData_enqData$whas,
       obuffer1_16_serverAdapterB_outData_outData$whas,
       obuffer1_16_serverAdapterB_s1_1$whas,
       obuffer1_17_serverAdapterA_cnt_1$whas,
       obuffer1_17_serverAdapterA_outData_enqData$whas,
       obuffer1_17_serverAdapterA_outData_outData$whas,
       obuffer1_17_serverAdapterA_s1_1$whas,
       obuffer1_17_serverAdapterB_cnt_1$whas,
       obuffer1_17_serverAdapterB_outData_enqData$whas,
       obuffer1_17_serverAdapterB_outData_outData$whas,
       obuffer1_17_serverAdapterB_s1_1$whas,
       obuffer1_18_serverAdapterA_cnt_1$whas,
       obuffer1_18_serverAdapterA_outData_enqData$whas,
       obuffer1_18_serverAdapterA_outData_outData$whas,
       obuffer1_18_serverAdapterA_s1_1$whas,
       obuffer1_18_serverAdapterB_cnt_1$whas,
       obuffer1_18_serverAdapterB_outData_enqData$whas,
       obuffer1_18_serverAdapterB_outData_outData$whas,
       obuffer1_18_serverAdapterB_s1_1$whas,
       obuffer1_19_serverAdapterA_cnt_1$whas,
       obuffer1_19_serverAdapterA_outData_enqData$whas,
       obuffer1_19_serverAdapterA_outData_outData$whas,
       obuffer1_19_serverAdapterA_s1_1$whas,
       obuffer1_19_serverAdapterB_cnt_1$whas,
       obuffer1_19_serverAdapterB_outData_enqData$whas,
       obuffer1_19_serverAdapterB_outData_outData$whas,
       obuffer1_19_serverAdapterB_s1_1$whas,
       obuffer1_1_serverAdapterA_cnt_1$whas,
       obuffer1_1_serverAdapterA_outData_enqData$whas,
       obuffer1_1_serverAdapterA_outData_outData$whas,
       obuffer1_1_serverAdapterA_s1_1$whas,
       obuffer1_1_serverAdapterB_cnt_1$whas,
       obuffer1_1_serverAdapterB_outData_enqData$whas,
       obuffer1_1_serverAdapterB_outData_outData$whas,
       obuffer1_1_serverAdapterB_s1_1$whas,
       obuffer1_20_serverAdapterA_cnt_1$whas,
       obuffer1_20_serverAdapterA_outData_enqData$whas,
       obuffer1_20_serverAdapterA_outData_outData$whas,
       obuffer1_20_serverAdapterA_s1_1$whas,
       obuffer1_20_serverAdapterB_cnt_1$whas,
       obuffer1_20_serverAdapterB_outData_enqData$whas,
       obuffer1_20_serverAdapterB_outData_outData$whas,
       obuffer1_20_serverAdapterB_s1_1$whas,
       obuffer1_21_serverAdapterA_cnt_1$whas,
       obuffer1_21_serverAdapterA_outData_enqData$whas,
       obuffer1_21_serverAdapterA_outData_outData$whas,
       obuffer1_21_serverAdapterA_s1_1$whas,
       obuffer1_21_serverAdapterB_cnt_1$whas,
       obuffer1_21_serverAdapterB_outData_enqData$whas,
       obuffer1_21_serverAdapterB_outData_outData$whas,
       obuffer1_21_serverAdapterB_s1_1$whas,
       obuffer1_22_serverAdapterA_cnt_1$whas,
       obuffer1_22_serverAdapterA_outData_enqData$whas,
       obuffer1_22_serverAdapterA_outData_outData$whas,
       obuffer1_22_serverAdapterA_s1_1$whas,
       obuffer1_22_serverAdapterB_cnt_1$whas,
       obuffer1_22_serverAdapterB_outData_enqData$whas,
       obuffer1_22_serverAdapterB_outData_outData$whas,
       obuffer1_22_serverAdapterB_s1_1$whas,
       obuffer1_23_serverAdapterA_cnt_1$whas,
       obuffer1_23_serverAdapterA_outData_enqData$whas,
       obuffer1_23_serverAdapterA_outData_outData$whas,
       obuffer1_23_serverAdapterA_s1_1$whas,
       obuffer1_23_serverAdapterB_cnt_1$whas,
       obuffer1_23_serverAdapterB_outData_enqData$whas,
       obuffer1_23_serverAdapterB_outData_outData$whas,
       obuffer1_23_serverAdapterB_s1_1$whas,
       obuffer1_24_serverAdapterA_cnt_1$whas,
       obuffer1_24_serverAdapterA_outData_enqData$whas,
       obuffer1_24_serverAdapterA_outData_outData$whas,
       obuffer1_24_serverAdapterA_s1_1$whas,
       obuffer1_24_serverAdapterB_cnt_1$whas,
       obuffer1_24_serverAdapterB_outData_enqData$whas,
       obuffer1_24_serverAdapterB_outData_outData$whas,
       obuffer1_24_serverAdapterB_s1_1$whas,
       obuffer1_25_serverAdapterA_cnt_1$whas,
       obuffer1_25_serverAdapterA_outData_enqData$whas,
       obuffer1_25_serverAdapterA_outData_outData$whas,
       obuffer1_25_serverAdapterA_s1_1$whas,
       obuffer1_25_serverAdapterB_cnt_1$whas,
       obuffer1_25_serverAdapterB_outData_enqData$whas,
       obuffer1_25_serverAdapterB_outData_outData$whas,
       obuffer1_25_serverAdapterB_s1_1$whas,
       obuffer1_26_serverAdapterA_cnt_1$whas,
       obuffer1_26_serverAdapterA_outData_enqData$whas,
       obuffer1_26_serverAdapterA_outData_outData$whas,
       obuffer1_26_serverAdapterA_s1_1$whas,
       obuffer1_26_serverAdapterB_cnt_1$whas,
       obuffer1_26_serverAdapterB_outData_enqData$whas,
       obuffer1_26_serverAdapterB_outData_outData$whas,
       obuffer1_26_serverAdapterB_s1_1$whas,
       obuffer1_27_serverAdapterA_cnt_1$whas,
       obuffer1_27_serverAdapterA_outData_enqData$whas,
       obuffer1_27_serverAdapterA_outData_outData$whas,
       obuffer1_27_serverAdapterA_s1_1$whas,
       obuffer1_27_serverAdapterB_cnt_1$whas,
       obuffer1_27_serverAdapterB_outData_enqData$whas,
       obuffer1_27_serverAdapterB_outData_outData$whas,
       obuffer1_27_serverAdapterB_s1_1$whas,
       obuffer1_28_serverAdapterA_cnt_1$whas,
       obuffer1_28_serverAdapterA_outData_enqData$whas,
       obuffer1_28_serverAdapterA_outData_outData$whas,
       obuffer1_28_serverAdapterA_s1_1$whas,
       obuffer1_28_serverAdapterB_cnt_1$whas,
       obuffer1_28_serverAdapterB_outData_enqData$whas,
       obuffer1_28_serverAdapterB_outData_outData$whas,
       obuffer1_28_serverAdapterB_s1_1$whas,
       obuffer1_29_serverAdapterA_cnt_1$whas,
       obuffer1_29_serverAdapterA_outData_enqData$whas,
       obuffer1_29_serverAdapterA_outData_outData$whas,
       obuffer1_29_serverAdapterA_s1_1$whas,
       obuffer1_29_serverAdapterB_cnt_1$whas,
       obuffer1_29_serverAdapterB_outData_enqData$whas,
       obuffer1_29_serverAdapterB_outData_outData$whas,
       obuffer1_29_serverAdapterB_s1_1$whas,
       obuffer1_2_serverAdapterA_cnt_1$whas,
       obuffer1_2_serverAdapterA_outData_enqData$whas,
       obuffer1_2_serverAdapterA_outData_outData$whas,
       obuffer1_2_serverAdapterA_s1_1$whas,
       obuffer1_2_serverAdapterB_cnt_1$whas,
       obuffer1_2_serverAdapterB_outData_enqData$whas,
       obuffer1_2_serverAdapterB_outData_outData$whas,
       obuffer1_2_serverAdapterB_s1_1$whas,
       obuffer1_30_serverAdapterA_cnt_1$whas,
       obuffer1_30_serverAdapterA_outData_enqData$whas,
       obuffer1_30_serverAdapterA_outData_outData$whas,
       obuffer1_30_serverAdapterA_s1_1$whas,
       obuffer1_30_serverAdapterB_cnt_1$whas,
       obuffer1_30_serverAdapterB_outData_enqData$whas,
       obuffer1_30_serverAdapterB_outData_outData$whas,
       obuffer1_30_serverAdapterB_s1_1$whas,
       obuffer1_31_serverAdapterA_cnt_1$whas,
       obuffer1_31_serverAdapterA_outData_enqData$whas,
       obuffer1_31_serverAdapterA_outData_outData$whas,
       obuffer1_31_serverAdapterA_s1_1$whas,
       obuffer1_31_serverAdapterB_cnt_1$whas,
       obuffer1_31_serverAdapterB_outData_enqData$whas,
       obuffer1_31_serverAdapterB_outData_outData$whas,
       obuffer1_31_serverAdapterB_s1_1$whas,
       obuffer1_3_serverAdapterA_cnt_1$whas,
       obuffer1_3_serverAdapterA_outData_enqData$whas,
       obuffer1_3_serverAdapterA_outData_outData$whas,
       obuffer1_3_serverAdapterA_s1_1$whas,
       obuffer1_3_serverAdapterB_cnt_1$whas,
       obuffer1_3_serverAdapterB_outData_enqData$whas,
       obuffer1_3_serverAdapterB_outData_outData$whas,
       obuffer1_3_serverAdapterB_s1_1$whas,
       obuffer1_4_serverAdapterA_cnt_1$whas,
       obuffer1_4_serverAdapterA_outData_enqData$whas,
       obuffer1_4_serverAdapterA_outData_outData$whas,
       obuffer1_4_serverAdapterA_s1_1$whas,
       obuffer1_4_serverAdapterB_cnt_1$whas,
       obuffer1_4_serverAdapterB_outData_enqData$whas,
       obuffer1_4_serverAdapterB_outData_outData$whas,
       obuffer1_4_serverAdapterB_s1_1$whas,
       obuffer1_5_serverAdapterA_cnt_1$whas,
       obuffer1_5_serverAdapterA_outData_enqData$whas,
       obuffer1_5_serverAdapterA_outData_outData$whas,
       obuffer1_5_serverAdapterA_s1_1$whas,
       obuffer1_5_serverAdapterB_cnt_1$whas,
       obuffer1_5_serverAdapterB_outData_enqData$whas,
       obuffer1_5_serverAdapterB_outData_outData$whas,
       obuffer1_5_serverAdapterB_s1_1$whas,
       obuffer1_6_serverAdapterA_cnt_1$whas,
       obuffer1_6_serverAdapterA_outData_enqData$whas,
       obuffer1_6_serverAdapterA_outData_outData$whas,
       obuffer1_6_serverAdapterA_s1_1$whas,
       obuffer1_6_serverAdapterB_cnt_1$whas,
       obuffer1_6_serverAdapterB_outData_enqData$whas,
       obuffer1_6_serverAdapterB_outData_outData$whas,
       obuffer1_6_serverAdapterB_s1_1$whas,
       obuffer1_7_serverAdapterA_cnt_1$whas,
       obuffer1_7_serverAdapterA_outData_enqData$whas,
       obuffer1_7_serverAdapterA_outData_outData$whas,
       obuffer1_7_serverAdapterA_s1_1$whas,
       obuffer1_7_serverAdapterB_cnt_1$whas,
       obuffer1_7_serverAdapterB_outData_enqData$whas,
       obuffer1_7_serverAdapterB_outData_outData$whas,
       obuffer1_7_serverAdapterB_s1_1$whas,
       obuffer1_8_serverAdapterA_cnt_1$whas,
       obuffer1_8_serverAdapterA_outData_enqData$whas,
       obuffer1_8_serverAdapterA_outData_outData$whas,
       obuffer1_8_serverAdapterA_s1_1$whas,
       obuffer1_8_serverAdapterB_cnt_1$whas,
       obuffer1_8_serverAdapterB_outData_enqData$whas,
       obuffer1_8_serverAdapterB_outData_outData$whas,
       obuffer1_8_serverAdapterB_s1_1$whas,
       obuffer1_9_serverAdapterA_cnt_1$whas,
       obuffer1_9_serverAdapterA_outData_enqData$whas,
       obuffer1_9_serverAdapterA_outData_outData$whas,
       obuffer1_9_serverAdapterA_s1_1$whas,
       obuffer1_9_serverAdapterB_cnt_1$whas,
       obuffer1_9_serverAdapterB_outData_enqData$whas,
       obuffer1_9_serverAdapterB_outData_outData$whas,
       obuffer1_9_serverAdapterB_s1_1$whas,
       obuffer2_0_serverAdapterA_cnt_1$whas,
       obuffer2_0_serverAdapterA_outData_enqData$whas,
       obuffer2_0_serverAdapterA_outData_outData$whas,
       obuffer2_0_serverAdapterA_s1_1$whas,
       obuffer2_0_serverAdapterB_cnt_1$whas,
       obuffer2_0_serverAdapterB_outData_enqData$whas,
       obuffer2_0_serverAdapterB_outData_outData$whas,
       obuffer2_0_serverAdapterB_s1_1$whas,
       obuffer2_10_serverAdapterA_cnt_1$whas,
       obuffer2_10_serverAdapterA_outData_enqData$whas,
       obuffer2_10_serverAdapterA_outData_outData$whas,
       obuffer2_10_serverAdapterA_s1_1$whas,
       obuffer2_10_serverAdapterB_cnt_1$whas,
       obuffer2_10_serverAdapterB_outData_enqData$whas,
       obuffer2_10_serverAdapterB_outData_outData$whas,
       obuffer2_10_serverAdapterB_s1_1$whas,
       obuffer2_11_serverAdapterA_cnt_1$whas,
       obuffer2_11_serverAdapterA_outData_enqData$whas,
       obuffer2_11_serverAdapterA_outData_outData$whas,
       obuffer2_11_serverAdapterA_s1_1$whas,
       obuffer2_11_serverAdapterB_cnt_1$whas,
       obuffer2_11_serverAdapterB_outData_enqData$whas,
       obuffer2_11_serverAdapterB_outData_outData$whas,
       obuffer2_11_serverAdapterB_s1_1$whas,
       obuffer2_12_serverAdapterA_cnt_1$whas,
       obuffer2_12_serverAdapterA_outData_enqData$whas,
       obuffer2_12_serverAdapterA_outData_outData$whas,
       obuffer2_12_serverAdapterA_s1_1$whas,
       obuffer2_12_serverAdapterB_cnt_1$whas,
       obuffer2_12_serverAdapterB_outData_enqData$whas,
       obuffer2_12_serverAdapterB_outData_outData$whas,
       obuffer2_12_serverAdapterB_s1_1$whas,
       obuffer2_13_serverAdapterA_cnt_1$whas,
       obuffer2_13_serverAdapterA_outData_enqData$whas,
       obuffer2_13_serverAdapterA_outData_outData$whas,
       obuffer2_13_serverAdapterA_s1_1$whas,
       obuffer2_13_serverAdapterB_cnt_1$whas,
       obuffer2_13_serverAdapterB_outData_enqData$whas,
       obuffer2_13_serverAdapterB_outData_outData$whas,
       obuffer2_13_serverAdapterB_s1_1$whas,
       obuffer2_14_serverAdapterA_cnt_1$whas,
       obuffer2_14_serverAdapterA_outData_enqData$whas,
       obuffer2_14_serverAdapterA_outData_outData$whas,
       obuffer2_14_serverAdapterA_s1_1$whas,
       obuffer2_14_serverAdapterB_cnt_1$whas,
       obuffer2_14_serverAdapterB_outData_enqData$whas,
       obuffer2_14_serverAdapterB_outData_outData$whas,
       obuffer2_14_serverAdapterB_s1_1$whas,
       obuffer2_15_serverAdapterA_cnt_1$whas,
       obuffer2_15_serverAdapterA_outData_enqData$whas,
       obuffer2_15_serverAdapterA_outData_outData$whas,
       obuffer2_15_serverAdapterA_s1_1$whas,
       obuffer2_15_serverAdapterB_cnt_1$whas,
       obuffer2_15_serverAdapterB_outData_enqData$whas,
       obuffer2_15_serverAdapterB_outData_outData$whas,
       obuffer2_15_serverAdapterB_s1_1$whas,
       obuffer2_16_serverAdapterA_cnt_1$whas,
       obuffer2_16_serverAdapterA_outData_enqData$whas,
       obuffer2_16_serverAdapterA_outData_outData$whas,
       obuffer2_16_serverAdapterA_s1_1$whas,
       obuffer2_16_serverAdapterB_cnt_1$whas,
       obuffer2_16_serverAdapterB_outData_enqData$whas,
       obuffer2_16_serverAdapterB_outData_outData$whas,
       obuffer2_16_serverAdapterB_s1_1$whas,
       obuffer2_17_serverAdapterA_cnt_1$whas,
       obuffer2_17_serverAdapterA_outData_enqData$whas,
       obuffer2_17_serverAdapterA_outData_outData$whas,
       obuffer2_17_serverAdapterA_s1_1$whas,
       obuffer2_17_serverAdapterB_cnt_1$whas,
       obuffer2_17_serverAdapterB_outData_enqData$whas,
       obuffer2_17_serverAdapterB_outData_outData$whas,
       obuffer2_17_serverAdapterB_s1_1$whas,
       obuffer2_18_serverAdapterA_cnt_1$whas,
       obuffer2_18_serverAdapterA_outData_enqData$whas,
       obuffer2_18_serverAdapterA_outData_outData$whas,
       obuffer2_18_serverAdapterA_s1_1$whas,
       obuffer2_18_serverAdapterB_cnt_1$whas,
       obuffer2_18_serverAdapterB_outData_enqData$whas,
       obuffer2_18_serverAdapterB_outData_outData$whas,
       obuffer2_18_serverAdapterB_s1_1$whas,
       obuffer2_19_serverAdapterA_cnt_1$whas,
       obuffer2_19_serverAdapterA_outData_enqData$whas,
       obuffer2_19_serverAdapterA_outData_outData$whas,
       obuffer2_19_serverAdapterA_s1_1$whas,
       obuffer2_19_serverAdapterB_cnt_1$whas,
       obuffer2_19_serverAdapterB_outData_enqData$whas,
       obuffer2_19_serverAdapterB_outData_outData$whas,
       obuffer2_19_serverAdapterB_s1_1$whas,
       obuffer2_1_serverAdapterA_cnt_1$whas,
       obuffer2_1_serverAdapterA_outData_enqData$whas,
       obuffer2_1_serverAdapterA_outData_outData$whas,
       obuffer2_1_serverAdapterA_s1_1$whas,
       obuffer2_1_serverAdapterB_cnt_1$whas,
       obuffer2_1_serverAdapterB_outData_enqData$whas,
       obuffer2_1_serverAdapterB_outData_outData$whas,
       obuffer2_1_serverAdapterB_s1_1$whas,
       obuffer2_20_serverAdapterA_cnt_1$whas,
       obuffer2_20_serverAdapterA_outData_enqData$whas,
       obuffer2_20_serverAdapterA_outData_outData$whas,
       obuffer2_20_serverAdapterA_s1_1$whas,
       obuffer2_20_serverAdapterB_cnt_1$whas,
       obuffer2_20_serverAdapterB_outData_enqData$whas,
       obuffer2_20_serverAdapterB_outData_outData$whas,
       obuffer2_20_serverAdapterB_s1_1$whas,
       obuffer2_21_serverAdapterA_cnt_1$whas,
       obuffer2_21_serverAdapterA_outData_enqData$whas,
       obuffer2_21_serverAdapterA_outData_outData$whas,
       obuffer2_21_serverAdapterA_s1_1$whas,
       obuffer2_21_serverAdapterB_cnt_1$whas,
       obuffer2_21_serverAdapterB_outData_enqData$whas,
       obuffer2_21_serverAdapterB_outData_outData$whas,
       obuffer2_21_serverAdapterB_s1_1$whas,
       obuffer2_22_serverAdapterA_cnt_1$whas,
       obuffer2_22_serverAdapterA_outData_enqData$whas,
       obuffer2_22_serverAdapterA_outData_outData$whas,
       obuffer2_22_serverAdapterA_s1_1$whas,
       obuffer2_22_serverAdapterB_cnt_1$whas,
       obuffer2_22_serverAdapterB_outData_enqData$whas,
       obuffer2_22_serverAdapterB_outData_outData$whas,
       obuffer2_22_serverAdapterB_s1_1$whas,
       obuffer2_23_serverAdapterA_cnt_1$whas,
       obuffer2_23_serverAdapterA_outData_enqData$whas,
       obuffer2_23_serverAdapterA_outData_outData$whas,
       obuffer2_23_serverAdapterA_s1_1$whas,
       obuffer2_23_serverAdapterB_cnt_1$whas,
       obuffer2_23_serverAdapterB_outData_enqData$whas,
       obuffer2_23_serverAdapterB_outData_outData$whas,
       obuffer2_23_serverAdapterB_s1_1$whas,
       obuffer2_24_serverAdapterA_cnt_1$whas,
       obuffer2_24_serverAdapterA_outData_enqData$whas,
       obuffer2_24_serverAdapterA_outData_outData$whas,
       obuffer2_24_serverAdapterA_s1_1$whas,
       obuffer2_24_serverAdapterB_cnt_1$whas,
       obuffer2_24_serverAdapterB_outData_enqData$whas,
       obuffer2_24_serverAdapterB_outData_outData$whas,
       obuffer2_24_serverAdapterB_s1_1$whas,
       obuffer2_25_serverAdapterA_cnt_1$whas,
       obuffer2_25_serverAdapterA_outData_enqData$whas,
       obuffer2_25_serverAdapterA_outData_outData$whas,
       obuffer2_25_serverAdapterA_s1_1$whas,
       obuffer2_25_serverAdapterB_cnt_1$whas,
       obuffer2_25_serverAdapterB_outData_enqData$whas,
       obuffer2_25_serverAdapterB_outData_outData$whas,
       obuffer2_25_serverAdapterB_s1_1$whas,
       obuffer2_26_serverAdapterA_cnt_1$whas,
       obuffer2_26_serverAdapterA_outData_enqData$whas,
       obuffer2_26_serverAdapterA_outData_outData$whas,
       obuffer2_26_serverAdapterA_s1_1$whas,
       obuffer2_26_serverAdapterB_cnt_1$whas,
       obuffer2_26_serverAdapterB_outData_enqData$whas,
       obuffer2_26_serverAdapterB_outData_outData$whas,
       obuffer2_26_serverAdapterB_s1_1$whas,
       obuffer2_27_serverAdapterA_cnt_1$whas,
       obuffer2_27_serverAdapterA_outData_enqData$whas,
       obuffer2_27_serverAdapterA_outData_outData$whas,
       obuffer2_27_serverAdapterA_s1_1$whas,
       obuffer2_27_serverAdapterB_cnt_1$whas,
       obuffer2_27_serverAdapterB_outData_enqData$whas,
       obuffer2_27_serverAdapterB_outData_outData$whas,
       obuffer2_27_serverAdapterB_s1_1$whas,
       obuffer2_28_serverAdapterA_cnt_1$whas,
       obuffer2_28_serverAdapterA_outData_enqData$whas,
       obuffer2_28_serverAdapterA_outData_outData$whas,
       obuffer2_28_serverAdapterA_s1_1$whas,
       obuffer2_28_serverAdapterB_cnt_1$whas,
       obuffer2_28_serverAdapterB_outData_enqData$whas,
       obuffer2_28_serverAdapterB_outData_outData$whas,
       obuffer2_28_serverAdapterB_s1_1$whas,
       obuffer2_29_serverAdapterA_cnt_1$whas,
       obuffer2_29_serverAdapterA_outData_enqData$whas,
       obuffer2_29_serverAdapterA_outData_outData$whas,
       obuffer2_29_serverAdapterA_s1_1$whas,
       obuffer2_29_serverAdapterB_cnt_1$whas,
       obuffer2_29_serverAdapterB_outData_enqData$whas,
       obuffer2_29_serverAdapterB_outData_outData$whas,
       obuffer2_29_serverAdapterB_s1_1$whas,
       obuffer2_2_serverAdapterA_cnt_1$whas,
       obuffer2_2_serverAdapterA_outData_enqData$whas,
       obuffer2_2_serverAdapterA_outData_outData$whas,
       obuffer2_2_serverAdapterA_s1_1$whas,
       obuffer2_2_serverAdapterB_cnt_1$whas,
       obuffer2_2_serverAdapterB_outData_enqData$whas,
       obuffer2_2_serverAdapterB_outData_outData$whas,
       obuffer2_2_serverAdapterB_s1_1$whas,
       obuffer2_30_serverAdapterA_cnt_1$whas,
       obuffer2_30_serverAdapterA_outData_enqData$whas,
       obuffer2_30_serverAdapterA_outData_outData$whas,
       obuffer2_30_serverAdapterA_s1_1$whas,
       obuffer2_30_serverAdapterB_cnt_1$whas,
       obuffer2_30_serverAdapterB_outData_enqData$whas,
       obuffer2_30_serverAdapterB_outData_outData$whas,
       obuffer2_30_serverAdapterB_s1_1$whas,
       obuffer2_31_serverAdapterA_cnt_1$whas,
       obuffer2_31_serverAdapterA_outData_enqData$whas,
       obuffer2_31_serverAdapterA_outData_outData$whas,
       obuffer2_31_serverAdapterA_s1_1$whas,
       obuffer2_31_serverAdapterB_cnt_1$whas,
       obuffer2_31_serverAdapterB_outData_enqData$whas,
       obuffer2_31_serverAdapterB_outData_outData$whas,
       obuffer2_31_serverAdapterB_s1_1$whas,
       obuffer2_3_serverAdapterA_cnt_1$whas,
       obuffer2_3_serverAdapterA_outData_enqData$whas,
       obuffer2_3_serverAdapterA_outData_outData$whas,
       obuffer2_3_serverAdapterA_s1_1$whas,
       obuffer2_3_serverAdapterB_cnt_1$whas,
       obuffer2_3_serverAdapterB_outData_enqData$whas,
       obuffer2_3_serverAdapterB_outData_outData$whas,
       obuffer2_3_serverAdapterB_s1_1$whas,
       obuffer2_4_serverAdapterA_cnt_1$whas,
       obuffer2_4_serverAdapterA_outData_enqData$whas,
       obuffer2_4_serverAdapterA_outData_outData$whas,
       obuffer2_4_serverAdapterA_s1_1$whas,
       obuffer2_4_serverAdapterB_cnt_1$whas,
       obuffer2_4_serverAdapterB_outData_enqData$whas,
       obuffer2_4_serverAdapterB_outData_outData$whas,
       obuffer2_4_serverAdapterB_s1_1$whas,
       obuffer2_5_serverAdapterA_cnt_1$whas,
       obuffer2_5_serverAdapterA_outData_enqData$whas,
       obuffer2_5_serverAdapterA_outData_outData$whas,
       obuffer2_5_serverAdapterA_s1_1$whas,
       obuffer2_5_serverAdapterB_cnt_1$whas,
       obuffer2_5_serverAdapterB_outData_enqData$whas,
       obuffer2_5_serverAdapterB_outData_outData$whas,
       obuffer2_5_serverAdapterB_s1_1$whas,
       obuffer2_6_serverAdapterA_cnt_1$whas,
       obuffer2_6_serverAdapterA_outData_enqData$whas,
       obuffer2_6_serverAdapterA_outData_outData$whas,
       obuffer2_6_serverAdapterA_s1_1$whas,
       obuffer2_6_serverAdapterB_cnt_1$whas,
       obuffer2_6_serverAdapterB_outData_enqData$whas,
       obuffer2_6_serverAdapterB_outData_outData$whas,
       obuffer2_6_serverAdapterB_s1_1$whas,
       obuffer2_7_serverAdapterA_cnt_1$whas,
       obuffer2_7_serverAdapterA_outData_enqData$whas,
       obuffer2_7_serverAdapterA_outData_outData$whas,
       obuffer2_7_serverAdapterA_s1_1$whas,
       obuffer2_7_serverAdapterB_cnt_1$whas,
       obuffer2_7_serverAdapterB_outData_enqData$whas,
       obuffer2_7_serverAdapterB_outData_outData$whas,
       obuffer2_7_serverAdapterB_s1_1$whas,
       obuffer2_8_serverAdapterA_cnt_1$whas,
       obuffer2_8_serverAdapterA_outData_enqData$whas,
       obuffer2_8_serverAdapterA_outData_outData$whas,
       obuffer2_8_serverAdapterA_s1_1$whas,
       obuffer2_8_serverAdapterB_cnt_1$whas,
       obuffer2_8_serverAdapterB_outData_enqData$whas,
       obuffer2_8_serverAdapterB_outData_outData$whas,
       obuffer2_8_serverAdapterB_s1_1$whas,
       obuffer2_9_serverAdapterA_cnt_1$whas,
       obuffer2_9_serverAdapterA_outData_enqData$whas,
       obuffer2_9_serverAdapterA_outData_outData$whas,
       obuffer2_9_serverAdapterA_s1_1$whas,
       obuffer2_9_serverAdapterB_cnt_1$whas,
       obuffer2_9_serverAdapterB_outData_enqData$whas,
       obuffer2_9_serverAdapterB_outData_outData$whas,
       obuffer2_9_serverAdapterB_s1_1$whas,
       wbuffer_0_serverAdapterA_cnt_1$whas,
       wbuffer_0_serverAdapterA_outData_enqData$whas,
       wbuffer_0_serverAdapterA_outData_outData$whas,
       wbuffer_0_serverAdapterA_s1_1$whas,
       wbuffer_0_serverAdapterB_cnt_1$whas,
       wbuffer_0_serverAdapterB_outData_enqData$whas,
       wbuffer_0_serverAdapterB_outData_outData$whas,
       wbuffer_0_serverAdapterB_s1_1$whas,
       wbuffer_10_serverAdapterA_cnt_1$whas,
       wbuffer_10_serverAdapterA_outData_enqData$whas,
       wbuffer_10_serverAdapterA_outData_outData$whas,
       wbuffer_10_serverAdapterA_s1_1$whas,
       wbuffer_10_serverAdapterB_cnt_1$whas,
       wbuffer_10_serverAdapterB_outData_enqData$whas,
       wbuffer_10_serverAdapterB_outData_outData$whas,
       wbuffer_10_serverAdapterB_s1_1$whas,
       wbuffer_11_serverAdapterA_cnt_1$whas,
       wbuffer_11_serverAdapterA_outData_enqData$whas,
       wbuffer_11_serverAdapterA_outData_outData$whas,
       wbuffer_11_serverAdapterA_s1_1$whas,
       wbuffer_11_serverAdapterB_cnt_1$whas,
       wbuffer_11_serverAdapterB_outData_enqData$whas,
       wbuffer_11_serverAdapterB_outData_outData$whas,
       wbuffer_11_serverAdapterB_s1_1$whas,
       wbuffer_12_serverAdapterA_cnt_1$whas,
       wbuffer_12_serverAdapterA_outData_enqData$whas,
       wbuffer_12_serverAdapterA_outData_outData$whas,
       wbuffer_12_serverAdapterA_s1_1$whas,
       wbuffer_12_serverAdapterB_cnt_1$whas,
       wbuffer_12_serverAdapterB_outData_enqData$whas,
       wbuffer_12_serverAdapterB_outData_outData$whas,
       wbuffer_12_serverAdapterB_s1_1$whas,
       wbuffer_13_serverAdapterA_cnt_1$whas,
       wbuffer_13_serverAdapterA_outData_enqData$whas,
       wbuffer_13_serverAdapterA_outData_outData$whas,
       wbuffer_13_serverAdapterA_s1_1$whas,
       wbuffer_13_serverAdapterB_cnt_1$whas,
       wbuffer_13_serverAdapterB_outData_enqData$whas,
       wbuffer_13_serverAdapterB_outData_outData$whas,
       wbuffer_13_serverAdapterB_s1_1$whas,
       wbuffer_14_serverAdapterA_cnt_1$whas,
       wbuffer_14_serverAdapterA_outData_enqData$whas,
       wbuffer_14_serverAdapterA_outData_outData$whas,
       wbuffer_14_serverAdapterA_s1_1$whas,
       wbuffer_14_serverAdapterB_cnt_1$whas,
       wbuffer_14_serverAdapterB_outData_enqData$whas,
       wbuffer_14_serverAdapterB_outData_outData$whas,
       wbuffer_14_serverAdapterB_s1_1$whas,
       wbuffer_15_serverAdapterA_cnt_1$whas,
       wbuffer_15_serverAdapterA_outData_enqData$whas,
       wbuffer_15_serverAdapterA_outData_outData$whas,
       wbuffer_15_serverAdapterA_s1_1$whas,
       wbuffer_15_serverAdapterB_cnt_1$whas,
       wbuffer_15_serverAdapterB_outData_enqData$whas,
       wbuffer_15_serverAdapterB_outData_outData$whas,
       wbuffer_15_serverAdapterB_s1_1$whas,
       wbuffer_16_serverAdapterA_cnt_1$whas,
       wbuffer_16_serverAdapterA_outData_enqData$whas,
       wbuffer_16_serverAdapterA_outData_outData$whas,
       wbuffer_16_serverAdapterA_s1_1$whas,
       wbuffer_16_serverAdapterB_cnt_1$whas,
       wbuffer_16_serverAdapterB_outData_enqData$whas,
       wbuffer_16_serverAdapterB_outData_outData$whas,
       wbuffer_16_serverAdapterB_s1_1$whas,
       wbuffer_17_serverAdapterA_cnt_1$whas,
       wbuffer_17_serverAdapterA_outData_enqData$whas,
       wbuffer_17_serverAdapterA_outData_outData$whas,
       wbuffer_17_serverAdapterA_s1_1$whas,
       wbuffer_17_serverAdapterB_cnt_1$whas,
       wbuffer_17_serverAdapterB_outData_enqData$whas,
       wbuffer_17_serverAdapterB_outData_outData$whas,
       wbuffer_17_serverAdapterB_s1_1$whas,
       wbuffer_18_serverAdapterA_cnt_1$whas,
       wbuffer_18_serverAdapterA_outData_enqData$whas,
       wbuffer_18_serverAdapterA_outData_outData$whas,
       wbuffer_18_serverAdapterA_s1_1$whas,
       wbuffer_18_serverAdapterB_cnt_1$whas,
       wbuffer_18_serverAdapterB_outData_enqData$whas,
       wbuffer_18_serverAdapterB_outData_outData$whas,
       wbuffer_18_serverAdapterB_s1_1$whas,
       wbuffer_19_serverAdapterA_cnt_1$whas,
       wbuffer_19_serverAdapterA_outData_enqData$whas,
       wbuffer_19_serverAdapterA_outData_outData$whas,
       wbuffer_19_serverAdapterA_s1_1$whas,
       wbuffer_19_serverAdapterB_cnt_1$whas,
       wbuffer_19_serverAdapterB_outData_enqData$whas,
       wbuffer_19_serverAdapterB_outData_outData$whas,
       wbuffer_19_serverAdapterB_s1_1$whas,
       wbuffer_1_serverAdapterA_cnt_1$whas,
       wbuffer_1_serverAdapterA_outData_enqData$whas,
       wbuffer_1_serverAdapterA_outData_outData$whas,
       wbuffer_1_serverAdapterA_s1_1$whas,
       wbuffer_1_serverAdapterB_cnt_1$whas,
       wbuffer_1_serverAdapterB_outData_enqData$whas,
       wbuffer_1_serverAdapterB_outData_outData$whas,
       wbuffer_1_serverAdapterB_s1_1$whas,
       wbuffer_20_serverAdapterA_cnt_1$whas,
       wbuffer_20_serverAdapterA_outData_enqData$whas,
       wbuffer_20_serverAdapterA_outData_outData$whas,
       wbuffer_20_serverAdapterA_s1_1$whas,
       wbuffer_20_serverAdapterB_cnt_1$whas,
       wbuffer_20_serverAdapterB_outData_enqData$whas,
       wbuffer_20_serverAdapterB_outData_outData$whas,
       wbuffer_20_serverAdapterB_s1_1$whas,
       wbuffer_21_serverAdapterA_cnt_1$whas,
       wbuffer_21_serverAdapterA_outData_enqData$whas,
       wbuffer_21_serverAdapterA_outData_outData$whas,
       wbuffer_21_serverAdapterA_s1_1$whas,
       wbuffer_21_serverAdapterB_cnt_1$whas,
       wbuffer_21_serverAdapterB_outData_enqData$whas,
       wbuffer_21_serverAdapterB_outData_outData$whas,
       wbuffer_21_serverAdapterB_s1_1$whas,
       wbuffer_22_serverAdapterA_cnt_1$whas,
       wbuffer_22_serverAdapterA_outData_enqData$whas,
       wbuffer_22_serverAdapterA_outData_outData$whas,
       wbuffer_22_serverAdapterA_s1_1$whas,
       wbuffer_22_serverAdapterB_cnt_1$whas,
       wbuffer_22_serverAdapterB_outData_enqData$whas,
       wbuffer_22_serverAdapterB_outData_outData$whas,
       wbuffer_22_serverAdapterB_s1_1$whas,
       wbuffer_23_serverAdapterA_cnt_1$whas,
       wbuffer_23_serverAdapterA_outData_enqData$whas,
       wbuffer_23_serverAdapterA_outData_outData$whas,
       wbuffer_23_serverAdapterA_s1_1$whas,
       wbuffer_23_serverAdapterB_cnt_1$whas,
       wbuffer_23_serverAdapterB_outData_enqData$whas,
       wbuffer_23_serverAdapterB_outData_outData$whas,
       wbuffer_23_serverAdapterB_s1_1$whas,
       wbuffer_24_serverAdapterA_cnt_1$whas,
       wbuffer_24_serverAdapterA_outData_enqData$whas,
       wbuffer_24_serverAdapterA_outData_outData$whas,
       wbuffer_24_serverAdapterA_s1_1$whas,
       wbuffer_24_serverAdapterB_cnt_1$whas,
       wbuffer_24_serverAdapterB_outData_enqData$whas,
       wbuffer_24_serverAdapterB_outData_outData$whas,
       wbuffer_24_serverAdapterB_s1_1$whas,
       wbuffer_25_serverAdapterA_cnt_1$whas,
       wbuffer_25_serverAdapterA_outData_enqData$whas,
       wbuffer_25_serverAdapterA_outData_outData$whas,
       wbuffer_25_serverAdapterA_s1_1$whas,
       wbuffer_25_serverAdapterB_cnt_1$whas,
       wbuffer_25_serverAdapterB_outData_enqData$whas,
       wbuffer_25_serverAdapterB_outData_outData$whas,
       wbuffer_25_serverAdapterB_s1_1$whas,
       wbuffer_26_serverAdapterA_cnt_1$whas,
       wbuffer_26_serverAdapterA_outData_enqData$whas,
       wbuffer_26_serverAdapterA_outData_outData$whas,
       wbuffer_26_serverAdapterA_s1_1$whas,
       wbuffer_26_serverAdapterB_cnt_1$whas,
       wbuffer_26_serverAdapterB_outData_enqData$whas,
       wbuffer_26_serverAdapterB_outData_outData$whas,
       wbuffer_26_serverAdapterB_s1_1$whas,
       wbuffer_27_serverAdapterA_cnt_1$whas,
       wbuffer_27_serverAdapterA_outData_enqData$whas,
       wbuffer_27_serverAdapterA_outData_outData$whas,
       wbuffer_27_serverAdapterA_s1_1$whas,
       wbuffer_27_serverAdapterB_cnt_1$whas,
       wbuffer_27_serverAdapterB_outData_enqData$whas,
       wbuffer_27_serverAdapterB_outData_outData$whas,
       wbuffer_27_serverAdapterB_s1_1$whas,
       wbuffer_28_serverAdapterA_cnt_1$whas,
       wbuffer_28_serverAdapterA_outData_enqData$whas,
       wbuffer_28_serverAdapterA_outData_outData$whas,
       wbuffer_28_serverAdapterA_s1_1$whas,
       wbuffer_28_serverAdapterB_cnt_1$whas,
       wbuffer_28_serverAdapterB_outData_enqData$whas,
       wbuffer_28_serverAdapterB_outData_outData$whas,
       wbuffer_28_serverAdapterB_s1_1$whas,
       wbuffer_29_serverAdapterA_cnt_1$whas,
       wbuffer_29_serverAdapterA_outData_enqData$whas,
       wbuffer_29_serverAdapterA_outData_outData$whas,
       wbuffer_29_serverAdapterA_s1_1$whas,
       wbuffer_29_serverAdapterB_cnt_1$whas,
       wbuffer_29_serverAdapterB_outData_enqData$whas,
       wbuffer_29_serverAdapterB_outData_outData$whas,
       wbuffer_29_serverAdapterB_s1_1$whas,
       wbuffer_2_serverAdapterA_cnt_1$whas,
       wbuffer_2_serverAdapterA_outData_enqData$whas,
       wbuffer_2_serverAdapterA_outData_outData$whas,
       wbuffer_2_serverAdapterA_s1_1$whas,
       wbuffer_2_serverAdapterB_cnt_1$whas,
       wbuffer_2_serverAdapterB_outData_enqData$whas,
       wbuffer_2_serverAdapterB_outData_outData$whas,
       wbuffer_2_serverAdapterB_s1_1$whas,
       wbuffer_30_serverAdapterA_cnt_1$whas,
       wbuffer_30_serverAdapterA_outData_enqData$whas,
       wbuffer_30_serverAdapterA_outData_outData$whas,
       wbuffer_30_serverAdapterA_s1_1$whas,
       wbuffer_30_serverAdapterB_cnt_1$whas,
       wbuffer_30_serverAdapterB_outData_enqData$whas,
       wbuffer_30_serverAdapterB_outData_outData$whas,
       wbuffer_30_serverAdapterB_s1_1$whas,
       wbuffer_31_serverAdapterA_cnt_1$whas,
       wbuffer_31_serverAdapterA_outData_enqData$whas,
       wbuffer_31_serverAdapterA_outData_outData$whas,
       wbuffer_31_serverAdapterA_s1_1$whas,
       wbuffer_31_serverAdapterB_cnt_1$whas,
       wbuffer_31_serverAdapterB_outData_enqData$whas,
       wbuffer_31_serverAdapterB_outData_outData$whas,
       wbuffer_31_serverAdapterB_s1_1$whas,
       wbuffer_3_serverAdapterA_cnt_1$whas,
       wbuffer_3_serverAdapterA_outData_enqData$whas,
       wbuffer_3_serverAdapterA_outData_outData$whas,
       wbuffer_3_serverAdapterA_s1_1$whas,
       wbuffer_3_serverAdapterB_cnt_1$whas,
       wbuffer_3_serverAdapterB_outData_enqData$whas,
       wbuffer_3_serverAdapterB_outData_outData$whas,
       wbuffer_3_serverAdapterB_s1_1$whas,
       wbuffer_4_serverAdapterA_cnt_1$whas,
       wbuffer_4_serverAdapterA_outData_enqData$whas,
       wbuffer_4_serverAdapterA_outData_outData$whas,
       wbuffer_4_serverAdapterA_s1_1$whas,
       wbuffer_4_serverAdapterB_cnt_1$whas,
       wbuffer_4_serverAdapterB_outData_enqData$whas,
       wbuffer_4_serverAdapterB_outData_outData$whas,
       wbuffer_4_serverAdapterB_s1_1$whas,
       wbuffer_5_serverAdapterA_cnt_1$whas,
       wbuffer_5_serverAdapterA_outData_enqData$whas,
       wbuffer_5_serverAdapterA_outData_outData$whas,
       wbuffer_5_serverAdapterA_s1_1$whas,
       wbuffer_5_serverAdapterB_cnt_1$whas,
       wbuffer_5_serverAdapterB_outData_enqData$whas,
       wbuffer_5_serverAdapterB_outData_outData$whas,
       wbuffer_5_serverAdapterB_s1_1$whas,
       wbuffer_6_serverAdapterA_cnt_1$whas,
       wbuffer_6_serverAdapterA_outData_enqData$whas,
       wbuffer_6_serverAdapterA_outData_outData$whas,
       wbuffer_6_serverAdapterA_s1_1$whas,
       wbuffer_6_serverAdapterB_cnt_1$whas,
       wbuffer_6_serverAdapterB_outData_enqData$whas,
       wbuffer_6_serverAdapterB_outData_outData$whas,
       wbuffer_6_serverAdapterB_s1_1$whas,
       wbuffer_7_serverAdapterA_cnt_1$whas,
       wbuffer_7_serverAdapterA_outData_enqData$whas,
       wbuffer_7_serverAdapterA_outData_outData$whas,
       wbuffer_7_serverAdapterA_s1_1$whas,
       wbuffer_7_serverAdapterB_cnt_1$whas,
       wbuffer_7_serverAdapterB_outData_enqData$whas,
       wbuffer_7_serverAdapterB_outData_outData$whas,
       wbuffer_7_serverAdapterB_s1_1$whas,
       wbuffer_8_serverAdapterA_cnt_1$whas,
       wbuffer_8_serverAdapterA_outData_enqData$whas,
       wbuffer_8_serverAdapterA_outData_outData$whas,
       wbuffer_8_serverAdapterA_s1_1$whas,
       wbuffer_8_serverAdapterB_cnt_1$whas,
       wbuffer_8_serverAdapterB_outData_enqData$whas,
       wbuffer_8_serverAdapterB_outData_outData$whas,
       wbuffer_8_serverAdapterB_s1_1$whas,
       wbuffer_9_serverAdapterA_cnt_1$whas,
       wbuffer_9_serverAdapterA_outData_enqData$whas,
       wbuffer_9_serverAdapterA_outData_outData$whas,
       wbuffer_9_serverAdapterA_s1_1$whas,
       wbuffer_9_serverAdapterB_cnt_1$whas,
       wbuffer_9_serverAdapterB_outData_enqData$whas,
       wbuffer_9_serverAdapterB_outData_outData$whas,
       wbuffer_9_serverAdapterB_s1_1$whas;

  // register ibuffer_0_serverAdapterA_cnt
  reg [2 : 0] ibuffer_0_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_0_serverAdapterA_cnt$D_IN;
  wire ibuffer_0_serverAdapterA_cnt$EN;

  // register ibuffer_0_serverAdapterA_s1
  reg [1 : 0] ibuffer_0_serverAdapterA_s1;
  wire [1 : 0] ibuffer_0_serverAdapterA_s1$D_IN;
  wire ibuffer_0_serverAdapterA_s1$EN;

  // register ibuffer_0_serverAdapterB_cnt
  reg [2 : 0] ibuffer_0_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_0_serverAdapterB_cnt$D_IN;
  wire ibuffer_0_serverAdapterB_cnt$EN;

  // register ibuffer_0_serverAdapterB_s1
  reg [1 : 0] ibuffer_0_serverAdapterB_s1;
  wire [1 : 0] ibuffer_0_serverAdapterB_s1$D_IN;
  wire ibuffer_0_serverAdapterB_s1$EN;

  // register ibuffer_10_serverAdapterA_cnt
  reg [2 : 0] ibuffer_10_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_10_serverAdapterA_cnt$D_IN;
  wire ibuffer_10_serverAdapterA_cnt$EN;

  // register ibuffer_10_serverAdapterA_s1
  reg [1 : 0] ibuffer_10_serverAdapterA_s1;
  wire [1 : 0] ibuffer_10_serverAdapterA_s1$D_IN;
  wire ibuffer_10_serverAdapterA_s1$EN;

  // register ibuffer_10_serverAdapterB_cnt
  reg [2 : 0] ibuffer_10_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_10_serverAdapterB_cnt$D_IN;
  wire ibuffer_10_serverAdapterB_cnt$EN;

  // register ibuffer_10_serverAdapterB_s1
  reg [1 : 0] ibuffer_10_serverAdapterB_s1;
  wire [1 : 0] ibuffer_10_serverAdapterB_s1$D_IN;
  wire ibuffer_10_serverAdapterB_s1$EN;

  // register ibuffer_11_serverAdapterA_cnt
  reg [2 : 0] ibuffer_11_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_11_serverAdapterA_cnt$D_IN;
  wire ibuffer_11_serverAdapterA_cnt$EN;

  // register ibuffer_11_serverAdapterA_s1
  reg [1 : 0] ibuffer_11_serverAdapterA_s1;
  wire [1 : 0] ibuffer_11_serverAdapterA_s1$D_IN;
  wire ibuffer_11_serverAdapterA_s1$EN;

  // register ibuffer_11_serverAdapterB_cnt
  reg [2 : 0] ibuffer_11_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_11_serverAdapterB_cnt$D_IN;
  wire ibuffer_11_serverAdapterB_cnt$EN;

  // register ibuffer_11_serverAdapterB_s1
  reg [1 : 0] ibuffer_11_serverAdapterB_s1;
  wire [1 : 0] ibuffer_11_serverAdapterB_s1$D_IN;
  wire ibuffer_11_serverAdapterB_s1$EN;

  // register ibuffer_12_serverAdapterA_cnt
  reg [2 : 0] ibuffer_12_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_12_serverAdapterA_cnt$D_IN;
  wire ibuffer_12_serverAdapterA_cnt$EN;

  // register ibuffer_12_serverAdapterA_s1
  reg [1 : 0] ibuffer_12_serverAdapterA_s1;
  wire [1 : 0] ibuffer_12_serverAdapterA_s1$D_IN;
  wire ibuffer_12_serverAdapterA_s1$EN;

  // register ibuffer_12_serverAdapterB_cnt
  reg [2 : 0] ibuffer_12_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_12_serverAdapterB_cnt$D_IN;
  wire ibuffer_12_serverAdapterB_cnt$EN;

  // register ibuffer_12_serverAdapterB_s1
  reg [1 : 0] ibuffer_12_serverAdapterB_s1;
  wire [1 : 0] ibuffer_12_serverAdapterB_s1$D_IN;
  wire ibuffer_12_serverAdapterB_s1$EN;

  // register ibuffer_13_serverAdapterA_cnt
  reg [2 : 0] ibuffer_13_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_13_serverAdapterA_cnt$D_IN;
  wire ibuffer_13_serverAdapterA_cnt$EN;

  // register ibuffer_13_serverAdapterA_s1
  reg [1 : 0] ibuffer_13_serverAdapterA_s1;
  wire [1 : 0] ibuffer_13_serverAdapterA_s1$D_IN;
  wire ibuffer_13_serverAdapterA_s1$EN;

  // register ibuffer_13_serverAdapterB_cnt
  reg [2 : 0] ibuffer_13_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_13_serverAdapterB_cnt$D_IN;
  wire ibuffer_13_serverAdapterB_cnt$EN;

  // register ibuffer_13_serverAdapterB_s1
  reg [1 : 0] ibuffer_13_serverAdapterB_s1;
  wire [1 : 0] ibuffer_13_serverAdapterB_s1$D_IN;
  wire ibuffer_13_serverAdapterB_s1$EN;

  // register ibuffer_14_serverAdapterA_cnt
  reg [2 : 0] ibuffer_14_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_14_serverAdapterA_cnt$D_IN;
  wire ibuffer_14_serverAdapterA_cnt$EN;

  // register ibuffer_14_serverAdapterA_s1
  reg [1 : 0] ibuffer_14_serverAdapterA_s1;
  wire [1 : 0] ibuffer_14_serverAdapterA_s1$D_IN;
  wire ibuffer_14_serverAdapterA_s1$EN;

  // register ibuffer_14_serverAdapterB_cnt
  reg [2 : 0] ibuffer_14_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_14_serverAdapterB_cnt$D_IN;
  wire ibuffer_14_serverAdapterB_cnt$EN;

  // register ibuffer_14_serverAdapterB_s1
  reg [1 : 0] ibuffer_14_serverAdapterB_s1;
  wire [1 : 0] ibuffer_14_serverAdapterB_s1$D_IN;
  wire ibuffer_14_serverAdapterB_s1$EN;

  // register ibuffer_15_serverAdapterA_cnt
  reg [2 : 0] ibuffer_15_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_15_serverAdapterA_cnt$D_IN;
  wire ibuffer_15_serverAdapterA_cnt$EN;

  // register ibuffer_15_serverAdapterA_s1
  reg [1 : 0] ibuffer_15_serverAdapterA_s1;
  wire [1 : 0] ibuffer_15_serverAdapterA_s1$D_IN;
  wire ibuffer_15_serverAdapterA_s1$EN;

  // register ibuffer_15_serverAdapterB_cnt
  reg [2 : 0] ibuffer_15_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_15_serverAdapterB_cnt$D_IN;
  wire ibuffer_15_serverAdapterB_cnt$EN;

  // register ibuffer_15_serverAdapterB_s1
  reg [1 : 0] ibuffer_15_serverAdapterB_s1;
  wire [1 : 0] ibuffer_15_serverAdapterB_s1$D_IN;
  wire ibuffer_15_serverAdapterB_s1$EN;

  // register ibuffer_16_serverAdapterA_cnt
  reg [2 : 0] ibuffer_16_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_16_serverAdapterA_cnt$D_IN;
  wire ibuffer_16_serverAdapterA_cnt$EN;

  // register ibuffer_16_serverAdapterA_s1
  reg [1 : 0] ibuffer_16_serverAdapterA_s1;
  wire [1 : 0] ibuffer_16_serverAdapterA_s1$D_IN;
  wire ibuffer_16_serverAdapterA_s1$EN;

  // register ibuffer_16_serverAdapterB_cnt
  reg [2 : 0] ibuffer_16_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_16_serverAdapterB_cnt$D_IN;
  wire ibuffer_16_serverAdapterB_cnt$EN;

  // register ibuffer_16_serverAdapterB_s1
  reg [1 : 0] ibuffer_16_serverAdapterB_s1;
  wire [1 : 0] ibuffer_16_serverAdapterB_s1$D_IN;
  wire ibuffer_16_serverAdapterB_s1$EN;

  // register ibuffer_17_serverAdapterA_cnt
  reg [2 : 0] ibuffer_17_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_17_serverAdapterA_cnt$D_IN;
  wire ibuffer_17_serverAdapterA_cnt$EN;

  // register ibuffer_17_serverAdapterA_s1
  reg [1 : 0] ibuffer_17_serverAdapterA_s1;
  wire [1 : 0] ibuffer_17_serverAdapterA_s1$D_IN;
  wire ibuffer_17_serverAdapterA_s1$EN;

  // register ibuffer_17_serverAdapterB_cnt
  reg [2 : 0] ibuffer_17_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_17_serverAdapterB_cnt$D_IN;
  wire ibuffer_17_serverAdapterB_cnt$EN;

  // register ibuffer_17_serverAdapterB_s1
  reg [1 : 0] ibuffer_17_serverAdapterB_s1;
  wire [1 : 0] ibuffer_17_serverAdapterB_s1$D_IN;
  wire ibuffer_17_serverAdapterB_s1$EN;

  // register ibuffer_18_serverAdapterA_cnt
  reg [2 : 0] ibuffer_18_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_18_serverAdapterA_cnt$D_IN;
  wire ibuffer_18_serverAdapterA_cnt$EN;

  // register ibuffer_18_serverAdapterA_s1
  reg [1 : 0] ibuffer_18_serverAdapterA_s1;
  wire [1 : 0] ibuffer_18_serverAdapterA_s1$D_IN;
  wire ibuffer_18_serverAdapterA_s1$EN;

  // register ibuffer_18_serverAdapterB_cnt
  reg [2 : 0] ibuffer_18_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_18_serverAdapterB_cnt$D_IN;
  wire ibuffer_18_serverAdapterB_cnt$EN;

  // register ibuffer_18_serverAdapterB_s1
  reg [1 : 0] ibuffer_18_serverAdapterB_s1;
  wire [1 : 0] ibuffer_18_serverAdapterB_s1$D_IN;
  wire ibuffer_18_serverAdapterB_s1$EN;

  // register ibuffer_19_serverAdapterA_cnt
  reg [2 : 0] ibuffer_19_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_19_serverAdapterA_cnt$D_IN;
  wire ibuffer_19_serverAdapterA_cnt$EN;

  // register ibuffer_19_serverAdapterA_s1
  reg [1 : 0] ibuffer_19_serverAdapterA_s1;
  wire [1 : 0] ibuffer_19_serverAdapterA_s1$D_IN;
  wire ibuffer_19_serverAdapterA_s1$EN;

  // register ibuffer_19_serverAdapterB_cnt
  reg [2 : 0] ibuffer_19_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_19_serverAdapterB_cnt$D_IN;
  wire ibuffer_19_serverAdapterB_cnt$EN;

  // register ibuffer_19_serverAdapterB_s1
  reg [1 : 0] ibuffer_19_serverAdapterB_s1;
  wire [1 : 0] ibuffer_19_serverAdapterB_s1$D_IN;
  wire ibuffer_19_serverAdapterB_s1$EN;

  // register ibuffer_1_serverAdapterA_cnt
  reg [2 : 0] ibuffer_1_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_1_serverAdapterA_cnt$D_IN;
  wire ibuffer_1_serverAdapterA_cnt$EN;

  // register ibuffer_1_serverAdapterA_s1
  reg [1 : 0] ibuffer_1_serverAdapterA_s1;
  wire [1 : 0] ibuffer_1_serverAdapterA_s1$D_IN;
  wire ibuffer_1_serverAdapterA_s1$EN;

  // register ibuffer_1_serverAdapterB_cnt
  reg [2 : 0] ibuffer_1_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_1_serverAdapterB_cnt$D_IN;
  wire ibuffer_1_serverAdapterB_cnt$EN;

  // register ibuffer_1_serverAdapterB_s1
  reg [1 : 0] ibuffer_1_serverAdapterB_s1;
  wire [1 : 0] ibuffer_1_serverAdapterB_s1$D_IN;
  wire ibuffer_1_serverAdapterB_s1$EN;

  // register ibuffer_20_serverAdapterA_cnt
  reg [2 : 0] ibuffer_20_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_20_serverAdapterA_cnt$D_IN;
  wire ibuffer_20_serverAdapterA_cnt$EN;

  // register ibuffer_20_serverAdapterA_s1
  reg [1 : 0] ibuffer_20_serverAdapterA_s1;
  wire [1 : 0] ibuffer_20_serverAdapterA_s1$D_IN;
  wire ibuffer_20_serverAdapterA_s1$EN;

  // register ibuffer_20_serverAdapterB_cnt
  reg [2 : 0] ibuffer_20_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_20_serverAdapterB_cnt$D_IN;
  wire ibuffer_20_serverAdapterB_cnt$EN;

  // register ibuffer_20_serverAdapterB_s1
  reg [1 : 0] ibuffer_20_serverAdapterB_s1;
  wire [1 : 0] ibuffer_20_serverAdapterB_s1$D_IN;
  wire ibuffer_20_serverAdapterB_s1$EN;

  // register ibuffer_21_serverAdapterA_cnt
  reg [2 : 0] ibuffer_21_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_21_serverAdapterA_cnt$D_IN;
  wire ibuffer_21_serverAdapterA_cnt$EN;

  // register ibuffer_21_serverAdapterA_s1
  reg [1 : 0] ibuffer_21_serverAdapterA_s1;
  wire [1 : 0] ibuffer_21_serverAdapterA_s1$D_IN;
  wire ibuffer_21_serverAdapterA_s1$EN;

  // register ibuffer_21_serverAdapterB_cnt
  reg [2 : 0] ibuffer_21_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_21_serverAdapterB_cnt$D_IN;
  wire ibuffer_21_serverAdapterB_cnt$EN;

  // register ibuffer_21_serverAdapterB_s1
  reg [1 : 0] ibuffer_21_serverAdapterB_s1;
  wire [1 : 0] ibuffer_21_serverAdapterB_s1$D_IN;
  wire ibuffer_21_serverAdapterB_s1$EN;

  // register ibuffer_22_serverAdapterA_cnt
  reg [2 : 0] ibuffer_22_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_22_serverAdapterA_cnt$D_IN;
  wire ibuffer_22_serverAdapterA_cnt$EN;

  // register ibuffer_22_serverAdapterA_s1
  reg [1 : 0] ibuffer_22_serverAdapterA_s1;
  wire [1 : 0] ibuffer_22_serverAdapterA_s1$D_IN;
  wire ibuffer_22_serverAdapterA_s1$EN;

  // register ibuffer_22_serverAdapterB_cnt
  reg [2 : 0] ibuffer_22_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_22_serverAdapterB_cnt$D_IN;
  wire ibuffer_22_serverAdapterB_cnt$EN;

  // register ibuffer_22_serverAdapterB_s1
  reg [1 : 0] ibuffer_22_serverAdapterB_s1;
  wire [1 : 0] ibuffer_22_serverAdapterB_s1$D_IN;
  wire ibuffer_22_serverAdapterB_s1$EN;

  // register ibuffer_23_serverAdapterA_cnt
  reg [2 : 0] ibuffer_23_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_23_serverAdapterA_cnt$D_IN;
  wire ibuffer_23_serverAdapterA_cnt$EN;

  // register ibuffer_23_serverAdapterA_s1
  reg [1 : 0] ibuffer_23_serverAdapterA_s1;
  wire [1 : 0] ibuffer_23_serverAdapterA_s1$D_IN;
  wire ibuffer_23_serverAdapterA_s1$EN;

  // register ibuffer_23_serverAdapterB_cnt
  reg [2 : 0] ibuffer_23_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_23_serverAdapterB_cnt$D_IN;
  wire ibuffer_23_serverAdapterB_cnt$EN;

  // register ibuffer_23_serverAdapterB_s1
  reg [1 : 0] ibuffer_23_serverAdapterB_s1;
  wire [1 : 0] ibuffer_23_serverAdapterB_s1$D_IN;
  wire ibuffer_23_serverAdapterB_s1$EN;

  // register ibuffer_24_serverAdapterA_cnt
  reg [2 : 0] ibuffer_24_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_24_serverAdapterA_cnt$D_IN;
  wire ibuffer_24_serverAdapterA_cnt$EN;

  // register ibuffer_24_serverAdapterA_s1
  reg [1 : 0] ibuffer_24_serverAdapterA_s1;
  wire [1 : 0] ibuffer_24_serverAdapterA_s1$D_IN;
  wire ibuffer_24_serverAdapterA_s1$EN;

  // register ibuffer_24_serverAdapterB_cnt
  reg [2 : 0] ibuffer_24_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_24_serverAdapterB_cnt$D_IN;
  wire ibuffer_24_serverAdapterB_cnt$EN;

  // register ibuffer_24_serverAdapterB_s1
  reg [1 : 0] ibuffer_24_serverAdapterB_s1;
  wire [1 : 0] ibuffer_24_serverAdapterB_s1$D_IN;
  wire ibuffer_24_serverAdapterB_s1$EN;

  // register ibuffer_25_serverAdapterA_cnt
  reg [2 : 0] ibuffer_25_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_25_serverAdapterA_cnt$D_IN;
  wire ibuffer_25_serverAdapterA_cnt$EN;

  // register ibuffer_25_serverAdapterA_s1
  reg [1 : 0] ibuffer_25_serverAdapterA_s1;
  wire [1 : 0] ibuffer_25_serverAdapterA_s1$D_IN;
  wire ibuffer_25_serverAdapterA_s1$EN;

  // register ibuffer_25_serverAdapterB_cnt
  reg [2 : 0] ibuffer_25_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_25_serverAdapterB_cnt$D_IN;
  wire ibuffer_25_serverAdapterB_cnt$EN;

  // register ibuffer_25_serverAdapterB_s1
  reg [1 : 0] ibuffer_25_serverAdapterB_s1;
  wire [1 : 0] ibuffer_25_serverAdapterB_s1$D_IN;
  wire ibuffer_25_serverAdapterB_s1$EN;

  // register ibuffer_26_serverAdapterA_cnt
  reg [2 : 0] ibuffer_26_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_26_serverAdapterA_cnt$D_IN;
  wire ibuffer_26_serverAdapterA_cnt$EN;

  // register ibuffer_26_serverAdapterA_s1
  reg [1 : 0] ibuffer_26_serverAdapterA_s1;
  wire [1 : 0] ibuffer_26_serverAdapterA_s1$D_IN;
  wire ibuffer_26_serverAdapterA_s1$EN;

  // register ibuffer_26_serverAdapterB_cnt
  reg [2 : 0] ibuffer_26_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_26_serverAdapterB_cnt$D_IN;
  wire ibuffer_26_serverAdapterB_cnt$EN;

  // register ibuffer_26_serverAdapterB_s1
  reg [1 : 0] ibuffer_26_serverAdapterB_s1;
  wire [1 : 0] ibuffer_26_serverAdapterB_s1$D_IN;
  wire ibuffer_26_serverAdapterB_s1$EN;

  // register ibuffer_27_serverAdapterA_cnt
  reg [2 : 0] ibuffer_27_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_27_serverAdapterA_cnt$D_IN;
  wire ibuffer_27_serverAdapterA_cnt$EN;

  // register ibuffer_27_serverAdapterA_s1
  reg [1 : 0] ibuffer_27_serverAdapterA_s1;
  wire [1 : 0] ibuffer_27_serverAdapterA_s1$D_IN;
  wire ibuffer_27_serverAdapterA_s1$EN;

  // register ibuffer_27_serverAdapterB_cnt
  reg [2 : 0] ibuffer_27_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_27_serverAdapterB_cnt$D_IN;
  wire ibuffer_27_serverAdapterB_cnt$EN;

  // register ibuffer_27_serverAdapterB_s1
  reg [1 : 0] ibuffer_27_serverAdapterB_s1;
  wire [1 : 0] ibuffer_27_serverAdapterB_s1$D_IN;
  wire ibuffer_27_serverAdapterB_s1$EN;

  // register ibuffer_28_serverAdapterA_cnt
  reg [2 : 0] ibuffer_28_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_28_serverAdapterA_cnt$D_IN;
  wire ibuffer_28_serverAdapterA_cnt$EN;

  // register ibuffer_28_serverAdapterA_s1
  reg [1 : 0] ibuffer_28_serverAdapterA_s1;
  wire [1 : 0] ibuffer_28_serverAdapterA_s1$D_IN;
  wire ibuffer_28_serverAdapterA_s1$EN;

  // register ibuffer_28_serverAdapterB_cnt
  reg [2 : 0] ibuffer_28_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_28_serverAdapterB_cnt$D_IN;
  wire ibuffer_28_serverAdapterB_cnt$EN;

  // register ibuffer_28_serverAdapterB_s1
  reg [1 : 0] ibuffer_28_serverAdapterB_s1;
  wire [1 : 0] ibuffer_28_serverAdapterB_s1$D_IN;
  wire ibuffer_28_serverAdapterB_s1$EN;

  // register ibuffer_29_serverAdapterA_cnt
  reg [2 : 0] ibuffer_29_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_29_serverAdapterA_cnt$D_IN;
  wire ibuffer_29_serverAdapterA_cnt$EN;

  // register ibuffer_29_serverAdapterA_s1
  reg [1 : 0] ibuffer_29_serverAdapterA_s1;
  wire [1 : 0] ibuffer_29_serverAdapterA_s1$D_IN;
  wire ibuffer_29_serverAdapterA_s1$EN;

  // register ibuffer_29_serverAdapterB_cnt
  reg [2 : 0] ibuffer_29_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_29_serverAdapterB_cnt$D_IN;
  wire ibuffer_29_serverAdapterB_cnt$EN;

  // register ibuffer_29_serverAdapterB_s1
  reg [1 : 0] ibuffer_29_serverAdapterB_s1;
  wire [1 : 0] ibuffer_29_serverAdapterB_s1$D_IN;
  wire ibuffer_29_serverAdapterB_s1$EN;

  // register ibuffer_2_serverAdapterA_cnt
  reg [2 : 0] ibuffer_2_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_2_serverAdapterA_cnt$D_IN;
  wire ibuffer_2_serverAdapterA_cnt$EN;

  // register ibuffer_2_serverAdapterA_s1
  reg [1 : 0] ibuffer_2_serverAdapterA_s1;
  wire [1 : 0] ibuffer_2_serverAdapterA_s1$D_IN;
  wire ibuffer_2_serverAdapterA_s1$EN;

  // register ibuffer_2_serverAdapterB_cnt
  reg [2 : 0] ibuffer_2_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_2_serverAdapterB_cnt$D_IN;
  wire ibuffer_2_serverAdapterB_cnt$EN;

  // register ibuffer_2_serverAdapterB_s1
  reg [1 : 0] ibuffer_2_serverAdapterB_s1;
  wire [1 : 0] ibuffer_2_serverAdapterB_s1$D_IN;
  wire ibuffer_2_serverAdapterB_s1$EN;

  // register ibuffer_30_serverAdapterA_cnt
  reg [2 : 0] ibuffer_30_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_30_serverAdapterA_cnt$D_IN;
  wire ibuffer_30_serverAdapterA_cnt$EN;

  // register ibuffer_30_serverAdapterA_s1
  reg [1 : 0] ibuffer_30_serverAdapterA_s1;
  wire [1 : 0] ibuffer_30_serverAdapterA_s1$D_IN;
  wire ibuffer_30_serverAdapterA_s1$EN;

  // register ibuffer_30_serverAdapterB_cnt
  reg [2 : 0] ibuffer_30_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_30_serverAdapterB_cnt$D_IN;
  wire ibuffer_30_serverAdapterB_cnt$EN;

  // register ibuffer_30_serverAdapterB_s1
  reg [1 : 0] ibuffer_30_serverAdapterB_s1;
  wire [1 : 0] ibuffer_30_serverAdapterB_s1$D_IN;
  wire ibuffer_30_serverAdapterB_s1$EN;

  // register ibuffer_31_serverAdapterA_cnt
  reg [2 : 0] ibuffer_31_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_31_serverAdapterA_cnt$D_IN;
  wire ibuffer_31_serverAdapterA_cnt$EN;

  // register ibuffer_31_serverAdapterA_s1
  reg [1 : 0] ibuffer_31_serverAdapterA_s1;
  wire [1 : 0] ibuffer_31_serverAdapterA_s1$D_IN;
  wire ibuffer_31_serverAdapterA_s1$EN;

  // register ibuffer_31_serverAdapterB_cnt
  reg [2 : 0] ibuffer_31_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_31_serverAdapterB_cnt$D_IN;
  wire ibuffer_31_serverAdapterB_cnt$EN;

  // register ibuffer_31_serverAdapterB_s1
  reg [1 : 0] ibuffer_31_serverAdapterB_s1;
  wire [1 : 0] ibuffer_31_serverAdapterB_s1$D_IN;
  wire ibuffer_31_serverAdapterB_s1$EN;

  // register ibuffer_3_serverAdapterA_cnt
  reg [2 : 0] ibuffer_3_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_3_serverAdapterA_cnt$D_IN;
  wire ibuffer_3_serverAdapterA_cnt$EN;

  // register ibuffer_3_serverAdapterA_s1
  reg [1 : 0] ibuffer_3_serverAdapterA_s1;
  wire [1 : 0] ibuffer_3_serverAdapterA_s1$D_IN;
  wire ibuffer_3_serverAdapterA_s1$EN;

  // register ibuffer_3_serverAdapterB_cnt
  reg [2 : 0] ibuffer_3_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_3_serverAdapterB_cnt$D_IN;
  wire ibuffer_3_serverAdapterB_cnt$EN;

  // register ibuffer_3_serverAdapterB_s1
  reg [1 : 0] ibuffer_3_serverAdapterB_s1;
  wire [1 : 0] ibuffer_3_serverAdapterB_s1$D_IN;
  wire ibuffer_3_serverAdapterB_s1$EN;

  // register ibuffer_4_serverAdapterA_cnt
  reg [2 : 0] ibuffer_4_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_4_serverAdapterA_cnt$D_IN;
  wire ibuffer_4_serverAdapterA_cnt$EN;

  // register ibuffer_4_serverAdapterA_s1
  reg [1 : 0] ibuffer_4_serverAdapterA_s1;
  wire [1 : 0] ibuffer_4_serverAdapterA_s1$D_IN;
  wire ibuffer_4_serverAdapterA_s1$EN;

  // register ibuffer_4_serverAdapterB_cnt
  reg [2 : 0] ibuffer_4_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_4_serverAdapterB_cnt$D_IN;
  wire ibuffer_4_serverAdapterB_cnt$EN;

  // register ibuffer_4_serverAdapterB_s1
  reg [1 : 0] ibuffer_4_serverAdapterB_s1;
  wire [1 : 0] ibuffer_4_serverAdapterB_s1$D_IN;
  wire ibuffer_4_serverAdapterB_s1$EN;

  // register ibuffer_5_serverAdapterA_cnt
  reg [2 : 0] ibuffer_5_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_5_serverAdapterA_cnt$D_IN;
  wire ibuffer_5_serverAdapterA_cnt$EN;

  // register ibuffer_5_serverAdapterA_s1
  reg [1 : 0] ibuffer_5_serverAdapterA_s1;
  wire [1 : 0] ibuffer_5_serverAdapterA_s1$D_IN;
  wire ibuffer_5_serverAdapterA_s1$EN;

  // register ibuffer_5_serverAdapterB_cnt
  reg [2 : 0] ibuffer_5_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_5_serverAdapterB_cnt$D_IN;
  wire ibuffer_5_serverAdapterB_cnt$EN;

  // register ibuffer_5_serverAdapterB_s1
  reg [1 : 0] ibuffer_5_serverAdapterB_s1;
  wire [1 : 0] ibuffer_5_serverAdapterB_s1$D_IN;
  wire ibuffer_5_serverAdapterB_s1$EN;

  // register ibuffer_6_serverAdapterA_cnt
  reg [2 : 0] ibuffer_6_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_6_serverAdapterA_cnt$D_IN;
  wire ibuffer_6_serverAdapterA_cnt$EN;

  // register ibuffer_6_serverAdapterA_s1
  reg [1 : 0] ibuffer_6_serverAdapterA_s1;
  wire [1 : 0] ibuffer_6_serverAdapterA_s1$D_IN;
  wire ibuffer_6_serverAdapterA_s1$EN;

  // register ibuffer_6_serverAdapterB_cnt
  reg [2 : 0] ibuffer_6_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_6_serverAdapterB_cnt$D_IN;
  wire ibuffer_6_serverAdapterB_cnt$EN;

  // register ibuffer_6_serverAdapterB_s1
  reg [1 : 0] ibuffer_6_serverAdapterB_s1;
  wire [1 : 0] ibuffer_6_serverAdapterB_s1$D_IN;
  wire ibuffer_6_serverAdapterB_s1$EN;

  // register ibuffer_7_serverAdapterA_cnt
  reg [2 : 0] ibuffer_7_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_7_serverAdapterA_cnt$D_IN;
  wire ibuffer_7_serverAdapterA_cnt$EN;

  // register ibuffer_7_serverAdapterA_s1
  reg [1 : 0] ibuffer_7_serverAdapterA_s1;
  wire [1 : 0] ibuffer_7_serverAdapterA_s1$D_IN;
  wire ibuffer_7_serverAdapterA_s1$EN;

  // register ibuffer_7_serverAdapterB_cnt
  reg [2 : 0] ibuffer_7_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_7_serverAdapterB_cnt$D_IN;
  wire ibuffer_7_serverAdapterB_cnt$EN;

  // register ibuffer_7_serverAdapterB_s1
  reg [1 : 0] ibuffer_7_serverAdapterB_s1;
  wire [1 : 0] ibuffer_7_serverAdapterB_s1$D_IN;
  wire ibuffer_7_serverAdapterB_s1$EN;

  // register ibuffer_8_serverAdapterA_cnt
  reg [2 : 0] ibuffer_8_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_8_serverAdapterA_cnt$D_IN;
  wire ibuffer_8_serverAdapterA_cnt$EN;

  // register ibuffer_8_serverAdapterA_s1
  reg [1 : 0] ibuffer_8_serverAdapterA_s1;
  wire [1 : 0] ibuffer_8_serverAdapterA_s1$D_IN;
  wire ibuffer_8_serverAdapterA_s1$EN;

  // register ibuffer_8_serverAdapterB_cnt
  reg [2 : 0] ibuffer_8_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_8_serverAdapterB_cnt$D_IN;
  wire ibuffer_8_serverAdapterB_cnt$EN;

  // register ibuffer_8_serverAdapterB_s1
  reg [1 : 0] ibuffer_8_serverAdapterB_s1;
  wire [1 : 0] ibuffer_8_serverAdapterB_s1$D_IN;
  wire ibuffer_8_serverAdapterB_s1$EN;

  // register ibuffer_9_serverAdapterA_cnt
  reg [2 : 0] ibuffer_9_serverAdapterA_cnt;
  wire [2 : 0] ibuffer_9_serverAdapterA_cnt$D_IN;
  wire ibuffer_9_serverAdapterA_cnt$EN;

  // register ibuffer_9_serverAdapterA_s1
  reg [1 : 0] ibuffer_9_serverAdapterA_s1;
  wire [1 : 0] ibuffer_9_serverAdapterA_s1$D_IN;
  wire ibuffer_9_serverAdapterA_s1$EN;

  // register ibuffer_9_serverAdapterB_cnt
  reg [2 : 0] ibuffer_9_serverAdapterB_cnt;
  wire [2 : 0] ibuffer_9_serverAdapterB_cnt$D_IN;
  wire ibuffer_9_serverAdapterB_cnt$EN;

  // register ibuffer_9_serverAdapterB_s1
  reg [1 : 0] ibuffer_9_serverAdapterB_s1;
  wire [1 : 0] ibuffer_9_serverAdapterB_s1$D_IN;
  wire ibuffer_9_serverAdapterB_s1$EN;

  // register obuffer1_0_serverAdapterA_cnt
  reg [2 : 0] obuffer1_0_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_0_serverAdapterA_cnt$D_IN;
  wire obuffer1_0_serverAdapterA_cnt$EN;

  // register obuffer1_0_serverAdapterA_s1
  reg [1 : 0] obuffer1_0_serverAdapterA_s1;
  wire [1 : 0] obuffer1_0_serverAdapterA_s1$D_IN;
  wire obuffer1_0_serverAdapterA_s1$EN;

  // register obuffer1_0_serverAdapterB_cnt
  reg [2 : 0] obuffer1_0_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_0_serverAdapterB_cnt$D_IN;
  wire obuffer1_0_serverAdapterB_cnt$EN;

  // register obuffer1_0_serverAdapterB_s1
  reg [1 : 0] obuffer1_0_serverAdapterB_s1;
  wire [1 : 0] obuffer1_0_serverAdapterB_s1$D_IN;
  wire obuffer1_0_serverAdapterB_s1$EN;

  // register obuffer1_10_serverAdapterA_cnt
  reg [2 : 0] obuffer1_10_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_10_serverAdapterA_cnt$D_IN;
  wire obuffer1_10_serverAdapterA_cnt$EN;

  // register obuffer1_10_serverAdapterA_s1
  reg [1 : 0] obuffer1_10_serverAdapterA_s1;
  wire [1 : 0] obuffer1_10_serverAdapterA_s1$D_IN;
  wire obuffer1_10_serverAdapterA_s1$EN;

  // register obuffer1_10_serverAdapterB_cnt
  reg [2 : 0] obuffer1_10_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_10_serverAdapterB_cnt$D_IN;
  wire obuffer1_10_serverAdapterB_cnt$EN;

  // register obuffer1_10_serverAdapterB_s1
  reg [1 : 0] obuffer1_10_serverAdapterB_s1;
  wire [1 : 0] obuffer1_10_serverAdapterB_s1$D_IN;
  wire obuffer1_10_serverAdapterB_s1$EN;

  // register obuffer1_11_serverAdapterA_cnt
  reg [2 : 0] obuffer1_11_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_11_serverAdapterA_cnt$D_IN;
  wire obuffer1_11_serverAdapterA_cnt$EN;

  // register obuffer1_11_serverAdapterA_s1
  reg [1 : 0] obuffer1_11_serverAdapterA_s1;
  wire [1 : 0] obuffer1_11_serverAdapterA_s1$D_IN;
  wire obuffer1_11_serverAdapterA_s1$EN;

  // register obuffer1_11_serverAdapterB_cnt
  reg [2 : 0] obuffer1_11_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_11_serverAdapterB_cnt$D_IN;
  wire obuffer1_11_serverAdapterB_cnt$EN;

  // register obuffer1_11_serverAdapterB_s1
  reg [1 : 0] obuffer1_11_serverAdapterB_s1;
  wire [1 : 0] obuffer1_11_serverAdapterB_s1$D_IN;
  wire obuffer1_11_serverAdapterB_s1$EN;

  // register obuffer1_12_serverAdapterA_cnt
  reg [2 : 0] obuffer1_12_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_12_serverAdapterA_cnt$D_IN;
  wire obuffer1_12_serverAdapterA_cnt$EN;

  // register obuffer1_12_serverAdapterA_s1
  reg [1 : 0] obuffer1_12_serverAdapterA_s1;
  wire [1 : 0] obuffer1_12_serverAdapterA_s1$D_IN;
  wire obuffer1_12_serverAdapterA_s1$EN;

  // register obuffer1_12_serverAdapterB_cnt
  reg [2 : 0] obuffer1_12_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_12_serverAdapterB_cnt$D_IN;
  wire obuffer1_12_serverAdapterB_cnt$EN;

  // register obuffer1_12_serverAdapterB_s1
  reg [1 : 0] obuffer1_12_serverAdapterB_s1;
  wire [1 : 0] obuffer1_12_serverAdapterB_s1$D_IN;
  wire obuffer1_12_serverAdapterB_s1$EN;

  // register obuffer1_13_serverAdapterA_cnt
  reg [2 : 0] obuffer1_13_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_13_serverAdapterA_cnt$D_IN;
  wire obuffer1_13_serverAdapterA_cnt$EN;

  // register obuffer1_13_serverAdapterA_s1
  reg [1 : 0] obuffer1_13_serverAdapterA_s1;
  wire [1 : 0] obuffer1_13_serverAdapterA_s1$D_IN;
  wire obuffer1_13_serverAdapterA_s1$EN;

  // register obuffer1_13_serverAdapterB_cnt
  reg [2 : 0] obuffer1_13_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_13_serverAdapterB_cnt$D_IN;
  wire obuffer1_13_serverAdapterB_cnt$EN;

  // register obuffer1_13_serverAdapterB_s1
  reg [1 : 0] obuffer1_13_serverAdapterB_s1;
  wire [1 : 0] obuffer1_13_serverAdapterB_s1$D_IN;
  wire obuffer1_13_serverAdapterB_s1$EN;

  // register obuffer1_14_serverAdapterA_cnt
  reg [2 : 0] obuffer1_14_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_14_serverAdapterA_cnt$D_IN;
  wire obuffer1_14_serverAdapterA_cnt$EN;

  // register obuffer1_14_serverAdapterA_s1
  reg [1 : 0] obuffer1_14_serverAdapterA_s1;
  wire [1 : 0] obuffer1_14_serverAdapterA_s1$D_IN;
  wire obuffer1_14_serverAdapterA_s1$EN;

  // register obuffer1_14_serverAdapterB_cnt
  reg [2 : 0] obuffer1_14_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_14_serverAdapterB_cnt$D_IN;
  wire obuffer1_14_serverAdapterB_cnt$EN;

  // register obuffer1_14_serverAdapterB_s1
  reg [1 : 0] obuffer1_14_serverAdapterB_s1;
  wire [1 : 0] obuffer1_14_serverAdapterB_s1$D_IN;
  wire obuffer1_14_serverAdapterB_s1$EN;

  // register obuffer1_15_serverAdapterA_cnt
  reg [2 : 0] obuffer1_15_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_15_serverAdapterA_cnt$D_IN;
  wire obuffer1_15_serverAdapterA_cnt$EN;

  // register obuffer1_15_serverAdapterA_s1
  reg [1 : 0] obuffer1_15_serverAdapterA_s1;
  wire [1 : 0] obuffer1_15_serverAdapterA_s1$D_IN;
  wire obuffer1_15_serverAdapterA_s1$EN;

  // register obuffer1_15_serverAdapterB_cnt
  reg [2 : 0] obuffer1_15_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_15_serverAdapterB_cnt$D_IN;
  wire obuffer1_15_serverAdapterB_cnt$EN;

  // register obuffer1_15_serverAdapterB_s1
  reg [1 : 0] obuffer1_15_serverAdapterB_s1;
  wire [1 : 0] obuffer1_15_serverAdapterB_s1$D_IN;
  wire obuffer1_15_serverAdapterB_s1$EN;

  // register obuffer1_16_serverAdapterA_cnt
  reg [2 : 0] obuffer1_16_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_16_serverAdapterA_cnt$D_IN;
  wire obuffer1_16_serverAdapterA_cnt$EN;

  // register obuffer1_16_serverAdapterA_s1
  reg [1 : 0] obuffer1_16_serverAdapterA_s1;
  wire [1 : 0] obuffer1_16_serverAdapterA_s1$D_IN;
  wire obuffer1_16_serverAdapterA_s1$EN;

  // register obuffer1_16_serverAdapterB_cnt
  reg [2 : 0] obuffer1_16_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_16_serverAdapterB_cnt$D_IN;
  wire obuffer1_16_serverAdapterB_cnt$EN;

  // register obuffer1_16_serverAdapterB_s1
  reg [1 : 0] obuffer1_16_serverAdapterB_s1;
  wire [1 : 0] obuffer1_16_serverAdapterB_s1$D_IN;
  wire obuffer1_16_serverAdapterB_s1$EN;

  // register obuffer1_17_serverAdapterA_cnt
  reg [2 : 0] obuffer1_17_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_17_serverAdapterA_cnt$D_IN;
  wire obuffer1_17_serverAdapterA_cnt$EN;

  // register obuffer1_17_serverAdapterA_s1
  reg [1 : 0] obuffer1_17_serverAdapterA_s1;
  wire [1 : 0] obuffer1_17_serverAdapterA_s1$D_IN;
  wire obuffer1_17_serverAdapterA_s1$EN;

  // register obuffer1_17_serverAdapterB_cnt
  reg [2 : 0] obuffer1_17_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_17_serverAdapterB_cnt$D_IN;
  wire obuffer1_17_serverAdapterB_cnt$EN;

  // register obuffer1_17_serverAdapterB_s1
  reg [1 : 0] obuffer1_17_serverAdapterB_s1;
  wire [1 : 0] obuffer1_17_serverAdapterB_s1$D_IN;
  wire obuffer1_17_serverAdapterB_s1$EN;

  // register obuffer1_18_serverAdapterA_cnt
  reg [2 : 0] obuffer1_18_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_18_serverAdapterA_cnt$D_IN;
  wire obuffer1_18_serverAdapterA_cnt$EN;

  // register obuffer1_18_serverAdapterA_s1
  reg [1 : 0] obuffer1_18_serverAdapterA_s1;
  wire [1 : 0] obuffer1_18_serverAdapterA_s1$D_IN;
  wire obuffer1_18_serverAdapterA_s1$EN;

  // register obuffer1_18_serverAdapterB_cnt
  reg [2 : 0] obuffer1_18_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_18_serverAdapterB_cnt$D_IN;
  wire obuffer1_18_serverAdapterB_cnt$EN;

  // register obuffer1_18_serverAdapterB_s1
  reg [1 : 0] obuffer1_18_serverAdapterB_s1;
  wire [1 : 0] obuffer1_18_serverAdapterB_s1$D_IN;
  wire obuffer1_18_serverAdapterB_s1$EN;

  // register obuffer1_19_serverAdapterA_cnt
  reg [2 : 0] obuffer1_19_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_19_serverAdapterA_cnt$D_IN;
  wire obuffer1_19_serverAdapterA_cnt$EN;

  // register obuffer1_19_serverAdapterA_s1
  reg [1 : 0] obuffer1_19_serverAdapterA_s1;
  wire [1 : 0] obuffer1_19_serverAdapterA_s1$D_IN;
  wire obuffer1_19_serverAdapterA_s1$EN;

  // register obuffer1_19_serverAdapterB_cnt
  reg [2 : 0] obuffer1_19_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_19_serverAdapterB_cnt$D_IN;
  wire obuffer1_19_serverAdapterB_cnt$EN;

  // register obuffer1_19_serverAdapterB_s1
  reg [1 : 0] obuffer1_19_serverAdapterB_s1;
  wire [1 : 0] obuffer1_19_serverAdapterB_s1$D_IN;
  wire obuffer1_19_serverAdapterB_s1$EN;

  // register obuffer1_1_serverAdapterA_cnt
  reg [2 : 0] obuffer1_1_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_1_serverAdapterA_cnt$D_IN;
  wire obuffer1_1_serverAdapterA_cnt$EN;

  // register obuffer1_1_serverAdapterA_s1
  reg [1 : 0] obuffer1_1_serverAdapterA_s1;
  wire [1 : 0] obuffer1_1_serverAdapterA_s1$D_IN;
  wire obuffer1_1_serverAdapterA_s1$EN;

  // register obuffer1_1_serverAdapterB_cnt
  reg [2 : 0] obuffer1_1_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_1_serverAdapterB_cnt$D_IN;
  wire obuffer1_1_serverAdapterB_cnt$EN;

  // register obuffer1_1_serverAdapterB_s1
  reg [1 : 0] obuffer1_1_serverAdapterB_s1;
  wire [1 : 0] obuffer1_1_serverAdapterB_s1$D_IN;
  wire obuffer1_1_serverAdapterB_s1$EN;

  // register obuffer1_20_serverAdapterA_cnt
  reg [2 : 0] obuffer1_20_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_20_serverAdapterA_cnt$D_IN;
  wire obuffer1_20_serverAdapterA_cnt$EN;

  // register obuffer1_20_serverAdapterA_s1
  reg [1 : 0] obuffer1_20_serverAdapterA_s1;
  wire [1 : 0] obuffer1_20_serverAdapterA_s1$D_IN;
  wire obuffer1_20_serverAdapterA_s1$EN;

  // register obuffer1_20_serverAdapterB_cnt
  reg [2 : 0] obuffer1_20_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_20_serverAdapterB_cnt$D_IN;
  wire obuffer1_20_serverAdapterB_cnt$EN;

  // register obuffer1_20_serverAdapterB_s1
  reg [1 : 0] obuffer1_20_serverAdapterB_s1;
  wire [1 : 0] obuffer1_20_serverAdapterB_s1$D_IN;
  wire obuffer1_20_serverAdapterB_s1$EN;

  // register obuffer1_21_serverAdapterA_cnt
  reg [2 : 0] obuffer1_21_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_21_serverAdapterA_cnt$D_IN;
  wire obuffer1_21_serverAdapterA_cnt$EN;

  // register obuffer1_21_serverAdapterA_s1
  reg [1 : 0] obuffer1_21_serverAdapterA_s1;
  wire [1 : 0] obuffer1_21_serverAdapterA_s1$D_IN;
  wire obuffer1_21_serverAdapterA_s1$EN;

  // register obuffer1_21_serverAdapterB_cnt
  reg [2 : 0] obuffer1_21_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_21_serverAdapterB_cnt$D_IN;
  wire obuffer1_21_serverAdapterB_cnt$EN;

  // register obuffer1_21_serverAdapterB_s1
  reg [1 : 0] obuffer1_21_serverAdapterB_s1;
  wire [1 : 0] obuffer1_21_serverAdapterB_s1$D_IN;
  wire obuffer1_21_serverAdapterB_s1$EN;

  // register obuffer1_22_serverAdapterA_cnt
  reg [2 : 0] obuffer1_22_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_22_serverAdapterA_cnt$D_IN;
  wire obuffer1_22_serverAdapterA_cnt$EN;

  // register obuffer1_22_serverAdapterA_s1
  reg [1 : 0] obuffer1_22_serverAdapterA_s1;
  wire [1 : 0] obuffer1_22_serverAdapterA_s1$D_IN;
  wire obuffer1_22_serverAdapterA_s1$EN;

  // register obuffer1_22_serverAdapterB_cnt
  reg [2 : 0] obuffer1_22_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_22_serverAdapterB_cnt$D_IN;
  wire obuffer1_22_serverAdapterB_cnt$EN;

  // register obuffer1_22_serverAdapterB_s1
  reg [1 : 0] obuffer1_22_serverAdapterB_s1;
  wire [1 : 0] obuffer1_22_serverAdapterB_s1$D_IN;
  wire obuffer1_22_serverAdapterB_s1$EN;

  // register obuffer1_23_serverAdapterA_cnt
  reg [2 : 0] obuffer1_23_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_23_serverAdapterA_cnt$D_IN;
  wire obuffer1_23_serverAdapterA_cnt$EN;

  // register obuffer1_23_serverAdapterA_s1
  reg [1 : 0] obuffer1_23_serverAdapterA_s1;
  wire [1 : 0] obuffer1_23_serverAdapterA_s1$D_IN;
  wire obuffer1_23_serverAdapterA_s1$EN;

  // register obuffer1_23_serverAdapterB_cnt
  reg [2 : 0] obuffer1_23_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_23_serverAdapterB_cnt$D_IN;
  wire obuffer1_23_serverAdapterB_cnt$EN;

  // register obuffer1_23_serverAdapterB_s1
  reg [1 : 0] obuffer1_23_serverAdapterB_s1;
  wire [1 : 0] obuffer1_23_serverAdapterB_s1$D_IN;
  wire obuffer1_23_serverAdapterB_s1$EN;

  // register obuffer1_24_serverAdapterA_cnt
  reg [2 : 0] obuffer1_24_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_24_serverAdapterA_cnt$D_IN;
  wire obuffer1_24_serverAdapterA_cnt$EN;

  // register obuffer1_24_serverAdapterA_s1
  reg [1 : 0] obuffer1_24_serverAdapterA_s1;
  wire [1 : 0] obuffer1_24_serverAdapterA_s1$D_IN;
  wire obuffer1_24_serverAdapterA_s1$EN;

  // register obuffer1_24_serverAdapterB_cnt
  reg [2 : 0] obuffer1_24_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_24_serverAdapterB_cnt$D_IN;
  wire obuffer1_24_serverAdapterB_cnt$EN;

  // register obuffer1_24_serverAdapterB_s1
  reg [1 : 0] obuffer1_24_serverAdapterB_s1;
  wire [1 : 0] obuffer1_24_serverAdapterB_s1$D_IN;
  wire obuffer1_24_serverAdapterB_s1$EN;

  // register obuffer1_25_serverAdapterA_cnt
  reg [2 : 0] obuffer1_25_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_25_serverAdapterA_cnt$D_IN;
  wire obuffer1_25_serverAdapterA_cnt$EN;

  // register obuffer1_25_serverAdapterA_s1
  reg [1 : 0] obuffer1_25_serverAdapterA_s1;
  wire [1 : 0] obuffer1_25_serverAdapterA_s1$D_IN;
  wire obuffer1_25_serverAdapterA_s1$EN;

  // register obuffer1_25_serverAdapterB_cnt
  reg [2 : 0] obuffer1_25_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_25_serverAdapterB_cnt$D_IN;
  wire obuffer1_25_serverAdapterB_cnt$EN;

  // register obuffer1_25_serverAdapterB_s1
  reg [1 : 0] obuffer1_25_serverAdapterB_s1;
  wire [1 : 0] obuffer1_25_serverAdapterB_s1$D_IN;
  wire obuffer1_25_serverAdapterB_s1$EN;

  // register obuffer1_26_serverAdapterA_cnt
  reg [2 : 0] obuffer1_26_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_26_serverAdapterA_cnt$D_IN;
  wire obuffer1_26_serverAdapterA_cnt$EN;

  // register obuffer1_26_serverAdapterA_s1
  reg [1 : 0] obuffer1_26_serverAdapterA_s1;
  wire [1 : 0] obuffer1_26_serverAdapterA_s1$D_IN;
  wire obuffer1_26_serverAdapterA_s1$EN;

  // register obuffer1_26_serverAdapterB_cnt
  reg [2 : 0] obuffer1_26_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_26_serverAdapterB_cnt$D_IN;
  wire obuffer1_26_serverAdapterB_cnt$EN;

  // register obuffer1_26_serverAdapterB_s1
  reg [1 : 0] obuffer1_26_serverAdapterB_s1;
  wire [1 : 0] obuffer1_26_serverAdapterB_s1$D_IN;
  wire obuffer1_26_serverAdapterB_s1$EN;

  // register obuffer1_27_serverAdapterA_cnt
  reg [2 : 0] obuffer1_27_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_27_serverAdapterA_cnt$D_IN;
  wire obuffer1_27_serverAdapterA_cnt$EN;

  // register obuffer1_27_serverAdapterA_s1
  reg [1 : 0] obuffer1_27_serverAdapterA_s1;
  wire [1 : 0] obuffer1_27_serverAdapterA_s1$D_IN;
  wire obuffer1_27_serverAdapterA_s1$EN;

  // register obuffer1_27_serverAdapterB_cnt
  reg [2 : 0] obuffer1_27_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_27_serverAdapterB_cnt$D_IN;
  wire obuffer1_27_serverAdapterB_cnt$EN;

  // register obuffer1_27_serverAdapterB_s1
  reg [1 : 0] obuffer1_27_serverAdapterB_s1;
  wire [1 : 0] obuffer1_27_serverAdapterB_s1$D_IN;
  wire obuffer1_27_serverAdapterB_s1$EN;

  // register obuffer1_28_serverAdapterA_cnt
  reg [2 : 0] obuffer1_28_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_28_serverAdapterA_cnt$D_IN;
  wire obuffer1_28_serverAdapterA_cnt$EN;

  // register obuffer1_28_serverAdapterA_s1
  reg [1 : 0] obuffer1_28_serverAdapterA_s1;
  wire [1 : 0] obuffer1_28_serverAdapterA_s1$D_IN;
  wire obuffer1_28_serverAdapterA_s1$EN;

  // register obuffer1_28_serverAdapterB_cnt
  reg [2 : 0] obuffer1_28_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_28_serverAdapterB_cnt$D_IN;
  wire obuffer1_28_serverAdapterB_cnt$EN;

  // register obuffer1_28_serverAdapterB_s1
  reg [1 : 0] obuffer1_28_serverAdapterB_s1;
  wire [1 : 0] obuffer1_28_serverAdapterB_s1$D_IN;
  wire obuffer1_28_serverAdapterB_s1$EN;

  // register obuffer1_29_serverAdapterA_cnt
  reg [2 : 0] obuffer1_29_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_29_serverAdapterA_cnt$D_IN;
  wire obuffer1_29_serverAdapterA_cnt$EN;

  // register obuffer1_29_serverAdapterA_s1
  reg [1 : 0] obuffer1_29_serverAdapterA_s1;
  wire [1 : 0] obuffer1_29_serverAdapterA_s1$D_IN;
  wire obuffer1_29_serverAdapterA_s1$EN;

  // register obuffer1_29_serverAdapterB_cnt
  reg [2 : 0] obuffer1_29_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_29_serverAdapterB_cnt$D_IN;
  wire obuffer1_29_serverAdapterB_cnt$EN;

  // register obuffer1_29_serverAdapterB_s1
  reg [1 : 0] obuffer1_29_serverAdapterB_s1;
  wire [1 : 0] obuffer1_29_serverAdapterB_s1$D_IN;
  wire obuffer1_29_serverAdapterB_s1$EN;

  // register obuffer1_2_serverAdapterA_cnt
  reg [2 : 0] obuffer1_2_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_2_serverAdapterA_cnt$D_IN;
  wire obuffer1_2_serverAdapterA_cnt$EN;

  // register obuffer1_2_serverAdapterA_s1
  reg [1 : 0] obuffer1_2_serverAdapterA_s1;
  wire [1 : 0] obuffer1_2_serverAdapterA_s1$D_IN;
  wire obuffer1_2_serverAdapterA_s1$EN;

  // register obuffer1_2_serverAdapterB_cnt
  reg [2 : 0] obuffer1_2_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_2_serverAdapterB_cnt$D_IN;
  wire obuffer1_2_serverAdapterB_cnt$EN;

  // register obuffer1_2_serverAdapterB_s1
  reg [1 : 0] obuffer1_2_serverAdapterB_s1;
  wire [1 : 0] obuffer1_2_serverAdapterB_s1$D_IN;
  wire obuffer1_2_serverAdapterB_s1$EN;

  // register obuffer1_30_serverAdapterA_cnt
  reg [2 : 0] obuffer1_30_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_30_serverAdapterA_cnt$D_IN;
  wire obuffer1_30_serverAdapterA_cnt$EN;

  // register obuffer1_30_serverAdapterA_s1
  reg [1 : 0] obuffer1_30_serverAdapterA_s1;
  wire [1 : 0] obuffer1_30_serverAdapterA_s1$D_IN;
  wire obuffer1_30_serverAdapterA_s1$EN;

  // register obuffer1_30_serverAdapterB_cnt
  reg [2 : 0] obuffer1_30_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_30_serverAdapterB_cnt$D_IN;
  wire obuffer1_30_serverAdapterB_cnt$EN;

  // register obuffer1_30_serverAdapterB_s1
  reg [1 : 0] obuffer1_30_serverAdapterB_s1;
  wire [1 : 0] obuffer1_30_serverAdapterB_s1$D_IN;
  wire obuffer1_30_serverAdapterB_s1$EN;

  // register obuffer1_31_serverAdapterA_cnt
  reg [2 : 0] obuffer1_31_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_31_serverAdapterA_cnt$D_IN;
  wire obuffer1_31_serverAdapterA_cnt$EN;

  // register obuffer1_31_serverAdapterA_s1
  reg [1 : 0] obuffer1_31_serverAdapterA_s1;
  wire [1 : 0] obuffer1_31_serverAdapterA_s1$D_IN;
  wire obuffer1_31_serverAdapterA_s1$EN;

  // register obuffer1_31_serverAdapterB_cnt
  reg [2 : 0] obuffer1_31_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_31_serverAdapterB_cnt$D_IN;
  wire obuffer1_31_serverAdapterB_cnt$EN;

  // register obuffer1_31_serverAdapterB_s1
  reg [1 : 0] obuffer1_31_serverAdapterB_s1;
  wire [1 : 0] obuffer1_31_serverAdapterB_s1$D_IN;
  wire obuffer1_31_serverAdapterB_s1$EN;

  // register obuffer1_3_serverAdapterA_cnt
  reg [2 : 0] obuffer1_3_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_3_serverAdapterA_cnt$D_IN;
  wire obuffer1_3_serverAdapterA_cnt$EN;

  // register obuffer1_3_serverAdapterA_s1
  reg [1 : 0] obuffer1_3_serverAdapterA_s1;
  wire [1 : 0] obuffer1_3_serverAdapterA_s1$D_IN;
  wire obuffer1_3_serverAdapterA_s1$EN;

  // register obuffer1_3_serverAdapterB_cnt
  reg [2 : 0] obuffer1_3_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_3_serverAdapterB_cnt$D_IN;
  wire obuffer1_3_serverAdapterB_cnt$EN;

  // register obuffer1_3_serverAdapterB_s1
  reg [1 : 0] obuffer1_3_serverAdapterB_s1;
  wire [1 : 0] obuffer1_3_serverAdapterB_s1$D_IN;
  wire obuffer1_3_serverAdapterB_s1$EN;

  // register obuffer1_4_serverAdapterA_cnt
  reg [2 : 0] obuffer1_4_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_4_serverAdapterA_cnt$D_IN;
  wire obuffer1_4_serverAdapterA_cnt$EN;

  // register obuffer1_4_serverAdapterA_s1
  reg [1 : 0] obuffer1_4_serverAdapterA_s1;
  wire [1 : 0] obuffer1_4_serverAdapterA_s1$D_IN;
  wire obuffer1_4_serverAdapterA_s1$EN;

  // register obuffer1_4_serverAdapterB_cnt
  reg [2 : 0] obuffer1_4_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_4_serverAdapterB_cnt$D_IN;
  wire obuffer1_4_serverAdapterB_cnt$EN;

  // register obuffer1_4_serverAdapterB_s1
  reg [1 : 0] obuffer1_4_serverAdapterB_s1;
  wire [1 : 0] obuffer1_4_serverAdapterB_s1$D_IN;
  wire obuffer1_4_serverAdapterB_s1$EN;

  // register obuffer1_5_serverAdapterA_cnt
  reg [2 : 0] obuffer1_5_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_5_serverAdapterA_cnt$D_IN;
  wire obuffer1_5_serverAdapterA_cnt$EN;

  // register obuffer1_5_serverAdapterA_s1
  reg [1 : 0] obuffer1_5_serverAdapterA_s1;
  wire [1 : 0] obuffer1_5_serverAdapterA_s1$D_IN;
  wire obuffer1_5_serverAdapterA_s1$EN;

  // register obuffer1_5_serverAdapterB_cnt
  reg [2 : 0] obuffer1_5_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_5_serverAdapterB_cnt$D_IN;
  wire obuffer1_5_serverAdapterB_cnt$EN;

  // register obuffer1_5_serverAdapterB_s1
  reg [1 : 0] obuffer1_5_serverAdapterB_s1;
  wire [1 : 0] obuffer1_5_serverAdapterB_s1$D_IN;
  wire obuffer1_5_serverAdapterB_s1$EN;

  // register obuffer1_6_serverAdapterA_cnt
  reg [2 : 0] obuffer1_6_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_6_serverAdapterA_cnt$D_IN;
  wire obuffer1_6_serverAdapterA_cnt$EN;

  // register obuffer1_6_serverAdapterA_s1
  reg [1 : 0] obuffer1_6_serverAdapterA_s1;
  wire [1 : 0] obuffer1_6_serverAdapterA_s1$D_IN;
  wire obuffer1_6_serverAdapterA_s1$EN;

  // register obuffer1_6_serverAdapterB_cnt
  reg [2 : 0] obuffer1_6_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_6_serverAdapterB_cnt$D_IN;
  wire obuffer1_6_serverAdapterB_cnt$EN;

  // register obuffer1_6_serverAdapterB_s1
  reg [1 : 0] obuffer1_6_serverAdapterB_s1;
  wire [1 : 0] obuffer1_6_serverAdapterB_s1$D_IN;
  wire obuffer1_6_serverAdapterB_s1$EN;

  // register obuffer1_7_serverAdapterA_cnt
  reg [2 : 0] obuffer1_7_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_7_serverAdapterA_cnt$D_IN;
  wire obuffer1_7_serverAdapterA_cnt$EN;

  // register obuffer1_7_serverAdapterA_s1
  reg [1 : 0] obuffer1_7_serverAdapterA_s1;
  wire [1 : 0] obuffer1_7_serverAdapterA_s1$D_IN;
  wire obuffer1_7_serverAdapterA_s1$EN;

  // register obuffer1_7_serverAdapterB_cnt
  reg [2 : 0] obuffer1_7_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_7_serverAdapterB_cnt$D_IN;
  wire obuffer1_7_serverAdapterB_cnt$EN;

  // register obuffer1_7_serverAdapterB_s1
  reg [1 : 0] obuffer1_7_serverAdapterB_s1;
  wire [1 : 0] obuffer1_7_serverAdapterB_s1$D_IN;
  wire obuffer1_7_serverAdapterB_s1$EN;

  // register obuffer1_8_serverAdapterA_cnt
  reg [2 : 0] obuffer1_8_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_8_serverAdapterA_cnt$D_IN;
  wire obuffer1_8_serverAdapterA_cnt$EN;

  // register obuffer1_8_serverAdapterA_s1
  reg [1 : 0] obuffer1_8_serverAdapterA_s1;
  wire [1 : 0] obuffer1_8_serverAdapterA_s1$D_IN;
  wire obuffer1_8_serverAdapterA_s1$EN;

  // register obuffer1_8_serverAdapterB_cnt
  reg [2 : 0] obuffer1_8_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_8_serverAdapterB_cnt$D_IN;
  wire obuffer1_8_serverAdapterB_cnt$EN;

  // register obuffer1_8_serverAdapterB_s1
  reg [1 : 0] obuffer1_8_serverAdapterB_s1;
  wire [1 : 0] obuffer1_8_serverAdapterB_s1$D_IN;
  wire obuffer1_8_serverAdapterB_s1$EN;

  // register obuffer1_9_serverAdapterA_cnt
  reg [2 : 0] obuffer1_9_serverAdapterA_cnt;
  wire [2 : 0] obuffer1_9_serverAdapterA_cnt$D_IN;
  wire obuffer1_9_serverAdapterA_cnt$EN;

  // register obuffer1_9_serverAdapterA_s1
  reg [1 : 0] obuffer1_9_serverAdapterA_s1;
  wire [1 : 0] obuffer1_9_serverAdapterA_s1$D_IN;
  wire obuffer1_9_serverAdapterA_s1$EN;

  // register obuffer1_9_serverAdapterB_cnt
  reg [2 : 0] obuffer1_9_serverAdapterB_cnt;
  wire [2 : 0] obuffer1_9_serverAdapterB_cnt$D_IN;
  wire obuffer1_9_serverAdapterB_cnt$EN;

  // register obuffer1_9_serverAdapterB_s1
  reg [1 : 0] obuffer1_9_serverAdapterB_s1;
  wire [1 : 0] obuffer1_9_serverAdapterB_s1$D_IN;
  wire obuffer1_9_serverAdapterB_s1$EN;

  // register obuffer2_0_serverAdapterA_cnt
  reg [2 : 0] obuffer2_0_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_0_serverAdapterA_cnt$D_IN;
  wire obuffer2_0_serverAdapterA_cnt$EN;

  // register obuffer2_0_serverAdapterA_s1
  reg [1 : 0] obuffer2_0_serverAdapterA_s1;
  wire [1 : 0] obuffer2_0_serverAdapterA_s1$D_IN;
  wire obuffer2_0_serverAdapterA_s1$EN;

  // register obuffer2_0_serverAdapterB_cnt
  reg [2 : 0] obuffer2_0_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_0_serverAdapterB_cnt$D_IN;
  wire obuffer2_0_serverAdapterB_cnt$EN;

  // register obuffer2_0_serverAdapterB_s1
  reg [1 : 0] obuffer2_0_serverAdapterB_s1;
  wire [1 : 0] obuffer2_0_serverAdapterB_s1$D_IN;
  wire obuffer2_0_serverAdapterB_s1$EN;

  // register obuffer2_10_serverAdapterA_cnt
  reg [2 : 0] obuffer2_10_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_10_serverAdapterA_cnt$D_IN;
  wire obuffer2_10_serverAdapterA_cnt$EN;

  // register obuffer2_10_serverAdapterA_s1
  reg [1 : 0] obuffer2_10_serverAdapterA_s1;
  wire [1 : 0] obuffer2_10_serverAdapterA_s1$D_IN;
  wire obuffer2_10_serverAdapterA_s1$EN;

  // register obuffer2_10_serverAdapterB_cnt
  reg [2 : 0] obuffer2_10_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_10_serverAdapterB_cnt$D_IN;
  wire obuffer2_10_serverAdapterB_cnt$EN;

  // register obuffer2_10_serverAdapterB_s1
  reg [1 : 0] obuffer2_10_serverAdapterB_s1;
  wire [1 : 0] obuffer2_10_serverAdapterB_s1$D_IN;
  wire obuffer2_10_serverAdapterB_s1$EN;

  // register obuffer2_11_serverAdapterA_cnt
  reg [2 : 0] obuffer2_11_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_11_serverAdapterA_cnt$D_IN;
  wire obuffer2_11_serverAdapterA_cnt$EN;

  // register obuffer2_11_serverAdapterA_s1
  reg [1 : 0] obuffer2_11_serverAdapterA_s1;
  wire [1 : 0] obuffer2_11_serverAdapterA_s1$D_IN;
  wire obuffer2_11_serverAdapterA_s1$EN;

  // register obuffer2_11_serverAdapterB_cnt
  reg [2 : 0] obuffer2_11_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_11_serverAdapterB_cnt$D_IN;
  wire obuffer2_11_serverAdapterB_cnt$EN;

  // register obuffer2_11_serverAdapterB_s1
  reg [1 : 0] obuffer2_11_serverAdapterB_s1;
  wire [1 : 0] obuffer2_11_serverAdapterB_s1$D_IN;
  wire obuffer2_11_serverAdapterB_s1$EN;

  // register obuffer2_12_serverAdapterA_cnt
  reg [2 : 0] obuffer2_12_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_12_serverAdapterA_cnt$D_IN;
  wire obuffer2_12_serverAdapterA_cnt$EN;

  // register obuffer2_12_serverAdapterA_s1
  reg [1 : 0] obuffer2_12_serverAdapterA_s1;
  wire [1 : 0] obuffer2_12_serverAdapterA_s1$D_IN;
  wire obuffer2_12_serverAdapterA_s1$EN;

  // register obuffer2_12_serverAdapterB_cnt
  reg [2 : 0] obuffer2_12_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_12_serverAdapterB_cnt$D_IN;
  wire obuffer2_12_serverAdapterB_cnt$EN;

  // register obuffer2_12_serverAdapterB_s1
  reg [1 : 0] obuffer2_12_serverAdapterB_s1;
  wire [1 : 0] obuffer2_12_serverAdapterB_s1$D_IN;
  wire obuffer2_12_serverAdapterB_s1$EN;

  // register obuffer2_13_serverAdapterA_cnt
  reg [2 : 0] obuffer2_13_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_13_serverAdapterA_cnt$D_IN;
  wire obuffer2_13_serverAdapterA_cnt$EN;

  // register obuffer2_13_serverAdapterA_s1
  reg [1 : 0] obuffer2_13_serverAdapterA_s1;
  wire [1 : 0] obuffer2_13_serverAdapterA_s1$D_IN;
  wire obuffer2_13_serverAdapterA_s1$EN;

  // register obuffer2_13_serverAdapterB_cnt
  reg [2 : 0] obuffer2_13_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_13_serverAdapterB_cnt$D_IN;
  wire obuffer2_13_serverAdapterB_cnt$EN;

  // register obuffer2_13_serverAdapterB_s1
  reg [1 : 0] obuffer2_13_serverAdapterB_s1;
  wire [1 : 0] obuffer2_13_serverAdapterB_s1$D_IN;
  wire obuffer2_13_serverAdapterB_s1$EN;

  // register obuffer2_14_serverAdapterA_cnt
  reg [2 : 0] obuffer2_14_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_14_serverAdapterA_cnt$D_IN;
  wire obuffer2_14_serverAdapterA_cnt$EN;

  // register obuffer2_14_serverAdapterA_s1
  reg [1 : 0] obuffer2_14_serverAdapterA_s1;
  wire [1 : 0] obuffer2_14_serverAdapterA_s1$D_IN;
  wire obuffer2_14_serverAdapterA_s1$EN;

  // register obuffer2_14_serverAdapterB_cnt
  reg [2 : 0] obuffer2_14_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_14_serverAdapterB_cnt$D_IN;
  wire obuffer2_14_serverAdapterB_cnt$EN;

  // register obuffer2_14_serverAdapterB_s1
  reg [1 : 0] obuffer2_14_serverAdapterB_s1;
  wire [1 : 0] obuffer2_14_serverAdapterB_s1$D_IN;
  wire obuffer2_14_serverAdapterB_s1$EN;

  // register obuffer2_15_serverAdapterA_cnt
  reg [2 : 0] obuffer2_15_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_15_serverAdapterA_cnt$D_IN;
  wire obuffer2_15_serverAdapterA_cnt$EN;

  // register obuffer2_15_serverAdapterA_s1
  reg [1 : 0] obuffer2_15_serverAdapterA_s1;
  wire [1 : 0] obuffer2_15_serverAdapterA_s1$D_IN;
  wire obuffer2_15_serverAdapterA_s1$EN;

  // register obuffer2_15_serverAdapterB_cnt
  reg [2 : 0] obuffer2_15_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_15_serverAdapterB_cnt$D_IN;
  wire obuffer2_15_serverAdapterB_cnt$EN;

  // register obuffer2_15_serverAdapterB_s1
  reg [1 : 0] obuffer2_15_serverAdapterB_s1;
  wire [1 : 0] obuffer2_15_serverAdapterB_s1$D_IN;
  wire obuffer2_15_serverAdapterB_s1$EN;

  // register obuffer2_16_serverAdapterA_cnt
  reg [2 : 0] obuffer2_16_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_16_serverAdapterA_cnt$D_IN;
  wire obuffer2_16_serverAdapterA_cnt$EN;

  // register obuffer2_16_serverAdapterA_s1
  reg [1 : 0] obuffer2_16_serverAdapterA_s1;
  wire [1 : 0] obuffer2_16_serverAdapterA_s1$D_IN;
  wire obuffer2_16_serverAdapterA_s1$EN;

  // register obuffer2_16_serverAdapterB_cnt
  reg [2 : 0] obuffer2_16_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_16_serverAdapterB_cnt$D_IN;
  wire obuffer2_16_serverAdapterB_cnt$EN;

  // register obuffer2_16_serverAdapterB_s1
  reg [1 : 0] obuffer2_16_serverAdapterB_s1;
  wire [1 : 0] obuffer2_16_serverAdapterB_s1$D_IN;
  wire obuffer2_16_serverAdapterB_s1$EN;

  // register obuffer2_17_serverAdapterA_cnt
  reg [2 : 0] obuffer2_17_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_17_serverAdapterA_cnt$D_IN;
  wire obuffer2_17_serverAdapterA_cnt$EN;

  // register obuffer2_17_serverAdapterA_s1
  reg [1 : 0] obuffer2_17_serverAdapterA_s1;
  wire [1 : 0] obuffer2_17_serverAdapterA_s1$D_IN;
  wire obuffer2_17_serverAdapterA_s1$EN;

  // register obuffer2_17_serverAdapterB_cnt
  reg [2 : 0] obuffer2_17_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_17_serverAdapterB_cnt$D_IN;
  wire obuffer2_17_serverAdapterB_cnt$EN;

  // register obuffer2_17_serverAdapterB_s1
  reg [1 : 0] obuffer2_17_serverAdapterB_s1;
  wire [1 : 0] obuffer2_17_serverAdapterB_s1$D_IN;
  wire obuffer2_17_serverAdapterB_s1$EN;

  // register obuffer2_18_serverAdapterA_cnt
  reg [2 : 0] obuffer2_18_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_18_serverAdapterA_cnt$D_IN;
  wire obuffer2_18_serverAdapterA_cnt$EN;

  // register obuffer2_18_serverAdapterA_s1
  reg [1 : 0] obuffer2_18_serverAdapterA_s1;
  wire [1 : 0] obuffer2_18_serverAdapterA_s1$D_IN;
  wire obuffer2_18_serverAdapterA_s1$EN;

  // register obuffer2_18_serverAdapterB_cnt
  reg [2 : 0] obuffer2_18_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_18_serverAdapterB_cnt$D_IN;
  wire obuffer2_18_serverAdapterB_cnt$EN;

  // register obuffer2_18_serverAdapterB_s1
  reg [1 : 0] obuffer2_18_serverAdapterB_s1;
  wire [1 : 0] obuffer2_18_serverAdapterB_s1$D_IN;
  wire obuffer2_18_serverAdapterB_s1$EN;

  // register obuffer2_19_serverAdapterA_cnt
  reg [2 : 0] obuffer2_19_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_19_serverAdapterA_cnt$D_IN;
  wire obuffer2_19_serverAdapterA_cnt$EN;

  // register obuffer2_19_serverAdapterA_s1
  reg [1 : 0] obuffer2_19_serverAdapterA_s1;
  wire [1 : 0] obuffer2_19_serverAdapterA_s1$D_IN;
  wire obuffer2_19_serverAdapterA_s1$EN;

  // register obuffer2_19_serverAdapterB_cnt
  reg [2 : 0] obuffer2_19_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_19_serverAdapterB_cnt$D_IN;
  wire obuffer2_19_serverAdapterB_cnt$EN;

  // register obuffer2_19_serverAdapterB_s1
  reg [1 : 0] obuffer2_19_serverAdapterB_s1;
  wire [1 : 0] obuffer2_19_serverAdapterB_s1$D_IN;
  wire obuffer2_19_serverAdapterB_s1$EN;

  // register obuffer2_1_serverAdapterA_cnt
  reg [2 : 0] obuffer2_1_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_1_serverAdapterA_cnt$D_IN;
  wire obuffer2_1_serverAdapterA_cnt$EN;

  // register obuffer2_1_serverAdapterA_s1
  reg [1 : 0] obuffer2_1_serverAdapterA_s1;
  wire [1 : 0] obuffer2_1_serverAdapterA_s1$D_IN;
  wire obuffer2_1_serverAdapterA_s1$EN;

  // register obuffer2_1_serverAdapterB_cnt
  reg [2 : 0] obuffer2_1_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_1_serverAdapterB_cnt$D_IN;
  wire obuffer2_1_serverAdapterB_cnt$EN;

  // register obuffer2_1_serverAdapterB_s1
  reg [1 : 0] obuffer2_1_serverAdapterB_s1;
  wire [1 : 0] obuffer2_1_serverAdapterB_s1$D_IN;
  wire obuffer2_1_serverAdapterB_s1$EN;

  // register obuffer2_20_serverAdapterA_cnt
  reg [2 : 0] obuffer2_20_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_20_serverAdapterA_cnt$D_IN;
  wire obuffer2_20_serverAdapterA_cnt$EN;

  // register obuffer2_20_serverAdapterA_s1
  reg [1 : 0] obuffer2_20_serverAdapterA_s1;
  wire [1 : 0] obuffer2_20_serverAdapterA_s1$D_IN;
  wire obuffer2_20_serverAdapterA_s1$EN;

  // register obuffer2_20_serverAdapterB_cnt
  reg [2 : 0] obuffer2_20_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_20_serverAdapterB_cnt$D_IN;
  wire obuffer2_20_serverAdapterB_cnt$EN;

  // register obuffer2_20_serverAdapterB_s1
  reg [1 : 0] obuffer2_20_serverAdapterB_s1;
  wire [1 : 0] obuffer2_20_serverAdapterB_s1$D_IN;
  wire obuffer2_20_serverAdapterB_s1$EN;

  // register obuffer2_21_serverAdapterA_cnt
  reg [2 : 0] obuffer2_21_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_21_serverAdapterA_cnt$D_IN;
  wire obuffer2_21_serverAdapterA_cnt$EN;

  // register obuffer2_21_serverAdapterA_s1
  reg [1 : 0] obuffer2_21_serverAdapterA_s1;
  wire [1 : 0] obuffer2_21_serverAdapterA_s1$D_IN;
  wire obuffer2_21_serverAdapterA_s1$EN;

  // register obuffer2_21_serverAdapterB_cnt
  reg [2 : 0] obuffer2_21_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_21_serverAdapterB_cnt$D_IN;
  wire obuffer2_21_serverAdapterB_cnt$EN;

  // register obuffer2_21_serverAdapterB_s1
  reg [1 : 0] obuffer2_21_serverAdapterB_s1;
  wire [1 : 0] obuffer2_21_serverAdapterB_s1$D_IN;
  wire obuffer2_21_serverAdapterB_s1$EN;

  // register obuffer2_22_serverAdapterA_cnt
  reg [2 : 0] obuffer2_22_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_22_serverAdapterA_cnt$D_IN;
  wire obuffer2_22_serverAdapterA_cnt$EN;

  // register obuffer2_22_serverAdapterA_s1
  reg [1 : 0] obuffer2_22_serverAdapterA_s1;
  wire [1 : 0] obuffer2_22_serverAdapterA_s1$D_IN;
  wire obuffer2_22_serverAdapterA_s1$EN;

  // register obuffer2_22_serverAdapterB_cnt
  reg [2 : 0] obuffer2_22_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_22_serverAdapterB_cnt$D_IN;
  wire obuffer2_22_serverAdapterB_cnt$EN;

  // register obuffer2_22_serverAdapterB_s1
  reg [1 : 0] obuffer2_22_serverAdapterB_s1;
  wire [1 : 0] obuffer2_22_serverAdapterB_s1$D_IN;
  wire obuffer2_22_serverAdapterB_s1$EN;

  // register obuffer2_23_serverAdapterA_cnt
  reg [2 : 0] obuffer2_23_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_23_serverAdapterA_cnt$D_IN;
  wire obuffer2_23_serverAdapterA_cnt$EN;

  // register obuffer2_23_serverAdapterA_s1
  reg [1 : 0] obuffer2_23_serverAdapterA_s1;
  wire [1 : 0] obuffer2_23_serverAdapterA_s1$D_IN;
  wire obuffer2_23_serverAdapterA_s1$EN;

  // register obuffer2_23_serverAdapterB_cnt
  reg [2 : 0] obuffer2_23_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_23_serverAdapterB_cnt$D_IN;
  wire obuffer2_23_serverAdapterB_cnt$EN;

  // register obuffer2_23_serverAdapterB_s1
  reg [1 : 0] obuffer2_23_serverAdapterB_s1;
  wire [1 : 0] obuffer2_23_serverAdapterB_s1$D_IN;
  wire obuffer2_23_serverAdapterB_s1$EN;

  // register obuffer2_24_serverAdapterA_cnt
  reg [2 : 0] obuffer2_24_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_24_serverAdapterA_cnt$D_IN;
  wire obuffer2_24_serverAdapterA_cnt$EN;

  // register obuffer2_24_serverAdapterA_s1
  reg [1 : 0] obuffer2_24_serverAdapterA_s1;
  wire [1 : 0] obuffer2_24_serverAdapterA_s1$D_IN;
  wire obuffer2_24_serverAdapterA_s1$EN;

  // register obuffer2_24_serverAdapterB_cnt
  reg [2 : 0] obuffer2_24_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_24_serverAdapterB_cnt$D_IN;
  wire obuffer2_24_serverAdapterB_cnt$EN;

  // register obuffer2_24_serverAdapterB_s1
  reg [1 : 0] obuffer2_24_serverAdapterB_s1;
  wire [1 : 0] obuffer2_24_serverAdapterB_s1$D_IN;
  wire obuffer2_24_serverAdapterB_s1$EN;

  // register obuffer2_25_serverAdapterA_cnt
  reg [2 : 0] obuffer2_25_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_25_serverAdapterA_cnt$D_IN;
  wire obuffer2_25_serverAdapterA_cnt$EN;

  // register obuffer2_25_serverAdapterA_s1
  reg [1 : 0] obuffer2_25_serverAdapterA_s1;
  wire [1 : 0] obuffer2_25_serverAdapterA_s1$D_IN;
  wire obuffer2_25_serverAdapterA_s1$EN;

  // register obuffer2_25_serverAdapterB_cnt
  reg [2 : 0] obuffer2_25_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_25_serverAdapterB_cnt$D_IN;
  wire obuffer2_25_serverAdapterB_cnt$EN;

  // register obuffer2_25_serverAdapterB_s1
  reg [1 : 0] obuffer2_25_serverAdapterB_s1;
  wire [1 : 0] obuffer2_25_serverAdapterB_s1$D_IN;
  wire obuffer2_25_serverAdapterB_s1$EN;

  // register obuffer2_26_serverAdapterA_cnt
  reg [2 : 0] obuffer2_26_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_26_serverAdapterA_cnt$D_IN;
  wire obuffer2_26_serverAdapterA_cnt$EN;

  // register obuffer2_26_serverAdapterA_s1
  reg [1 : 0] obuffer2_26_serverAdapterA_s1;
  wire [1 : 0] obuffer2_26_serverAdapterA_s1$D_IN;
  wire obuffer2_26_serverAdapterA_s1$EN;

  // register obuffer2_26_serverAdapterB_cnt
  reg [2 : 0] obuffer2_26_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_26_serverAdapterB_cnt$D_IN;
  wire obuffer2_26_serverAdapterB_cnt$EN;

  // register obuffer2_26_serverAdapterB_s1
  reg [1 : 0] obuffer2_26_serverAdapterB_s1;
  wire [1 : 0] obuffer2_26_serverAdapterB_s1$D_IN;
  wire obuffer2_26_serverAdapterB_s1$EN;

  // register obuffer2_27_serverAdapterA_cnt
  reg [2 : 0] obuffer2_27_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_27_serverAdapterA_cnt$D_IN;
  wire obuffer2_27_serverAdapterA_cnt$EN;

  // register obuffer2_27_serverAdapterA_s1
  reg [1 : 0] obuffer2_27_serverAdapterA_s1;
  wire [1 : 0] obuffer2_27_serverAdapterA_s1$D_IN;
  wire obuffer2_27_serverAdapterA_s1$EN;

  // register obuffer2_27_serverAdapterB_cnt
  reg [2 : 0] obuffer2_27_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_27_serverAdapterB_cnt$D_IN;
  wire obuffer2_27_serverAdapterB_cnt$EN;

  // register obuffer2_27_serverAdapterB_s1
  reg [1 : 0] obuffer2_27_serverAdapterB_s1;
  wire [1 : 0] obuffer2_27_serverAdapterB_s1$D_IN;
  wire obuffer2_27_serverAdapterB_s1$EN;

  // register obuffer2_28_serverAdapterA_cnt
  reg [2 : 0] obuffer2_28_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_28_serverAdapterA_cnt$D_IN;
  wire obuffer2_28_serverAdapterA_cnt$EN;

  // register obuffer2_28_serverAdapterA_s1
  reg [1 : 0] obuffer2_28_serverAdapterA_s1;
  wire [1 : 0] obuffer2_28_serverAdapterA_s1$D_IN;
  wire obuffer2_28_serverAdapterA_s1$EN;

  // register obuffer2_28_serverAdapterB_cnt
  reg [2 : 0] obuffer2_28_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_28_serverAdapterB_cnt$D_IN;
  wire obuffer2_28_serverAdapterB_cnt$EN;

  // register obuffer2_28_serverAdapterB_s1
  reg [1 : 0] obuffer2_28_serverAdapterB_s1;
  wire [1 : 0] obuffer2_28_serverAdapterB_s1$D_IN;
  wire obuffer2_28_serverAdapterB_s1$EN;

  // register obuffer2_29_serverAdapterA_cnt
  reg [2 : 0] obuffer2_29_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_29_serverAdapterA_cnt$D_IN;
  wire obuffer2_29_serverAdapterA_cnt$EN;

  // register obuffer2_29_serverAdapterA_s1
  reg [1 : 0] obuffer2_29_serverAdapterA_s1;
  wire [1 : 0] obuffer2_29_serverAdapterA_s1$D_IN;
  wire obuffer2_29_serverAdapterA_s1$EN;

  // register obuffer2_29_serverAdapterB_cnt
  reg [2 : 0] obuffer2_29_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_29_serverAdapterB_cnt$D_IN;
  wire obuffer2_29_serverAdapterB_cnt$EN;

  // register obuffer2_29_serverAdapterB_s1
  reg [1 : 0] obuffer2_29_serverAdapterB_s1;
  wire [1 : 0] obuffer2_29_serverAdapterB_s1$D_IN;
  wire obuffer2_29_serverAdapterB_s1$EN;

  // register obuffer2_2_serverAdapterA_cnt
  reg [2 : 0] obuffer2_2_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_2_serverAdapterA_cnt$D_IN;
  wire obuffer2_2_serverAdapterA_cnt$EN;

  // register obuffer2_2_serverAdapterA_s1
  reg [1 : 0] obuffer2_2_serverAdapterA_s1;
  wire [1 : 0] obuffer2_2_serverAdapterA_s1$D_IN;
  wire obuffer2_2_serverAdapterA_s1$EN;

  // register obuffer2_2_serverAdapterB_cnt
  reg [2 : 0] obuffer2_2_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_2_serverAdapterB_cnt$D_IN;
  wire obuffer2_2_serverAdapterB_cnt$EN;

  // register obuffer2_2_serverAdapterB_s1
  reg [1 : 0] obuffer2_2_serverAdapterB_s1;
  wire [1 : 0] obuffer2_2_serverAdapterB_s1$D_IN;
  wire obuffer2_2_serverAdapterB_s1$EN;

  // register obuffer2_30_serverAdapterA_cnt
  reg [2 : 0] obuffer2_30_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_30_serverAdapterA_cnt$D_IN;
  wire obuffer2_30_serverAdapterA_cnt$EN;

  // register obuffer2_30_serverAdapterA_s1
  reg [1 : 0] obuffer2_30_serverAdapterA_s1;
  wire [1 : 0] obuffer2_30_serverAdapterA_s1$D_IN;
  wire obuffer2_30_serverAdapterA_s1$EN;

  // register obuffer2_30_serverAdapterB_cnt
  reg [2 : 0] obuffer2_30_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_30_serverAdapterB_cnt$D_IN;
  wire obuffer2_30_serverAdapterB_cnt$EN;

  // register obuffer2_30_serverAdapterB_s1
  reg [1 : 0] obuffer2_30_serverAdapterB_s1;
  wire [1 : 0] obuffer2_30_serverAdapterB_s1$D_IN;
  wire obuffer2_30_serverAdapterB_s1$EN;

  // register obuffer2_31_serverAdapterA_cnt
  reg [2 : 0] obuffer2_31_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_31_serverAdapterA_cnt$D_IN;
  wire obuffer2_31_serverAdapterA_cnt$EN;

  // register obuffer2_31_serverAdapterA_s1
  reg [1 : 0] obuffer2_31_serverAdapterA_s1;
  wire [1 : 0] obuffer2_31_serverAdapterA_s1$D_IN;
  wire obuffer2_31_serverAdapterA_s1$EN;

  // register obuffer2_31_serverAdapterB_cnt
  reg [2 : 0] obuffer2_31_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_31_serverAdapterB_cnt$D_IN;
  wire obuffer2_31_serverAdapterB_cnt$EN;

  // register obuffer2_31_serverAdapterB_s1
  reg [1 : 0] obuffer2_31_serverAdapterB_s1;
  wire [1 : 0] obuffer2_31_serverAdapterB_s1$D_IN;
  wire obuffer2_31_serverAdapterB_s1$EN;

  // register obuffer2_3_serverAdapterA_cnt
  reg [2 : 0] obuffer2_3_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_3_serverAdapterA_cnt$D_IN;
  wire obuffer2_3_serverAdapterA_cnt$EN;

  // register obuffer2_3_serverAdapterA_s1
  reg [1 : 0] obuffer2_3_serverAdapterA_s1;
  wire [1 : 0] obuffer2_3_serverAdapterA_s1$D_IN;
  wire obuffer2_3_serverAdapterA_s1$EN;

  // register obuffer2_3_serverAdapterB_cnt
  reg [2 : 0] obuffer2_3_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_3_serverAdapterB_cnt$D_IN;
  wire obuffer2_3_serverAdapterB_cnt$EN;

  // register obuffer2_3_serverAdapterB_s1
  reg [1 : 0] obuffer2_3_serverAdapterB_s1;
  wire [1 : 0] obuffer2_3_serverAdapterB_s1$D_IN;
  wire obuffer2_3_serverAdapterB_s1$EN;

  // register obuffer2_4_serverAdapterA_cnt
  reg [2 : 0] obuffer2_4_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_4_serverAdapterA_cnt$D_IN;
  wire obuffer2_4_serverAdapterA_cnt$EN;

  // register obuffer2_4_serverAdapterA_s1
  reg [1 : 0] obuffer2_4_serverAdapterA_s1;
  wire [1 : 0] obuffer2_4_serverAdapterA_s1$D_IN;
  wire obuffer2_4_serverAdapterA_s1$EN;

  // register obuffer2_4_serverAdapterB_cnt
  reg [2 : 0] obuffer2_4_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_4_serverAdapterB_cnt$D_IN;
  wire obuffer2_4_serverAdapterB_cnt$EN;

  // register obuffer2_4_serverAdapterB_s1
  reg [1 : 0] obuffer2_4_serverAdapterB_s1;
  wire [1 : 0] obuffer2_4_serverAdapterB_s1$D_IN;
  wire obuffer2_4_serverAdapterB_s1$EN;

  // register obuffer2_5_serverAdapterA_cnt
  reg [2 : 0] obuffer2_5_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_5_serverAdapterA_cnt$D_IN;
  wire obuffer2_5_serverAdapterA_cnt$EN;

  // register obuffer2_5_serverAdapterA_s1
  reg [1 : 0] obuffer2_5_serverAdapterA_s1;
  wire [1 : 0] obuffer2_5_serverAdapterA_s1$D_IN;
  wire obuffer2_5_serverAdapterA_s1$EN;

  // register obuffer2_5_serverAdapterB_cnt
  reg [2 : 0] obuffer2_5_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_5_serverAdapterB_cnt$D_IN;
  wire obuffer2_5_serverAdapterB_cnt$EN;

  // register obuffer2_5_serverAdapterB_s1
  reg [1 : 0] obuffer2_5_serverAdapterB_s1;
  wire [1 : 0] obuffer2_5_serverAdapterB_s1$D_IN;
  wire obuffer2_5_serverAdapterB_s1$EN;

  // register obuffer2_6_serverAdapterA_cnt
  reg [2 : 0] obuffer2_6_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_6_serverAdapterA_cnt$D_IN;
  wire obuffer2_6_serverAdapterA_cnt$EN;

  // register obuffer2_6_serverAdapterA_s1
  reg [1 : 0] obuffer2_6_serverAdapterA_s1;
  wire [1 : 0] obuffer2_6_serverAdapterA_s1$D_IN;
  wire obuffer2_6_serverAdapterA_s1$EN;

  // register obuffer2_6_serverAdapterB_cnt
  reg [2 : 0] obuffer2_6_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_6_serverAdapterB_cnt$D_IN;
  wire obuffer2_6_serverAdapterB_cnt$EN;

  // register obuffer2_6_serverAdapterB_s1
  reg [1 : 0] obuffer2_6_serverAdapterB_s1;
  wire [1 : 0] obuffer2_6_serverAdapterB_s1$D_IN;
  wire obuffer2_6_serverAdapterB_s1$EN;

  // register obuffer2_7_serverAdapterA_cnt
  reg [2 : 0] obuffer2_7_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_7_serverAdapterA_cnt$D_IN;
  wire obuffer2_7_serverAdapterA_cnt$EN;

  // register obuffer2_7_serverAdapterA_s1
  reg [1 : 0] obuffer2_7_serverAdapterA_s1;
  wire [1 : 0] obuffer2_7_serverAdapterA_s1$D_IN;
  wire obuffer2_7_serverAdapterA_s1$EN;

  // register obuffer2_7_serverAdapterB_cnt
  reg [2 : 0] obuffer2_7_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_7_serverAdapterB_cnt$D_IN;
  wire obuffer2_7_serverAdapterB_cnt$EN;

  // register obuffer2_7_serverAdapterB_s1
  reg [1 : 0] obuffer2_7_serverAdapterB_s1;
  wire [1 : 0] obuffer2_7_serverAdapterB_s1$D_IN;
  wire obuffer2_7_serverAdapterB_s1$EN;

  // register obuffer2_8_serverAdapterA_cnt
  reg [2 : 0] obuffer2_8_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_8_serverAdapterA_cnt$D_IN;
  wire obuffer2_8_serverAdapterA_cnt$EN;

  // register obuffer2_8_serverAdapterA_s1
  reg [1 : 0] obuffer2_8_serverAdapterA_s1;
  wire [1 : 0] obuffer2_8_serverAdapterA_s1$D_IN;
  wire obuffer2_8_serverAdapterA_s1$EN;

  // register obuffer2_8_serverAdapterB_cnt
  reg [2 : 0] obuffer2_8_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_8_serverAdapterB_cnt$D_IN;
  wire obuffer2_8_serverAdapterB_cnt$EN;

  // register obuffer2_8_serverAdapterB_s1
  reg [1 : 0] obuffer2_8_serverAdapterB_s1;
  wire [1 : 0] obuffer2_8_serverAdapterB_s1$D_IN;
  wire obuffer2_8_serverAdapterB_s1$EN;

  // register obuffer2_9_serverAdapterA_cnt
  reg [2 : 0] obuffer2_9_serverAdapterA_cnt;
  wire [2 : 0] obuffer2_9_serverAdapterA_cnt$D_IN;
  wire obuffer2_9_serverAdapterA_cnt$EN;

  // register obuffer2_9_serverAdapterA_s1
  reg [1 : 0] obuffer2_9_serverAdapterA_s1;
  wire [1 : 0] obuffer2_9_serverAdapterA_s1$D_IN;
  wire obuffer2_9_serverAdapterA_s1$EN;

  // register obuffer2_9_serverAdapterB_cnt
  reg [2 : 0] obuffer2_9_serverAdapterB_cnt;
  wire [2 : 0] obuffer2_9_serverAdapterB_cnt$D_IN;
  wire obuffer2_9_serverAdapterB_cnt$EN;

  // register obuffer2_9_serverAdapterB_s1
  reg [1 : 0] obuffer2_9_serverAdapterB_s1;
  wire [1 : 0] obuffer2_9_serverAdapterB_s1$D_IN;
  wire obuffer2_9_serverAdapterB_s1$EN;

  // register wbuffer_0_serverAdapterA_cnt
  reg [2 : 0] wbuffer_0_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_0_serverAdapterA_cnt$D_IN;
  wire wbuffer_0_serverAdapterA_cnt$EN;

  // register wbuffer_0_serverAdapterA_s1
  reg [1 : 0] wbuffer_0_serverAdapterA_s1;
  wire [1 : 0] wbuffer_0_serverAdapterA_s1$D_IN;
  wire wbuffer_0_serverAdapterA_s1$EN;

  // register wbuffer_0_serverAdapterB_cnt
  reg [2 : 0] wbuffer_0_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_0_serverAdapterB_cnt$D_IN;
  wire wbuffer_0_serverAdapterB_cnt$EN;

  // register wbuffer_0_serverAdapterB_s1
  reg [1 : 0] wbuffer_0_serverAdapterB_s1;
  wire [1 : 0] wbuffer_0_serverAdapterB_s1$D_IN;
  wire wbuffer_0_serverAdapterB_s1$EN;

  // register wbuffer_10_serverAdapterA_cnt
  reg [2 : 0] wbuffer_10_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_10_serverAdapterA_cnt$D_IN;
  wire wbuffer_10_serverAdapterA_cnt$EN;

  // register wbuffer_10_serverAdapterA_s1
  reg [1 : 0] wbuffer_10_serverAdapterA_s1;
  wire [1 : 0] wbuffer_10_serverAdapterA_s1$D_IN;
  wire wbuffer_10_serverAdapterA_s1$EN;

  // register wbuffer_10_serverAdapterB_cnt
  reg [2 : 0] wbuffer_10_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_10_serverAdapterB_cnt$D_IN;
  wire wbuffer_10_serverAdapterB_cnt$EN;

  // register wbuffer_10_serverAdapterB_s1
  reg [1 : 0] wbuffer_10_serverAdapterB_s1;
  wire [1 : 0] wbuffer_10_serverAdapterB_s1$D_IN;
  wire wbuffer_10_serverAdapterB_s1$EN;

  // register wbuffer_11_serverAdapterA_cnt
  reg [2 : 0] wbuffer_11_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_11_serverAdapterA_cnt$D_IN;
  wire wbuffer_11_serverAdapterA_cnt$EN;

  // register wbuffer_11_serverAdapterA_s1
  reg [1 : 0] wbuffer_11_serverAdapterA_s1;
  wire [1 : 0] wbuffer_11_serverAdapterA_s1$D_IN;
  wire wbuffer_11_serverAdapterA_s1$EN;

  // register wbuffer_11_serverAdapterB_cnt
  reg [2 : 0] wbuffer_11_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_11_serverAdapterB_cnt$D_IN;
  wire wbuffer_11_serverAdapterB_cnt$EN;

  // register wbuffer_11_serverAdapterB_s1
  reg [1 : 0] wbuffer_11_serverAdapterB_s1;
  wire [1 : 0] wbuffer_11_serverAdapterB_s1$D_IN;
  wire wbuffer_11_serverAdapterB_s1$EN;

  // register wbuffer_12_serverAdapterA_cnt
  reg [2 : 0] wbuffer_12_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_12_serverAdapterA_cnt$D_IN;
  wire wbuffer_12_serverAdapterA_cnt$EN;

  // register wbuffer_12_serverAdapterA_s1
  reg [1 : 0] wbuffer_12_serverAdapterA_s1;
  wire [1 : 0] wbuffer_12_serverAdapterA_s1$D_IN;
  wire wbuffer_12_serverAdapterA_s1$EN;

  // register wbuffer_12_serverAdapterB_cnt
  reg [2 : 0] wbuffer_12_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_12_serverAdapterB_cnt$D_IN;
  wire wbuffer_12_serverAdapterB_cnt$EN;

  // register wbuffer_12_serverAdapterB_s1
  reg [1 : 0] wbuffer_12_serverAdapterB_s1;
  wire [1 : 0] wbuffer_12_serverAdapterB_s1$D_IN;
  wire wbuffer_12_serverAdapterB_s1$EN;

  // register wbuffer_13_serverAdapterA_cnt
  reg [2 : 0] wbuffer_13_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_13_serverAdapterA_cnt$D_IN;
  wire wbuffer_13_serverAdapterA_cnt$EN;

  // register wbuffer_13_serverAdapterA_s1
  reg [1 : 0] wbuffer_13_serverAdapterA_s1;
  wire [1 : 0] wbuffer_13_serverAdapterA_s1$D_IN;
  wire wbuffer_13_serverAdapterA_s1$EN;

  // register wbuffer_13_serverAdapterB_cnt
  reg [2 : 0] wbuffer_13_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_13_serverAdapterB_cnt$D_IN;
  wire wbuffer_13_serverAdapterB_cnt$EN;

  // register wbuffer_13_serverAdapterB_s1
  reg [1 : 0] wbuffer_13_serverAdapterB_s1;
  wire [1 : 0] wbuffer_13_serverAdapterB_s1$D_IN;
  wire wbuffer_13_serverAdapterB_s1$EN;

  // register wbuffer_14_serverAdapterA_cnt
  reg [2 : 0] wbuffer_14_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_14_serverAdapterA_cnt$D_IN;
  wire wbuffer_14_serverAdapterA_cnt$EN;

  // register wbuffer_14_serverAdapterA_s1
  reg [1 : 0] wbuffer_14_serverAdapterA_s1;
  wire [1 : 0] wbuffer_14_serverAdapterA_s1$D_IN;
  wire wbuffer_14_serverAdapterA_s1$EN;

  // register wbuffer_14_serverAdapterB_cnt
  reg [2 : 0] wbuffer_14_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_14_serverAdapterB_cnt$D_IN;
  wire wbuffer_14_serverAdapterB_cnt$EN;

  // register wbuffer_14_serverAdapterB_s1
  reg [1 : 0] wbuffer_14_serverAdapterB_s1;
  wire [1 : 0] wbuffer_14_serverAdapterB_s1$D_IN;
  wire wbuffer_14_serverAdapterB_s1$EN;

  // register wbuffer_15_serverAdapterA_cnt
  reg [2 : 0] wbuffer_15_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_15_serverAdapterA_cnt$D_IN;
  wire wbuffer_15_serverAdapterA_cnt$EN;

  // register wbuffer_15_serverAdapterA_s1
  reg [1 : 0] wbuffer_15_serverAdapterA_s1;
  wire [1 : 0] wbuffer_15_serverAdapterA_s1$D_IN;
  wire wbuffer_15_serverAdapterA_s1$EN;

  // register wbuffer_15_serverAdapterB_cnt
  reg [2 : 0] wbuffer_15_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_15_serverAdapterB_cnt$D_IN;
  wire wbuffer_15_serverAdapterB_cnt$EN;

  // register wbuffer_15_serverAdapterB_s1
  reg [1 : 0] wbuffer_15_serverAdapterB_s1;
  wire [1 : 0] wbuffer_15_serverAdapterB_s1$D_IN;
  wire wbuffer_15_serverAdapterB_s1$EN;

  // register wbuffer_16_serverAdapterA_cnt
  reg [2 : 0] wbuffer_16_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_16_serverAdapterA_cnt$D_IN;
  wire wbuffer_16_serverAdapterA_cnt$EN;

  // register wbuffer_16_serverAdapterA_s1
  reg [1 : 0] wbuffer_16_serverAdapterA_s1;
  wire [1 : 0] wbuffer_16_serverAdapterA_s1$D_IN;
  wire wbuffer_16_serverAdapterA_s1$EN;

  // register wbuffer_16_serverAdapterB_cnt
  reg [2 : 0] wbuffer_16_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_16_serverAdapterB_cnt$D_IN;
  wire wbuffer_16_serverAdapterB_cnt$EN;

  // register wbuffer_16_serverAdapterB_s1
  reg [1 : 0] wbuffer_16_serverAdapterB_s1;
  wire [1 : 0] wbuffer_16_serverAdapterB_s1$D_IN;
  wire wbuffer_16_serverAdapterB_s1$EN;

  // register wbuffer_17_serverAdapterA_cnt
  reg [2 : 0] wbuffer_17_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_17_serverAdapterA_cnt$D_IN;
  wire wbuffer_17_serverAdapterA_cnt$EN;

  // register wbuffer_17_serverAdapterA_s1
  reg [1 : 0] wbuffer_17_serverAdapterA_s1;
  wire [1 : 0] wbuffer_17_serverAdapterA_s1$D_IN;
  wire wbuffer_17_serverAdapterA_s1$EN;

  // register wbuffer_17_serverAdapterB_cnt
  reg [2 : 0] wbuffer_17_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_17_serverAdapterB_cnt$D_IN;
  wire wbuffer_17_serverAdapterB_cnt$EN;

  // register wbuffer_17_serverAdapterB_s1
  reg [1 : 0] wbuffer_17_serverAdapterB_s1;
  wire [1 : 0] wbuffer_17_serverAdapterB_s1$D_IN;
  wire wbuffer_17_serverAdapterB_s1$EN;

  // register wbuffer_18_serverAdapterA_cnt
  reg [2 : 0] wbuffer_18_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_18_serverAdapterA_cnt$D_IN;
  wire wbuffer_18_serverAdapterA_cnt$EN;

  // register wbuffer_18_serverAdapterA_s1
  reg [1 : 0] wbuffer_18_serverAdapterA_s1;
  wire [1 : 0] wbuffer_18_serverAdapterA_s1$D_IN;
  wire wbuffer_18_serverAdapterA_s1$EN;

  // register wbuffer_18_serverAdapterB_cnt
  reg [2 : 0] wbuffer_18_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_18_serverAdapterB_cnt$D_IN;
  wire wbuffer_18_serverAdapterB_cnt$EN;

  // register wbuffer_18_serverAdapterB_s1
  reg [1 : 0] wbuffer_18_serverAdapterB_s1;
  wire [1 : 0] wbuffer_18_serverAdapterB_s1$D_IN;
  wire wbuffer_18_serverAdapterB_s1$EN;

  // register wbuffer_19_serverAdapterA_cnt
  reg [2 : 0] wbuffer_19_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_19_serverAdapterA_cnt$D_IN;
  wire wbuffer_19_serverAdapterA_cnt$EN;

  // register wbuffer_19_serverAdapterA_s1
  reg [1 : 0] wbuffer_19_serverAdapterA_s1;
  wire [1 : 0] wbuffer_19_serverAdapterA_s1$D_IN;
  wire wbuffer_19_serverAdapterA_s1$EN;

  // register wbuffer_19_serverAdapterB_cnt
  reg [2 : 0] wbuffer_19_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_19_serverAdapterB_cnt$D_IN;
  wire wbuffer_19_serverAdapterB_cnt$EN;

  // register wbuffer_19_serverAdapterB_s1
  reg [1 : 0] wbuffer_19_serverAdapterB_s1;
  wire [1 : 0] wbuffer_19_serverAdapterB_s1$D_IN;
  wire wbuffer_19_serverAdapterB_s1$EN;

  // register wbuffer_1_serverAdapterA_cnt
  reg [2 : 0] wbuffer_1_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_1_serverAdapterA_cnt$D_IN;
  wire wbuffer_1_serverAdapterA_cnt$EN;

  // register wbuffer_1_serverAdapterA_s1
  reg [1 : 0] wbuffer_1_serverAdapterA_s1;
  wire [1 : 0] wbuffer_1_serverAdapterA_s1$D_IN;
  wire wbuffer_1_serverAdapterA_s1$EN;

  // register wbuffer_1_serverAdapterB_cnt
  reg [2 : 0] wbuffer_1_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_1_serverAdapterB_cnt$D_IN;
  wire wbuffer_1_serverAdapterB_cnt$EN;

  // register wbuffer_1_serverAdapterB_s1
  reg [1 : 0] wbuffer_1_serverAdapterB_s1;
  wire [1 : 0] wbuffer_1_serverAdapterB_s1$D_IN;
  wire wbuffer_1_serverAdapterB_s1$EN;

  // register wbuffer_20_serverAdapterA_cnt
  reg [2 : 0] wbuffer_20_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_20_serverAdapterA_cnt$D_IN;
  wire wbuffer_20_serverAdapterA_cnt$EN;

  // register wbuffer_20_serverAdapterA_s1
  reg [1 : 0] wbuffer_20_serverAdapterA_s1;
  wire [1 : 0] wbuffer_20_serverAdapterA_s1$D_IN;
  wire wbuffer_20_serverAdapterA_s1$EN;

  // register wbuffer_20_serverAdapterB_cnt
  reg [2 : 0] wbuffer_20_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_20_serverAdapterB_cnt$D_IN;
  wire wbuffer_20_serverAdapterB_cnt$EN;

  // register wbuffer_20_serverAdapterB_s1
  reg [1 : 0] wbuffer_20_serverAdapterB_s1;
  wire [1 : 0] wbuffer_20_serverAdapterB_s1$D_IN;
  wire wbuffer_20_serverAdapterB_s1$EN;

  // register wbuffer_21_serverAdapterA_cnt
  reg [2 : 0] wbuffer_21_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_21_serverAdapterA_cnt$D_IN;
  wire wbuffer_21_serverAdapterA_cnt$EN;

  // register wbuffer_21_serverAdapterA_s1
  reg [1 : 0] wbuffer_21_serverAdapterA_s1;
  wire [1 : 0] wbuffer_21_serverAdapterA_s1$D_IN;
  wire wbuffer_21_serverAdapterA_s1$EN;

  // register wbuffer_21_serverAdapterB_cnt
  reg [2 : 0] wbuffer_21_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_21_serverAdapterB_cnt$D_IN;
  wire wbuffer_21_serverAdapterB_cnt$EN;

  // register wbuffer_21_serverAdapterB_s1
  reg [1 : 0] wbuffer_21_serverAdapterB_s1;
  wire [1 : 0] wbuffer_21_serverAdapterB_s1$D_IN;
  wire wbuffer_21_serverAdapterB_s1$EN;

  // register wbuffer_22_serverAdapterA_cnt
  reg [2 : 0] wbuffer_22_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_22_serverAdapterA_cnt$D_IN;
  wire wbuffer_22_serverAdapterA_cnt$EN;

  // register wbuffer_22_serverAdapterA_s1
  reg [1 : 0] wbuffer_22_serverAdapterA_s1;
  wire [1 : 0] wbuffer_22_serverAdapterA_s1$D_IN;
  wire wbuffer_22_serverAdapterA_s1$EN;

  // register wbuffer_22_serverAdapterB_cnt
  reg [2 : 0] wbuffer_22_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_22_serverAdapterB_cnt$D_IN;
  wire wbuffer_22_serverAdapterB_cnt$EN;

  // register wbuffer_22_serverAdapterB_s1
  reg [1 : 0] wbuffer_22_serverAdapterB_s1;
  wire [1 : 0] wbuffer_22_serverAdapterB_s1$D_IN;
  wire wbuffer_22_serverAdapterB_s1$EN;

  // register wbuffer_23_serverAdapterA_cnt
  reg [2 : 0] wbuffer_23_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_23_serverAdapterA_cnt$D_IN;
  wire wbuffer_23_serverAdapterA_cnt$EN;

  // register wbuffer_23_serverAdapterA_s1
  reg [1 : 0] wbuffer_23_serverAdapterA_s1;
  wire [1 : 0] wbuffer_23_serverAdapterA_s1$D_IN;
  wire wbuffer_23_serverAdapterA_s1$EN;

  // register wbuffer_23_serverAdapterB_cnt
  reg [2 : 0] wbuffer_23_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_23_serverAdapterB_cnt$D_IN;
  wire wbuffer_23_serverAdapterB_cnt$EN;

  // register wbuffer_23_serverAdapterB_s1
  reg [1 : 0] wbuffer_23_serverAdapterB_s1;
  wire [1 : 0] wbuffer_23_serverAdapterB_s1$D_IN;
  wire wbuffer_23_serverAdapterB_s1$EN;

  // register wbuffer_24_serverAdapterA_cnt
  reg [2 : 0] wbuffer_24_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_24_serverAdapterA_cnt$D_IN;
  wire wbuffer_24_serverAdapterA_cnt$EN;

  // register wbuffer_24_serverAdapterA_s1
  reg [1 : 0] wbuffer_24_serverAdapterA_s1;
  wire [1 : 0] wbuffer_24_serverAdapterA_s1$D_IN;
  wire wbuffer_24_serverAdapterA_s1$EN;

  // register wbuffer_24_serverAdapterB_cnt
  reg [2 : 0] wbuffer_24_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_24_serverAdapterB_cnt$D_IN;
  wire wbuffer_24_serverAdapterB_cnt$EN;

  // register wbuffer_24_serverAdapterB_s1
  reg [1 : 0] wbuffer_24_serverAdapterB_s1;
  wire [1 : 0] wbuffer_24_serverAdapterB_s1$D_IN;
  wire wbuffer_24_serverAdapterB_s1$EN;

  // register wbuffer_25_serverAdapterA_cnt
  reg [2 : 0] wbuffer_25_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_25_serverAdapterA_cnt$D_IN;
  wire wbuffer_25_serverAdapterA_cnt$EN;

  // register wbuffer_25_serverAdapterA_s1
  reg [1 : 0] wbuffer_25_serverAdapterA_s1;
  wire [1 : 0] wbuffer_25_serverAdapterA_s1$D_IN;
  wire wbuffer_25_serverAdapterA_s1$EN;

  // register wbuffer_25_serverAdapterB_cnt
  reg [2 : 0] wbuffer_25_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_25_serverAdapterB_cnt$D_IN;
  wire wbuffer_25_serverAdapterB_cnt$EN;

  // register wbuffer_25_serverAdapterB_s1
  reg [1 : 0] wbuffer_25_serverAdapterB_s1;
  wire [1 : 0] wbuffer_25_serverAdapterB_s1$D_IN;
  wire wbuffer_25_serverAdapterB_s1$EN;

  // register wbuffer_26_serverAdapterA_cnt
  reg [2 : 0] wbuffer_26_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_26_serverAdapterA_cnt$D_IN;
  wire wbuffer_26_serverAdapterA_cnt$EN;

  // register wbuffer_26_serverAdapterA_s1
  reg [1 : 0] wbuffer_26_serverAdapterA_s1;
  wire [1 : 0] wbuffer_26_serverAdapterA_s1$D_IN;
  wire wbuffer_26_serverAdapterA_s1$EN;

  // register wbuffer_26_serverAdapterB_cnt
  reg [2 : 0] wbuffer_26_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_26_serverAdapterB_cnt$D_IN;
  wire wbuffer_26_serverAdapterB_cnt$EN;

  // register wbuffer_26_serverAdapterB_s1
  reg [1 : 0] wbuffer_26_serverAdapterB_s1;
  wire [1 : 0] wbuffer_26_serverAdapterB_s1$D_IN;
  wire wbuffer_26_serverAdapterB_s1$EN;

  // register wbuffer_27_serverAdapterA_cnt
  reg [2 : 0] wbuffer_27_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_27_serverAdapterA_cnt$D_IN;
  wire wbuffer_27_serverAdapterA_cnt$EN;

  // register wbuffer_27_serverAdapterA_s1
  reg [1 : 0] wbuffer_27_serverAdapterA_s1;
  wire [1 : 0] wbuffer_27_serverAdapterA_s1$D_IN;
  wire wbuffer_27_serverAdapterA_s1$EN;

  // register wbuffer_27_serverAdapterB_cnt
  reg [2 : 0] wbuffer_27_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_27_serverAdapterB_cnt$D_IN;
  wire wbuffer_27_serverAdapterB_cnt$EN;

  // register wbuffer_27_serverAdapterB_s1
  reg [1 : 0] wbuffer_27_serverAdapterB_s1;
  wire [1 : 0] wbuffer_27_serverAdapterB_s1$D_IN;
  wire wbuffer_27_serverAdapterB_s1$EN;

  // register wbuffer_28_serverAdapterA_cnt
  reg [2 : 0] wbuffer_28_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_28_serverAdapterA_cnt$D_IN;
  wire wbuffer_28_serverAdapterA_cnt$EN;

  // register wbuffer_28_serverAdapterA_s1
  reg [1 : 0] wbuffer_28_serverAdapterA_s1;
  wire [1 : 0] wbuffer_28_serverAdapterA_s1$D_IN;
  wire wbuffer_28_serverAdapterA_s1$EN;

  // register wbuffer_28_serverAdapterB_cnt
  reg [2 : 0] wbuffer_28_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_28_serverAdapterB_cnt$D_IN;
  wire wbuffer_28_serverAdapterB_cnt$EN;

  // register wbuffer_28_serverAdapterB_s1
  reg [1 : 0] wbuffer_28_serverAdapterB_s1;
  wire [1 : 0] wbuffer_28_serverAdapterB_s1$D_IN;
  wire wbuffer_28_serverAdapterB_s1$EN;

  // register wbuffer_29_serverAdapterA_cnt
  reg [2 : 0] wbuffer_29_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_29_serverAdapterA_cnt$D_IN;
  wire wbuffer_29_serverAdapterA_cnt$EN;

  // register wbuffer_29_serverAdapterA_s1
  reg [1 : 0] wbuffer_29_serverAdapterA_s1;
  wire [1 : 0] wbuffer_29_serverAdapterA_s1$D_IN;
  wire wbuffer_29_serverAdapterA_s1$EN;

  // register wbuffer_29_serverAdapterB_cnt
  reg [2 : 0] wbuffer_29_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_29_serverAdapterB_cnt$D_IN;
  wire wbuffer_29_serverAdapterB_cnt$EN;

  // register wbuffer_29_serverAdapterB_s1
  reg [1 : 0] wbuffer_29_serverAdapterB_s1;
  wire [1 : 0] wbuffer_29_serverAdapterB_s1$D_IN;
  wire wbuffer_29_serverAdapterB_s1$EN;

  // register wbuffer_2_serverAdapterA_cnt
  reg [2 : 0] wbuffer_2_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_2_serverAdapterA_cnt$D_IN;
  wire wbuffer_2_serverAdapterA_cnt$EN;

  // register wbuffer_2_serverAdapterA_s1
  reg [1 : 0] wbuffer_2_serverAdapterA_s1;
  wire [1 : 0] wbuffer_2_serverAdapterA_s1$D_IN;
  wire wbuffer_2_serverAdapterA_s1$EN;

  // register wbuffer_2_serverAdapterB_cnt
  reg [2 : 0] wbuffer_2_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_2_serverAdapterB_cnt$D_IN;
  wire wbuffer_2_serverAdapterB_cnt$EN;

  // register wbuffer_2_serverAdapterB_s1
  reg [1 : 0] wbuffer_2_serverAdapterB_s1;
  wire [1 : 0] wbuffer_2_serverAdapterB_s1$D_IN;
  wire wbuffer_2_serverAdapterB_s1$EN;

  // register wbuffer_30_serverAdapterA_cnt
  reg [2 : 0] wbuffer_30_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_30_serverAdapterA_cnt$D_IN;
  wire wbuffer_30_serverAdapterA_cnt$EN;

  // register wbuffer_30_serverAdapterA_s1
  reg [1 : 0] wbuffer_30_serverAdapterA_s1;
  wire [1 : 0] wbuffer_30_serverAdapterA_s1$D_IN;
  wire wbuffer_30_serverAdapterA_s1$EN;

  // register wbuffer_30_serverAdapterB_cnt
  reg [2 : 0] wbuffer_30_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_30_serverAdapterB_cnt$D_IN;
  wire wbuffer_30_serverAdapterB_cnt$EN;

  // register wbuffer_30_serverAdapterB_s1
  reg [1 : 0] wbuffer_30_serverAdapterB_s1;
  wire [1 : 0] wbuffer_30_serverAdapterB_s1$D_IN;
  wire wbuffer_30_serverAdapterB_s1$EN;

  // register wbuffer_31_serverAdapterA_cnt
  reg [2 : 0] wbuffer_31_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_31_serverAdapterA_cnt$D_IN;
  wire wbuffer_31_serverAdapterA_cnt$EN;

  // register wbuffer_31_serverAdapterA_s1
  reg [1 : 0] wbuffer_31_serverAdapterA_s1;
  wire [1 : 0] wbuffer_31_serverAdapterA_s1$D_IN;
  wire wbuffer_31_serverAdapterA_s1$EN;

  // register wbuffer_31_serverAdapterB_cnt
  reg [2 : 0] wbuffer_31_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_31_serverAdapterB_cnt$D_IN;
  wire wbuffer_31_serverAdapterB_cnt$EN;

  // register wbuffer_31_serverAdapterB_s1
  reg [1 : 0] wbuffer_31_serverAdapterB_s1;
  wire [1 : 0] wbuffer_31_serverAdapterB_s1$D_IN;
  wire wbuffer_31_serverAdapterB_s1$EN;

  // register wbuffer_3_serverAdapterA_cnt
  reg [2 : 0] wbuffer_3_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_3_serverAdapterA_cnt$D_IN;
  wire wbuffer_3_serverAdapterA_cnt$EN;

  // register wbuffer_3_serverAdapterA_s1
  reg [1 : 0] wbuffer_3_serverAdapterA_s1;
  wire [1 : 0] wbuffer_3_serverAdapterA_s1$D_IN;
  wire wbuffer_3_serverAdapterA_s1$EN;

  // register wbuffer_3_serverAdapterB_cnt
  reg [2 : 0] wbuffer_3_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_3_serverAdapterB_cnt$D_IN;
  wire wbuffer_3_serverAdapterB_cnt$EN;

  // register wbuffer_3_serverAdapterB_s1
  reg [1 : 0] wbuffer_3_serverAdapterB_s1;
  wire [1 : 0] wbuffer_3_serverAdapterB_s1$D_IN;
  wire wbuffer_3_serverAdapterB_s1$EN;

  // register wbuffer_4_serverAdapterA_cnt
  reg [2 : 0] wbuffer_4_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_4_serverAdapterA_cnt$D_IN;
  wire wbuffer_4_serverAdapterA_cnt$EN;

  // register wbuffer_4_serverAdapterA_s1
  reg [1 : 0] wbuffer_4_serverAdapterA_s1;
  wire [1 : 0] wbuffer_4_serverAdapterA_s1$D_IN;
  wire wbuffer_4_serverAdapterA_s1$EN;

  // register wbuffer_4_serverAdapterB_cnt
  reg [2 : 0] wbuffer_4_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_4_serverAdapterB_cnt$D_IN;
  wire wbuffer_4_serverAdapterB_cnt$EN;

  // register wbuffer_4_serverAdapterB_s1
  reg [1 : 0] wbuffer_4_serverAdapterB_s1;
  wire [1 : 0] wbuffer_4_serverAdapterB_s1$D_IN;
  wire wbuffer_4_serverAdapterB_s1$EN;

  // register wbuffer_5_serverAdapterA_cnt
  reg [2 : 0] wbuffer_5_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_5_serverAdapterA_cnt$D_IN;
  wire wbuffer_5_serverAdapterA_cnt$EN;

  // register wbuffer_5_serverAdapterA_s1
  reg [1 : 0] wbuffer_5_serverAdapterA_s1;
  wire [1 : 0] wbuffer_5_serverAdapterA_s1$D_IN;
  wire wbuffer_5_serverAdapterA_s1$EN;

  // register wbuffer_5_serverAdapterB_cnt
  reg [2 : 0] wbuffer_5_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_5_serverAdapterB_cnt$D_IN;
  wire wbuffer_5_serverAdapterB_cnt$EN;

  // register wbuffer_5_serverAdapterB_s1
  reg [1 : 0] wbuffer_5_serverAdapterB_s1;
  wire [1 : 0] wbuffer_5_serverAdapterB_s1$D_IN;
  wire wbuffer_5_serverAdapterB_s1$EN;

  // register wbuffer_6_serverAdapterA_cnt
  reg [2 : 0] wbuffer_6_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_6_serverAdapterA_cnt$D_IN;
  wire wbuffer_6_serverAdapterA_cnt$EN;

  // register wbuffer_6_serverAdapterA_s1
  reg [1 : 0] wbuffer_6_serverAdapterA_s1;
  wire [1 : 0] wbuffer_6_serverAdapterA_s1$D_IN;
  wire wbuffer_6_serverAdapterA_s1$EN;

  // register wbuffer_6_serverAdapterB_cnt
  reg [2 : 0] wbuffer_6_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_6_serverAdapterB_cnt$D_IN;
  wire wbuffer_6_serverAdapterB_cnt$EN;

  // register wbuffer_6_serverAdapterB_s1
  reg [1 : 0] wbuffer_6_serverAdapterB_s1;
  wire [1 : 0] wbuffer_6_serverAdapterB_s1$D_IN;
  wire wbuffer_6_serverAdapterB_s1$EN;

  // register wbuffer_7_serverAdapterA_cnt
  reg [2 : 0] wbuffer_7_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_7_serverAdapterA_cnt$D_IN;
  wire wbuffer_7_serverAdapterA_cnt$EN;

  // register wbuffer_7_serverAdapterA_s1
  reg [1 : 0] wbuffer_7_serverAdapterA_s1;
  wire [1 : 0] wbuffer_7_serverAdapterA_s1$D_IN;
  wire wbuffer_7_serverAdapterA_s1$EN;

  // register wbuffer_7_serverAdapterB_cnt
  reg [2 : 0] wbuffer_7_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_7_serverAdapterB_cnt$D_IN;
  wire wbuffer_7_serverAdapterB_cnt$EN;

  // register wbuffer_7_serverAdapterB_s1
  reg [1 : 0] wbuffer_7_serverAdapterB_s1;
  wire [1 : 0] wbuffer_7_serverAdapterB_s1$D_IN;
  wire wbuffer_7_serverAdapterB_s1$EN;

  // register wbuffer_8_serverAdapterA_cnt
  reg [2 : 0] wbuffer_8_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_8_serverAdapterA_cnt$D_IN;
  wire wbuffer_8_serverAdapterA_cnt$EN;

  // register wbuffer_8_serverAdapterA_s1
  reg [1 : 0] wbuffer_8_serverAdapterA_s1;
  wire [1 : 0] wbuffer_8_serverAdapterA_s1$D_IN;
  wire wbuffer_8_serverAdapterA_s1$EN;

  // register wbuffer_8_serverAdapterB_cnt
  reg [2 : 0] wbuffer_8_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_8_serverAdapterB_cnt$D_IN;
  wire wbuffer_8_serverAdapterB_cnt$EN;

  // register wbuffer_8_serverAdapterB_s1
  reg [1 : 0] wbuffer_8_serverAdapterB_s1;
  wire [1 : 0] wbuffer_8_serverAdapterB_s1$D_IN;
  wire wbuffer_8_serverAdapterB_s1$EN;

  // register wbuffer_9_serverAdapterA_cnt
  reg [2 : 0] wbuffer_9_serverAdapterA_cnt;
  wire [2 : 0] wbuffer_9_serverAdapterA_cnt$D_IN;
  wire wbuffer_9_serverAdapterA_cnt$EN;

  // register wbuffer_9_serverAdapterA_s1
  reg [1 : 0] wbuffer_9_serverAdapterA_s1;
  wire [1 : 0] wbuffer_9_serverAdapterA_s1$D_IN;
  wire wbuffer_9_serverAdapterA_s1$EN;

  // register wbuffer_9_serverAdapterB_cnt
  reg [2 : 0] wbuffer_9_serverAdapterB_cnt;
  wire [2 : 0] wbuffer_9_serverAdapterB_cnt$D_IN;
  wire wbuffer_9_serverAdapterB_cnt$EN;

  // register wbuffer_9_serverAdapterB_s1
  reg [1 : 0] wbuffer_9_serverAdapterB_s1;
  wire [1 : 0] wbuffer_9_serverAdapterB_s1$D_IN;
  wire wbuffer_9_serverAdapterB_s1$EN;

  // ports of submodule ibuffer_0_memory
  wire [7 : 0] ibuffer_0_memory$ADDRA,
	       ibuffer_0_memory$ADDRB,
	       ibuffer_0_memory$DIA,
	       ibuffer_0_memory$DIB,
	       ibuffer_0_memory$DOA,
	       ibuffer_0_memory$DOB;
  wire ibuffer_0_memory$ENA,
       ibuffer_0_memory$ENB,
       ibuffer_0_memory$WEA,
       ibuffer_0_memory$WEB;

  // ports of submodule ibuffer_0_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_0_serverAdapterA_outDataCore$D_IN,
	       ibuffer_0_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_0_serverAdapterA_outDataCore$CLR,
       ibuffer_0_serverAdapterA_outDataCore$DEQ,
       ibuffer_0_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_0_serverAdapterA_outDataCore$ENQ,
       ibuffer_0_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_0_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_0_serverAdapterB_outDataCore$D_IN,
	       ibuffer_0_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_0_serverAdapterB_outDataCore$CLR,
       ibuffer_0_serverAdapterB_outDataCore$DEQ,
       ibuffer_0_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_0_serverAdapterB_outDataCore$ENQ,
       ibuffer_0_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_10_memory
  wire [7 : 0] ibuffer_10_memory$ADDRA,
	       ibuffer_10_memory$ADDRB,
	       ibuffer_10_memory$DIA,
	       ibuffer_10_memory$DIB,
	       ibuffer_10_memory$DOA,
	       ibuffer_10_memory$DOB;
  wire ibuffer_10_memory$ENA,
       ibuffer_10_memory$ENB,
       ibuffer_10_memory$WEA,
       ibuffer_10_memory$WEB;

  // ports of submodule ibuffer_10_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_10_serverAdapterA_outDataCore$D_IN,
	       ibuffer_10_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_10_serverAdapterA_outDataCore$CLR,
       ibuffer_10_serverAdapterA_outDataCore$DEQ,
       ibuffer_10_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_10_serverAdapterA_outDataCore$ENQ,
       ibuffer_10_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_10_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_10_serverAdapterB_outDataCore$D_IN,
	       ibuffer_10_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_10_serverAdapterB_outDataCore$CLR,
       ibuffer_10_serverAdapterB_outDataCore$DEQ,
       ibuffer_10_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_10_serverAdapterB_outDataCore$ENQ,
       ibuffer_10_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_11_memory
  wire [7 : 0] ibuffer_11_memory$ADDRA,
	       ibuffer_11_memory$ADDRB,
	       ibuffer_11_memory$DIA,
	       ibuffer_11_memory$DIB,
	       ibuffer_11_memory$DOA,
	       ibuffer_11_memory$DOB;
  wire ibuffer_11_memory$ENA,
       ibuffer_11_memory$ENB,
       ibuffer_11_memory$WEA,
       ibuffer_11_memory$WEB;

  // ports of submodule ibuffer_11_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_11_serverAdapterA_outDataCore$D_IN,
	       ibuffer_11_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_11_serverAdapterA_outDataCore$CLR,
       ibuffer_11_serverAdapterA_outDataCore$DEQ,
       ibuffer_11_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_11_serverAdapterA_outDataCore$ENQ,
       ibuffer_11_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_11_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_11_serverAdapterB_outDataCore$D_IN,
	       ibuffer_11_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_11_serverAdapterB_outDataCore$CLR,
       ibuffer_11_serverAdapterB_outDataCore$DEQ,
       ibuffer_11_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_11_serverAdapterB_outDataCore$ENQ,
       ibuffer_11_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_12_memory
  wire [7 : 0] ibuffer_12_memory$ADDRA,
	       ibuffer_12_memory$ADDRB,
	       ibuffer_12_memory$DIA,
	       ibuffer_12_memory$DIB,
	       ibuffer_12_memory$DOA,
	       ibuffer_12_memory$DOB;
  wire ibuffer_12_memory$ENA,
       ibuffer_12_memory$ENB,
       ibuffer_12_memory$WEA,
       ibuffer_12_memory$WEB;

  // ports of submodule ibuffer_12_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_12_serverAdapterA_outDataCore$D_IN,
	       ibuffer_12_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_12_serverAdapterA_outDataCore$CLR,
       ibuffer_12_serverAdapterA_outDataCore$DEQ,
       ibuffer_12_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_12_serverAdapterA_outDataCore$ENQ,
       ibuffer_12_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_12_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_12_serverAdapterB_outDataCore$D_IN,
	       ibuffer_12_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_12_serverAdapterB_outDataCore$CLR,
       ibuffer_12_serverAdapterB_outDataCore$DEQ,
       ibuffer_12_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_12_serverAdapterB_outDataCore$ENQ,
       ibuffer_12_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_13_memory
  wire [7 : 0] ibuffer_13_memory$ADDRA,
	       ibuffer_13_memory$ADDRB,
	       ibuffer_13_memory$DIA,
	       ibuffer_13_memory$DIB,
	       ibuffer_13_memory$DOA,
	       ibuffer_13_memory$DOB;
  wire ibuffer_13_memory$ENA,
       ibuffer_13_memory$ENB,
       ibuffer_13_memory$WEA,
       ibuffer_13_memory$WEB;

  // ports of submodule ibuffer_13_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_13_serverAdapterA_outDataCore$D_IN,
	       ibuffer_13_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_13_serverAdapterA_outDataCore$CLR,
       ibuffer_13_serverAdapterA_outDataCore$DEQ,
       ibuffer_13_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_13_serverAdapterA_outDataCore$ENQ,
       ibuffer_13_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_13_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_13_serverAdapterB_outDataCore$D_IN,
	       ibuffer_13_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_13_serverAdapterB_outDataCore$CLR,
       ibuffer_13_serverAdapterB_outDataCore$DEQ,
       ibuffer_13_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_13_serverAdapterB_outDataCore$ENQ,
       ibuffer_13_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_14_memory
  wire [7 : 0] ibuffer_14_memory$ADDRA,
	       ibuffer_14_memory$ADDRB,
	       ibuffer_14_memory$DIA,
	       ibuffer_14_memory$DIB,
	       ibuffer_14_memory$DOA,
	       ibuffer_14_memory$DOB;
  wire ibuffer_14_memory$ENA,
       ibuffer_14_memory$ENB,
       ibuffer_14_memory$WEA,
       ibuffer_14_memory$WEB;

  // ports of submodule ibuffer_14_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_14_serverAdapterA_outDataCore$D_IN,
	       ibuffer_14_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_14_serverAdapterA_outDataCore$CLR,
       ibuffer_14_serverAdapterA_outDataCore$DEQ,
       ibuffer_14_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_14_serverAdapterA_outDataCore$ENQ,
       ibuffer_14_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_14_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_14_serverAdapterB_outDataCore$D_IN,
	       ibuffer_14_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_14_serverAdapterB_outDataCore$CLR,
       ibuffer_14_serverAdapterB_outDataCore$DEQ,
       ibuffer_14_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_14_serverAdapterB_outDataCore$ENQ,
       ibuffer_14_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_15_memory
  wire [7 : 0] ibuffer_15_memory$ADDRA,
	       ibuffer_15_memory$ADDRB,
	       ibuffer_15_memory$DIA,
	       ibuffer_15_memory$DIB,
	       ibuffer_15_memory$DOA,
	       ibuffer_15_memory$DOB;
  wire ibuffer_15_memory$ENA,
       ibuffer_15_memory$ENB,
       ibuffer_15_memory$WEA,
       ibuffer_15_memory$WEB;

  // ports of submodule ibuffer_15_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_15_serverAdapterA_outDataCore$D_IN,
	       ibuffer_15_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_15_serverAdapterA_outDataCore$CLR,
       ibuffer_15_serverAdapterA_outDataCore$DEQ,
       ibuffer_15_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_15_serverAdapterA_outDataCore$ENQ,
       ibuffer_15_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_15_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_15_serverAdapterB_outDataCore$D_IN,
	       ibuffer_15_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_15_serverAdapterB_outDataCore$CLR,
       ibuffer_15_serverAdapterB_outDataCore$DEQ,
       ibuffer_15_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_15_serverAdapterB_outDataCore$ENQ,
       ibuffer_15_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_16_memory
  wire [7 : 0] ibuffer_16_memory$ADDRA,
	       ibuffer_16_memory$ADDRB,
	       ibuffer_16_memory$DIA,
	       ibuffer_16_memory$DIB,
	       ibuffer_16_memory$DOA,
	       ibuffer_16_memory$DOB;
  wire ibuffer_16_memory$ENA,
       ibuffer_16_memory$ENB,
       ibuffer_16_memory$WEA,
       ibuffer_16_memory$WEB;

  // ports of submodule ibuffer_16_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_16_serverAdapterA_outDataCore$D_IN,
	       ibuffer_16_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_16_serverAdapterA_outDataCore$CLR,
       ibuffer_16_serverAdapterA_outDataCore$DEQ,
       ibuffer_16_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_16_serverAdapterA_outDataCore$ENQ,
       ibuffer_16_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_16_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_16_serverAdapterB_outDataCore$D_IN,
	       ibuffer_16_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_16_serverAdapterB_outDataCore$CLR,
       ibuffer_16_serverAdapterB_outDataCore$DEQ,
       ibuffer_16_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_16_serverAdapterB_outDataCore$ENQ,
       ibuffer_16_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_17_memory
  wire [7 : 0] ibuffer_17_memory$ADDRA,
	       ibuffer_17_memory$ADDRB,
	       ibuffer_17_memory$DIA,
	       ibuffer_17_memory$DIB,
	       ibuffer_17_memory$DOA,
	       ibuffer_17_memory$DOB;
  wire ibuffer_17_memory$ENA,
       ibuffer_17_memory$ENB,
       ibuffer_17_memory$WEA,
       ibuffer_17_memory$WEB;

  // ports of submodule ibuffer_17_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_17_serverAdapterA_outDataCore$D_IN,
	       ibuffer_17_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_17_serverAdapterA_outDataCore$CLR,
       ibuffer_17_serverAdapterA_outDataCore$DEQ,
       ibuffer_17_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_17_serverAdapterA_outDataCore$ENQ,
       ibuffer_17_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_17_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_17_serverAdapterB_outDataCore$D_IN,
	       ibuffer_17_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_17_serverAdapterB_outDataCore$CLR,
       ibuffer_17_serverAdapterB_outDataCore$DEQ,
       ibuffer_17_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_17_serverAdapterB_outDataCore$ENQ,
       ibuffer_17_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_18_memory
  wire [7 : 0] ibuffer_18_memory$ADDRA,
	       ibuffer_18_memory$ADDRB,
	       ibuffer_18_memory$DIA,
	       ibuffer_18_memory$DIB,
	       ibuffer_18_memory$DOA,
	       ibuffer_18_memory$DOB;
  wire ibuffer_18_memory$ENA,
       ibuffer_18_memory$ENB,
       ibuffer_18_memory$WEA,
       ibuffer_18_memory$WEB;

  // ports of submodule ibuffer_18_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_18_serverAdapterA_outDataCore$D_IN,
	       ibuffer_18_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_18_serverAdapterA_outDataCore$CLR,
       ibuffer_18_serverAdapterA_outDataCore$DEQ,
       ibuffer_18_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_18_serverAdapterA_outDataCore$ENQ,
       ibuffer_18_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_18_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_18_serverAdapterB_outDataCore$D_IN,
	       ibuffer_18_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_18_serverAdapterB_outDataCore$CLR,
       ibuffer_18_serverAdapterB_outDataCore$DEQ,
       ibuffer_18_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_18_serverAdapterB_outDataCore$ENQ,
       ibuffer_18_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_19_memory
  wire [7 : 0] ibuffer_19_memory$ADDRA,
	       ibuffer_19_memory$ADDRB,
	       ibuffer_19_memory$DIA,
	       ibuffer_19_memory$DIB,
	       ibuffer_19_memory$DOA,
	       ibuffer_19_memory$DOB;
  wire ibuffer_19_memory$ENA,
       ibuffer_19_memory$ENB,
       ibuffer_19_memory$WEA,
       ibuffer_19_memory$WEB;

  // ports of submodule ibuffer_19_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_19_serverAdapterA_outDataCore$D_IN,
	       ibuffer_19_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_19_serverAdapterA_outDataCore$CLR,
       ibuffer_19_serverAdapterA_outDataCore$DEQ,
       ibuffer_19_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_19_serverAdapterA_outDataCore$ENQ,
       ibuffer_19_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_19_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_19_serverAdapterB_outDataCore$D_IN,
	       ibuffer_19_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_19_serverAdapterB_outDataCore$CLR,
       ibuffer_19_serverAdapterB_outDataCore$DEQ,
       ibuffer_19_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_19_serverAdapterB_outDataCore$ENQ,
       ibuffer_19_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_1_memory
  wire [7 : 0] ibuffer_1_memory$ADDRA,
	       ibuffer_1_memory$ADDRB,
	       ibuffer_1_memory$DIA,
	       ibuffer_1_memory$DIB,
	       ibuffer_1_memory$DOA,
	       ibuffer_1_memory$DOB;
  wire ibuffer_1_memory$ENA,
       ibuffer_1_memory$ENB,
       ibuffer_1_memory$WEA,
       ibuffer_1_memory$WEB;

  // ports of submodule ibuffer_1_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_1_serverAdapterA_outDataCore$D_IN,
	       ibuffer_1_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_1_serverAdapterA_outDataCore$CLR,
       ibuffer_1_serverAdapterA_outDataCore$DEQ,
       ibuffer_1_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_1_serverAdapterA_outDataCore$ENQ,
       ibuffer_1_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_1_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_1_serverAdapterB_outDataCore$D_IN,
	       ibuffer_1_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_1_serverAdapterB_outDataCore$CLR,
       ibuffer_1_serverAdapterB_outDataCore$DEQ,
       ibuffer_1_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_1_serverAdapterB_outDataCore$ENQ,
       ibuffer_1_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_20_memory
  wire [7 : 0] ibuffer_20_memory$ADDRA,
	       ibuffer_20_memory$ADDRB,
	       ibuffer_20_memory$DIA,
	       ibuffer_20_memory$DIB,
	       ibuffer_20_memory$DOA,
	       ibuffer_20_memory$DOB;
  wire ibuffer_20_memory$ENA,
       ibuffer_20_memory$ENB,
       ibuffer_20_memory$WEA,
       ibuffer_20_memory$WEB;

  // ports of submodule ibuffer_20_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_20_serverAdapterA_outDataCore$D_IN,
	       ibuffer_20_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_20_serverAdapterA_outDataCore$CLR,
       ibuffer_20_serverAdapterA_outDataCore$DEQ,
       ibuffer_20_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_20_serverAdapterA_outDataCore$ENQ,
       ibuffer_20_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_20_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_20_serverAdapterB_outDataCore$D_IN,
	       ibuffer_20_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_20_serverAdapterB_outDataCore$CLR,
       ibuffer_20_serverAdapterB_outDataCore$DEQ,
       ibuffer_20_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_20_serverAdapterB_outDataCore$ENQ,
       ibuffer_20_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_21_memory
  wire [7 : 0] ibuffer_21_memory$ADDRA,
	       ibuffer_21_memory$ADDRB,
	       ibuffer_21_memory$DIA,
	       ibuffer_21_memory$DIB,
	       ibuffer_21_memory$DOA,
	       ibuffer_21_memory$DOB;
  wire ibuffer_21_memory$ENA,
       ibuffer_21_memory$ENB,
       ibuffer_21_memory$WEA,
       ibuffer_21_memory$WEB;

  // ports of submodule ibuffer_21_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_21_serverAdapterA_outDataCore$D_IN,
	       ibuffer_21_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_21_serverAdapterA_outDataCore$CLR,
       ibuffer_21_serverAdapterA_outDataCore$DEQ,
       ibuffer_21_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_21_serverAdapterA_outDataCore$ENQ,
       ibuffer_21_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_21_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_21_serverAdapterB_outDataCore$D_IN,
	       ibuffer_21_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_21_serverAdapterB_outDataCore$CLR,
       ibuffer_21_serverAdapterB_outDataCore$DEQ,
       ibuffer_21_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_21_serverAdapterB_outDataCore$ENQ,
       ibuffer_21_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_22_memory
  wire [7 : 0] ibuffer_22_memory$ADDRA,
	       ibuffer_22_memory$ADDRB,
	       ibuffer_22_memory$DIA,
	       ibuffer_22_memory$DIB,
	       ibuffer_22_memory$DOA,
	       ibuffer_22_memory$DOB;
  wire ibuffer_22_memory$ENA,
       ibuffer_22_memory$ENB,
       ibuffer_22_memory$WEA,
       ibuffer_22_memory$WEB;

  // ports of submodule ibuffer_22_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_22_serverAdapterA_outDataCore$D_IN,
	       ibuffer_22_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_22_serverAdapterA_outDataCore$CLR,
       ibuffer_22_serverAdapterA_outDataCore$DEQ,
       ibuffer_22_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_22_serverAdapterA_outDataCore$ENQ,
       ibuffer_22_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_22_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_22_serverAdapterB_outDataCore$D_IN,
	       ibuffer_22_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_22_serverAdapterB_outDataCore$CLR,
       ibuffer_22_serverAdapterB_outDataCore$DEQ,
       ibuffer_22_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_22_serverAdapterB_outDataCore$ENQ,
       ibuffer_22_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_23_memory
  wire [7 : 0] ibuffer_23_memory$ADDRA,
	       ibuffer_23_memory$ADDRB,
	       ibuffer_23_memory$DIA,
	       ibuffer_23_memory$DIB,
	       ibuffer_23_memory$DOA,
	       ibuffer_23_memory$DOB;
  wire ibuffer_23_memory$ENA,
       ibuffer_23_memory$ENB,
       ibuffer_23_memory$WEA,
       ibuffer_23_memory$WEB;

  // ports of submodule ibuffer_23_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_23_serverAdapterA_outDataCore$D_IN,
	       ibuffer_23_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_23_serverAdapterA_outDataCore$CLR,
       ibuffer_23_serverAdapterA_outDataCore$DEQ,
       ibuffer_23_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_23_serverAdapterA_outDataCore$ENQ,
       ibuffer_23_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_23_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_23_serverAdapterB_outDataCore$D_IN,
	       ibuffer_23_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_23_serverAdapterB_outDataCore$CLR,
       ibuffer_23_serverAdapterB_outDataCore$DEQ,
       ibuffer_23_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_23_serverAdapterB_outDataCore$ENQ,
       ibuffer_23_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_24_memory
  wire [7 : 0] ibuffer_24_memory$ADDRA,
	       ibuffer_24_memory$ADDRB,
	       ibuffer_24_memory$DIA,
	       ibuffer_24_memory$DIB,
	       ibuffer_24_memory$DOA,
	       ibuffer_24_memory$DOB;
  wire ibuffer_24_memory$ENA,
       ibuffer_24_memory$ENB,
       ibuffer_24_memory$WEA,
       ibuffer_24_memory$WEB;

  // ports of submodule ibuffer_24_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_24_serverAdapterA_outDataCore$D_IN,
	       ibuffer_24_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_24_serverAdapterA_outDataCore$CLR,
       ibuffer_24_serverAdapterA_outDataCore$DEQ,
       ibuffer_24_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_24_serverAdapterA_outDataCore$ENQ,
       ibuffer_24_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_24_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_24_serverAdapterB_outDataCore$D_IN,
	       ibuffer_24_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_24_serverAdapterB_outDataCore$CLR,
       ibuffer_24_serverAdapterB_outDataCore$DEQ,
       ibuffer_24_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_24_serverAdapterB_outDataCore$ENQ,
       ibuffer_24_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_25_memory
  wire [7 : 0] ibuffer_25_memory$ADDRA,
	       ibuffer_25_memory$ADDRB,
	       ibuffer_25_memory$DIA,
	       ibuffer_25_memory$DIB,
	       ibuffer_25_memory$DOA,
	       ibuffer_25_memory$DOB;
  wire ibuffer_25_memory$ENA,
       ibuffer_25_memory$ENB,
       ibuffer_25_memory$WEA,
       ibuffer_25_memory$WEB;

  // ports of submodule ibuffer_25_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_25_serverAdapterA_outDataCore$D_IN,
	       ibuffer_25_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_25_serverAdapterA_outDataCore$CLR,
       ibuffer_25_serverAdapterA_outDataCore$DEQ,
       ibuffer_25_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_25_serverAdapterA_outDataCore$ENQ,
       ibuffer_25_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_25_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_25_serverAdapterB_outDataCore$D_IN,
	       ibuffer_25_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_25_serverAdapterB_outDataCore$CLR,
       ibuffer_25_serverAdapterB_outDataCore$DEQ,
       ibuffer_25_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_25_serverAdapterB_outDataCore$ENQ,
       ibuffer_25_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_26_memory
  wire [7 : 0] ibuffer_26_memory$ADDRA,
	       ibuffer_26_memory$ADDRB,
	       ibuffer_26_memory$DIA,
	       ibuffer_26_memory$DIB,
	       ibuffer_26_memory$DOA,
	       ibuffer_26_memory$DOB;
  wire ibuffer_26_memory$ENA,
       ibuffer_26_memory$ENB,
       ibuffer_26_memory$WEA,
       ibuffer_26_memory$WEB;

  // ports of submodule ibuffer_26_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_26_serverAdapterA_outDataCore$D_IN,
	       ibuffer_26_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_26_serverAdapterA_outDataCore$CLR,
       ibuffer_26_serverAdapterA_outDataCore$DEQ,
       ibuffer_26_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_26_serverAdapterA_outDataCore$ENQ,
       ibuffer_26_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_26_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_26_serverAdapterB_outDataCore$D_IN,
	       ibuffer_26_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_26_serverAdapterB_outDataCore$CLR,
       ibuffer_26_serverAdapterB_outDataCore$DEQ,
       ibuffer_26_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_26_serverAdapterB_outDataCore$ENQ,
       ibuffer_26_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_27_memory
  wire [7 : 0] ibuffer_27_memory$ADDRA,
	       ibuffer_27_memory$ADDRB,
	       ibuffer_27_memory$DIA,
	       ibuffer_27_memory$DIB,
	       ibuffer_27_memory$DOA,
	       ibuffer_27_memory$DOB;
  wire ibuffer_27_memory$ENA,
       ibuffer_27_memory$ENB,
       ibuffer_27_memory$WEA,
       ibuffer_27_memory$WEB;

  // ports of submodule ibuffer_27_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_27_serverAdapterA_outDataCore$D_IN,
	       ibuffer_27_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_27_serverAdapterA_outDataCore$CLR,
       ibuffer_27_serverAdapterA_outDataCore$DEQ,
       ibuffer_27_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_27_serverAdapterA_outDataCore$ENQ,
       ibuffer_27_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_27_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_27_serverAdapterB_outDataCore$D_IN,
	       ibuffer_27_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_27_serverAdapterB_outDataCore$CLR,
       ibuffer_27_serverAdapterB_outDataCore$DEQ,
       ibuffer_27_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_27_serverAdapterB_outDataCore$ENQ,
       ibuffer_27_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_28_memory
  wire [7 : 0] ibuffer_28_memory$ADDRA,
	       ibuffer_28_memory$ADDRB,
	       ibuffer_28_memory$DIA,
	       ibuffer_28_memory$DIB,
	       ibuffer_28_memory$DOA,
	       ibuffer_28_memory$DOB;
  wire ibuffer_28_memory$ENA,
       ibuffer_28_memory$ENB,
       ibuffer_28_memory$WEA,
       ibuffer_28_memory$WEB;

  // ports of submodule ibuffer_28_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_28_serverAdapterA_outDataCore$D_IN,
	       ibuffer_28_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_28_serverAdapterA_outDataCore$CLR,
       ibuffer_28_serverAdapterA_outDataCore$DEQ,
       ibuffer_28_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_28_serverAdapterA_outDataCore$ENQ,
       ibuffer_28_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_28_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_28_serverAdapterB_outDataCore$D_IN,
	       ibuffer_28_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_28_serverAdapterB_outDataCore$CLR,
       ibuffer_28_serverAdapterB_outDataCore$DEQ,
       ibuffer_28_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_28_serverAdapterB_outDataCore$ENQ,
       ibuffer_28_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_29_memory
  wire [7 : 0] ibuffer_29_memory$ADDRA,
	       ibuffer_29_memory$ADDRB,
	       ibuffer_29_memory$DIA,
	       ibuffer_29_memory$DIB,
	       ibuffer_29_memory$DOA,
	       ibuffer_29_memory$DOB;
  wire ibuffer_29_memory$ENA,
       ibuffer_29_memory$ENB,
       ibuffer_29_memory$WEA,
       ibuffer_29_memory$WEB;

  // ports of submodule ibuffer_29_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_29_serverAdapterA_outDataCore$D_IN,
	       ibuffer_29_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_29_serverAdapterA_outDataCore$CLR,
       ibuffer_29_serverAdapterA_outDataCore$DEQ,
       ibuffer_29_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_29_serverAdapterA_outDataCore$ENQ,
       ibuffer_29_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_29_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_29_serverAdapterB_outDataCore$D_IN,
	       ibuffer_29_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_29_serverAdapterB_outDataCore$CLR,
       ibuffer_29_serverAdapterB_outDataCore$DEQ,
       ibuffer_29_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_29_serverAdapterB_outDataCore$ENQ,
       ibuffer_29_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_2_memory
  wire [7 : 0] ibuffer_2_memory$ADDRA,
	       ibuffer_2_memory$ADDRB,
	       ibuffer_2_memory$DIA,
	       ibuffer_2_memory$DIB,
	       ibuffer_2_memory$DOA,
	       ibuffer_2_memory$DOB;
  wire ibuffer_2_memory$ENA,
       ibuffer_2_memory$ENB,
       ibuffer_2_memory$WEA,
       ibuffer_2_memory$WEB;

  // ports of submodule ibuffer_2_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_2_serverAdapterA_outDataCore$D_IN,
	       ibuffer_2_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_2_serverAdapterA_outDataCore$CLR,
       ibuffer_2_serverAdapterA_outDataCore$DEQ,
       ibuffer_2_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_2_serverAdapterA_outDataCore$ENQ,
       ibuffer_2_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_2_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_2_serverAdapterB_outDataCore$D_IN,
	       ibuffer_2_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_2_serverAdapterB_outDataCore$CLR,
       ibuffer_2_serverAdapterB_outDataCore$DEQ,
       ibuffer_2_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_2_serverAdapterB_outDataCore$ENQ,
       ibuffer_2_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_30_memory
  wire [7 : 0] ibuffer_30_memory$ADDRA,
	       ibuffer_30_memory$ADDRB,
	       ibuffer_30_memory$DIA,
	       ibuffer_30_memory$DIB,
	       ibuffer_30_memory$DOA,
	       ibuffer_30_memory$DOB;
  wire ibuffer_30_memory$ENA,
       ibuffer_30_memory$ENB,
       ibuffer_30_memory$WEA,
       ibuffer_30_memory$WEB;

  // ports of submodule ibuffer_30_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_30_serverAdapterA_outDataCore$D_IN,
	       ibuffer_30_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_30_serverAdapterA_outDataCore$CLR,
       ibuffer_30_serverAdapterA_outDataCore$DEQ,
       ibuffer_30_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_30_serverAdapterA_outDataCore$ENQ,
       ibuffer_30_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_30_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_30_serverAdapterB_outDataCore$D_IN,
	       ibuffer_30_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_30_serverAdapterB_outDataCore$CLR,
       ibuffer_30_serverAdapterB_outDataCore$DEQ,
       ibuffer_30_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_30_serverAdapterB_outDataCore$ENQ,
       ibuffer_30_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_31_memory
  wire [7 : 0] ibuffer_31_memory$ADDRA,
	       ibuffer_31_memory$ADDRB,
	       ibuffer_31_memory$DIA,
	       ibuffer_31_memory$DIB,
	       ibuffer_31_memory$DOA,
	       ibuffer_31_memory$DOB;
  wire ibuffer_31_memory$ENA,
       ibuffer_31_memory$ENB,
       ibuffer_31_memory$WEA,
       ibuffer_31_memory$WEB;

  // ports of submodule ibuffer_31_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_31_serverAdapterA_outDataCore$D_IN,
	       ibuffer_31_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_31_serverAdapterA_outDataCore$CLR,
       ibuffer_31_serverAdapterA_outDataCore$DEQ,
       ibuffer_31_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_31_serverAdapterA_outDataCore$ENQ,
       ibuffer_31_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_31_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_31_serverAdapterB_outDataCore$D_IN,
	       ibuffer_31_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_31_serverAdapterB_outDataCore$CLR,
       ibuffer_31_serverAdapterB_outDataCore$DEQ,
       ibuffer_31_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_31_serverAdapterB_outDataCore$ENQ,
       ibuffer_31_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_3_memory
  wire [7 : 0] ibuffer_3_memory$ADDRA,
	       ibuffer_3_memory$ADDRB,
	       ibuffer_3_memory$DIA,
	       ibuffer_3_memory$DIB,
	       ibuffer_3_memory$DOA,
	       ibuffer_3_memory$DOB;
  wire ibuffer_3_memory$ENA,
       ibuffer_3_memory$ENB,
       ibuffer_3_memory$WEA,
       ibuffer_3_memory$WEB;

  // ports of submodule ibuffer_3_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_3_serverAdapterA_outDataCore$D_IN,
	       ibuffer_3_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_3_serverAdapterA_outDataCore$CLR,
       ibuffer_3_serverAdapterA_outDataCore$DEQ,
       ibuffer_3_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_3_serverAdapterA_outDataCore$ENQ,
       ibuffer_3_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_3_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_3_serverAdapterB_outDataCore$D_IN,
	       ibuffer_3_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_3_serverAdapterB_outDataCore$CLR,
       ibuffer_3_serverAdapterB_outDataCore$DEQ,
       ibuffer_3_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_3_serverAdapterB_outDataCore$ENQ,
       ibuffer_3_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_4_memory
  wire [7 : 0] ibuffer_4_memory$ADDRA,
	       ibuffer_4_memory$ADDRB,
	       ibuffer_4_memory$DIA,
	       ibuffer_4_memory$DIB,
	       ibuffer_4_memory$DOA,
	       ibuffer_4_memory$DOB;
  wire ibuffer_4_memory$ENA,
       ibuffer_4_memory$ENB,
       ibuffer_4_memory$WEA,
       ibuffer_4_memory$WEB;

  // ports of submodule ibuffer_4_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_4_serverAdapterA_outDataCore$D_IN,
	       ibuffer_4_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_4_serverAdapterA_outDataCore$CLR,
       ibuffer_4_serverAdapterA_outDataCore$DEQ,
       ibuffer_4_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_4_serverAdapterA_outDataCore$ENQ,
       ibuffer_4_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_4_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_4_serverAdapterB_outDataCore$D_IN,
	       ibuffer_4_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_4_serverAdapterB_outDataCore$CLR,
       ibuffer_4_serverAdapterB_outDataCore$DEQ,
       ibuffer_4_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_4_serverAdapterB_outDataCore$ENQ,
       ibuffer_4_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_5_memory
  wire [7 : 0] ibuffer_5_memory$ADDRA,
	       ibuffer_5_memory$ADDRB,
	       ibuffer_5_memory$DIA,
	       ibuffer_5_memory$DIB,
	       ibuffer_5_memory$DOA,
	       ibuffer_5_memory$DOB;
  wire ibuffer_5_memory$ENA,
       ibuffer_5_memory$ENB,
       ibuffer_5_memory$WEA,
       ibuffer_5_memory$WEB;

  // ports of submodule ibuffer_5_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_5_serverAdapterA_outDataCore$D_IN,
	       ibuffer_5_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_5_serverAdapterA_outDataCore$CLR,
       ibuffer_5_serverAdapterA_outDataCore$DEQ,
       ibuffer_5_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_5_serverAdapterA_outDataCore$ENQ,
       ibuffer_5_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_5_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_5_serverAdapterB_outDataCore$D_IN,
	       ibuffer_5_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_5_serverAdapterB_outDataCore$CLR,
       ibuffer_5_serverAdapterB_outDataCore$DEQ,
       ibuffer_5_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_5_serverAdapterB_outDataCore$ENQ,
       ibuffer_5_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_6_memory
  wire [7 : 0] ibuffer_6_memory$ADDRA,
	       ibuffer_6_memory$ADDRB,
	       ibuffer_6_memory$DIA,
	       ibuffer_6_memory$DIB,
	       ibuffer_6_memory$DOA,
	       ibuffer_6_memory$DOB;
  wire ibuffer_6_memory$ENA,
       ibuffer_6_memory$ENB,
       ibuffer_6_memory$WEA,
       ibuffer_6_memory$WEB;

  // ports of submodule ibuffer_6_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_6_serverAdapterA_outDataCore$D_IN,
	       ibuffer_6_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_6_serverAdapterA_outDataCore$CLR,
       ibuffer_6_serverAdapterA_outDataCore$DEQ,
       ibuffer_6_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_6_serverAdapterA_outDataCore$ENQ,
       ibuffer_6_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_6_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_6_serverAdapterB_outDataCore$D_IN,
	       ibuffer_6_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_6_serverAdapterB_outDataCore$CLR,
       ibuffer_6_serverAdapterB_outDataCore$DEQ,
       ibuffer_6_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_6_serverAdapterB_outDataCore$ENQ,
       ibuffer_6_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_7_memory
  wire [7 : 0] ibuffer_7_memory$ADDRA,
	       ibuffer_7_memory$ADDRB,
	       ibuffer_7_memory$DIA,
	       ibuffer_7_memory$DIB,
	       ibuffer_7_memory$DOA,
	       ibuffer_7_memory$DOB;
  wire ibuffer_7_memory$ENA,
       ibuffer_7_memory$ENB,
       ibuffer_7_memory$WEA,
       ibuffer_7_memory$WEB;

  // ports of submodule ibuffer_7_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_7_serverAdapterA_outDataCore$D_IN,
	       ibuffer_7_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_7_serverAdapterA_outDataCore$CLR,
       ibuffer_7_serverAdapterA_outDataCore$DEQ,
       ibuffer_7_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_7_serverAdapterA_outDataCore$ENQ,
       ibuffer_7_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_7_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_7_serverAdapterB_outDataCore$D_IN,
	       ibuffer_7_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_7_serverAdapterB_outDataCore$CLR,
       ibuffer_7_serverAdapterB_outDataCore$DEQ,
       ibuffer_7_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_7_serverAdapterB_outDataCore$ENQ,
       ibuffer_7_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_8_memory
  wire [7 : 0] ibuffer_8_memory$ADDRA,
	       ibuffer_8_memory$ADDRB,
	       ibuffer_8_memory$DIA,
	       ibuffer_8_memory$DIB,
	       ibuffer_8_memory$DOA,
	       ibuffer_8_memory$DOB;
  wire ibuffer_8_memory$ENA,
       ibuffer_8_memory$ENB,
       ibuffer_8_memory$WEA,
       ibuffer_8_memory$WEB;

  // ports of submodule ibuffer_8_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_8_serverAdapterA_outDataCore$D_IN,
	       ibuffer_8_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_8_serverAdapterA_outDataCore$CLR,
       ibuffer_8_serverAdapterA_outDataCore$DEQ,
       ibuffer_8_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_8_serverAdapterA_outDataCore$ENQ,
       ibuffer_8_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_8_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_8_serverAdapterB_outDataCore$D_IN,
	       ibuffer_8_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_8_serverAdapterB_outDataCore$CLR,
       ibuffer_8_serverAdapterB_outDataCore$DEQ,
       ibuffer_8_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_8_serverAdapterB_outDataCore$ENQ,
       ibuffer_8_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule ibuffer_9_memory
  wire [7 : 0] ibuffer_9_memory$ADDRA,
	       ibuffer_9_memory$ADDRB,
	       ibuffer_9_memory$DIA,
	       ibuffer_9_memory$DIB,
	       ibuffer_9_memory$DOA,
	       ibuffer_9_memory$DOB;
  wire ibuffer_9_memory$ENA,
       ibuffer_9_memory$ENB,
       ibuffer_9_memory$WEA,
       ibuffer_9_memory$WEB;

  // ports of submodule ibuffer_9_serverAdapterA_outDataCore
  wire [7 : 0] ibuffer_9_serverAdapterA_outDataCore$D_IN,
	       ibuffer_9_serverAdapterA_outDataCore$D_OUT;
  wire ibuffer_9_serverAdapterA_outDataCore$CLR,
       ibuffer_9_serverAdapterA_outDataCore$DEQ,
       ibuffer_9_serverAdapterA_outDataCore$EMPTY_N,
       ibuffer_9_serverAdapterA_outDataCore$ENQ,
       ibuffer_9_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule ibuffer_9_serverAdapterB_outDataCore
  wire [7 : 0] ibuffer_9_serverAdapterB_outDataCore$D_IN,
	       ibuffer_9_serverAdapterB_outDataCore$D_OUT;
  wire ibuffer_9_serverAdapterB_outDataCore$CLR,
       ibuffer_9_serverAdapterB_outDataCore$DEQ,
       ibuffer_9_serverAdapterB_outDataCore$EMPTY_N,
       ibuffer_9_serverAdapterB_outDataCore$ENQ,
       ibuffer_9_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_0_memory
  wire [31 : 0] obuffer1_0_memory$DIA,
		obuffer1_0_memory$DIB,
		obuffer1_0_memory$DOA,
		obuffer1_0_memory$DOB;
  wire [7 : 0] obuffer1_0_memory$ADDRA, obuffer1_0_memory$ADDRB;
  wire obuffer1_0_memory$ENA,
       obuffer1_0_memory$ENB,
       obuffer1_0_memory$WEA,
       obuffer1_0_memory$WEB;

  // ports of submodule obuffer1_0_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_0_serverAdapterA_outDataCore$D_IN,
		obuffer1_0_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_0_serverAdapterA_outDataCore$CLR,
       obuffer1_0_serverAdapterA_outDataCore$DEQ,
       obuffer1_0_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_0_serverAdapterA_outDataCore$ENQ,
       obuffer1_0_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_0_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_0_serverAdapterB_outDataCore$D_IN,
		obuffer1_0_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_0_serverAdapterB_outDataCore$CLR,
       obuffer1_0_serverAdapterB_outDataCore$DEQ,
       obuffer1_0_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_0_serverAdapterB_outDataCore$ENQ,
       obuffer1_0_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_10_memory
  wire [31 : 0] obuffer1_10_memory$DIA,
		obuffer1_10_memory$DIB,
		obuffer1_10_memory$DOA,
		obuffer1_10_memory$DOB;
  wire [7 : 0] obuffer1_10_memory$ADDRA, obuffer1_10_memory$ADDRB;
  wire obuffer1_10_memory$ENA,
       obuffer1_10_memory$ENB,
       obuffer1_10_memory$WEA,
       obuffer1_10_memory$WEB;

  // ports of submodule obuffer1_10_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_10_serverAdapterA_outDataCore$D_IN,
		obuffer1_10_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_10_serverAdapterA_outDataCore$CLR,
       obuffer1_10_serverAdapterA_outDataCore$DEQ,
       obuffer1_10_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_10_serverAdapterA_outDataCore$ENQ,
       obuffer1_10_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_10_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_10_serverAdapterB_outDataCore$D_IN,
		obuffer1_10_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_10_serverAdapterB_outDataCore$CLR,
       obuffer1_10_serverAdapterB_outDataCore$DEQ,
       obuffer1_10_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_10_serverAdapterB_outDataCore$ENQ,
       obuffer1_10_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_11_memory
  wire [31 : 0] obuffer1_11_memory$DIA,
		obuffer1_11_memory$DIB,
		obuffer1_11_memory$DOA,
		obuffer1_11_memory$DOB;
  wire [7 : 0] obuffer1_11_memory$ADDRA, obuffer1_11_memory$ADDRB;
  wire obuffer1_11_memory$ENA,
       obuffer1_11_memory$ENB,
       obuffer1_11_memory$WEA,
       obuffer1_11_memory$WEB;

  // ports of submodule obuffer1_11_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_11_serverAdapterA_outDataCore$D_IN,
		obuffer1_11_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_11_serverAdapterA_outDataCore$CLR,
       obuffer1_11_serverAdapterA_outDataCore$DEQ,
       obuffer1_11_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_11_serverAdapterA_outDataCore$ENQ,
       obuffer1_11_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_11_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_11_serverAdapterB_outDataCore$D_IN,
		obuffer1_11_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_11_serverAdapterB_outDataCore$CLR,
       obuffer1_11_serverAdapterB_outDataCore$DEQ,
       obuffer1_11_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_11_serverAdapterB_outDataCore$ENQ,
       obuffer1_11_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_12_memory
  wire [31 : 0] obuffer1_12_memory$DIA,
		obuffer1_12_memory$DIB,
		obuffer1_12_memory$DOA,
		obuffer1_12_memory$DOB;
  wire [7 : 0] obuffer1_12_memory$ADDRA, obuffer1_12_memory$ADDRB;
  wire obuffer1_12_memory$ENA,
       obuffer1_12_memory$ENB,
       obuffer1_12_memory$WEA,
       obuffer1_12_memory$WEB;

  // ports of submodule obuffer1_12_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_12_serverAdapterA_outDataCore$D_IN,
		obuffer1_12_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_12_serverAdapterA_outDataCore$CLR,
       obuffer1_12_serverAdapterA_outDataCore$DEQ,
       obuffer1_12_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_12_serverAdapterA_outDataCore$ENQ,
       obuffer1_12_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_12_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_12_serverAdapterB_outDataCore$D_IN,
		obuffer1_12_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_12_serverAdapterB_outDataCore$CLR,
       obuffer1_12_serverAdapterB_outDataCore$DEQ,
       obuffer1_12_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_12_serverAdapterB_outDataCore$ENQ,
       obuffer1_12_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_13_memory
  wire [31 : 0] obuffer1_13_memory$DIA,
		obuffer1_13_memory$DIB,
		obuffer1_13_memory$DOA,
		obuffer1_13_memory$DOB;
  wire [7 : 0] obuffer1_13_memory$ADDRA, obuffer1_13_memory$ADDRB;
  wire obuffer1_13_memory$ENA,
       obuffer1_13_memory$ENB,
       obuffer1_13_memory$WEA,
       obuffer1_13_memory$WEB;

  // ports of submodule obuffer1_13_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_13_serverAdapterA_outDataCore$D_IN,
		obuffer1_13_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_13_serverAdapterA_outDataCore$CLR,
       obuffer1_13_serverAdapterA_outDataCore$DEQ,
       obuffer1_13_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_13_serverAdapterA_outDataCore$ENQ,
       obuffer1_13_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_13_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_13_serverAdapterB_outDataCore$D_IN,
		obuffer1_13_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_13_serverAdapterB_outDataCore$CLR,
       obuffer1_13_serverAdapterB_outDataCore$DEQ,
       obuffer1_13_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_13_serverAdapterB_outDataCore$ENQ,
       obuffer1_13_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_14_memory
  wire [31 : 0] obuffer1_14_memory$DIA,
		obuffer1_14_memory$DIB,
		obuffer1_14_memory$DOA,
		obuffer1_14_memory$DOB;
  wire [7 : 0] obuffer1_14_memory$ADDRA, obuffer1_14_memory$ADDRB;
  wire obuffer1_14_memory$ENA,
       obuffer1_14_memory$ENB,
       obuffer1_14_memory$WEA,
       obuffer1_14_memory$WEB;

  // ports of submodule obuffer1_14_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_14_serverAdapterA_outDataCore$D_IN,
		obuffer1_14_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_14_serverAdapterA_outDataCore$CLR,
       obuffer1_14_serverAdapterA_outDataCore$DEQ,
       obuffer1_14_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_14_serverAdapterA_outDataCore$ENQ,
       obuffer1_14_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_14_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_14_serverAdapterB_outDataCore$D_IN,
		obuffer1_14_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_14_serverAdapterB_outDataCore$CLR,
       obuffer1_14_serverAdapterB_outDataCore$DEQ,
       obuffer1_14_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_14_serverAdapterB_outDataCore$ENQ,
       obuffer1_14_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_15_memory
  wire [31 : 0] obuffer1_15_memory$DIA,
		obuffer1_15_memory$DIB,
		obuffer1_15_memory$DOA,
		obuffer1_15_memory$DOB;
  wire [7 : 0] obuffer1_15_memory$ADDRA, obuffer1_15_memory$ADDRB;
  wire obuffer1_15_memory$ENA,
       obuffer1_15_memory$ENB,
       obuffer1_15_memory$WEA,
       obuffer1_15_memory$WEB;

  // ports of submodule obuffer1_15_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_15_serverAdapterA_outDataCore$D_IN,
		obuffer1_15_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_15_serverAdapterA_outDataCore$CLR,
       obuffer1_15_serverAdapterA_outDataCore$DEQ,
       obuffer1_15_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_15_serverAdapterA_outDataCore$ENQ,
       obuffer1_15_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_15_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_15_serverAdapterB_outDataCore$D_IN,
		obuffer1_15_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_15_serverAdapterB_outDataCore$CLR,
       obuffer1_15_serverAdapterB_outDataCore$DEQ,
       obuffer1_15_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_15_serverAdapterB_outDataCore$ENQ,
       obuffer1_15_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_16_memory
  wire [31 : 0] obuffer1_16_memory$DIA,
		obuffer1_16_memory$DIB,
		obuffer1_16_memory$DOA,
		obuffer1_16_memory$DOB;
  wire [7 : 0] obuffer1_16_memory$ADDRA, obuffer1_16_memory$ADDRB;
  wire obuffer1_16_memory$ENA,
       obuffer1_16_memory$ENB,
       obuffer1_16_memory$WEA,
       obuffer1_16_memory$WEB;

  // ports of submodule obuffer1_16_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_16_serverAdapterA_outDataCore$D_IN,
		obuffer1_16_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_16_serverAdapterA_outDataCore$CLR,
       obuffer1_16_serverAdapterA_outDataCore$DEQ,
       obuffer1_16_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_16_serverAdapterA_outDataCore$ENQ,
       obuffer1_16_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_16_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_16_serverAdapterB_outDataCore$D_IN,
		obuffer1_16_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_16_serverAdapterB_outDataCore$CLR,
       obuffer1_16_serverAdapterB_outDataCore$DEQ,
       obuffer1_16_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_16_serverAdapterB_outDataCore$ENQ,
       obuffer1_16_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_17_memory
  wire [31 : 0] obuffer1_17_memory$DIA,
		obuffer1_17_memory$DIB,
		obuffer1_17_memory$DOA,
		obuffer1_17_memory$DOB;
  wire [7 : 0] obuffer1_17_memory$ADDRA, obuffer1_17_memory$ADDRB;
  wire obuffer1_17_memory$ENA,
       obuffer1_17_memory$ENB,
       obuffer1_17_memory$WEA,
       obuffer1_17_memory$WEB;

  // ports of submodule obuffer1_17_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_17_serverAdapterA_outDataCore$D_IN,
		obuffer1_17_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_17_serverAdapterA_outDataCore$CLR,
       obuffer1_17_serverAdapterA_outDataCore$DEQ,
       obuffer1_17_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_17_serverAdapterA_outDataCore$ENQ,
       obuffer1_17_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_17_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_17_serverAdapterB_outDataCore$D_IN,
		obuffer1_17_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_17_serverAdapterB_outDataCore$CLR,
       obuffer1_17_serverAdapterB_outDataCore$DEQ,
       obuffer1_17_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_17_serverAdapterB_outDataCore$ENQ,
       obuffer1_17_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_18_memory
  wire [31 : 0] obuffer1_18_memory$DIA,
		obuffer1_18_memory$DIB,
		obuffer1_18_memory$DOA,
		obuffer1_18_memory$DOB;
  wire [7 : 0] obuffer1_18_memory$ADDRA, obuffer1_18_memory$ADDRB;
  wire obuffer1_18_memory$ENA,
       obuffer1_18_memory$ENB,
       obuffer1_18_memory$WEA,
       obuffer1_18_memory$WEB;

  // ports of submodule obuffer1_18_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_18_serverAdapterA_outDataCore$D_IN,
		obuffer1_18_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_18_serverAdapterA_outDataCore$CLR,
       obuffer1_18_serverAdapterA_outDataCore$DEQ,
       obuffer1_18_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_18_serverAdapterA_outDataCore$ENQ,
       obuffer1_18_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_18_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_18_serverAdapterB_outDataCore$D_IN,
		obuffer1_18_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_18_serverAdapterB_outDataCore$CLR,
       obuffer1_18_serverAdapterB_outDataCore$DEQ,
       obuffer1_18_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_18_serverAdapterB_outDataCore$ENQ,
       obuffer1_18_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_19_memory
  wire [31 : 0] obuffer1_19_memory$DIA,
		obuffer1_19_memory$DIB,
		obuffer1_19_memory$DOA,
		obuffer1_19_memory$DOB;
  wire [7 : 0] obuffer1_19_memory$ADDRA, obuffer1_19_memory$ADDRB;
  wire obuffer1_19_memory$ENA,
       obuffer1_19_memory$ENB,
       obuffer1_19_memory$WEA,
       obuffer1_19_memory$WEB;

  // ports of submodule obuffer1_19_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_19_serverAdapterA_outDataCore$D_IN,
		obuffer1_19_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_19_serverAdapterA_outDataCore$CLR,
       obuffer1_19_serverAdapterA_outDataCore$DEQ,
       obuffer1_19_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_19_serverAdapterA_outDataCore$ENQ,
       obuffer1_19_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_19_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_19_serverAdapterB_outDataCore$D_IN,
		obuffer1_19_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_19_serverAdapterB_outDataCore$CLR,
       obuffer1_19_serverAdapterB_outDataCore$DEQ,
       obuffer1_19_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_19_serverAdapterB_outDataCore$ENQ,
       obuffer1_19_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_1_memory
  wire [31 : 0] obuffer1_1_memory$DIA,
		obuffer1_1_memory$DIB,
		obuffer1_1_memory$DOA,
		obuffer1_1_memory$DOB;
  wire [7 : 0] obuffer1_1_memory$ADDRA, obuffer1_1_memory$ADDRB;
  wire obuffer1_1_memory$ENA,
       obuffer1_1_memory$ENB,
       obuffer1_1_memory$WEA,
       obuffer1_1_memory$WEB;

  // ports of submodule obuffer1_1_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_1_serverAdapterA_outDataCore$D_IN,
		obuffer1_1_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_1_serverAdapterA_outDataCore$CLR,
       obuffer1_1_serverAdapterA_outDataCore$DEQ,
       obuffer1_1_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_1_serverAdapterA_outDataCore$ENQ,
       obuffer1_1_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_1_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_1_serverAdapterB_outDataCore$D_IN,
		obuffer1_1_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_1_serverAdapterB_outDataCore$CLR,
       obuffer1_1_serverAdapterB_outDataCore$DEQ,
       obuffer1_1_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_1_serverAdapterB_outDataCore$ENQ,
       obuffer1_1_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_20_memory
  wire [31 : 0] obuffer1_20_memory$DIA,
		obuffer1_20_memory$DIB,
		obuffer1_20_memory$DOA,
		obuffer1_20_memory$DOB;
  wire [7 : 0] obuffer1_20_memory$ADDRA, obuffer1_20_memory$ADDRB;
  wire obuffer1_20_memory$ENA,
       obuffer1_20_memory$ENB,
       obuffer1_20_memory$WEA,
       obuffer1_20_memory$WEB;

  // ports of submodule obuffer1_20_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_20_serverAdapterA_outDataCore$D_IN,
		obuffer1_20_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_20_serverAdapterA_outDataCore$CLR,
       obuffer1_20_serverAdapterA_outDataCore$DEQ,
       obuffer1_20_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_20_serverAdapterA_outDataCore$ENQ,
       obuffer1_20_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_20_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_20_serverAdapterB_outDataCore$D_IN,
		obuffer1_20_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_20_serverAdapterB_outDataCore$CLR,
       obuffer1_20_serverAdapterB_outDataCore$DEQ,
       obuffer1_20_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_20_serverAdapterB_outDataCore$ENQ,
       obuffer1_20_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_21_memory
  wire [31 : 0] obuffer1_21_memory$DIA,
		obuffer1_21_memory$DIB,
		obuffer1_21_memory$DOA,
		obuffer1_21_memory$DOB;
  wire [7 : 0] obuffer1_21_memory$ADDRA, obuffer1_21_memory$ADDRB;
  wire obuffer1_21_memory$ENA,
       obuffer1_21_memory$ENB,
       obuffer1_21_memory$WEA,
       obuffer1_21_memory$WEB;

  // ports of submodule obuffer1_21_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_21_serverAdapterA_outDataCore$D_IN,
		obuffer1_21_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_21_serverAdapterA_outDataCore$CLR,
       obuffer1_21_serverAdapterA_outDataCore$DEQ,
       obuffer1_21_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_21_serverAdapterA_outDataCore$ENQ,
       obuffer1_21_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_21_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_21_serverAdapterB_outDataCore$D_IN,
		obuffer1_21_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_21_serverAdapterB_outDataCore$CLR,
       obuffer1_21_serverAdapterB_outDataCore$DEQ,
       obuffer1_21_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_21_serverAdapterB_outDataCore$ENQ,
       obuffer1_21_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_22_memory
  wire [31 : 0] obuffer1_22_memory$DIA,
		obuffer1_22_memory$DIB,
		obuffer1_22_memory$DOA,
		obuffer1_22_memory$DOB;
  wire [7 : 0] obuffer1_22_memory$ADDRA, obuffer1_22_memory$ADDRB;
  wire obuffer1_22_memory$ENA,
       obuffer1_22_memory$ENB,
       obuffer1_22_memory$WEA,
       obuffer1_22_memory$WEB;

  // ports of submodule obuffer1_22_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_22_serverAdapterA_outDataCore$D_IN,
		obuffer1_22_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_22_serverAdapterA_outDataCore$CLR,
       obuffer1_22_serverAdapterA_outDataCore$DEQ,
       obuffer1_22_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_22_serverAdapterA_outDataCore$ENQ,
       obuffer1_22_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_22_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_22_serverAdapterB_outDataCore$D_IN,
		obuffer1_22_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_22_serverAdapterB_outDataCore$CLR,
       obuffer1_22_serverAdapterB_outDataCore$DEQ,
       obuffer1_22_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_22_serverAdapterB_outDataCore$ENQ,
       obuffer1_22_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_23_memory
  wire [31 : 0] obuffer1_23_memory$DIA,
		obuffer1_23_memory$DIB,
		obuffer1_23_memory$DOA,
		obuffer1_23_memory$DOB;
  wire [7 : 0] obuffer1_23_memory$ADDRA, obuffer1_23_memory$ADDRB;
  wire obuffer1_23_memory$ENA,
       obuffer1_23_memory$ENB,
       obuffer1_23_memory$WEA,
       obuffer1_23_memory$WEB;

  // ports of submodule obuffer1_23_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_23_serverAdapterA_outDataCore$D_IN,
		obuffer1_23_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_23_serverAdapterA_outDataCore$CLR,
       obuffer1_23_serverAdapterA_outDataCore$DEQ,
       obuffer1_23_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_23_serverAdapterA_outDataCore$ENQ,
       obuffer1_23_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_23_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_23_serverAdapterB_outDataCore$D_IN,
		obuffer1_23_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_23_serverAdapterB_outDataCore$CLR,
       obuffer1_23_serverAdapterB_outDataCore$DEQ,
       obuffer1_23_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_23_serverAdapterB_outDataCore$ENQ,
       obuffer1_23_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_24_memory
  wire [31 : 0] obuffer1_24_memory$DIA,
		obuffer1_24_memory$DIB,
		obuffer1_24_memory$DOA,
		obuffer1_24_memory$DOB;
  wire [7 : 0] obuffer1_24_memory$ADDRA, obuffer1_24_memory$ADDRB;
  wire obuffer1_24_memory$ENA,
       obuffer1_24_memory$ENB,
       obuffer1_24_memory$WEA,
       obuffer1_24_memory$WEB;

  // ports of submodule obuffer1_24_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_24_serverAdapterA_outDataCore$D_IN,
		obuffer1_24_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_24_serverAdapterA_outDataCore$CLR,
       obuffer1_24_serverAdapterA_outDataCore$DEQ,
       obuffer1_24_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_24_serverAdapterA_outDataCore$ENQ,
       obuffer1_24_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_24_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_24_serverAdapterB_outDataCore$D_IN,
		obuffer1_24_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_24_serverAdapterB_outDataCore$CLR,
       obuffer1_24_serverAdapterB_outDataCore$DEQ,
       obuffer1_24_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_24_serverAdapterB_outDataCore$ENQ,
       obuffer1_24_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_25_memory
  wire [31 : 0] obuffer1_25_memory$DIA,
		obuffer1_25_memory$DIB,
		obuffer1_25_memory$DOA,
		obuffer1_25_memory$DOB;
  wire [7 : 0] obuffer1_25_memory$ADDRA, obuffer1_25_memory$ADDRB;
  wire obuffer1_25_memory$ENA,
       obuffer1_25_memory$ENB,
       obuffer1_25_memory$WEA,
       obuffer1_25_memory$WEB;

  // ports of submodule obuffer1_25_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_25_serverAdapterA_outDataCore$D_IN,
		obuffer1_25_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_25_serverAdapterA_outDataCore$CLR,
       obuffer1_25_serverAdapterA_outDataCore$DEQ,
       obuffer1_25_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_25_serverAdapterA_outDataCore$ENQ,
       obuffer1_25_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_25_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_25_serverAdapterB_outDataCore$D_IN,
		obuffer1_25_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_25_serverAdapterB_outDataCore$CLR,
       obuffer1_25_serverAdapterB_outDataCore$DEQ,
       obuffer1_25_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_25_serverAdapterB_outDataCore$ENQ,
       obuffer1_25_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_26_memory
  wire [31 : 0] obuffer1_26_memory$DIA,
		obuffer1_26_memory$DIB,
		obuffer1_26_memory$DOA,
		obuffer1_26_memory$DOB;
  wire [7 : 0] obuffer1_26_memory$ADDRA, obuffer1_26_memory$ADDRB;
  wire obuffer1_26_memory$ENA,
       obuffer1_26_memory$ENB,
       obuffer1_26_memory$WEA,
       obuffer1_26_memory$WEB;

  // ports of submodule obuffer1_26_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_26_serverAdapterA_outDataCore$D_IN,
		obuffer1_26_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_26_serverAdapterA_outDataCore$CLR,
       obuffer1_26_serverAdapterA_outDataCore$DEQ,
       obuffer1_26_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_26_serverAdapterA_outDataCore$ENQ,
       obuffer1_26_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_26_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_26_serverAdapterB_outDataCore$D_IN,
		obuffer1_26_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_26_serverAdapterB_outDataCore$CLR,
       obuffer1_26_serverAdapterB_outDataCore$DEQ,
       obuffer1_26_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_26_serverAdapterB_outDataCore$ENQ,
       obuffer1_26_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_27_memory
  wire [31 : 0] obuffer1_27_memory$DIA,
		obuffer1_27_memory$DIB,
		obuffer1_27_memory$DOA,
		obuffer1_27_memory$DOB;
  wire [7 : 0] obuffer1_27_memory$ADDRA, obuffer1_27_memory$ADDRB;
  wire obuffer1_27_memory$ENA,
       obuffer1_27_memory$ENB,
       obuffer1_27_memory$WEA,
       obuffer1_27_memory$WEB;

  // ports of submodule obuffer1_27_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_27_serverAdapterA_outDataCore$D_IN,
		obuffer1_27_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_27_serverAdapterA_outDataCore$CLR,
       obuffer1_27_serverAdapterA_outDataCore$DEQ,
       obuffer1_27_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_27_serverAdapterA_outDataCore$ENQ,
       obuffer1_27_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_27_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_27_serverAdapterB_outDataCore$D_IN,
		obuffer1_27_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_27_serverAdapterB_outDataCore$CLR,
       obuffer1_27_serverAdapterB_outDataCore$DEQ,
       obuffer1_27_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_27_serverAdapterB_outDataCore$ENQ,
       obuffer1_27_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_28_memory
  wire [31 : 0] obuffer1_28_memory$DIA,
		obuffer1_28_memory$DIB,
		obuffer1_28_memory$DOA,
		obuffer1_28_memory$DOB;
  wire [7 : 0] obuffer1_28_memory$ADDRA, obuffer1_28_memory$ADDRB;
  wire obuffer1_28_memory$ENA,
       obuffer1_28_memory$ENB,
       obuffer1_28_memory$WEA,
       obuffer1_28_memory$WEB;

  // ports of submodule obuffer1_28_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_28_serverAdapterA_outDataCore$D_IN,
		obuffer1_28_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_28_serverAdapterA_outDataCore$CLR,
       obuffer1_28_serverAdapterA_outDataCore$DEQ,
       obuffer1_28_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_28_serverAdapterA_outDataCore$ENQ,
       obuffer1_28_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_28_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_28_serverAdapterB_outDataCore$D_IN,
		obuffer1_28_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_28_serverAdapterB_outDataCore$CLR,
       obuffer1_28_serverAdapterB_outDataCore$DEQ,
       obuffer1_28_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_28_serverAdapterB_outDataCore$ENQ,
       obuffer1_28_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_29_memory
  wire [31 : 0] obuffer1_29_memory$DIA,
		obuffer1_29_memory$DIB,
		obuffer1_29_memory$DOA,
		obuffer1_29_memory$DOB;
  wire [7 : 0] obuffer1_29_memory$ADDRA, obuffer1_29_memory$ADDRB;
  wire obuffer1_29_memory$ENA,
       obuffer1_29_memory$ENB,
       obuffer1_29_memory$WEA,
       obuffer1_29_memory$WEB;

  // ports of submodule obuffer1_29_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_29_serverAdapterA_outDataCore$D_IN,
		obuffer1_29_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_29_serverAdapterA_outDataCore$CLR,
       obuffer1_29_serverAdapterA_outDataCore$DEQ,
       obuffer1_29_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_29_serverAdapterA_outDataCore$ENQ,
       obuffer1_29_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_29_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_29_serverAdapterB_outDataCore$D_IN,
		obuffer1_29_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_29_serverAdapterB_outDataCore$CLR,
       obuffer1_29_serverAdapterB_outDataCore$DEQ,
       obuffer1_29_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_29_serverAdapterB_outDataCore$ENQ,
       obuffer1_29_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_2_memory
  wire [31 : 0] obuffer1_2_memory$DIA,
		obuffer1_2_memory$DIB,
		obuffer1_2_memory$DOA,
		obuffer1_2_memory$DOB;
  wire [7 : 0] obuffer1_2_memory$ADDRA, obuffer1_2_memory$ADDRB;
  wire obuffer1_2_memory$ENA,
       obuffer1_2_memory$ENB,
       obuffer1_2_memory$WEA,
       obuffer1_2_memory$WEB;

  // ports of submodule obuffer1_2_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_2_serverAdapterA_outDataCore$D_IN,
		obuffer1_2_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_2_serverAdapterA_outDataCore$CLR,
       obuffer1_2_serverAdapterA_outDataCore$DEQ,
       obuffer1_2_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_2_serverAdapterA_outDataCore$ENQ,
       obuffer1_2_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_2_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_2_serverAdapterB_outDataCore$D_IN,
		obuffer1_2_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_2_serverAdapterB_outDataCore$CLR,
       obuffer1_2_serverAdapterB_outDataCore$DEQ,
       obuffer1_2_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_2_serverAdapterB_outDataCore$ENQ,
       obuffer1_2_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_30_memory
  wire [31 : 0] obuffer1_30_memory$DIA,
		obuffer1_30_memory$DIB,
		obuffer1_30_memory$DOA,
		obuffer1_30_memory$DOB;
  wire [7 : 0] obuffer1_30_memory$ADDRA, obuffer1_30_memory$ADDRB;
  wire obuffer1_30_memory$ENA,
       obuffer1_30_memory$ENB,
       obuffer1_30_memory$WEA,
       obuffer1_30_memory$WEB;

  // ports of submodule obuffer1_30_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_30_serverAdapterA_outDataCore$D_IN,
		obuffer1_30_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_30_serverAdapterA_outDataCore$CLR,
       obuffer1_30_serverAdapterA_outDataCore$DEQ,
       obuffer1_30_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_30_serverAdapterA_outDataCore$ENQ,
       obuffer1_30_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_30_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_30_serverAdapterB_outDataCore$D_IN,
		obuffer1_30_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_30_serverAdapterB_outDataCore$CLR,
       obuffer1_30_serverAdapterB_outDataCore$DEQ,
       obuffer1_30_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_30_serverAdapterB_outDataCore$ENQ,
       obuffer1_30_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_31_memory
  wire [31 : 0] obuffer1_31_memory$DIA,
		obuffer1_31_memory$DIB,
		obuffer1_31_memory$DOA,
		obuffer1_31_memory$DOB;
  wire [7 : 0] obuffer1_31_memory$ADDRA, obuffer1_31_memory$ADDRB;
  wire obuffer1_31_memory$ENA,
       obuffer1_31_memory$ENB,
       obuffer1_31_memory$WEA,
       obuffer1_31_memory$WEB;

  // ports of submodule obuffer1_31_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_31_serverAdapterA_outDataCore$D_IN,
		obuffer1_31_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_31_serverAdapterA_outDataCore$CLR,
       obuffer1_31_serverAdapterA_outDataCore$DEQ,
       obuffer1_31_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_31_serverAdapterA_outDataCore$ENQ,
       obuffer1_31_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_31_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_31_serverAdapterB_outDataCore$D_IN,
		obuffer1_31_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_31_serverAdapterB_outDataCore$CLR,
       obuffer1_31_serverAdapterB_outDataCore$DEQ,
       obuffer1_31_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_31_serverAdapterB_outDataCore$ENQ,
       obuffer1_31_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_3_memory
  wire [31 : 0] obuffer1_3_memory$DIA,
		obuffer1_3_memory$DIB,
		obuffer1_3_memory$DOA,
		obuffer1_3_memory$DOB;
  wire [7 : 0] obuffer1_3_memory$ADDRA, obuffer1_3_memory$ADDRB;
  wire obuffer1_3_memory$ENA,
       obuffer1_3_memory$ENB,
       obuffer1_3_memory$WEA,
       obuffer1_3_memory$WEB;

  // ports of submodule obuffer1_3_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_3_serverAdapterA_outDataCore$D_IN,
		obuffer1_3_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_3_serverAdapterA_outDataCore$CLR,
       obuffer1_3_serverAdapterA_outDataCore$DEQ,
       obuffer1_3_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_3_serverAdapterA_outDataCore$ENQ,
       obuffer1_3_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_3_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_3_serverAdapterB_outDataCore$D_IN,
		obuffer1_3_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_3_serverAdapterB_outDataCore$CLR,
       obuffer1_3_serverAdapterB_outDataCore$DEQ,
       obuffer1_3_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_3_serverAdapterB_outDataCore$ENQ,
       obuffer1_3_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_4_memory
  wire [31 : 0] obuffer1_4_memory$DIA,
		obuffer1_4_memory$DIB,
		obuffer1_4_memory$DOA,
		obuffer1_4_memory$DOB;
  wire [7 : 0] obuffer1_4_memory$ADDRA, obuffer1_4_memory$ADDRB;
  wire obuffer1_4_memory$ENA,
       obuffer1_4_memory$ENB,
       obuffer1_4_memory$WEA,
       obuffer1_4_memory$WEB;

  // ports of submodule obuffer1_4_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_4_serverAdapterA_outDataCore$D_IN,
		obuffer1_4_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_4_serverAdapterA_outDataCore$CLR,
       obuffer1_4_serverAdapterA_outDataCore$DEQ,
       obuffer1_4_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_4_serverAdapterA_outDataCore$ENQ,
       obuffer1_4_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_4_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_4_serverAdapterB_outDataCore$D_IN,
		obuffer1_4_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_4_serverAdapterB_outDataCore$CLR,
       obuffer1_4_serverAdapterB_outDataCore$DEQ,
       obuffer1_4_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_4_serverAdapterB_outDataCore$ENQ,
       obuffer1_4_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_5_memory
  wire [31 : 0] obuffer1_5_memory$DIA,
		obuffer1_5_memory$DIB,
		obuffer1_5_memory$DOA,
		obuffer1_5_memory$DOB;
  wire [7 : 0] obuffer1_5_memory$ADDRA, obuffer1_5_memory$ADDRB;
  wire obuffer1_5_memory$ENA,
       obuffer1_5_memory$ENB,
       obuffer1_5_memory$WEA,
       obuffer1_5_memory$WEB;

  // ports of submodule obuffer1_5_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_5_serverAdapterA_outDataCore$D_IN,
		obuffer1_5_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_5_serverAdapterA_outDataCore$CLR,
       obuffer1_5_serverAdapterA_outDataCore$DEQ,
       obuffer1_5_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_5_serverAdapterA_outDataCore$ENQ,
       obuffer1_5_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_5_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_5_serverAdapterB_outDataCore$D_IN,
		obuffer1_5_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_5_serverAdapterB_outDataCore$CLR,
       obuffer1_5_serverAdapterB_outDataCore$DEQ,
       obuffer1_5_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_5_serverAdapterB_outDataCore$ENQ,
       obuffer1_5_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_6_memory
  wire [31 : 0] obuffer1_6_memory$DIA,
		obuffer1_6_memory$DIB,
		obuffer1_6_memory$DOA,
		obuffer1_6_memory$DOB;
  wire [7 : 0] obuffer1_6_memory$ADDRA, obuffer1_6_memory$ADDRB;
  wire obuffer1_6_memory$ENA,
       obuffer1_6_memory$ENB,
       obuffer1_6_memory$WEA,
       obuffer1_6_memory$WEB;

  // ports of submodule obuffer1_6_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_6_serverAdapterA_outDataCore$D_IN,
		obuffer1_6_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_6_serverAdapterA_outDataCore$CLR,
       obuffer1_6_serverAdapterA_outDataCore$DEQ,
       obuffer1_6_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_6_serverAdapterA_outDataCore$ENQ,
       obuffer1_6_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_6_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_6_serverAdapterB_outDataCore$D_IN,
		obuffer1_6_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_6_serverAdapterB_outDataCore$CLR,
       obuffer1_6_serverAdapterB_outDataCore$DEQ,
       obuffer1_6_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_6_serverAdapterB_outDataCore$ENQ,
       obuffer1_6_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_7_memory
  wire [31 : 0] obuffer1_7_memory$DIA,
		obuffer1_7_memory$DIB,
		obuffer1_7_memory$DOA,
		obuffer1_7_memory$DOB;
  wire [7 : 0] obuffer1_7_memory$ADDRA, obuffer1_7_memory$ADDRB;
  wire obuffer1_7_memory$ENA,
       obuffer1_7_memory$ENB,
       obuffer1_7_memory$WEA,
       obuffer1_7_memory$WEB;

  // ports of submodule obuffer1_7_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_7_serverAdapterA_outDataCore$D_IN,
		obuffer1_7_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_7_serverAdapterA_outDataCore$CLR,
       obuffer1_7_serverAdapterA_outDataCore$DEQ,
       obuffer1_7_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_7_serverAdapterA_outDataCore$ENQ,
       obuffer1_7_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_7_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_7_serverAdapterB_outDataCore$D_IN,
		obuffer1_7_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_7_serverAdapterB_outDataCore$CLR,
       obuffer1_7_serverAdapterB_outDataCore$DEQ,
       obuffer1_7_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_7_serverAdapterB_outDataCore$ENQ,
       obuffer1_7_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_8_memory
  wire [31 : 0] obuffer1_8_memory$DIA,
		obuffer1_8_memory$DIB,
		obuffer1_8_memory$DOA,
		obuffer1_8_memory$DOB;
  wire [7 : 0] obuffer1_8_memory$ADDRA, obuffer1_8_memory$ADDRB;
  wire obuffer1_8_memory$ENA,
       obuffer1_8_memory$ENB,
       obuffer1_8_memory$WEA,
       obuffer1_8_memory$WEB;

  // ports of submodule obuffer1_8_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_8_serverAdapterA_outDataCore$D_IN,
		obuffer1_8_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_8_serverAdapterA_outDataCore$CLR,
       obuffer1_8_serverAdapterA_outDataCore$DEQ,
       obuffer1_8_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_8_serverAdapterA_outDataCore$ENQ,
       obuffer1_8_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_8_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_8_serverAdapterB_outDataCore$D_IN,
		obuffer1_8_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_8_serverAdapterB_outDataCore$CLR,
       obuffer1_8_serverAdapterB_outDataCore$DEQ,
       obuffer1_8_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_8_serverAdapterB_outDataCore$ENQ,
       obuffer1_8_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer1_9_memory
  wire [31 : 0] obuffer1_9_memory$DIA,
		obuffer1_9_memory$DIB,
		obuffer1_9_memory$DOA,
		obuffer1_9_memory$DOB;
  wire [7 : 0] obuffer1_9_memory$ADDRA, obuffer1_9_memory$ADDRB;
  wire obuffer1_9_memory$ENA,
       obuffer1_9_memory$ENB,
       obuffer1_9_memory$WEA,
       obuffer1_9_memory$WEB;

  // ports of submodule obuffer1_9_serverAdapterA_outDataCore
  wire [31 : 0] obuffer1_9_serverAdapterA_outDataCore$D_IN,
		obuffer1_9_serverAdapterA_outDataCore$D_OUT;
  wire obuffer1_9_serverAdapterA_outDataCore$CLR,
       obuffer1_9_serverAdapterA_outDataCore$DEQ,
       obuffer1_9_serverAdapterA_outDataCore$EMPTY_N,
       obuffer1_9_serverAdapterA_outDataCore$ENQ,
       obuffer1_9_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer1_9_serverAdapterB_outDataCore
  wire [31 : 0] obuffer1_9_serverAdapterB_outDataCore$D_IN,
		obuffer1_9_serverAdapterB_outDataCore$D_OUT;
  wire obuffer1_9_serverAdapterB_outDataCore$CLR,
       obuffer1_9_serverAdapterB_outDataCore$DEQ,
       obuffer1_9_serverAdapterB_outDataCore$EMPTY_N,
       obuffer1_9_serverAdapterB_outDataCore$ENQ,
       obuffer1_9_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_0_memory
  wire [31 : 0] obuffer2_0_memory$DIA,
		obuffer2_0_memory$DIB,
		obuffer2_0_memory$DOA,
		obuffer2_0_memory$DOB;
  wire [7 : 0] obuffer2_0_memory$ADDRA, obuffer2_0_memory$ADDRB;
  wire obuffer2_0_memory$ENA,
       obuffer2_0_memory$ENB,
       obuffer2_0_memory$WEA,
       obuffer2_0_memory$WEB;

  // ports of submodule obuffer2_0_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_0_serverAdapterA_outDataCore$D_IN,
		obuffer2_0_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_0_serverAdapterA_outDataCore$CLR,
       obuffer2_0_serverAdapterA_outDataCore$DEQ,
       obuffer2_0_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_0_serverAdapterA_outDataCore$ENQ,
       obuffer2_0_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_0_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_0_serverAdapterB_outDataCore$D_IN,
		obuffer2_0_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_0_serverAdapterB_outDataCore$CLR,
       obuffer2_0_serverAdapterB_outDataCore$DEQ,
       obuffer2_0_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_0_serverAdapterB_outDataCore$ENQ,
       obuffer2_0_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_10_memory
  wire [31 : 0] obuffer2_10_memory$DIA,
		obuffer2_10_memory$DIB,
		obuffer2_10_memory$DOA,
		obuffer2_10_memory$DOB;
  wire [7 : 0] obuffer2_10_memory$ADDRA, obuffer2_10_memory$ADDRB;
  wire obuffer2_10_memory$ENA,
       obuffer2_10_memory$ENB,
       obuffer2_10_memory$WEA,
       obuffer2_10_memory$WEB;

  // ports of submodule obuffer2_10_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_10_serverAdapterA_outDataCore$D_IN,
		obuffer2_10_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_10_serverAdapterA_outDataCore$CLR,
       obuffer2_10_serverAdapterA_outDataCore$DEQ,
       obuffer2_10_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_10_serverAdapterA_outDataCore$ENQ,
       obuffer2_10_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_10_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_10_serverAdapterB_outDataCore$D_IN,
		obuffer2_10_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_10_serverAdapterB_outDataCore$CLR,
       obuffer2_10_serverAdapterB_outDataCore$DEQ,
       obuffer2_10_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_10_serverAdapterB_outDataCore$ENQ,
       obuffer2_10_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_11_memory
  wire [31 : 0] obuffer2_11_memory$DIA,
		obuffer2_11_memory$DIB,
		obuffer2_11_memory$DOA,
		obuffer2_11_memory$DOB;
  wire [7 : 0] obuffer2_11_memory$ADDRA, obuffer2_11_memory$ADDRB;
  wire obuffer2_11_memory$ENA,
       obuffer2_11_memory$ENB,
       obuffer2_11_memory$WEA,
       obuffer2_11_memory$WEB;

  // ports of submodule obuffer2_11_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_11_serverAdapterA_outDataCore$D_IN,
		obuffer2_11_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_11_serverAdapterA_outDataCore$CLR,
       obuffer2_11_serverAdapterA_outDataCore$DEQ,
       obuffer2_11_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_11_serverAdapterA_outDataCore$ENQ,
       obuffer2_11_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_11_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_11_serverAdapterB_outDataCore$D_IN,
		obuffer2_11_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_11_serverAdapterB_outDataCore$CLR,
       obuffer2_11_serverAdapterB_outDataCore$DEQ,
       obuffer2_11_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_11_serverAdapterB_outDataCore$ENQ,
       obuffer2_11_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_12_memory
  wire [31 : 0] obuffer2_12_memory$DIA,
		obuffer2_12_memory$DIB,
		obuffer2_12_memory$DOA,
		obuffer2_12_memory$DOB;
  wire [7 : 0] obuffer2_12_memory$ADDRA, obuffer2_12_memory$ADDRB;
  wire obuffer2_12_memory$ENA,
       obuffer2_12_memory$ENB,
       obuffer2_12_memory$WEA,
       obuffer2_12_memory$WEB;

  // ports of submodule obuffer2_12_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_12_serverAdapterA_outDataCore$D_IN,
		obuffer2_12_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_12_serverAdapterA_outDataCore$CLR,
       obuffer2_12_serverAdapterA_outDataCore$DEQ,
       obuffer2_12_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_12_serverAdapterA_outDataCore$ENQ,
       obuffer2_12_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_12_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_12_serverAdapterB_outDataCore$D_IN,
		obuffer2_12_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_12_serverAdapterB_outDataCore$CLR,
       obuffer2_12_serverAdapterB_outDataCore$DEQ,
       obuffer2_12_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_12_serverAdapterB_outDataCore$ENQ,
       obuffer2_12_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_13_memory
  wire [31 : 0] obuffer2_13_memory$DIA,
		obuffer2_13_memory$DIB,
		obuffer2_13_memory$DOA,
		obuffer2_13_memory$DOB;
  wire [7 : 0] obuffer2_13_memory$ADDRA, obuffer2_13_memory$ADDRB;
  wire obuffer2_13_memory$ENA,
       obuffer2_13_memory$ENB,
       obuffer2_13_memory$WEA,
       obuffer2_13_memory$WEB;

  // ports of submodule obuffer2_13_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_13_serverAdapterA_outDataCore$D_IN,
		obuffer2_13_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_13_serverAdapterA_outDataCore$CLR,
       obuffer2_13_serverAdapterA_outDataCore$DEQ,
       obuffer2_13_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_13_serverAdapterA_outDataCore$ENQ,
       obuffer2_13_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_13_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_13_serverAdapterB_outDataCore$D_IN,
		obuffer2_13_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_13_serverAdapterB_outDataCore$CLR,
       obuffer2_13_serverAdapterB_outDataCore$DEQ,
       obuffer2_13_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_13_serverAdapterB_outDataCore$ENQ,
       obuffer2_13_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_14_memory
  wire [31 : 0] obuffer2_14_memory$DIA,
		obuffer2_14_memory$DIB,
		obuffer2_14_memory$DOA,
		obuffer2_14_memory$DOB;
  wire [7 : 0] obuffer2_14_memory$ADDRA, obuffer2_14_memory$ADDRB;
  wire obuffer2_14_memory$ENA,
       obuffer2_14_memory$ENB,
       obuffer2_14_memory$WEA,
       obuffer2_14_memory$WEB;

  // ports of submodule obuffer2_14_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_14_serverAdapterA_outDataCore$D_IN,
		obuffer2_14_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_14_serverAdapterA_outDataCore$CLR,
       obuffer2_14_serverAdapterA_outDataCore$DEQ,
       obuffer2_14_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_14_serverAdapterA_outDataCore$ENQ,
       obuffer2_14_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_14_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_14_serverAdapterB_outDataCore$D_IN,
		obuffer2_14_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_14_serverAdapterB_outDataCore$CLR,
       obuffer2_14_serverAdapterB_outDataCore$DEQ,
       obuffer2_14_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_14_serverAdapterB_outDataCore$ENQ,
       obuffer2_14_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_15_memory
  wire [31 : 0] obuffer2_15_memory$DIA,
		obuffer2_15_memory$DIB,
		obuffer2_15_memory$DOA,
		obuffer2_15_memory$DOB;
  wire [7 : 0] obuffer2_15_memory$ADDRA, obuffer2_15_memory$ADDRB;
  wire obuffer2_15_memory$ENA,
       obuffer2_15_memory$ENB,
       obuffer2_15_memory$WEA,
       obuffer2_15_memory$WEB;

  // ports of submodule obuffer2_15_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_15_serverAdapterA_outDataCore$D_IN,
		obuffer2_15_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_15_serverAdapterA_outDataCore$CLR,
       obuffer2_15_serverAdapterA_outDataCore$DEQ,
       obuffer2_15_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_15_serverAdapterA_outDataCore$ENQ,
       obuffer2_15_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_15_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_15_serverAdapterB_outDataCore$D_IN,
		obuffer2_15_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_15_serverAdapterB_outDataCore$CLR,
       obuffer2_15_serverAdapterB_outDataCore$DEQ,
       obuffer2_15_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_15_serverAdapterB_outDataCore$ENQ,
       obuffer2_15_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_16_memory
  wire [31 : 0] obuffer2_16_memory$DIA,
		obuffer2_16_memory$DIB,
		obuffer2_16_memory$DOA,
		obuffer2_16_memory$DOB;
  wire [7 : 0] obuffer2_16_memory$ADDRA, obuffer2_16_memory$ADDRB;
  wire obuffer2_16_memory$ENA,
       obuffer2_16_memory$ENB,
       obuffer2_16_memory$WEA,
       obuffer2_16_memory$WEB;

  // ports of submodule obuffer2_16_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_16_serverAdapterA_outDataCore$D_IN,
		obuffer2_16_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_16_serverAdapterA_outDataCore$CLR,
       obuffer2_16_serverAdapterA_outDataCore$DEQ,
       obuffer2_16_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_16_serverAdapterA_outDataCore$ENQ,
       obuffer2_16_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_16_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_16_serverAdapterB_outDataCore$D_IN,
		obuffer2_16_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_16_serverAdapterB_outDataCore$CLR,
       obuffer2_16_serverAdapterB_outDataCore$DEQ,
       obuffer2_16_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_16_serverAdapterB_outDataCore$ENQ,
       obuffer2_16_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_17_memory
  wire [31 : 0] obuffer2_17_memory$DIA,
		obuffer2_17_memory$DIB,
		obuffer2_17_memory$DOA,
		obuffer2_17_memory$DOB;
  wire [7 : 0] obuffer2_17_memory$ADDRA, obuffer2_17_memory$ADDRB;
  wire obuffer2_17_memory$ENA,
       obuffer2_17_memory$ENB,
       obuffer2_17_memory$WEA,
       obuffer2_17_memory$WEB;

  // ports of submodule obuffer2_17_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_17_serverAdapterA_outDataCore$D_IN,
		obuffer2_17_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_17_serverAdapterA_outDataCore$CLR,
       obuffer2_17_serverAdapterA_outDataCore$DEQ,
       obuffer2_17_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_17_serverAdapterA_outDataCore$ENQ,
       obuffer2_17_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_17_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_17_serverAdapterB_outDataCore$D_IN,
		obuffer2_17_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_17_serverAdapterB_outDataCore$CLR,
       obuffer2_17_serverAdapterB_outDataCore$DEQ,
       obuffer2_17_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_17_serverAdapterB_outDataCore$ENQ,
       obuffer2_17_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_18_memory
  wire [31 : 0] obuffer2_18_memory$DIA,
		obuffer2_18_memory$DIB,
		obuffer2_18_memory$DOA,
		obuffer2_18_memory$DOB;
  wire [7 : 0] obuffer2_18_memory$ADDRA, obuffer2_18_memory$ADDRB;
  wire obuffer2_18_memory$ENA,
       obuffer2_18_memory$ENB,
       obuffer2_18_memory$WEA,
       obuffer2_18_memory$WEB;

  // ports of submodule obuffer2_18_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_18_serverAdapterA_outDataCore$D_IN,
		obuffer2_18_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_18_serverAdapterA_outDataCore$CLR,
       obuffer2_18_serverAdapterA_outDataCore$DEQ,
       obuffer2_18_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_18_serverAdapterA_outDataCore$ENQ,
       obuffer2_18_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_18_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_18_serverAdapterB_outDataCore$D_IN,
		obuffer2_18_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_18_serverAdapterB_outDataCore$CLR,
       obuffer2_18_serverAdapterB_outDataCore$DEQ,
       obuffer2_18_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_18_serverAdapterB_outDataCore$ENQ,
       obuffer2_18_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_19_memory
  wire [31 : 0] obuffer2_19_memory$DIA,
		obuffer2_19_memory$DIB,
		obuffer2_19_memory$DOA,
		obuffer2_19_memory$DOB;
  wire [7 : 0] obuffer2_19_memory$ADDRA, obuffer2_19_memory$ADDRB;
  wire obuffer2_19_memory$ENA,
       obuffer2_19_memory$ENB,
       obuffer2_19_memory$WEA,
       obuffer2_19_memory$WEB;

  // ports of submodule obuffer2_19_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_19_serverAdapterA_outDataCore$D_IN,
		obuffer2_19_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_19_serverAdapterA_outDataCore$CLR,
       obuffer2_19_serverAdapterA_outDataCore$DEQ,
       obuffer2_19_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_19_serverAdapterA_outDataCore$ENQ,
       obuffer2_19_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_19_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_19_serverAdapterB_outDataCore$D_IN,
		obuffer2_19_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_19_serverAdapterB_outDataCore$CLR,
       obuffer2_19_serverAdapterB_outDataCore$DEQ,
       obuffer2_19_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_19_serverAdapterB_outDataCore$ENQ,
       obuffer2_19_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_1_memory
  wire [31 : 0] obuffer2_1_memory$DIA,
		obuffer2_1_memory$DIB,
		obuffer2_1_memory$DOA,
		obuffer2_1_memory$DOB;
  wire [7 : 0] obuffer2_1_memory$ADDRA, obuffer2_1_memory$ADDRB;
  wire obuffer2_1_memory$ENA,
       obuffer2_1_memory$ENB,
       obuffer2_1_memory$WEA,
       obuffer2_1_memory$WEB;

  // ports of submodule obuffer2_1_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_1_serverAdapterA_outDataCore$D_IN,
		obuffer2_1_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_1_serverAdapterA_outDataCore$CLR,
       obuffer2_1_serverAdapterA_outDataCore$DEQ,
       obuffer2_1_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_1_serverAdapterA_outDataCore$ENQ,
       obuffer2_1_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_1_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_1_serverAdapterB_outDataCore$D_IN,
		obuffer2_1_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_1_serverAdapterB_outDataCore$CLR,
       obuffer2_1_serverAdapterB_outDataCore$DEQ,
       obuffer2_1_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_1_serverAdapterB_outDataCore$ENQ,
       obuffer2_1_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_20_memory
  wire [31 : 0] obuffer2_20_memory$DIA,
		obuffer2_20_memory$DIB,
		obuffer2_20_memory$DOA,
		obuffer2_20_memory$DOB;
  wire [7 : 0] obuffer2_20_memory$ADDRA, obuffer2_20_memory$ADDRB;
  wire obuffer2_20_memory$ENA,
       obuffer2_20_memory$ENB,
       obuffer2_20_memory$WEA,
       obuffer2_20_memory$WEB;

  // ports of submodule obuffer2_20_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_20_serverAdapterA_outDataCore$D_IN,
		obuffer2_20_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_20_serverAdapterA_outDataCore$CLR,
       obuffer2_20_serverAdapterA_outDataCore$DEQ,
       obuffer2_20_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_20_serverAdapterA_outDataCore$ENQ,
       obuffer2_20_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_20_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_20_serverAdapterB_outDataCore$D_IN,
		obuffer2_20_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_20_serverAdapterB_outDataCore$CLR,
       obuffer2_20_serverAdapterB_outDataCore$DEQ,
       obuffer2_20_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_20_serverAdapterB_outDataCore$ENQ,
       obuffer2_20_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_21_memory
  wire [31 : 0] obuffer2_21_memory$DIA,
		obuffer2_21_memory$DIB,
		obuffer2_21_memory$DOA,
		obuffer2_21_memory$DOB;
  wire [7 : 0] obuffer2_21_memory$ADDRA, obuffer2_21_memory$ADDRB;
  wire obuffer2_21_memory$ENA,
       obuffer2_21_memory$ENB,
       obuffer2_21_memory$WEA,
       obuffer2_21_memory$WEB;

  // ports of submodule obuffer2_21_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_21_serverAdapterA_outDataCore$D_IN,
		obuffer2_21_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_21_serverAdapterA_outDataCore$CLR,
       obuffer2_21_serverAdapterA_outDataCore$DEQ,
       obuffer2_21_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_21_serverAdapterA_outDataCore$ENQ,
       obuffer2_21_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_21_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_21_serverAdapterB_outDataCore$D_IN,
		obuffer2_21_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_21_serverAdapterB_outDataCore$CLR,
       obuffer2_21_serverAdapterB_outDataCore$DEQ,
       obuffer2_21_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_21_serverAdapterB_outDataCore$ENQ,
       obuffer2_21_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_22_memory
  wire [31 : 0] obuffer2_22_memory$DIA,
		obuffer2_22_memory$DIB,
		obuffer2_22_memory$DOA,
		obuffer2_22_memory$DOB;
  wire [7 : 0] obuffer2_22_memory$ADDRA, obuffer2_22_memory$ADDRB;
  wire obuffer2_22_memory$ENA,
       obuffer2_22_memory$ENB,
       obuffer2_22_memory$WEA,
       obuffer2_22_memory$WEB;

  // ports of submodule obuffer2_22_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_22_serverAdapterA_outDataCore$D_IN,
		obuffer2_22_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_22_serverAdapterA_outDataCore$CLR,
       obuffer2_22_serverAdapterA_outDataCore$DEQ,
       obuffer2_22_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_22_serverAdapterA_outDataCore$ENQ,
       obuffer2_22_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_22_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_22_serverAdapterB_outDataCore$D_IN,
		obuffer2_22_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_22_serverAdapterB_outDataCore$CLR,
       obuffer2_22_serverAdapterB_outDataCore$DEQ,
       obuffer2_22_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_22_serverAdapterB_outDataCore$ENQ,
       obuffer2_22_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_23_memory
  wire [31 : 0] obuffer2_23_memory$DIA,
		obuffer2_23_memory$DIB,
		obuffer2_23_memory$DOA,
		obuffer2_23_memory$DOB;
  wire [7 : 0] obuffer2_23_memory$ADDRA, obuffer2_23_memory$ADDRB;
  wire obuffer2_23_memory$ENA,
       obuffer2_23_memory$ENB,
       obuffer2_23_memory$WEA,
       obuffer2_23_memory$WEB;

  // ports of submodule obuffer2_23_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_23_serverAdapterA_outDataCore$D_IN,
		obuffer2_23_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_23_serverAdapterA_outDataCore$CLR,
       obuffer2_23_serverAdapterA_outDataCore$DEQ,
       obuffer2_23_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_23_serverAdapterA_outDataCore$ENQ,
       obuffer2_23_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_23_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_23_serverAdapterB_outDataCore$D_IN,
		obuffer2_23_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_23_serverAdapterB_outDataCore$CLR,
       obuffer2_23_serverAdapterB_outDataCore$DEQ,
       obuffer2_23_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_23_serverAdapterB_outDataCore$ENQ,
       obuffer2_23_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_24_memory
  wire [31 : 0] obuffer2_24_memory$DIA,
		obuffer2_24_memory$DIB,
		obuffer2_24_memory$DOA,
		obuffer2_24_memory$DOB;
  wire [7 : 0] obuffer2_24_memory$ADDRA, obuffer2_24_memory$ADDRB;
  wire obuffer2_24_memory$ENA,
       obuffer2_24_memory$ENB,
       obuffer2_24_memory$WEA,
       obuffer2_24_memory$WEB;

  // ports of submodule obuffer2_24_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_24_serverAdapterA_outDataCore$D_IN,
		obuffer2_24_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_24_serverAdapterA_outDataCore$CLR,
       obuffer2_24_serverAdapterA_outDataCore$DEQ,
       obuffer2_24_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_24_serverAdapterA_outDataCore$ENQ,
       obuffer2_24_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_24_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_24_serverAdapterB_outDataCore$D_IN,
		obuffer2_24_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_24_serverAdapterB_outDataCore$CLR,
       obuffer2_24_serverAdapterB_outDataCore$DEQ,
       obuffer2_24_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_24_serverAdapterB_outDataCore$ENQ,
       obuffer2_24_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_25_memory
  wire [31 : 0] obuffer2_25_memory$DIA,
		obuffer2_25_memory$DIB,
		obuffer2_25_memory$DOA,
		obuffer2_25_memory$DOB;
  wire [7 : 0] obuffer2_25_memory$ADDRA, obuffer2_25_memory$ADDRB;
  wire obuffer2_25_memory$ENA,
       obuffer2_25_memory$ENB,
       obuffer2_25_memory$WEA,
       obuffer2_25_memory$WEB;

  // ports of submodule obuffer2_25_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_25_serverAdapterA_outDataCore$D_IN,
		obuffer2_25_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_25_serverAdapterA_outDataCore$CLR,
       obuffer2_25_serverAdapterA_outDataCore$DEQ,
       obuffer2_25_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_25_serverAdapterA_outDataCore$ENQ,
       obuffer2_25_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_25_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_25_serverAdapterB_outDataCore$D_IN,
		obuffer2_25_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_25_serverAdapterB_outDataCore$CLR,
       obuffer2_25_serverAdapterB_outDataCore$DEQ,
       obuffer2_25_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_25_serverAdapterB_outDataCore$ENQ,
       obuffer2_25_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_26_memory
  wire [31 : 0] obuffer2_26_memory$DIA,
		obuffer2_26_memory$DIB,
		obuffer2_26_memory$DOA,
		obuffer2_26_memory$DOB;
  wire [7 : 0] obuffer2_26_memory$ADDRA, obuffer2_26_memory$ADDRB;
  wire obuffer2_26_memory$ENA,
       obuffer2_26_memory$ENB,
       obuffer2_26_memory$WEA,
       obuffer2_26_memory$WEB;

  // ports of submodule obuffer2_26_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_26_serverAdapterA_outDataCore$D_IN,
		obuffer2_26_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_26_serverAdapterA_outDataCore$CLR,
       obuffer2_26_serverAdapterA_outDataCore$DEQ,
       obuffer2_26_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_26_serverAdapterA_outDataCore$ENQ,
       obuffer2_26_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_26_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_26_serverAdapterB_outDataCore$D_IN,
		obuffer2_26_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_26_serverAdapterB_outDataCore$CLR,
       obuffer2_26_serverAdapterB_outDataCore$DEQ,
       obuffer2_26_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_26_serverAdapterB_outDataCore$ENQ,
       obuffer2_26_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_27_memory
  wire [31 : 0] obuffer2_27_memory$DIA,
		obuffer2_27_memory$DIB,
		obuffer2_27_memory$DOA,
		obuffer2_27_memory$DOB;
  wire [7 : 0] obuffer2_27_memory$ADDRA, obuffer2_27_memory$ADDRB;
  wire obuffer2_27_memory$ENA,
       obuffer2_27_memory$ENB,
       obuffer2_27_memory$WEA,
       obuffer2_27_memory$WEB;

  // ports of submodule obuffer2_27_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_27_serverAdapterA_outDataCore$D_IN,
		obuffer2_27_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_27_serverAdapterA_outDataCore$CLR,
       obuffer2_27_serverAdapterA_outDataCore$DEQ,
       obuffer2_27_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_27_serverAdapterA_outDataCore$ENQ,
       obuffer2_27_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_27_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_27_serverAdapterB_outDataCore$D_IN,
		obuffer2_27_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_27_serverAdapterB_outDataCore$CLR,
       obuffer2_27_serverAdapterB_outDataCore$DEQ,
       obuffer2_27_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_27_serverAdapterB_outDataCore$ENQ,
       obuffer2_27_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_28_memory
  wire [31 : 0] obuffer2_28_memory$DIA,
		obuffer2_28_memory$DIB,
		obuffer2_28_memory$DOA,
		obuffer2_28_memory$DOB;
  wire [7 : 0] obuffer2_28_memory$ADDRA, obuffer2_28_memory$ADDRB;
  wire obuffer2_28_memory$ENA,
       obuffer2_28_memory$ENB,
       obuffer2_28_memory$WEA,
       obuffer2_28_memory$WEB;

  // ports of submodule obuffer2_28_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_28_serverAdapterA_outDataCore$D_IN,
		obuffer2_28_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_28_serverAdapterA_outDataCore$CLR,
       obuffer2_28_serverAdapterA_outDataCore$DEQ,
       obuffer2_28_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_28_serverAdapterA_outDataCore$ENQ,
       obuffer2_28_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_28_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_28_serverAdapterB_outDataCore$D_IN,
		obuffer2_28_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_28_serverAdapterB_outDataCore$CLR,
       obuffer2_28_serverAdapterB_outDataCore$DEQ,
       obuffer2_28_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_28_serverAdapterB_outDataCore$ENQ,
       obuffer2_28_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_29_memory
  wire [31 : 0] obuffer2_29_memory$DIA,
		obuffer2_29_memory$DIB,
		obuffer2_29_memory$DOA,
		obuffer2_29_memory$DOB;
  wire [7 : 0] obuffer2_29_memory$ADDRA, obuffer2_29_memory$ADDRB;
  wire obuffer2_29_memory$ENA,
       obuffer2_29_memory$ENB,
       obuffer2_29_memory$WEA,
       obuffer2_29_memory$WEB;

  // ports of submodule obuffer2_29_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_29_serverAdapterA_outDataCore$D_IN,
		obuffer2_29_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_29_serverAdapterA_outDataCore$CLR,
       obuffer2_29_serverAdapterA_outDataCore$DEQ,
       obuffer2_29_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_29_serverAdapterA_outDataCore$ENQ,
       obuffer2_29_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_29_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_29_serverAdapterB_outDataCore$D_IN,
		obuffer2_29_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_29_serverAdapterB_outDataCore$CLR,
       obuffer2_29_serverAdapterB_outDataCore$DEQ,
       obuffer2_29_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_29_serverAdapterB_outDataCore$ENQ,
       obuffer2_29_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_2_memory
  wire [31 : 0] obuffer2_2_memory$DIA,
		obuffer2_2_memory$DIB,
		obuffer2_2_memory$DOA,
		obuffer2_2_memory$DOB;
  wire [7 : 0] obuffer2_2_memory$ADDRA, obuffer2_2_memory$ADDRB;
  wire obuffer2_2_memory$ENA,
       obuffer2_2_memory$ENB,
       obuffer2_2_memory$WEA,
       obuffer2_2_memory$WEB;

  // ports of submodule obuffer2_2_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_2_serverAdapterA_outDataCore$D_IN,
		obuffer2_2_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_2_serverAdapterA_outDataCore$CLR,
       obuffer2_2_serverAdapterA_outDataCore$DEQ,
       obuffer2_2_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_2_serverAdapterA_outDataCore$ENQ,
       obuffer2_2_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_2_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_2_serverAdapterB_outDataCore$D_IN,
		obuffer2_2_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_2_serverAdapterB_outDataCore$CLR,
       obuffer2_2_serverAdapterB_outDataCore$DEQ,
       obuffer2_2_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_2_serverAdapterB_outDataCore$ENQ,
       obuffer2_2_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_30_memory
  wire [31 : 0] obuffer2_30_memory$DIA,
		obuffer2_30_memory$DIB,
		obuffer2_30_memory$DOA,
		obuffer2_30_memory$DOB;
  wire [7 : 0] obuffer2_30_memory$ADDRA, obuffer2_30_memory$ADDRB;
  wire obuffer2_30_memory$ENA,
       obuffer2_30_memory$ENB,
       obuffer2_30_memory$WEA,
       obuffer2_30_memory$WEB;

  // ports of submodule obuffer2_30_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_30_serverAdapterA_outDataCore$D_IN,
		obuffer2_30_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_30_serverAdapterA_outDataCore$CLR,
       obuffer2_30_serverAdapterA_outDataCore$DEQ,
       obuffer2_30_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_30_serverAdapterA_outDataCore$ENQ,
       obuffer2_30_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_30_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_30_serverAdapterB_outDataCore$D_IN,
		obuffer2_30_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_30_serverAdapterB_outDataCore$CLR,
       obuffer2_30_serverAdapterB_outDataCore$DEQ,
       obuffer2_30_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_30_serverAdapterB_outDataCore$ENQ,
       obuffer2_30_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_31_memory
  wire [31 : 0] obuffer2_31_memory$DIA,
		obuffer2_31_memory$DIB,
		obuffer2_31_memory$DOA,
		obuffer2_31_memory$DOB;
  wire [7 : 0] obuffer2_31_memory$ADDRA, obuffer2_31_memory$ADDRB;
  wire obuffer2_31_memory$ENA,
       obuffer2_31_memory$ENB,
       obuffer2_31_memory$WEA,
       obuffer2_31_memory$WEB;

  // ports of submodule obuffer2_31_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_31_serverAdapterA_outDataCore$D_IN,
		obuffer2_31_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_31_serverAdapterA_outDataCore$CLR,
       obuffer2_31_serverAdapterA_outDataCore$DEQ,
       obuffer2_31_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_31_serverAdapterA_outDataCore$ENQ,
       obuffer2_31_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_31_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_31_serverAdapterB_outDataCore$D_IN,
		obuffer2_31_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_31_serverAdapterB_outDataCore$CLR,
       obuffer2_31_serverAdapterB_outDataCore$DEQ,
       obuffer2_31_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_31_serverAdapterB_outDataCore$ENQ,
       obuffer2_31_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_3_memory
  wire [31 : 0] obuffer2_3_memory$DIA,
		obuffer2_3_memory$DIB,
		obuffer2_3_memory$DOA,
		obuffer2_3_memory$DOB;
  wire [7 : 0] obuffer2_3_memory$ADDRA, obuffer2_3_memory$ADDRB;
  wire obuffer2_3_memory$ENA,
       obuffer2_3_memory$ENB,
       obuffer2_3_memory$WEA,
       obuffer2_3_memory$WEB;

  // ports of submodule obuffer2_3_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_3_serverAdapterA_outDataCore$D_IN,
		obuffer2_3_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_3_serverAdapterA_outDataCore$CLR,
       obuffer2_3_serverAdapterA_outDataCore$DEQ,
       obuffer2_3_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_3_serverAdapterA_outDataCore$ENQ,
       obuffer2_3_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_3_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_3_serverAdapterB_outDataCore$D_IN,
		obuffer2_3_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_3_serverAdapterB_outDataCore$CLR,
       obuffer2_3_serverAdapterB_outDataCore$DEQ,
       obuffer2_3_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_3_serverAdapterB_outDataCore$ENQ,
       obuffer2_3_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_4_memory
  wire [31 : 0] obuffer2_4_memory$DIA,
		obuffer2_4_memory$DIB,
		obuffer2_4_memory$DOA,
		obuffer2_4_memory$DOB;
  wire [7 : 0] obuffer2_4_memory$ADDRA, obuffer2_4_memory$ADDRB;
  wire obuffer2_4_memory$ENA,
       obuffer2_4_memory$ENB,
       obuffer2_4_memory$WEA,
       obuffer2_4_memory$WEB;

  // ports of submodule obuffer2_4_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_4_serverAdapterA_outDataCore$D_IN,
		obuffer2_4_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_4_serverAdapterA_outDataCore$CLR,
       obuffer2_4_serverAdapterA_outDataCore$DEQ,
       obuffer2_4_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_4_serverAdapterA_outDataCore$ENQ,
       obuffer2_4_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_4_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_4_serverAdapterB_outDataCore$D_IN,
		obuffer2_4_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_4_serverAdapterB_outDataCore$CLR,
       obuffer2_4_serverAdapterB_outDataCore$DEQ,
       obuffer2_4_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_4_serverAdapterB_outDataCore$ENQ,
       obuffer2_4_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_5_memory
  wire [31 : 0] obuffer2_5_memory$DIA,
		obuffer2_5_memory$DIB,
		obuffer2_5_memory$DOA,
		obuffer2_5_memory$DOB;
  wire [7 : 0] obuffer2_5_memory$ADDRA, obuffer2_5_memory$ADDRB;
  wire obuffer2_5_memory$ENA,
       obuffer2_5_memory$ENB,
       obuffer2_5_memory$WEA,
       obuffer2_5_memory$WEB;

  // ports of submodule obuffer2_5_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_5_serverAdapterA_outDataCore$D_IN,
		obuffer2_5_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_5_serverAdapterA_outDataCore$CLR,
       obuffer2_5_serverAdapterA_outDataCore$DEQ,
       obuffer2_5_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_5_serverAdapterA_outDataCore$ENQ,
       obuffer2_5_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_5_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_5_serverAdapterB_outDataCore$D_IN,
		obuffer2_5_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_5_serverAdapterB_outDataCore$CLR,
       obuffer2_5_serverAdapterB_outDataCore$DEQ,
       obuffer2_5_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_5_serverAdapterB_outDataCore$ENQ,
       obuffer2_5_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_6_memory
  wire [31 : 0] obuffer2_6_memory$DIA,
		obuffer2_6_memory$DIB,
		obuffer2_6_memory$DOA,
		obuffer2_6_memory$DOB;
  wire [7 : 0] obuffer2_6_memory$ADDRA, obuffer2_6_memory$ADDRB;
  wire obuffer2_6_memory$ENA,
       obuffer2_6_memory$ENB,
       obuffer2_6_memory$WEA,
       obuffer2_6_memory$WEB;

  // ports of submodule obuffer2_6_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_6_serverAdapterA_outDataCore$D_IN,
		obuffer2_6_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_6_serverAdapterA_outDataCore$CLR,
       obuffer2_6_serverAdapterA_outDataCore$DEQ,
       obuffer2_6_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_6_serverAdapterA_outDataCore$ENQ,
       obuffer2_6_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_6_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_6_serverAdapterB_outDataCore$D_IN,
		obuffer2_6_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_6_serverAdapterB_outDataCore$CLR,
       obuffer2_6_serverAdapterB_outDataCore$DEQ,
       obuffer2_6_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_6_serverAdapterB_outDataCore$ENQ,
       obuffer2_6_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_7_memory
  wire [31 : 0] obuffer2_7_memory$DIA,
		obuffer2_7_memory$DIB,
		obuffer2_7_memory$DOA,
		obuffer2_7_memory$DOB;
  wire [7 : 0] obuffer2_7_memory$ADDRA, obuffer2_7_memory$ADDRB;
  wire obuffer2_7_memory$ENA,
       obuffer2_7_memory$ENB,
       obuffer2_7_memory$WEA,
       obuffer2_7_memory$WEB;

  // ports of submodule obuffer2_7_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_7_serverAdapterA_outDataCore$D_IN,
		obuffer2_7_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_7_serverAdapterA_outDataCore$CLR,
       obuffer2_7_serverAdapterA_outDataCore$DEQ,
       obuffer2_7_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_7_serverAdapterA_outDataCore$ENQ,
       obuffer2_7_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_7_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_7_serverAdapterB_outDataCore$D_IN,
		obuffer2_7_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_7_serverAdapterB_outDataCore$CLR,
       obuffer2_7_serverAdapterB_outDataCore$DEQ,
       obuffer2_7_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_7_serverAdapterB_outDataCore$ENQ,
       obuffer2_7_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_8_memory
  wire [31 : 0] obuffer2_8_memory$DIA,
		obuffer2_8_memory$DIB,
		obuffer2_8_memory$DOA,
		obuffer2_8_memory$DOB;
  wire [7 : 0] obuffer2_8_memory$ADDRA, obuffer2_8_memory$ADDRB;
  wire obuffer2_8_memory$ENA,
       obuffer2_8_memory$ENB,
       obuffer2_8_memory$WEA,
       obuffer2_8_memory$WEB;

  // ports of submodule obuffer2_8_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_8_serverAdapterA_outDataCore$D_IN,
		obuffer2_8_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_8_serverAdapterA_outDataCore$CLR,
       obuffer2_8_serverAdapterA_outDataCore$DEQ,
       obuffer2_8_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_8_serverAdapterA_outDataCore$ENQ,
       obuffer2_8_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_8_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_8_serverAdapterB_outDataCore$D_IN,
		obuffer2_8_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_8_serverAdapterB_outDataCore$CLR,
       obuffer2_8_serverAdapterB_outDataCore$DEQ,
       obuffer2_8_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_8_serverAdapterB_outDataCore$ENQ,
       obuffer2_8_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule obuffer2_9_memory
  wire [31 : 0] obuffer2_9_memory$DIA,
		obuffer2_9_memory$DIB,
		obuffer2_9_memory$DOA,
		obuffer2_9_memory$DOB;
  wire [7 : 0] obuffer2_9_memory$ADDRA, obuffer2_9_memory$ADDRB;
  wire obuffer2_9_memory$ENA,
       obuffer2_9_memory$ENB,
       obuffer2_9_memory$WEA,
       obuffer2_9_memory$WEB;

  // ports of submodule obuffer2_9_serverAdapterA_outDataCore
  wire [31 : 0] obuffer2_9_serverAdapterA_outDataCore$D_IN,
		obuffer2_9_serverAdapterA_outDataCore$D_OUT;
  wire obuffer2_9_serverAdapterA_outDataCore$CLR,
       obuffer2_9_serverAdapterA_outDataCore$DEQ,
       obuffer2_9_serverAdapterA_outDataCore$EMPTY_N,
       obuffer2_9_serverAdapterA_outDataCore$ENQ,
       obuffer2_9_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule obuffer2_9_serverAdapterB_outDataCore
  wire [31 : 0] obuffer2_9_serverAdapterB_outDataCore$D_IN,
		obuffer2_9_serverAdapterB_outDataCore$D_OUT;
  wire obuffer2_9_serverAdapterB_outDataCore$CLR,
       obuffer2_9_serverAdapterB_outDataCore$DEQ,
       obuffer2_9_serverAdapterB_outDataCore$EMPTY_N,
       obuffer2_9_serverAdapterB_outDataCore$ENQ,
       obuffer2_9_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_0_memory
  wire [7 : 0] wbuffer_0_memory$ADDRA,
	       wbuffer_0_memory$ADDRB,
	       wbuffer_0_memory$DIA,
	       wbuffer_0_memory$DIB,
	       wbuffer_0_memory$DOA,
	       wbuffer_0_memory$DOB;
  wire wbuffer_0_memory$ENA,
       wbuffer_0_memory$ENB,
       wbuffer_0_memory$WEA,
       wbuffer_0_memory$WEB;

  // ports of submodule wbuffer_0_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_0_serverAdapterA_outDataCore$D_IN,
	       wbuffer_0_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_0_serverAdapterA_outDataCore$CLR,
       wbuffer_0_serverAdapterA_outDataCore$DEQ,
       wbuffer_0_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_0_serverAdapterA_outDataCore$ENQ,
       wbuffer_0_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_0_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_0_serverAdapterB_outDataCore$D_IN,
	       wbuffer_0_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_0_serverAdapterB_outDataCore$CLR,
       wbuffer_0_serverAdapterB_outDataCore$DEQ,
       wbuffer_0_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_0_serverAdapterB_outDataCore$ENQ,
       wbuffer_0_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_10_memory
  wire [7 : 0] wbuffer_10_memory$ADDRA,
	       wbuffer_10_memory$ADDRB,
	       wbuffer_10_memory$DIA,
	       wbuffer_10_memory$DIB,
	       wbuffer_10_memory$DOA,
	       wbuffer_10_memory$DOB;
  wire wbuffer_10_memory$ENA,
       wbuffer_10_memory$ENB,
       wbuffer_10_memory$WEA,
       wbuffer_10_memory$WEB;

  // ports of submodule wbuffer_10_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_10_serverAdapterA_outDataCore$D_IN,
	       wbuffer_10_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_10_serverAdapterA_outDataCore$CLR,
       wbuffer_10_serverAdapterA_outDataCore$DEQ,
       wbuffer_10_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_10_serverAdapterA_outDataCore$ENQ,
       wbuffer_10_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_10_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_10_serverAdapterB_outDataCore$D_IN,
	       wbuffer_10_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_10_serverAdapterB_outDataCore$CLR,
       wbuffer_10_serverAdapterB_outDataCore$DEQ,
       wbuffer_10_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_10_serverAdapterB_outDataCore$ENQ,
       wbuffer_10_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_11_memory
  wire [7 : 0] wbuffer_11_memory$ADDRA,
	       wbuffer_11_memory$ADDRB,
	       wbuffer_11_memory$DIA,
	       wbuffer_11_memory$DIB,
	       wbuffer_11_memory$DOA,
	       wbuffer_11_memory$DOB;
  wire wbuffer_11_memory$ENA,
       wbuffer_11_memory$ENB,
       wbuffer_11_memory$WEA,
       wbuffer_11_memory$WEB;

  // ports of submodule wbuffer_11_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_11_serverAdapterA_outDataCore$D_IN,
	       wbuffer_11_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_11_serverAdapterA_outDataCore$CLR,
       wbuffer_11_serverAdapterA_outDataCore$DEQ,
       wbuffer_11_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_11_serverAdapterA_outDataCore$ENQ,
       wbuffer_11_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_11_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_11_serverAdapterB_outDataCore$D_IN,
	       wbuffer_11_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_11_serverAdapterB_outDataCore$CLR,
       wbuffer_11_serverAdapterB_outDataCore$DEQ,
       wbuffer_11_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_11_serverAdapterB_outDataCore$ENQ,
       wbuffer_11_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_12_memory
  wire [7 : 0] wbuffer_12_memory$ADDRA,
	       wbuffer_12_memory$ADDRB,
	       wbuffer_12_memory$DIA,
	       wbuffer_12_memory$DIB,
	       wbuffer_12_memory$DOA,
	       wbuffer_12_memory$DOB;
  wire wbuffer_12_memory$ENA,
       wbuffer_12_memory$ENB,
       wbuffer_12_memory$WEA,
       wbuffer_12_memory$WEB;

  // ports of submodule wbuffer_12_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_12_serverAdapterA_outDataCore$D_IN,
	       wbuffer_12_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_12_serverAdapterA_outDataCore$CLR,
       wbuffer_12_serverAdapterA_outDataCore$DEQ,
       wbuffer_12_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_12_serverAdapterA_outDataCore$ENQ,
       wbuffer_12_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_12_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_12_serverAdapterB_outDataCore$D_IN,
	       wbuffer_12_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_12_serverAdapterB_outDataCore$CLR,
       wbuffer_12_serverAdapterB_outDataCore$DEQ,
       wbuffer_12_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_12_serverAdapterB_outDataCore$ENQ,
       wbuffer_12_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_13_memory
  wire [7 : 0] wbuffer_13_memory$ADDRA,
	       wbuffer_13_memory$ADDRB,
	       wbuffer_13_memory$DIA,
	       wbuffer_13_memory$DIB,
	       wbuffer_13_memory$DOA,
	       wbuffer_13_memory$DOB;
  wire wbuffer_13_memory$ENA,
       wbuffer_13_memory$ENB,
       wbuffer_13_memory$WEA,
       wbuffer_13_memory$WEB;

  // ports of submodule wbuffer_13_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_13_serverAdapterA_outDataCore$D_IN,
	       wbuffer_13_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_13_serverAdapterA_outDataCore$CLR,
       wbuffer_13_serverAdapterA_outDataCore$DEQ,
       wbuffer_13_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_13_serverAdapterA_outDataCore$ENQ,
       wbuffer_13_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_13_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_13_serverAdapterB_outDataCore$D_IN,
	       wbuffer_13_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_13_serverAdapterB_outDataCore$CLR,
       wbuffer_13_serverAdapterB_outDataCore$DEQ,
       wbuffer_13_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_13_serverAdapterB_outDataCore$ENQ,
       wbuffer_13_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_14_memory
  wire [7 : 0] wbuffer_14_memory$ADDRA,
	       wbuffer_14_memory$ADDRB,
	       wbuffer_14_memory$DIA,
	       wbuffer_14_memory$DIB,
	       wbuffer_14_memory$DOA,
	       wbuffer_14_memory$DOB;
  wire wbuffer_14_memory$ENA,
       wbuffer_14_memory$ENB,
       wbuffer_14_memory$WEA,
       wbuffer_14_memory$WEB;

  // ports of submodule wbuffer_14_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_14_serverAdapterA_outDataCore$D_IN,
	       wbuffer_14_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_14_serverAdapterA_outDataCore$CLR,
       wbuffer_14_serverAdapterA_outDataCore$DEQ,
       wbuffer_14_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_14_serverAdapterA_outDataCore$ENQ,
       wbuffer_14_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_14_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_14_serverAdapterB_outDataCore$D_IN,
	       wbuffer_14_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_14_serverAdapterB_outDataCore$CLR,
       wbuffer_14_serverAdapterB_outDataCore$DEQ,
       wbuffer_14_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_14_serverAdapterB_outDataCore$ENQ,
       wbuffer_14_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_15_memory
  wire [7 : 0] wbuffer_15_memory$ADDRA,
	       wbuffer_15_memory$ADDRB,
	       wbuffer_15_memory$DIA,
	       wbuffer_15_memory$DIB,
	       wbuffer_15_memory$DOA,
	       wbuffer_15_memory$DOB;
  wire wbuffer_15_memory$ENA,
       wbuffer_15_memory$ENB,
       wbuffer_15_memory$WEA,
       wbuffer_15_memory$WEB;

  // ports of submodule wbuffer_15_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_15_serverAdapterA_outDataCore$D_IN,
	       wbuffer_15_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_15_serverAdapterA_outDataCore$CLR,
       wbuffer_15_serverAdapterA_outDataCore$DEQ,
       wbuffer_15_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_15_serverAdapterA_outDataCore$ENQ,
       wbuffer_15_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_15_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_15_serverAdapterB_outDataCore$D_IN,
	       wbuffer_15_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_15_serverAdapterB_outDataCore$CLR,
       wbuffer_15_serverAdapterB_outDataCore$DEQ,
       wbuffer_15_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_15_serverAdapterB_outDataCore$ENQ,
       wbuffer_15_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_16_memory
  wire [7 : 0] wbuffer_16_memory$ADDRA,
	       wbuffer_16_memory$ADDRB,
	       wbuffer_16_memory$DIA,
	       wbuffer_16_memory$DIB,
	       wbuffer_16_memory$DOA,
	       wbuffer_16_memory$DOB;
  wire wbuffer_16_memory$ENA,
       wbuffer_16_memory$ENB,
       wbuffer_16_memory$WEA,
       wbuffer_16_memory$WEB;

  // ports of submodule wbuffer_16_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_16_serverAdapterA_outDataCore$D_IN,
	       wbuffer_16_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_16_serverAdapterA_outDataCore$CLR,
       wbuffer_16_serverAdapterA_outDataCore$DEQ,
       wbuffer_16_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_16_serverAdapterA_outDataCore$ENQ,
       wbuffer_16_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_16_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_16_serverAdapterB_outDataCore$D_IN,
	       wbuffer_16_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_16_serverAdapterB_outDataCore$CLR,
       wbuffer_16_serverAdapterB_outDataCore$DEQ,
       wbuffer_16_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_16_serverAdapterB_outDataCore$ENQ,
       wbuffer_16_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_17_memory
  wire [7 : 0] wbuffer_17_memory$ADDRA,
	       wbuffer_17_memory$ADDRB,
	       wbuffer_17_memory$DIA,
	       wbuffer_17_memory$DIB,
	       wbuffer_17_memory$DOA,
	       wbuffer_17_memory$DOB;
  wire wbuffer_17_memory$ENA,
       wbuffer_17_memory$ENB,
       wbuffer_17_memory$WEA,
       wbuffer_17_memory$WEB;

  // ports of submodule wbuffer_17_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_17_serverAdapterA_outDataCore$D_IN,
	       wbuffer_17_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_17_serverAdapterA_outDataCore$CLR,
       wbuffer_17_serverAdapterA_outDataCore$DEQ,
       wbuffer_17_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_17_serverAdapterA_outDataCore$ENQ,
       wbuffer_17_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_17_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_17_serverAdapterB_outDataCore$D_IN,
	       wbuffer_17_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_17_serverAdapterB_outDataCore$CLR,
       wbuffer_17_serverAdapterB_outDataCore$DEQ,
       wbuffer_17_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_17_serverAdapterB_outDataCore$ENQ,
       wbuffer_17_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_18_memory
  wire [7 : 0] wbuffer_18_memory$ADDRA,
	       wbuffer_18_memory$ADDRB,
	       wbuffer_18_memory$DIA,
	       wbuffer_18_memory$DIB,
	       wbuffer_18_memory$DOA,
	       wbuffer_18_memory$DOB;
  wire wbuffer_18_memory$ENA,
       wbuffer_18_memory$ENB,
       wbuffer_18_memory$WEA,
       wbuffer_18_memory$WEB;

  // ports of submodule wbuffer_18_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_18_serverAdapterA_outDataCore$D_IN,
	       wbuffer_18_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_18_serverAdapterA_outDataCore$CLR,
       wbuffer_18_serverAdapterA_outDataCore$DEQ,
       wbuffer_18_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_18_serverAdapterA_outDataCore$ENQ,
       wbuffer_18_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_18_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_18_serverAdapterB_outDataCore$D_IN,
	       wbuffer_18_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_18_serverAdapterB_outDataCore$CLR,
       wbuffer_18_serverAdapterB_outDataCore$DEQ,
       wbuffer_18_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_18_serverAdapterB_outDataCore$ENQ,
       wbuffer_18_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_19_memory
  wire [7 : 0] wbuffer_19_memory$ADDRA,
	       wbuffer_19_memory$ADDRB,
	       wbuffer_19_memory$DIA,
	       wbuffer_19_memory$DIB,
	       wbuffer_19_memory$DOA,
	       wbuffer_19_memory$DOB;
  wire wbuffer_19_memory$ENA,
       wbuffer_19_memory$ENB,
       wbuffer_19_memory$WEA,
       wbuffer_19_memory$WEB;

  // ports of submodule wbuffer_19_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_19_serverAdapterA_outDataCore$D_IN,
	       wbuffer_19_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_19_serverAdapterA_outDataCore$CLR,
       wbuffer_19_serverAdapterA_outDataCore$DEQ,
       wbuffer_19_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_19_serverAdapterA_outDataCore$ENQ,
       wbuffer_19_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_19_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_19_serverAdapterB_outDataCore$D_IN,
	       wbuffer_19_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_19_serverAdapterB_outDataCore$CLR,
       wbuffer_19_serverAdapterB_outDataCore$DEQ,
       wbuffer_19_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_19_serverAdapterB_outDataCore$ENQ,
       wbuffer_19_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_1_memory
  wire [7 : 0] wbuffer_1_memory$ADDRA,
	       wbuffer_1_memory$ADDRB,
	       wbuffer_1_memory$DIA,
	       wbuffer_1_memory$DIB,
	       wbuffer_1_memory$DOA,
	       wbuffer_1_memory$DOB;
  wire wbuffer_1_memory$ENA,
       wbuffer_1_memory$ENB,
       wbuffer_1_memory$WEA,
       wbuffer_1_memory$WEB;

  // ports of submodule wbuffer_1_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_1_serverAdapterA_outDataCore$D_IN,
	       wbuffer_1_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_1_serverAdapterA_outDataCore$CLR,
       wbuffer_1_serverAdapterA_outDataCore$DEQ,
       wbuffer_1_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_1_serverAdapterA_outDataCore$ENQ,
       wbuffer_1_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_1_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_1_serverAdapterB_outDataCore$D_IN,
	       wbuffer_1_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_1_serverAdapterB_outDataCore$CLR,
       wbuffer_1_serverAdapterB_outDataCore$DEQ,
       wbuffer_1_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_1_serverAdapterB_outDataCore$ENQ,
       wbuffer_1_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_20_memory
  wire [7 : 0] wbuffer_20_memory$ADDRA,
	       wbuffer_20_memory$ADDRB,
	       wbuffer_20_memory$DIA,
	       wbuffer_20_memory$DIB,
	       wbuffer_20_memory$DOA,
	       wbuffer_20_memory$DOB;
  wire wbuffer_20_memory$ENA,
       wbuffer_20_memory$ENB,
       wbuffer_20_memory$WEA,
       wbuffer_20_memory$WEB;

  // ports of submodule wbuffer_20_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_20_serverAdapterA_outDataCore$D_IN,
	       wbuffer_20_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_20_serverAdapterA_outDataCore$CLR,
       wbuffer_20_serverAdapterA_outDataCore$DEQ,
       wbuffer_20_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_20_serverAdapterA_outDataCore$ENQ,
       wbuffer_20_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_20_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_20_serverAdapterB_outDataCore$D_IN,
	       wbuffer_20_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_20_serverAdapterB_outDataCore$CLR,
       wbuffer_20_serverAdapterB_outDataCore$DEQ,
       wbuffer_20_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_20_serverAdapterB_outDataCore$ENQ,
       wbuffer_20_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_21_memory
  wire [7 : 0] wbuffer_21_memory$ADDRA,
	       wbuffer_21_memory$ADDRB,
	       wbuffer_21_memory$DIA,
	       wbuffer_21_memory$DIB,
	       wbuffer_21_memory$DOA,
	       wbuffer_21_memory$DOB;
  wire wbuffer_21_memory$ENA,
       wbuffer_21_memory$ENB,
       wbuffer_21_memory$WEA,
       wbuffer_21_memory$WEB;

  // ports of submodule wbuffer_21_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_21_serverAdapterA_outDataCore$D_IN,
	       wbuffer_21_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_21_serverAdapterA_outDataCore$CLR,
       wbuffer_21_serverAdapterA_outDataCore$DEQ,
       wbuffer_21_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_21_serverAdapterA_outDataCore$ENQ,
       wbuffer_21_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_21_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_21_serverAdapterB_outDataCore$D_IN,
	       wbuffer_21_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_21_serverAdapterB_outDataCore$CLR,
       wbuffer_21_serverAdapterB_outDataCore$DEQ,
       wbuffer_21_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_21_serverAdapterB_outDataCore$ENQ,
       wbuffer_21_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_22_memory
  wire [7 : 0] wbuffer_22_memory$ADDRA,
	       wbuffer_22_memory$ADDRB,
	       wbuffer_22_memory$DIA,
	       wbuffer_22_memory$DIB,
	       wbuffer_22_memory$DOA,
	       wbuffer_22_memory$DOB;
  wire wbuffer_22_memory$ENA,
       wbuffer_22_memory$ENB,
       wbuffer_22_memory$WEA,
       wbuffer_22_memory$WEB;

  // ports of submodule wbuffer_22_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_22_serverAdapterA_outDataCore$D_IN,
	       wbuffer_22_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_22_serverAdapterA_outDataCore$CLR,
       wbuffer_22_serverAdapterA_outDataCore$DEQ,
       wbuffer_22_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_22_serverAdapterA_outDataCore$ENQ,
       wbuffer_22_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_22_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_22_serverAdapterB_outDataCore$D_IN,
	       wbuffer_22_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_22_serverAdapterB_outDataCore$CLR,
       wbuffer_22_serverAdapterB_outDataCore$DEQ,
       wbuffer_22_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_22_serverAdapterB_outDataCore$ENQ,
       wbuffer_22_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_23_memory
  wire [7 : 0] wbuffer_23_memory$ADDRA,
	       wbuffer_23_memory$ADDRB,
	       wbuffer_23_memory$DIA,
	       wbuffer_23_memory$DIB,
	       wbuffer_23_memory$DOA,
	       wbuffer_23_memory$DOB;
  wire wbuffer_23_memory$ENA,
       wbuffer_23_memory$ENB,
       wbuffer_23_memory$WEA,
       wbuffer_23_memory$WEB;

  // ports of submodule wbuffer_23_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_23_serverAdapterA_outDataCore$D_IN,
	       wbuffer_23_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_23_serverAdapterA_outDataCore$CLR,
       wbuffer_23_serverAdapterA_outDataCore$DEQ,
       wbuffer_23_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_23_serverAdapterA_outDataCore$ENQ,
       wbuffer_23_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_23_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_23_serverAdapterB_outDataCore$D_IN,
	       wbuffer_23_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_23_serverAdapterB_outDataCore$CLR,
       wbuffer_23_serverAdapterB_outDataCore$DEQ,
       wbuffer_23_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_23_serverAdapterB_outDataCore$ENQ,
       wbuffer_23_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_24_memory
  wire [7 : 0] wbuffer_24_memory$ADDRA,
	       wbuffer_24_memory$ADDRB,
	       wbuffer_24_memory$DIA,
	       wbuffer_24_memory$DIB,
	       wbuffer_24_memory$DOA,
	       wbuffer_24_memory$DOB;
  wire wbuffer_24_memory$ENA,
       wbuffer_24_memory$ENB,
       wbuffer_24_memory$WEA,
       wbuffer_24_memory$WEB;

  // ports of submodule wbuffer_24_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_24_serverAdapterA_outDataCore$D_IN,
	       wbuffer_24_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_24_serverAdapterA_outDataCore$CLR,
       wbuffer_24_serverAdapterA_outDataCore$DEQ,
       wbuffer_24_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_24_serverAdapterA_outDataCore$ENQ,
       wbuffer_24_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_24_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_24_serverAdapterB_outDataCore$D_IN,
	       wbuffer_24_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_24_serverAdapterB_outDataCore$CLR,
       wbuffer_24_serverAdapterB_outDataCore$DEQ,
       wbuffer_24_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_24_serverAdapterB_outDataCore$ENQ,
       wbuffer_24_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_25_memory
  wire [7 : 0] wbuffer_25_memory$ADDRA,
	       wbuffer_25_memory$ADDRB,
	       wbuffer_25_memory$DIA,
	       wbuffer_25_memory$DIB,
	       wbuffer_25_memory$DOA,
	       wbuffer_25_memory$DOB;
  wire wbuffer_25_memory$ENA,
       wbuffer_25_memory$ENB,
       wbuffer_25_memory$WEA,
       wbuffer_25_memory$WEB;

  // ports of submodule wbuffer_25_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_25_serverAdapterA_outDataCore$D_IN,
	       wbuffer_25_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_25_serverAdapterA_outDataCore$CLR,
       wbuffer_25_serverAdapterA_outDataCore$DEQ,
       wbuffer_25_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_25_serverAdapterA_outDataCore$ENQ,
       wbuffer_25_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_25_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_25_serverAdapterB_outDataCore$D_IN,
	       wbuffer_25_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_25_serverAdapterB_outDataCore$CLR,
       wbuffer_25_serverAdapterB_outDataCore$DEQ,
       wbuffer_25_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_25_serverAdapterB_outDataCore$ENQ,
       wbuffer_25_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_26_memory
  wire [7 : 0] wbuffer_26_memory$ADDRA,
	       wbuffer_26_memory$ADDRB,
	       wbuffer_26_memory$DIA,
	       wbuffer_26_memory$DIB,
	       wbuffer_26_memory$DOA,
	       wbuffer_26_memory$DOB;
  wire wbuffer_26_memory$ENA,
       wbuffer_26_memory$ENB,
       wbuffer_26_memory$WEA,
       wbuffer_26_memory$WEB;

  // ports of submodule wbuffer_26_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_26_serverAdapterA_outDataCore$D_IN,
	       wbuffer_26_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_26_serverAdapterA_outDataCore$CLR,
       wbuffer_26_serverAdapterA_outDataCore$DEQ,
       wbuffer_26_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_26_serverAdapterA_outDataCore$ENQ,
       wbuffer_26_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_26_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_26_serverAdapterB_outDataCore$D_IN,
	       wbuffer_26_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_26_serverAdapterB_outDataCore$CLR,
       wbuffer_26_serverAdapterB_outDataCore$DEQ,
       wbuffer_26_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_26_serverAdapterB_outDataCore$ENQ,
       wbuffer_26_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_27_memory
  wire [7 : 0] wbuffer_27_memory$ADDRA,
	       wbuffer_27_memory$ADDRB,
	       wbuffer_27_memory$DIA,
	       wbuffer_27_memory$DIB,
	       wbuffer_27_memory$DOA,
	       wbuffer_27_memory$DOB;
  wire wbuffer_27_memory$ENA,
       wbuffer_27_memory$ENB,
       wbuffer_27_memory$WEA,
       wbuffer_27_memory$WEB;

  // ports of submodule wbuffer_27_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_27_serverAdapterA_outDataCore$D_IN,
	       wbuffer_27_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_27_serverAdapterA_outDataCore$CLR,
       wbuffer_27_serverAdapterA_outDataCore$DEQ,
       wbuffer_27_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_27_serverAdapterA_outDataCore$ENQ,
       wbuffer_27_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_27_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_27_serverAdapterB_outDataCore$D_IN,
	       wbuffer_27_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_27_serverAdapterB_outDataCore$CLR,
       wbuffer_27_serverAdapterB_outDataCore$DEQ,
       wbuffer_27_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_27_serverAdapterB_outDataCore$ENQ,
       wbuffer_27_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_28_memory
  wire [7 : 0] wbuffer_28_memory$ADDRA,
	       wbuffer_28_memory$ADDRB,
	       wbuffer_28_memory$DIA,
	       wbuffer_28_memory$DIB,
	       wbuffer_28_memory$DOA,
	       wbuffer_28_memory$DOB;
  wire wbuffer_28_memory$ENA,
       wbuffer_28_memory$ENB,
       wbuffer_28_memory$WEA,
       wbuffer_28_memory$WEB;

  // ports of submodule wbuffer_28_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_28_serverAdapterA_outDataCore$D_IN,
	       wbuffer_28_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_28_serverAdapterA_outDataCore$CLR,
       wbuffer_28_serverAdapterA_outDataCore$DEQ,
       wbuffer_28_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_28_serverAdapterA_outDataCore$ENQ,
       wbuffer_28_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_28_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_28_serverAdapterB_outDataCore$D_IN,
	       wbuffer_28_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_28_serverAdapterB_outDataCore$CLR,
       wbuffer_28_serverAdapterB_outDataCore$DEQ,
       wbuffer_28_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_28_serverAdapterB_outDataCore$ENQ,
       wbuffer_28_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_29_memory
  wire [7 : 0] wbuffer_29_memory$ADDRA,
	       wbuffer_29_memory$ADDRB,
	       wbuffer_29_memory$DIA,
	       wbuffer_29_memory$DIB,
	       wbuffer_29_memory$DOA,
	       wbuffer_29_memory$DOB;
  wire wbuffer_29_memory$ENA,
       wbuffer_29_memory$ENB,
       wbuffer_29_memory$WEA,
       wbuffer_29_memory$WEB;

  // ports of submodule wbuffer_29_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_29_serverAdapterA_outDataCore$D_IN,
	       wbuffer_29_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_29_serverAdapterA_outDataCore$CLR,
       wbuffer_29_serverAdapterA_outDataCore$DEQ,
       wbuffer_29_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_29_serverAdapterA_outDataCore$ENQ,
       wbuffer_29_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_29_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_29_serverAdapterB_outDataCore$D_IN,
	       wbuffer_29_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_29_serverAdapterB_outDataCore$CLR,
       wbuffer_29_serverAdapterB_outDataCore$DEQ,
       wbuffer_29_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_29_serverAdapterB_outDataCore$ENQ,
       wbuffer_29_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_2_memory
  wire [7 : 0] wbuffer_2_memory$ADDRA,
	       wbuffer_2_memory$ADDRB,
	       wbuffer_2_memory$DIA,
	       wbuffer_2_memory$DIB,
	       wbuffer_2_memory$DOA,
	       wbuffer_2_memory$DOB;
  wire wbuffer_2_memory$ENA,
       wbuffer_2_memory$ENB,
       wbuffer_2_memory$WEA,
       wbuffer_2_memory$WEB;

  // ports of submodule wbuffer_2_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_2_serverAdapterA_outDataCore$D_IN,
	       wbuffer_2_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_2_serverAdapterA_outDataCore$CLR,
       wbuffer_2_serverAdapterA_outDataCore$DEQ,
       wbuffer_2_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_2_serverAdapterA_outDataCore$ENQ,
       wbuffer_2_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_2_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_2_serverAdapterB_outDataCore$D_IN,
	       wbuffer_2_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_2_serverAdapterB_outDataCore$CLR,
       wbuffer_2_serverAdapterB_outDataCore$DEQ,
       wbuffer_2_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_2_serverAdapterB_outDataCore$ENQ,
       wbuffer_2_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_30_memory
  wire [7 : 0] wbuffer_30_memory$ADDRA,
	       wbuffer_30_memory$ADDRB,
	       wbuffer_30_memory$DIA,
	       wbuffer_30_memory$DIB,
	       wbuffer_30_memory$DOA,
	       wbuffer_30_memory$DOB;
  wire wbuffer_30_memory$ENA,
       wbuffer_30_memory$ENB,
       wbuffer_30_memory$WEA,
       wbuffer_30_memory$WEB;

  // ports of submodule wbuffer_30_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_30_serverAdapterA_outDataCore$D_IN,
	       wbuffer_30_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_30_serverAdapterA_outDataCore$CLR,
       wbuffer_30_serverAdapterA_outDataCore$DEQ,
       wbuffer_30_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_30_serverAdapterA_outDataCore$ENQ,
       wbuffer_30_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_30_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_30_serverAdapterB_outDataCore$D_IN,
	       wbuffer_30_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_30_serverAdapterB_outDataCore$CLR,
       wbuffer_30_serverAdapterB_outDataCore$DEQ,
       wbuffer_30_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_30_serverAdapterB_outDataCore$ENQ,
       wbuffer_30_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_31_memory
  wire [7 : 0] wbuffer_31_memory$ADDRA,
	       wbuffer_31_memory$ADDRB,
	       wbuffer_31_memory$DIA,
	       wbuffer_31_memory$DIB,
	       wbuffer_31_memory$DOA,
	       wbuffer_31_memory$DOB;
  wire wbuffer_31_memory$ENA,
       wbuffer_31_memory$ENB,
       wbuffer_31_memory$WEA,
       wbuffer_31_memory$WEB;

  // ports of submodule wbuffer_31_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_31_serverAdapterA_outDataCore$D_IN,
	       wbuffer_31_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_31_serverAdapterA_outDataCore$CLR,
       wbuffer_31_serverAdapterA_outDataCore$DEQ,
       wbuffer_31_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_31_serverAdapterA_outDataCore$ENQ,
       wbuffer_31_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_31_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_31_serverAdapterB_outDataCore$D_IN,
	       wbuffer_31_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_31_serverAdapterB_outDataCore$CLR,
       wbuffer_31_serverAdapterB_outDataCore$DEQ,
       wbuffer_31_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_31_serverAdapterB_outDataCore$ENQ,
       wbuffer_31_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_3_memory
  wire [7 : 0] wbuffer_3_memory$ADDRA,
	       wbuffer_3_memory$ADDRB,
	       wbuffer_3_memory$DIA,
	       wbuffer_3_memory$DIB,
	       wbuffer_3_memory$DOA,
	       wbuffer_3_memory$DOB;
  wire wbuffer_3_memory$ENA,
       wbuffer_3_memory$ENB,
       wbuffer_3_memory$WEA,
       wbuffer_3_memory$WEB;

  // ports of submodule wbuffer_3_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_3_serverAdapterA_outDataCore$D_IN,
	       wbuffer_3_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_3_serverAdapterA_outDataCore$CLR,
       wbuffer_3_serverAdapterA_outDataCore$DEQ,
       wbuffer_3_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_3_serverAdapterA_outDataCore$ENQ,
       wbuffer_3_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_3_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_3_serverAdapterB_outDataCore$D_IN,
	       wbuffer_3_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_3_serverAdapterB_outDataCore$CLR,
       wbuffer_3_serverAdapterB_outDataCore$DEQ,
       wbuffer_3_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_3_serverAdapterB_outDataCore$ENQ,
       wbuffer_3_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_4_memory
  wire [7 : 0] wbuffer_4_memory$ADDRA,
	       wbuffer_4_memory$ADDRB,
	       wbuffer_4_memory$DIA,
	       wbuffer_4_memory$DIB,
	       wbuffer_4_memory$DOA,
	       wbuffer_4_memory$DOB;
  wire wbuffer_4_memory$ENA,
       wbuffer_4_memory$ENB,
       wbuffer_4_memory$WEA,
       wbuffer_4_memory$WEB;

  // ports of submodule wbuffer_4_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_4_serverAdapterA_outDataCore$D_IN,
	       wbuffer_4_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_4_serverAdapterA_outDataCore$CLR,
       wbuffer_4_serverAdapterA_outDataCore$DEQ,
       wbuffer_4_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_4_serverAdapterA_outDataCore$ENQ,
       wbuffer_4_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_4_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_4_serverAdapterB_outDataCore$D_IN,
	       wbuffer_4_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_4_serverAdapterB_outDataCore$CLR,
       wbuffer_4_serverAdapterB_outDataCore$DEQ,
       wbuffer_4_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_4_serverAdapterB_outDataCore$ENQ,
       wbuffer_4_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_5_memory
  wire [7 : 0] wbuffer_5_memory$ADDRA,
	       wbuffer_5_memory$ADDRB,
	       wbuffer_5_memory$DIA,
	       wbuffer_5_memory$DIB,
	       wbuffer_5_memory$DOA,
	       wbuffer_5_memory$DOB;
  wire wbuffer_5_memory$ENA,
       wbuffer_5_memory$ENB,
       wbuffer_5_memory$WEA,
       wbuffer_5_memory$WEB;

  // ports of submodule wbuffer_5_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_5_serverAdapterA_outDataCore$D_IN,
	       wbuffer_5_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_5_serverAdapterA_outDataCore$CLR,
       wbuffer_5_serverAdapterA_outDataCore$DEQ,
       wbuffer_5_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_5_serverAdapterA_outDataCore$ENQ,
       wbuffer_5_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_5_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_5_serverAdapterB_outDataCore$D_IN,
	       wbuffer_5_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_5_serverAdapterB_outDataCore$CLR,
       wbuffer_5_serverAdapterB_outDataCore$DEQ,
       wbuffer_5_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_5_serverAdapterB_outDataCore$ENQ,
       wbuffer_5_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_6_memory
  wire [7 : 0] wbuffer_6_memory$ADDRA,
	       wbuffer_6_memory$ADDRB,
	       wbuffer_6_memory$DIA,
	       wbuffer_6_memory$DIB,
	       wbuffer_6_memory$DOA,
	       wbuffer_6_memory$DOB;
  wire wbuffer_6_memory$ENA,
       wbuffer_6_memory$ENB,
       wbuffer_6_memory$WEA,
       wbuffer_6_memory$WEB;

  // ports of submodule wbuffer_6_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_6_serverAdapterA_outDataCore$D_IN,
	       wbuffer_6_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_6_serverAdapterA_outDataCore$CLR,
       wbuffer_6_serverAdapterA_outDataCore$DEQ,
       wbuffer_6_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_6_serverAdapterA_outDataCore$ENQ,
       wbuffer_6_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_6_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_6_serverAdapterB_outDataCore$D_IN,
	       wbuffer_6_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_6_serverAdapterB_outDataCore$CLR,
       wbuffer_6_serverAdapterB_outDataCore$DEQ,
       wbuffer_6_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_6_serverAdapterB_outDataCore$ENQ,
       wbuffer_6_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_7_memory
  wire [7 : 0] wbuffer_7_memory$ADDRA,
	       wbuffer_7_memory$ADDRB,
	       wbuffer_7_memory$DIA,
	       wbuffer_7_memory$DIB,
	       wbuffer_7_memory$DOA,
	       wbuffer_7_memory$DOB;
  wire wbuffer_7_memory$ENA,
       wbuffer_7_memory$ENB,
       wbuffer_7_memory$WEA,
       wbuffer_7_memory$WEB;

  // ports of submodule wbuffer_7_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_7_serverAdapterA_outDataCore$D_IN,
	       wbuffer_7_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_7_serverAdapterA_outDataCore$CLR,
       wbuffer_7_serverAdapterA_outDataCore$DEQ,
       wbuffer_7_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_7_serverAdapterA_outDataCore$ENQ,
       wbuffer_7_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_7_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_7_serverAdapterB_outDataCore$D_IN,
	       wbuffer_7_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_7_serverAdapterB_outDataCore$CLR,
       wbuffer_7_serverAdapterB_outDataCore$DEQ,
       wbuffer_7_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_7_serverAdapterB_outDataCore$ENQ,
       wbuffer_7_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_8_memory
  wire [7 : 0] wbuffer_8_memory$ADDRA,
	       wbuffer_8_memory$ADDRB,
	       wbuffer_8_memory$DIA,
	       wbuffer_8_memory$DIB,
	       wbuffer_8_memory$DOA,
	       wbuffer_8_memory$DOB;
  wire wbuffer_8_memory$ENA,
       wbuffer_8_memory$ENB,
       wbuffer_8_memory$WEA,
       wbuffer_8_memory$WEB;

  // ports of submodule wbuffer_8_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_8_serverAdapterA_outDataCore$D_IN,
	       wbuffer_8_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_8_serverAdapterA_outDataCore$CLR,
       wbuffer_8_serverAdapterA_outDataCore$DEQ,
       wbuffer_8_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_8_serverAdapterA_outDataCore$ENQ,
       wbuffer_8_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_8_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_8_serverAdapterB_outDataCore$D_IN,
	       wbuffer_8_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_8_serverAdapterB_outDataCore$CLR,
       wbuffer_8_serverAdapterB_outDataCore$DEQ,
       wbuffer_8_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_8_serverAdapterB_outDataCore$ENQ,
       wbuffer_8_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule wbuffer_9_memory
  wire [7 : 0] wbuffer_9_memory$ADDRA,
	       wbuffer_9_memory$ADDRB,
	       wbuffer_9_memory$DIA,
	       wbuffer_9_memory$DIB,
	       wbuffer_9_memory$DOA,
	       wbuffer_9_memory$DOB;
  wire wbuffer_9_memory$ENA,
       wbuffer_9_memory$ENB,
       wbuffer_9_memory$WEA,
       wbuffer_9_memory$WEB;

  // ports of submodule wbuffer_9_serverAdapterA_outDataCore
  wire [7 : 0] wbuffer_9_serverAdapterA_outDataCore$D_IN,
	       wbuffer_9_serverAdapterA_outDataCore$D_OUT;
  wire wbuffer_9_serverAdapterA_outDataCore$CLR,
       wbuffer_9_serverAdapterA_outDataCore$DEQ,
       wbuffer_9_serverAdapterA_outDataCore$EMPTY_N,
       wbuffer_9_serverAdapterA_outDataCore$ENQ,
       wbuffer_9_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule wbuffer_9_serverAdapterB_outDataCore
  wire [7 : 0] wbuffer_9_serverAdapterB_outDataCore$D_IN,
	       wbuffer_9_serverAdapterB_outDataCore$D_OUT;
  wire wbuffer_9_serverAdapterB_outDataCore$CLR,
       wbuffer_9_serverAdapterB_outDataCore$DEQ,
       wbuffer_9_serverAdapterB_outDataCore$EMPTY_N,
       wbuffer_9_serverAdapterB_outDataCore$ENQ,
       wbuffer_9_serverAdapterB_outDataCore$FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_ibuffer_0_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_0_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_10_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_10_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_11_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_11_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_12_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_12_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_13_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_13_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_14_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_14_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_15_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_15_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_16_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_16_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_17_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_17_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_18_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_18_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_19_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_19_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_1_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_1_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_20_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_20_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_21_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_21_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_22_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_22_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_23_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_23_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_24_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_24_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_25_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_25_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_26_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_26_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_27_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_27_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_28_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_28_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_29_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_29_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_2_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_2_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_30_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_30_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_31_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_31_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_3_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_3_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_4_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_4_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_5_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_5_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_6_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_6_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_7_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_7_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_8_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_8_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_9_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_ibuffer_9_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_0_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_0_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_10_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_10_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_11_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_11_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_12_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_12_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_13_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_13_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_14_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_14_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_15_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_15_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_16_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_16_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_17_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_17_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_18_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_18_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_19_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_19_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_1_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_1_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_20_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_20_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_21_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_21_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_22_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_22_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_23_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_23_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_24_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_24_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_25_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_25_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_26_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_26_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_27_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_27_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_28_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_28_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_29_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_29_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_2_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_2_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_30_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_30_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_31_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_31_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_3_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_3_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_4_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_4_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_5_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_5_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_6_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_6_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_7_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_7_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_8_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_8_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_9_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer1_9_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_0_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_0_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_10_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_10_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_11_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_11_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_12_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_12_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_13_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_13_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_14_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_14_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_15_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_15_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_16_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_16_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_17_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_17_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_18_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_18_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_19_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_19_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_1_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_1_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_20_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_20_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_21_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_21_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_22_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_22_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_23_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_23_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_24_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_24_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_25_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_25_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_26_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_26_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_27_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_27_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_28_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_28_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_29_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_29_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_2_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_2_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_30_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_30_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_31_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_31_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_3_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_3_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_4_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_4_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_5_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_5_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_6_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_6_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_7_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_7_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_8_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_8_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_9_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_obuffer2_9_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_0_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_0_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_10_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_10_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_11_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_11_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_12_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_12_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_13_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_13_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_14_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_14_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_15_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_15_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_16_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_16_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_17_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_17_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_18_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_18_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_19_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_19_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_1_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_1_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_20_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_20_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_21_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_21_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_22_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_22_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_23_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_23_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_24_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_24_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_25_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_25_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_26_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_26_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_27_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_27_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_28_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_28_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_29_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_29_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_2_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_2_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_30_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_30_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_31_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_31_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_3_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_3_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_4_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_4_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_5_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_5_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_6_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_6_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_7_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_7_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_8_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_8_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_9_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_wbuffer_9_serverAdapterB_outData_enqAndDeq;

  // inputs to muxes for submodule ports
  wire [1 : 0] MUX_ibuffer_0_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_0_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_10_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_10_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_11_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_11_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_12_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_12_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_13_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_13_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_14_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_14_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_15_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_15_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_16_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_16_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_17_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_17_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_18_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_18_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_19_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_19_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_1_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_1_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_20_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_20_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_21_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_21_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_22_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_22_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_23_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_23_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_24_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_24_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_25_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_25_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_26_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_26_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_27_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_27_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_28_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_28_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_29_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_29_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_2_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_2_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_30_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_30_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_31_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_31_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_3_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_3_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_4_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_4_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_5_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_5_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_6_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_6_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_7_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_7_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_8_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_8_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_9_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_ibuffer_9_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_0_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_0_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_10_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_10_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_11_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_11_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_12_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_12_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_13_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_13_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_14_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_14_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_15_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_15_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_16_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_16_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_17_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_17_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_18_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_18_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_19_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_19_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_1_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_1_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_20_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_20_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_21_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_21_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_22_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_22_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_23_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_23_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_24_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_24_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_25_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_25_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_26_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_26_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_27_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_27_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_28_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_28_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_29_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_29_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_2_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_2_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_30_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_30_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_31_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_31_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_3_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_3_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_4_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_4_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_5_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_5_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_6_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_6_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_7_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_7_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_8_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_8_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_9_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer1_9_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_0_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_0_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_10_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_10_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_11_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_11_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_12_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_12_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_13_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_13_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_14_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_14_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_15_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_15_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_16_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_16_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_17_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_17_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_18_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_18_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_19_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_19_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_1_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_1_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_20_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_20_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_21_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_21_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_22_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_22_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_23_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_23_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_24_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_24_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_25_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_25_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_26_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_26_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_27_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_27_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_28_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_28_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_29_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_29_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_2_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_2_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_30_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_30_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_31_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_31_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_3_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_3_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_4_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_4_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_5_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_5_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_6_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_6_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_7_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_7_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_8_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_8_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_9_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_obuffer2_9_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_0_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_0_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_10_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_10_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_11_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_11_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_12_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_12_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_13_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_13_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_14_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_14_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_15_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_15_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_16_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_16_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_17_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_17_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_18_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_18_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_19_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_19_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_1_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_1_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_20_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_20_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_21_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_21_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_22_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_22_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_23_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_23_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_24_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_24_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_25_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_25_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_26_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_26_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_27_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_27_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_28_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_28_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_29_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_29_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_2_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_2_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_30_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_30_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_31_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_31_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_3_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_3_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_4_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_4_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_5_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_5_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_6_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_6_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_7_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_7_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_8_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_8_serverAdapterB_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_9_serverAdapterA_s1_1$wset_1__VAL_2,
	       MUX_wbuffer_9_serverAdapterB_s1_1$wset_1__VAL_2;

  // remaining internal signals
  wire [2 : 0] ibuffer_0_serverAdapterA_cnt_7_PLUS_IF_ibuffer_ETC___d33,
	       ibuffer_0_serverAdapterB_cnt_0_PLUS_IF_ibuffer_ETC___d86,
	       ibuffer_10_serverAdapterA_cnt_068_PLUS_IF_ibuf_ETC___d1074,
	       ibuffer_10_serverAdapterB_cnt_120_PLUS_IF_ibuf_ETC___d1126,
	       ibuffer_11_serverAdapterA_cnt_172_PLUS_IF_ibuf_ETC___d1178,
	       ibuffer_11_serverAdapterB_cnt_224_PLUS_IF_ibuf_ETC___d1230,
	       ibuffer_12_serverAdapterA_cnt_276_PLUS_IF_ibuf_ETC___d1282,
	       ibuffer_12_serverAdapterB_cnt_328_PLUS_IF_ibuf_ETC___d1334,
	       ibuffer_13_serverAdapterA_cnt_380_PLUS_IF_ibuf_ETC___d1386,
	       ibuffer_13_serverAdapterB_cnt_432_PLUS_IF_ibuf_ETC___d1438,
	       ibuffer_14_serverAdapterA_cnt_484_PLUS_IF_ibuf_ETC___d1490,
	       ibuffer_14_serverAdapterB_cnt_536_PLUS_IF_ibuf_ETC___d1542,
	       ibuffer_15_serverAdapterA_cnt_588_PLUS_IF_ibuf_ETC___d1594,
	       ibuffer_15_serverAdapterB_cnt_640_PLUS_IF_ibuf_ETC___d1646,
	       ibuffer_16_serverAdapterA_cnt_692_PLUS_IF_ibuf_ETC___d1698,
	       ibuffer_16_serverAdapterB_cnt_744_PLUS_IF_ibuf_ETC___d1750,
	       ibuffer_17_serverAdapterA_cnt_796_PLUS_IF_ibuf_ETC___d1802,
	       ibuffer_17_serverAdapterB_cnt_848_PLUS_IF_ibuf_ETC___d1854,
	       ibuffer_18_serverAdapterA_cnt_900_PLUS_IF_ibuf_ETC___d1906,
	       ibuffer_18_serverAdapterB_cnt_952_PLUS_IF_ibuf_ETC___d1958,
	       ibuffer_19_serverAdapterA_cnt_004_PLUS_IF_ibuf_ETC___d2010,
	       ibuffer_19_serverAdapterB_cnt_056_PLUS_IF_ibuf_ETC___d2062,
	       ibuffer_1_serverAdapterA_cnt_32_PLUS_IF_ibuffe_ETC___d138,
	       ibuffer_1_serverAdapterB_cnt_84_PLUS_IF_ibuffe_ETC___d190,
	       ibuffer_20_serverAdapterA_cnt_108_PLUS_IF_ibuf_ETC___d2114,
	       ibuffer_20_serverAdapterB_cnt_160_PLUS_IF_ibuf_ETC___d2166,
	       ibuffer_21_serverAdapterA_cnt_212_PLUS_IF_ibuf_ETC___d2218,
	       ibuffer_21_serverAdapterB_cnt_264_PLUS_IF_ibuf_ETC___d2270,
	       ibuffer_22_serverAdapterA_cnt_316_PLUS_IF_ibuf_ETC___d2322,
	       ibuffer_22_serverAdapterB_cnt_368_PLUS_IF_ibuf_ETC___d2374,
	       ibuffer_23_serverAdapterA_cnt_420_PLUS_IF_ibuf_ETC___d2426,
	       ibuffer_23_serverAdapterB_cnt_472_PLUS_IF_ibuf_ETC___d2478,
	       ibuffer_24_serverAdapterA_cnt_524_PLUS_IF_ibuf_ETC___d2530,
	       ibuffer_24_serverAdapterB_cnt_576_PLUS_IF_ibuf_ETC___d2582,
	       ibuffer_25_serverAdapterA_cnt_628_PLUS_IF_ibuf_ETC___d2634,
	       ibuffer_25_serverAdapterB_cnt_680_PLUS_IF_ibuf_ETC___d2686,
	       ibuffer_26_serverAdapterA_cnt_732_PLUS_IF_ibuf_ETC___d2738,
	       ibuffer_26_serverAdapterB_cnt_784_PLUS_IF_ibuf_ETC___d2790,
	       ibuffer_27_serverAdapterA_cnt_836_PLUS_IF_ibuf_ETC___d2842,
	       ibuffer_27_serverAdapterB_cnt_888_PLUS_IF_ibuf_ETC___d2894,
	       ibuffer_28_serverAdapterA_cnt_940_PLUS_IF_ibuf_ETC___d2946,
	       ibuffer_28_serverAdapterB_cnt_992_PLUS_IF_ibuf_ETC___d2998,
	       ibuffer_29_serverAdapterA_cnt_044_PLUS_IF_ibuf_ETC___d3050,
	       ibuffer_29_serverAdapterB_cnt_096_PLUS_IF_ibuf_ETC___d3102,
	       ibuffer_2_serverAdapterA_cnt_36_PLUS_IF_ibuffe_ETC___d242,
	       ibuffer_2_serverAdapterB_cnt_88_PLUS_IF_ibuffe_ETC___d294,
	       ibuffer_30_serverAdapterA_cnt_148_PLUS_IF_ibuf_ETC___d3154,
	       ibuffer_30_serverAdapterB_cnt_200_PLUS_IF_ibuf_ETC___d3206,
	       ibuffer_31_serverAdapterA_cnt_252_PLUS_IF_ibuf_ETC___d3258,
	       ibuffer_31_serverAdapterB_cnt_304_PLUS_IF_ibuf_ETC___d3310,
	       ibuffer_3_serverAdapterA_cnt_40_PLUS_IF_ibuffe_ETC___d346,
	       ibuffer_3_serverAdapterB_cnt_92_PLUS_IF_ibuffe_ETC___d398,
	       ibuffer_4_serverAdapterA_cnt_44_PLUS_IF_ibuffe_ETC___d450,
	       ibuffer_4_serverAdapterB_cnt_96_PLUS_IF_ibuffe_ETC___d502,
	       ibuffer_5_serverAdapterA_cnt_48_PLUS_IF_ibuffe_ETC___d554,
	       ibuffer_5_serverAdapterB_cnt_00_PLUS_IF_ibuffe_ETC___d606,
	       ibuffer_6_serverAdapterA_cnt_52_PLUS_IF_ibuffe_ETC___d658,
	       ibuffer_6_serverAdapterB_cnt_04_PLUS_IF_ibuffe_ETC___d710,
	       ibuffer_7_serverAdapterA_cnt_56_PLUS_IF_ibuffe_ETC___d762,
	       ibuffer_7_serverAdapterB_cnt_08_PLUS_IF_ibuffe_ETC___d814,
	       ibuffer_8_serverAdapterA_cnt_60_PLUS_IF_ibuffe_ETC___d866,
	       ibuffer_8_serverAdapterB_cnt_12_PLUS_IF_ibuffe_ETC___d918,
	       ibuffer_9_serverAdapterA_cnt_64_PLUS_IF_ibuffe_ETC___d970,
	       ibuffer_9_serverAdapterB_cnt_016_PLUS_IF_ibuff_ETC___d1022,
	       obuffer1_0_serverAdapterA_cnt_684_PLUS_IF_obuf_ETC___d6690,
	       obuffer1_0_serverAdapterB_cnt_736_PLUS_IF_obuf_ETC___d6742,
	       obuffer1_10_serverAdapterA_cnt_724_PLUS_IF_obu_ETC___d7730,
	       obuffer1_10_serverAdapterB_cnt_776_PLUS_IF_obu_ETC___d7782,
	       obuffer1_11_serverAdapterA_cnt_828_PLUS_IF_obu_ETC___d7834,
	       obuffer1_11_serverAdapterB_cnt_880_PLUS_IF_obu_ETC___d7886,
	       obuffer1_12_serverAdapterA_cnt_932_PLUS_IF_obu_ETC___d7938,
	       obuffer1_12_serverAdapterB_cnt_984_PLUS_IF_obu_ETC___d7990,
	       obuffer1_13_serverAdapterA_cnt_036_PLUS_IF_obu_ETC___d8042,
	       obuffer1_13_serverAdapterB_cnt_088_PLUS_IF_obu_ETC___d8094,
	       obuffer1_14_serverAdapterA_cnt_140_PLUS_IF_obu_ETC___d8146,
	       obuffer1_14_serverAdapterB_cnt_192_PLUS_IF_obu_ETC___d8198,
	       obuffer1_15_serverAdapterA_cnt_244_PLUS_IF_obu_ETC___d8250,
	       obuffer1_15_serverAdapterB_cnt_296_PLUS_IF_obu_ETC___d8302,
	       obuffer1_16_serverAdapterA_cnt_348_PLUS_IF_obu_ETC___d8354,
	       obuffer1_16_serverAdapterB_cnt_400_PLUS_IF_obu_ETC___d8406,
	       obuffer1_17_serverAdapterA_cnt_452_PLUS_IF_obu_ETC___d8458,
	       obuffer1_17_serverAdapterB_cnt_504_PLUS_IF_obu_ETC___d8510,
	       obuffer1_18_serverAdapterA_cnt_556_PLUS_IF_obu_ETC___d8562,
	       obuffer1_18_serverAdapterB_cnt_608_PLUS_IF_obu_ETC___d8614,
	       obuffer1_19_serverAdapterA_cnt_660_PLUS_IF_obu_ETC___d8666,
	       obuffer1_19_serverAdapterB_cnt_712_PLUS_IF_obu_ETC___d8718,
	       obuffer1_1_serverAdapterA_cnt_788_PLUS_IF_obuf_ETC___d6794,
	       obuffer1_1_serverAdapterB_cnt_840_PLUS_IF_obuf_ETC___d6846,
	       obuffer1_20_serverAdapterA_cnt_764_PLUS_IF_obu_ETC___d8770,
	       obuffer1_20_serverAdapterB_cnt_816_PLUS_IF_obu_ETC___d8822,
	       obuffer1_21_serverAdapterA_cnt_868_PLUS_IF_obu_ETC___d8874,
	       obuffer1_21_serverAdapterB_cnt_920_PLUS_IF_obu_ETC___d8926,
	       obuffer1_22_serverAdapterA_cnt_972_PLUS_IF_obu_ETC___d8978,
	       obuffer1_22_serverAdapterB_cnt_024_PLUS_IF_obu_ETC___d9030,
	       obuffer1_23_serverAdapterA_cnt_076_PLUS_IF_obu_ETC___d9082,
	       obuffer1_23_serverAdapterB_cnt_128_PLUS_IF_obu_ETC___d9134,
	       obuffer1_24_serverAdapterA_cnt_180_PLUS_IF_obu_ETC___d9186,
	       obuffer1_24_serverAdapterB_cnt_232_PLUS_IF_obu_ETC___d9238,
	       obuffer1_25_serverAdapterA_cnt_284_PLUS_IF_obu_ETC___d9290,
	       obuffer1_25_serverAdapterB_cnt_336_PLUS_IF_obu_ETC___d9342,
	       obuffer1_26_serverAdapterA_cnt_388_PLUS_IF_obu_ETC___d9394,
	       obuffer1_26_serverAdapterB_cnt_440_PLUS_IF_obu_ETC___d9446,
	       obuffer1_27_serverAdapterA_cnt_492_PLUS_IF_obu_ETC___d9498,
	       obuffer1_27_serverAdapterB_cnt_544_PLUS_IF_obu_ETC___d9550,
	       obuffer1_28_serverAdapterA_cnt_596_PLUS_IF_obu_ETC___d9602,
	       obuffer1_28_serverAdapterB_cnt_648_PLUS_IF_obu_ETC___d9654,
	       obuffer1_29_serverAdapterA_cnt_700_PLUS_IF_obu_ETC___d9706,
	       obuffer1_29_serverAdapterB_cnt_752_PLUS_IF_obu_ETC___d9758,
	       obuffer1_2_serverAdapterA_cnt_892_PLUS_IF_obuf_ETC___d6898,
	       obuffer1_2_serverAdapterB_cnt_944_PLUS_IF_obuf_ETC___d6950,
	       obuffer1_30_serverAdapterA_cnt_804_PLUS_IF_obu_ETC___d9810,
	       obuffer1_30_serverAdapterB_cnt_856_PLUS_IF_obu_ETC___d9862,
	       obuffer1_31_serverAdapterA_cnt_908_PLUS_IF_obu_ETC___d9914,
	       obuffer1_31_serverAdapterB_cnt_960_PLUS_IF_obu_ETC___d9966,
	       obuffer1_3_serverAdapterA_cnt_996_PLUS_IF_obuf_ETC___d7002,
	       obuffer1_3_serverAdapterB_cnt_048_PLUS_IF_obuf_ETC___d7054,
	       obuffer1_4_serverAdapterA_cnt_100_PLUS_IF_obuf_ETC___d7106,
	       obuffer1_4_serverAdapterB_cnt_152_PLUS_IF_obuf_ETC___d7158,
	       obuffer1_5_serverAdapterA_cnt_204_PLUS_IF_obuf_ETC___d7210,
	       obuffer1_5_serverAdapterB_cnt_256_PLUS_IF_obuf_ETC___d7262,
	       obuffer1_6_serverAdapterA_cnt_308_PLUS_IF_obuf_ETC___d7314,
	       obuffer1_6_serverAdapterB_cnt_360_PLUS_IF_obuf_ETC___d7366,
	       obuffer1_7_serverAdapterA_cnt_412_PLUS_IF_obuf_ETC___d7418,
	       obuffer1_7_serverAdapterB_cnt_464_PLUS_IF_obuf_ETC___d7470,
	       obuffer1_8_serverAdapterA_cnt_516_PLUS_IF_obuf_ETC___d7522,
	       obuffer1_8_serverAdapterB_cnt_568_PLUS_IF_obuf_ETC___d7574,
	       obuffer1_9_serverAdapterA_cnt_620_PLUS_IF_obuf_ETC___d7626,
	       obuffer1_9_serverAdapterB_cnt_672_PLUS_IF_obuf_ETC___d7678,
	       obuffer2_0_serverAdapterA_cnt_0012_PLUS_IF_obu_ETC___d10018,
	       obuffer2_0_serverAdapterB_cnt_0064_PLUS_IF_obu_ETC___d10070,
	       obuffer2_10_serverAdapterA_cnt_1052_PLUS_IF_ob_ETC___d11058,
	       obuffer2_10_serverAdapterB_cnt_1104_PLUS_IF_ob_ETC___d11110,
	       obuffer2_11_serverAdapterA_cnt_1156_PLUS_IF_ob_ETC___d11162,
	       obuffer2_11_serverAdapterB_cnt_1208_PLUS_IF_ob_ETC___d11214,
	       obuffer2_12_serverAdapterA_cnt_1260_PLUS_IF_ob_ETC___d11266,
	       obuffer2_12_serverAdapterB_cnt_1312_PLUS_IF_ob_ETC___d11318,
	       obuffer2_13_serverAdapterA_cnt_1364_PLUS_IF_ob_ETC___d11370,
	       obuffer2_13_serverAdapterB_cnt_1416_PLUS_IF_ob_ETC___d11422,
	       obuffer2_14_serverAdapterA_cnt_1468_PLUS_IF_ob_ETC___d11474,
	       obuffer2_14_serverAdapterB_cnt_1520_PLUS_IF_ob_ETC___d11526,
	       obuffer2_15_serverAdapterA_cnt_1572_PLUS_IF_ob_ETC___d11578,
	       obuffer2_15_serverAdapterB_cnt_1624_PLUS_IF_ob_ETC___d11630,
	       obuffer2_16_serverAdapterA_cnt_1676_PLUS_IF_ob_ETC___d11682,
	       obuffer2_16_serverAdapterB_cnt_1728_PLUS_IF_ob_ETC___d11734,
	       obuffer2_17_serverAdapterA_cnt_1780_PLUS_IF_ob_ETC___d11786,
	       obuffer2_17_serverAdapterB_cnt_1832_PLUS_IF_ob_ETC___d11838,
	       obuffer2_18_serverAdapterA_cnt_1884_PLUS_IF_ob_ETC___d11890,
	       obuffer2_18_serverAdapterB_cnt_1936_PLUS_IF_ob_ETC___d11942,
	       obuffer2_19_serverAdapterA_cnt_1988_PLUS_IF_ob_ETC___d11994,
	       obuffer2_19_serverAdapterB_cnt_2040_PLUS_IF_ob_ETC___d12046,
	       obuffer2_1_serverAdapterA_cnt_0116_PLUS_IF_obu_ETC___d10122,
	       obuffer2_1_serverAdapterB_cnt_0168_PLUS_IF_obu_ETC___d10174,
	       obuffer2_20_serverAdapterA_cnt_2092_PLUS_IF_ob_ETC___d12098,
	       obuffer2_20_serverAdapterB_cnt_2144_PLUS_IF_ob_ETC___d12150,
	       obuffer2_21_serverAdapterA_cnt_2196_PLUS_IF_ob_ETC___d12202,
	       obuffer2_21_serverAdapterB_cnt_2248_PLUS_IF_ob_ETC___d12254,
	       obuffer2_22_serverAdapterA_cnt_2300_PLUS_IF_ob_ETC___d12306,
	       obuffer2_22_serverAdapterB_cnt_2352_PLUS_IF_ob_ETC___d12358,
	       obuffer2_23_serverAdapterA_cnt_2404_PLUS_IF_ob_ETC___d12410,
	       obuffer2_23_serverAdapterB_cnt_2456_PLUS_IF_ob_ETC___d12462,
	       obuffer2_24_serverAdapterA_cnt_2508_PLUS_IF_ob_ETC___d12514,
	       obuffer2_24_serverAdapterB_cnt_2560_PLUS_IF_ob_ETC___d12566,
	       obuffer2_25_serverAdapterA_cnt_2612_PLUS_IF_ob_ETC___d12618,
	       obuffer2_25_serverAdapterB_cnt_2664_PLUS_IF_ob_ETC___d12670,
	       obuffer2_26_serverAdapterA_cnt_2716_PLUS_IF_ob_ETC___d12722,
	       obuffer2_26_serverAdapterB_cnt_2768_PLUS_IF_ob_ETC___d12774,
	       obuffer2_27_serverAdapterA_cnt_2820_PLUS_IF_ob_ETC___d12826,
	       obuffer2_27_serverAdapterB_cnt_2872_PLUS_IF_ob_ETC___d12878,
	       obuffer2_28_serverAdapterA_cnt_2924_PLUS_IF_ob_ETC___d12930,
	       obuffer2_28_serverAdapterB_cnt_2976_PLUS_IF_ob_ETC___d12982,
	       obuffer2_29_serverAdapterA_cnt_3028_PLUS_IF_ob_ETC___d13034,
	       obuffer2_29_serverAdapterB_cnt_3080_PLUS_IF_ob_ETC___d13086,
	       obuffer2_2_serverAdapterA_cnt_0220_PLUS_IF_obu_ETC___d10226,
	       obuffer2_2_serverAdapterB_cnt_0272_PLUS_IF_obu_ETC___d10278,
	       obuffer2_30_serverAdapterA_cnt_3132_PLUS_IF_ob_ETC___d13138,
	       obuffer2_30_serverAdapterB_cnt_3184_PLUS_IF_ob_ETC___d13190,
	       obuffer2_31_serverAdapterA_cnt_3236_PLUS_IF_ob_ETC___d13242,
	       obuffer2_31_serverAdapterB_cnt_3288_PLUS_IF_ob_ETC___d13294,
	       obuffer2_3_serverAdapterA_cnt_0324_PLUS_IF_obu_ETC___d10330,
	       obuffer2_3_serverAdapterB_cnt_0376_PLUS_IF_obu_ETC___d10382,
	       obuffer2_4_serverAdapterA_cnt_0428_PLUS_IF_obu_ETC___d10434,
	       obuffer2_4_serverAdapterB_cnt_0480_PLUS_IF_obu_ETC___d10486,
	       obuffer2_5_serverAdapterA_cnt_0532_PLUS_IF_obu_ETC___d10538,
	       obuffer2_5_serverAdapterB_cnt_0584_PLUS_IF_obu_ETC___d10590,
	       obuffer2_6_serverAdapterA_cnt_0636_PLUS_IF_obu_ETC___d10642,
	       obuffer2_6_serverAdapterB_cnt_0688_PLUS_IF_obu_ETC___d10694,
	       obuffer2_7_serverAdapterA_cnt_0740_PLUS_IF_obu_ETC___d10746,
	       obuffer2_7_serverAdapterB_cnt_0792_PLUS_IF_obu_ETC___d10798,
	       obuffer2_8_serverAdapterA_cnt_0844_PLUS_IF_obu_ETC___d10850,
	       obuffer2_8_serverAdapterB_cnt_0896_PLUS_IF_obu_ETC___d10902,
	       obuffer2_9_serverAdapterA_cnt_0948_PLUS_IF_obu_ETC___d10954,
	       obuffer2_9_serverAdapterB_cnt_1000_PLUS_IF_obu_ETC___d11006,
	       wbuffer_0_serverAdapterA_cnt_356_PLUS_IF_wbuff_ETC___d3362,
	       wbuffer_0_serverAdapterB_cnt_408_PLUS_IF_wbuff_ETC___d3414,
	       wbuffer_10_serverAdapterA_cnt_396_PLUS_IF_wbuf_ETC___d4402,
	       wbuffer_10_serverAdapterB_cnt_448_PLUS_IF_wbuf_ETC___d4454,
	       wbuffer_11_serverAdapterA_cnt_500_PLUS_IF_wbuf_ETC___d4506,
	       wbuffer_11_serverAdapterB_cnt_552_PLUS_IF_wbuf_ETC___d4558,
	       wbuffer_12_serverAdapterA_cnt_604_PLUS_IF_wbuf_ETC___d4610,
	       wbuffer_12_serverAdapterB_cnt_656_PLUS_IF_wbuf_ETC___d4662,
	       wbuffer_13_serverAdapterA_cnt_708_PLUS_IF_wbuf_ETC___d4714,
	       wbuffer_13_serverAdapterB_cnt_760_PLUS_IF_wbuf_ETC___d4766,
	       wbuffer_14_serverAdapterA_cnt_812_PLUS_IF_wbuf_ETC___d4818,
	       wbuffer_14_serverAdapterB_cnt_864_PLUS_IF_wbuf_ETC___d4870,
	       wbuffer_15_serverAdapterA_cnt_916_PLUS_IF_wbuf_ETC___d4922,
	       wbuffer_15_serverAdapterB_cnt_968_PLUS_IF_wbuf_ETC___d4974,
	       wbuffer_16_serverAdapterA_cnt_020_PLUS_IF_wbuf_ETC___d5026,
	       wbuffer_16_serverAdapterB_cnt_072_PLUS_IF_wbuf_ETC___d5078,
	       wbuffer_17_serverAdapterA_cnt_124_PLUS_IF_wbuf_ETC___d5130,
	       wbuffer_17_serverAdapterB_cnt_176_PLUS_IF_wbuf_ETC___d5182,
	       wbuffer_18_serverAdapterA_cnt_228_PLUS_IF_wbuf_ETC___d5234,
	       wbuffer_18_serverAdapterB_cnt_280_PLUS_IF_wbuf_ETC___d5286,
	       wbuffer_19_serverAdapterA_cnt_332_PLUS_IF_wbuf_ETC___d5338,
	       wbuffer_19_serverAdapterB_cnt_384_PLUS_IF_wbuf_ETC___d5390,
	       wbuffer_1_serverAdapterA_cnt_460_PLUS_IF_wbuff_ETC___d3466,
	       wbuffer_1_serverAdapterB_cnt_512_PLUS_IF_wbuff_ETC___d3518,
	       wbuffer_20_serverAdapterA_cnt_436_PLUS_IF_wbuf_ETC___d5442,
	       wbuffer_20_serverAdapterB_cnt_488_PLUS_IF_wbuf_ETC___d5494,
	       wbuffer_21_serverAdapterA_cnt_540_PLUS_IF_wbuf_ETC___d5546,
	       wbuffer_21_serverAdapterB_cnt_592_PLUS_IF_wbuf_ETC___d5598,
	       wbuffer_22_serverAdapterA_cnt_644_PLUS_IF_wbuf_ETC___d5650,
	       wbuffer_22_serverAdapterB_cnt_696_PLUS_IF_wbuf_ETC___d5702,
	       wbuffer_23_serverAdapterA_cnt_748_PLUS_IF_wbuf_ETC___d5754,
	       wbuffer_23_serverAdapterB_cnt_800_PLUS_IF_wbuf_ETC___d5806,
	       wbuffer_24_serverAdapterA_cnt_852_PLUS_IF_wbuf_ETC___d5858,
	       wbuffer_24_serverAdapterB_cnt_904_PLUS_IF_wbuf_ETC___d5910,
	       wbuffer_25_serverAdapterA_cnt_956_PLUS_IF_wbuf_ETC___d5962,
	       wbuffer_25_serverAdapterB_cnt_008_PLUS_IF_wbuf_ETC___d6014,
	       wbuffer_26_serverAdapterA_cnt_060_PLUS_IF_wbuf_ETC___d6066,
	       wbuffer_26_serverAdapterB_cnt_112_PLUS_IF_wbuf_ETC___d6118,
	       wbuffer_27_serverAdapterA_cnt_164_PLUS_IF_wbuf_ETC___d6170,
	       wbuffer_27_serverAdapterB_cnt_216_PLUS_IF_wbuf_ETC___d6222,
	       wbuffer_28_serverAdapterA_cnt_268_PLUS_IF_wbuf_ETC___d6274,
	       wbuffer_28_serverAdapterB_cnt_320_PLUS_IF_wbuf_ETC___d6326,
	       wbuffer_29_serverAdapterA_cnt_372_PLUS_IF_wbuf_ETC___d6378,
	       wbuffer_29_serverAdapterB_cnt_424_PLUS_IF_wbuf_ETC___d6430,
	       wbuffer_2_serverAdapterA_cnt_564_PLUS_IF_wbuff_ETC___d3570,
	       wbuffer_2_serverAdapterB_cnt_616_PLUS_IF_wbuff_ETC___d3622,
	       wbuffer_30_serverAdapterA_cnt_476_PLUS_IF_wbuf_ETC___d6482,
	       wbuffer_30_serverAdapterB_cnt_528_PLUS_IF_wbuf_ETC___d6534,
	       wbuffer_31_serverAdapterA_cnt_580_PLUS_IF_wbuf_ETC___d6586,
	       wbuffer_31_serverAdapterB_cnt_632_PLUS_IF_wbuf_ETC___d6638,
	       wbuffer_3_serverAdapterA_cnt_668_PLUS_IF_wbuff_ETC___d3674,
	       wbuffer_3_serverAdapterB_cnt_720_PLUS_IF_wbuff_ETC___d3726,
	       wbuffer_4_serverAdapterA_cnt_772_PLUS_IF_wbuff_ETC___d3778,
	       wbuffer_4_serverAdapterB_cnt_824_PLUS_IF_wbuff_ETC___d3830,
	       wbuffer_5_serverAdapterA_cnt_876_PLUS_IF_wbuff_ETC___d3882,
	       wbuffer_5_serverAdapterB_cnt_928_PLUS_IF_wbuff_ETC___d3934,
	       wbuffer_6_serverAdapterA_cnt_980_PLUS_IF_wbuff_ETC___d3986,
	       wbuffer_6_serverAdapterB_cnt_032_PLUS_IF_wbuff_ETC___d4038,
	       wbuffer_7_serverAdapterA_cnt_084_PLUS_IF_wbuff_ETC___d4090,
	       wbuffer_7_serverAdapterB_cnt_136_PLUS_IF_wbuff_ETC___d4142,
	       wbuffer_8_serverAdapterA_cnt_188_PLUS_IF_wbuff_ETC___d4194,
	       wbuffer_8_serverAdapterB_cnt_240_PLUS_IF_wbuff_ETC___d4246,
	       wbuffer_9_serverAdapterA_cnt_292_PLUS_IF_wbuff_ETC___d4298,
	       wbuffer_9_serverAdapterB_cnt_344_PLUS_IF_wbuff_ETC___d4350;
  wire [1 : 0] ibuf_0_portA_request_put_BITS_17_TO_16__q1,
	       ibuf_0_portB_request_put_BITS_17_TO_16__q2,
	       ibuf_10_portA_request_put_BITS_17_TO_16__q3,
	       ibuf_10_portB_request_put_BITS_17_TO_16__q4,
	       ibuf_11_portA_request_put_BITS_17_TO_16__q5,
	       ibuf_11_portB_request_put_BITS_17_TO_16__q6,
	       ibuf_12_portA_request_put_BITS_17_TO_16__q7,
	       ibuf_12_portB_request_put_BITS_17_TO_16__q8,
	       ibuf_13_portA_request_put_BITS_17_TO_16__q9,
	       ibuf_13_portB_request_put_BITS_17_TO_16__q10,
	       ibuf_14_portA_request_put_BITS_17_TO_16__q11,
	       ibuf_14_portB_request_put_BITS_17_TO_16__q12,
	       ibuf_15_portA_request_put_BITS_17_TO_16__q13,
	       ibuf_15_portB_request_put_BITS_17_TO_16__q14,
	       ibuf_16_portA_request_put_BITS_17_TO_16__q15,
	       ibuf_16_portB_request_put_BITS_17_TO_16__q16,
	       ibuf_17_portA_request_put_BITS_17_TO_16__q17,
	       ibuf_17_portB_request_put_BITS_17_TO_16__q18,
	       ibuf_18_portA_request_put_BITS_17_TO_16__q19,
	       ibuf_18_portB_request_put_BITS_17_TO_16__q20,
	       ibuf_19_portA_request_put_BITS_17_TO_16__q21,
	       ibuf_19_portB_request_put_BITS_17_TO_16__q22,
	       ibuf_1_portA_request_put_BITS_17_TO_16__q23,
	       ibuf_1_portB_request_put_BITS_17_TO_16__q24,
	       ibuf_20_portA_request_put_BITS_17_TO_16__q25,
	       ibuf_20_portB_request_put_BITS_17_TO_16__q26,
	       ibuf_21_portA_request_put_BITS_17_TO_16__q27,
	       ibuf_21_portB_request_put_BITS_17_TO_16__q28,
	       ibuf_22_portA_request_put_BITS_17_TO_16__q29,
	       ibuf_22_portB_request_put_BITS_17_TO_16__q30,
	       ibuf_23_portA_request_put_BITS_17_TO_16__q31,
	       ibuf_23_portB_request_put_BITS_17_TO_16__q32,
	       ibuf_24_portA_request_put_BITS_17_TO_16__q33,
	       ibuf_24_portB_request_put_BITS_17_TO_16__q34,
	       ibuf_25_portA_request_put_BITS_17_TO_16__q35,
	       ibuf_25_portB_request_put_BITS_17_TO_16__q36,
	       ibuf_26_portA_request_put_BITS_17_TO_16__q37,
	       ibuf_26_portB_request_put_BITS_17_TO_16__q38,
	       ibuf_27_portA_request_put_BITS_17_TO_16__q39,
	       ibuf_27_portB_request_put_BITS_17_TO_16__q40,
	       ibuf_28_portA_request_put_BITS_17_TO_16__q41,
	       ibuf_28_portB_request_put_BITS_17_TO_16__q42,
	       ibuf_29_portA_request_put_BITS_17_TO_16__q43,
	       ibuf_29_portB_request_put_BITS_17_TO_16__q44,
	       ibuf_2_portA_request_put_BITS_17_TO_16__q45,
	       ibuf_2_portB_request_put_BITS_17_TO_16__q46,
	       ibuf_30_portA_request_put_BITS_17_TO_16__q47,
	       ibuf_30_portB_request_put_BITS_17_TO_16__q48,
	       ibuf_31_portA_request_put_BITS_17_TO_16__q49,
	       ibuf_31_portB_request_put_BITS_17_TO_16__q50,
	       ibuf_3_portA_request_put_BITS_17_TO_16__q51,
	       ibuf_3_portB_request_put_BITS_17_TO_16__q52,
	       ibuf_4_portA_request_put_BITS_17_TO_16__q53,
	       ibuf_4_portB_request_put_BITS_17_TO_16__q54,
	       ibuf_5_portA_request_put_BITS_17_TO_16__q55,
	       ibuf_5_portB_request_put_BITS_17_TO_16__q56,
	       ibuf_6_portA_request_put_BITS_17_TO_16__q57,
	       ibuf_6_portB_request_put_BITS_17_TO_16__q58,
	       ibuf_7_portA_request_put_BITS_17_TO_16__q59,
	       ibuf_7_portB_request_put_BITS_17_TO_16__q60,
	       ibuf_8_portA_request_put_BITS_17_TO_16__q61,
	       ibuf_8_portB_request_put_BITS_17_TO_16__q62,
	       ibuf_9_portA_request_put_BITS_17_TO_16__q63,
	       ibuf_9_portB_request_put_BITS_17_TO_16__q64,
	       obuf1_0_portA_request_put_BITS_41_TO_40__q65,
	       obuf1_0_portB_request_put_BITS_41_TO_40__q66,
	       obuf1_10_portA_request_put_BITS_41_TO_40__q67,
	       obuf1_10_portB_request_put_BITS_41_TO_40__q68,
	       obuf1_11_portA_request_put_BITS_41_TO_40__q69,
	       obuf1_11_portB_request_put_BITS_41_TO_40__q70,
	       obuf1_12_portA_request_put_BITS_41_TO_40__q71,
	       obuf1_12_portB_request_put_BITS_41_TO_40__q72,
	       obuf1_13_portA_request_put_BITS_41_TO_40__q73,
	       obuf1_13_portB_request_put_BITS_41_TO_40__q74,
	       obuf1_14_portA_request_put_BITS_41_TO_40__q75,
	       obuf1_14_portB_request_put_BITS_41_TO_40__q76,
	       obuf1_15_portA_request_put_BITS_41_TO_40__q77,
	       obuf1_15_portB_request_put_BITS_41_TO_40__q78,
	       obuf1_16_portA_request_put_BITS_41_TO_40__q79,
	       obuf1_16_portB_request_put_BITS_41_TO_40__q80,
	       obuf1_17_portA_request_put_BITS_41_TO_40__q81,
	       obuf1_17_portB_request_put_BITS_41_TO_40__q82,
	       obuf1_18_portA_request_put_BITS_41_TO_40__q83,
	       obuf1_18_portB_request_put_BITS_41_TO_40__q84,
	       obuf1_19_portA_request_put_BITS_41_TO_40__q85,
	       obuf1_19_portB_request_put_BITS_41_TO_40__q86,
	       obuf1_1_portA_request_put_BITS_41_TO_40__q87,
	       obuf1_1_portB_request_put_BITS_41_TO_40__q88,
	       obuf1_20_portA_request_put_BITS_41_TO_40__q89,
	       obuf1_20_portB_request_put_BITS_41_TO_40__q90,
	       obuf1_21_portA_request_put_BITS_41_TO_40__q91,
	       obuf1_21_portB_request_put_BITS_41_TO_40__q92,
	       obuf1_22_portA_request_put_BITS_41_TO_40__q93,
	       obuf1_22_portB_request_put_BITS_41_TO_40__q94,
	       obuf1_23_portA_request_put_BITS_41_TO_40__q95,
	       obuf1_23_portB_request_put_BITS_41_TO_40__q96,
	       obuf1_24_portA_request_put_BITS_41_TO_40__q97,
	       obuf1_24_portB_request_put_BITS_41_TO_40__q98,
	       obuf1_25_portA_request_put_BITS_41_TO_40__q99,
	       obuf1_25_portB_request_put_BITS_41_TO_40__q100,
	       obuf1_26_portA_request_put_BITS_41_TO_40__q101,
	       obuf1_26_portB_request_put_BITS_41_TO_40__q102,
	       obuf1_27_portA_request_put_BITS_41_TO_40__q103,
	       obuf1_27_portB_request_put_BITS_41_TO_40__q104,
	       obuf1_28_portA_request_put_BITS_41_TO_40__q105,
	       obuf1_28_portB_request_put_BITS_41_TO_40__q106,
	       obuf1_29_portA_request_put_BITS_41_TO_40__q107,
	       obuf1_29_portB_request_put_BITS_41_TO_40__q108,
	       obuf1_2_portA_request_put_BITS_41_TO_40__q109,
	       obuf1_2_portB_request_put_BITS_41_TO_40__q110,
	       obuf1_30_portA_request_put_BITS_41_TO_40__q111,
	       obuf1_30_portB_request_put_BITS_41_TO_40__q112,
	       obuf1_31_portA_request_put_BITS_41_TO_40__q113,
	       obuf1_31_portB_request_put_BITS_41_TO_40__q114,
	       obuf1_3_portA_request_put_BITS_41_TO_40__q115,
	       obuf1_3_portB_request_put_BITS_41_TO_40__q116,
	       obuf1_4_portA_request_put_BITS_41_TO_40__q117,
	       obuf1_4_portB_request_put_BITS_41_TO_40__q118,
	       obuf1_5_portA_request_put_BITS_41_TO_40__q119,
	       obuf1_5_portB_request_put_BITS_41_TO_40__q120,
	       obuf1_6_portA_request_put_BITS_41_TO_40__q121,
	       obuf1_6_portB_request_put_BITS_41_TO_40__q122,
	       obuf1_7_portA_request_put_BITS_41_TO_40__q123,
	       obuf1_7_portB_request_put_BITS_41_TO_40__q124,
	       obuf1_8_portA_request_put_BITS_41_TO_40__q125,
	       obuf1_8_portB_request_put_BITS_41_TO_40__q126,
	       obuf1_9_portA_request_put_BITS_41_TO_40__q127,
	       obuf1_9_portB_request_put_BITS_41_TO_40__q128,
	       obuf2_0_portA_request_put_BITS_41_TO_40__q129,
	       obuf2_0_portB_request_put_BITS_41_TO_40__q130,
	       obuf2_10_portA_request_put_BITS_41_TO_40__q131,
	       obuf2_10_portB_request_put_BITS_41_TO_40__q132,
	       obuf2_11_portA_request_put_BITS_41_TO_40__q133,
	       obuf2_11_portB_request_put_BITS_41_TO_40__q134,
	       obuf2_12_portA_request_put_BITS_41_TO_40__q135,
	       obuf2_12_portB_request_put_BITS_41_TO_40__q136,
	       obuf2_13_portA_request_put_BITS_41_TO_40__q137,
	       obuf2_13_portB_request_put_BITS_41_TO_40__q138,
	       obuf2_14_portA_request_put_BITS_41_TO_40__q139,
	       obuf2_14_portB_request_put_BITS_41_TO_40__q140,
	       obuf2_15_portA_request_put_BITS_41_TO_40__q141,
	       obuf2_15_portB_request_put_BITS_41_TO_40__q142,
	       obuf2_16_portA_request_put_BITS_41_TO_40__q143,
	       obuf2_16_portB_request_put_BITS_41_TO_40__q144,
	       obuf2_17_portA_request_put_BITS_41_TO_40__q145,
	       obuf2_17_portB_request_put_BITS_41_TO_40__q146,
	       obuf2_18_portA_request_put_BITS_41_TO_40__q147,
	       obuf2_18_portB_request_put_BITS_41_TO_40__q148,
	       obuf2_19_portA_request_put_BITS_41_TO_40__q149,
	       obuf2_19_portB_request_put_BITS_41_TO_40__q150,
	       obuf2_1_portA_request_put_BITS_41_TO_40__q151,
	       obuf2_1_portB_request_put_BITS_41_TO_40__q152,
	       obuf2_20_portA_request_put_BITS_41_TO_40__q153,
	       obuf2_20_portB_request_put_BITS_41_TO_40__q154,
	       obuf2_21_portA_request_put_BITS_41_TO_40__q155,
	       obuf2_21_portB_request_put_BITS_41_TO_40__q156,
	       obuf2_22_portA_request_put_BITS_41_TO_40__q157,
	       obuf2_22_portB_request_put_BITS_41_TO_40__q158,
	       obuf2_23_portA_request_put_BITS_41_TO_40__q159,
	       obuf2_23_portB_request_put_BITS_41_TO_40__q160,
	       obuf2_24_portA_request_put_BITS_41_TO_40__q161,
	       obuf2_24_portB_request_put_BITS_41_TO_40__q162,
	       obuf2_25_portA_request_put_BITS_41_TO_40__q163,
	       obuf2_25_portB_request_put_BITS_41_TO_40__q164,
	       obuf2_26_portA_request_put_BITS_41_TO_40__q165,
	       obuf2_26_portB_request_put_BITS_41_TO_40__q166,
	       obuf2_27_portA_request_put_BITS_41_TO_40__q167,
	       obuf2_27_portB_request_put_BITS_41_TO_40__q168,
	       obuf2_28_portA_request_put_BITS_41_TO_40__q169,
	       obuf2_28_portB_request_put_BITS_41_TO_40__q170,
	       obuf2_29_portA_request_put_BITS_41_TO_40__q171,
	       obuf2_29_portB_request_put_BITS_41_TO_40__q172,
	       obuf2_2_portA_request_put_BITS_41_TO_40__q173,
	       obuf2_2_portB_request_put_BITS_41_TO_40__q174,
	       obuf2_30_portA_request_put_BITS_41_TO_40__q175,
	       obuf2_30_portB_request_put_BITS_41_TO_40__q176,
	       obuf2_31_portA_request_put_BITS_41_TO_40__q177,
	       obuf2_31_portB_request_put_BITS_41_TO_40__q178,
	       obuf2_3_portA_request_put_BITS_41_TO_40__q179,
	       obuf2_3_portB_request_put_BITS_41_TO_40__q180,
	       obuf2_4_portA_request_put_BITS_41_TO_40__q181,
	       obuf2_4_portB_request_put_BITS_41_TO_40__q182,
	       obuf2_5_portA_request_put_BITS_41_TO_40__q183,
	       obuf2_5_portB_request_put_BITS_41_TO_40__q184,
	       obuf2_6_portA_request_put_BITS_41_TO_40__q185,
	       obuf2_6_portB_request_put_BITS_41_TO_40__q186,
	       obuf2_7_portA_request_put_BITS_41_TO_40__q187,
	       obuf2_7_portB_request_put_BITS_41_TO_40__q188,
	       obuf2_8_portA_request_put_BITS_41_TO_40__q189,
	       obuf2_8_portB_request_put_BITS_41_TO_40__q190,
	       obuf2_9_portA_request_put_BITS_41_TO_40__q191,
	       obuf2_9_portB_request_put_BITS_41_TO_40__q192,
	       wbuf_0_portA_request_put_BITS_17_TO_16__q193,
	       wbuf_0_portB_request_put_BITS_17_TO_16__q194,
	       wbuf_10_portA_request_put_BITS_17_TO_16__q195,
	       wbuf_10_portB_request_put_BITS_17_TO_16__q196,
	       wbuf_11_portA_request_put_BITS_17_TO_16__q197,
	       wbuf_11_portB_request_put_BITS_17_TO_16__q198,
	       wbuf_12_portA_request_put_BITS_17_TO_16__q199,
	       wbuf_12_portB_request_put_BITS_17_TO_16__q200,
	       wbuf_13_portA_request_put_BITS_17_TO_16__q201,
	       wbuf_13_portB_request_put_BITS_17_TO_16__q202,
	       wbuf_14_portA_request_put_BITS_17_TO_16__q203,
	       wbuf_14_portB_request_put_BITS_17_TO_16__q204,
	       wbuf_15_portA_request_put_BITS_17_TO_16__q205,
	       wbuf_15_portB_request_put_BITS_17_TO_16__q206,
	       wbuf_16_portA_request_put_BITS_17_TO_16__q207,
	       wbuf_16_portB_request_put_BITS_17_TO_16__q208,
	       wbuf_17_portA_request_put_BITS_17_TO_16__q209,
	       wbuf_17_portB_request_put_BITS_17_TO_16__q210,
	       wbuf_18_portA_request_put_BITS_17_TO_16__q211,
	       wbuf_18_portB_request_put_BITS_17_TO_16__q212,
	       wbuf_19_portA_request_put_BITS_17_TO_16__q213,
	       wbuf_19_portB_request_put_BITS_17_TO_16__q214,
	       wbuf_1_portA_request_put_BITS_17_TO_16__q215,
	       wbuf_1_portB_request_put_BITS_17_TO_16__q216,
	       wbuf_20_portA_request_put_BITS_17_TO_16__q217,
	       wbuf_20_portB_request_put_BITS_17_TO_16__q218,
	       wbuf_21_portA_request_put_BITS_17_TO_16__q219,
	       wbuf_21_portB_request_put_BITS_17_TO_16__q220,
	       wbuf_22_portA_request_put_BITS_17_TO_16__q221,
	       wbuf_22_portB_request_put_BITS_17_TO_16__q222,
	       wbuf_23_portA_request_put_BITS_17_TO_16__q223,
	       wbuf_23_portB_request_put_BITS_17_TO_16__q224,
	       wbuf_24_portA_request_put_BITS_17_TO_16__q225,
	       wbuf_24_portB_request_put_BITS_17_TO_16__q226,
	       wbuf_25_portA_request_put_BITS_17_TO_16__q227,
	       wbuf_25_portB_request_put_BITS_17_TO_16__q228,
	       wbuf_26_portA_request_put_BITS_17_TO_16__q229,
	       wbuf_26_portB_request_put_BITS_17_TO_16__q230,
	       wbuf_27_portA_request_put_BITS_17_TO_16__q231,
	       wbuf_27_portB_request_put_BITS_17_TO_16__q232,
	       wbuf_28_portA_request_put_BITS_17_TO_16__q233,
	       wbuf_28_portB_request_put_BITS_17_TO_16__q234,
	       wbuf_29_portA_request_put_BITS_17_TO_16__q235,
	       wbuf_29_portB_request_put_BITS_17_TO_16__q236,
	       wbuf_2_portA_request_put_BITS_17_TO_16__q237,
	       wbuf_2_portB_request_put_BITS_17_TO_16__q238,
	       wbuf_30_portA_request_put_BITS_17_TO_16__q239,
	       wbuf_30_portB_request_put_BITS_17_TO_16__q240,
	       wbuf_31_portA_request_put_BITS_17_TO_16__q241,
	       wbuf_31_portB_request_put_BITS_17_TO_16__q242,
	       wbuf_3_portA_request_put_BITS_17_TO_16__q243,
	       wbuf_3_portB_request_put_BITS_17_TO_16__q244,
	       wbuf_4_portA_request_put_BITS_17_TO_16__q245,
	       wbuf_4_portB_request_put_BITS_17_TO_16__q246,
	       wbuf_5_portA_request_put_BITS_17_TO_16__q247,
	       wbuf_5_portB_request_put_BITS_17_TO_16__q248,
	       wbuf_6_portA_request_put_BITS_17_TO_16__q249,
	       wbuf_6_portB_request_put_BITS_17_TO_16__q250,
	       wbuf_7_portA_request_put_BITS_17_TO_16__q251,
	       wbuf_7_portB_request_put_BITS_17_TO_16__q252,
	       wbuf_8_portA_request_put_BITS_17_TO_16__q253,
	       wbuf_8_portB_request_put_BITS_17_TO_16__q254,
	       wbuf_9_portA_request_put_BITS_17_TO_16__q255,
	       wbuf_9_portB_request_put_BITS_17_TO_16__q256;

  // action method ibuf_0_portA_request_put
  assign RDY_ibuf_0_portA_request_put =
	     (ibuffer_0_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_0_portA_response_get
  assign ibuf_0_portA_response_get =
	     ibuffer_0_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_0_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_0_memory$DOA ;
  assign RDY_ibuf_0_portA_response_get =
	     (ibuffer_0_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_0_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_0_serverAdapterA_outData_outData$whas ;

  // action method ibuf_0_portB_request_put
  assign RDY_ibuf_0_portB_request_put =
	     (ibuffer_0_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_0_portB_response_get
  assign ibuf_0_portB_response_get =
	     ibuffer_0_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_0_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_0_memory$DOB ;
  assign RDY_ibuf_0_portB_response_get =
	     (ibuffer_0_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_0_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_0_serverAdapterB_outData_outData$whas ;

  // action method ibuf_1_portA_request_put
  assign RDY_ibuf_1_portA_request_put =
	     (ibuffer_1_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_1_portA_response_get
  assign ibuf_1_portA_response_get =
	     ibuffer_1_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_1_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_1_memory$DOA ;
  assign RDY_ibuf_1_portA_response_get =
	     (ibuffer_1_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_1_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_1_serverAdapterA_outData_outData$whas ;

  // action method ibuf_1_portB_request_put
  assign RDY_ibuf_1_portB_request_put =
	     (ibuffer_1_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_1_portB_response_get
  assign ibuf_1_portB_response_get =
	     ibuffer_1_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_1_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_1_memory$DOB ;
  assign RDY_ibuf_1_portB_response_get =
	     (ibuffer_1_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_1_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_1_serverAdapterB_outData_outData$whas ;

  // action method ibuf_2_portA_request_put
  assign RDY_ibuf_2_portA_request_put =
	     (ibuffer_2_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_2_portA_response_get
  assign ibuf_2_portA_response_get =
	     ibuffer_2_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_2_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_2_memory$DOA ;
  assign RDY_ibuf_2_portA_response_get =
	     (ibuffer_2_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_2_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_2_serverAdapterA_outData_outData$whas ;

  // action method ibuf_2_portB_request_put
  assign RDY_ibuf_2_portB_request_put =
	     (ibuffer_2_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_2_portB_response_get
  assign ibuf_2_portB_response_get =
	     ibuffer_2_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_2_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_2_memory$DOB ;
  assign RDY_ibuf_2_portB_response_get =
	     (ibuffer_2_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_2_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_2_serverAdapterB_outData_outData$whas ;

  // action method ibuf_3_portA_request_put
  assign RDY_ibuf_3_portA_request_put =
	     (ibuffer_3_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_3_portA_response_get
  assign ibuf_3_portA_response_get =
	     ibuffer_3_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_3_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_3_memory$DOA ;
  assign RDY_ibuf_3_portA_response_get =
	     (ibuffer_3_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_3_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_3_serverAdapterA_outData_outData$whas ;

  // action method ibuf_3_portB_request_put
  assign RDY_ibuf_3_portB_request_put =
	     (ibuffer_3_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_3_portB_response_get
  assign ibuf_3_portB_response_get =
	     ibuffer_3_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_3_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_3_memory$DOB ;
  assign RDY_ibuf_3_portB_response_get =
	     (ibuffer_3_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_3_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_3_serverAdapterB_outData_outData$whas ;

  // action method ibuf_4_portA_request_put
  assign RDY_ibuf_4_portA_request_put =
	     (ibuffer_4_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_4_portA_response_get
  assign ibuf_4_portA_response_get =
	     ibuffer_4_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_4_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_4_memory$DOA ;
  assign RDY_ibuf_4_portA_response_get =
	     (ibuffer_4_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_4_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_4_serverAdapterA_outData_outData$whas ;

  // action method ibuf_4_portB_request_put
  assign RDY_ibuf_4_portB_request_put =
	     (ibuffer_4_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_4_portB_response_get
  assign ibuf_4_portB_response_get =
	     ibuffer_4_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_4_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_4_memory$DOB ;
  assign RDY_ibuf_4_portB_response_get =
	     (ibuffer_4_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_4_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_4_serverAdapterB_outData_outData$whas ;

  // action method ibuf_5_portA_request_put
  assign RDY_ibuf_5_portA_request_put =
	     (ibuffer_5_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_5_portA_response_get
  assign ibuf_5_portA_response_get =
	     ibuffer_5_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_5_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_5_memory$DOA ;
  assign RDY_ibuf_5_portA_response_get =
	     (ibuffer_5_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_5_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_5_serverAdapterA_outData_outData$whas ;

  // action method ibuf_5_portB_request_put
  assign RDY_ibuf_5_portB_request_put =
	     (ibuffer_5_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_5_portB_response_get
  assign ibuf_5_portB_response_get =
	     ibuffer_5_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_5_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_5_memory$DOB ;
  assign RDY_ibuf_5_portB_response_get =
	     (ibuffer_5_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_5_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_5_serverAdapterB_outData_outData$whas ;

  // action method ibuf_6_portA_request_put
  assign RDY_ibuf_6_portA_request_put =
	     (ibuffer_6_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_6_portA_response_get
  assign ibuf_6_portA_response_get =
	     ibuffer_6_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_6_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_6_memory$DOA ;
  assign RDY_ibuf_6_portA_response_get =
	     (ibuffer_6_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_6_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_6_serverAdapterA_outData_outData$whas ;

  // action method ibuf_6_portB_request_put
  assign RDY_ibuf_6_portB_request_put =
	     (ibuffer_6_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_6_portB_response_get
  assign ibuf_6_portB_response_get =
	     ibuffer_6_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_6_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_6_memory$DOB ;
  assign RDY_ibuf_6_portB_response_get =
	     (ibuffer_6_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_6_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_6_serverAdapterB_outData_outData$whas ;

  // action method ibuf_7_portA_request_put
  assign RDY_ibuf_7_portA_request_put =
	     (ibuffer_7_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_7_portA_response_get
  assign ibuf_7_portA_response_get =
	     ibuffer_7_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_7_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_7_memory$DOA ;
  assign RDY_ibuf_7_portA_response_get =
	     (ibuffer_7_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_7_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_7_serverAdapterA_outData_outData$whas ;

  // action method ibuf_7_portB_request_put
  assign RDY_ibuf_7_portB_request_put =
	     (ibuffer_7_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_7_portB_response_get
  assign ibuf_7_portB_response_get =
	     ibuffer_7_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_7_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_7_memory$DOB ;
  assign RDY_ibuf_7_portB_response_get =
	     (ibuffer_7_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_7_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_7_serverAdapterB_outData_outData$whas ;

  // action method ibuf_8_portA_request_put
  assign RDY_ibuf_8_portA_request_put =
	     (ibuffer_8_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_8_portA_response_get
  assign ibuf_8_portA_response_get =
	     ibuffer_8_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_8_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_8_memory$DOA ;
  assign RDY_ibuf_8_portA_response_get =
	     (ibuffer_8_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_8_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_8_serverAdapterA_outData_outData$whas ;

  // action method ibuf_8_portB_request_put
  assign RDY_ibuf_8_portB_request_put =
	     (ibuffer_8_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_8_portB_response_get
  assign ibuf_8_portB_response_get =
	     ibuffer_8_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_8_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_8_memory$DOB ;
  assign RDY_ibuf_8_portB_response_get =
	     (ibuffer_8_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_8_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_8_serverAdapterB_outData_outData$whas ;

  // action method ibuf_9_portA_request_put
  assign RDY_ibuf_9_portA_request_put =
	     (ibuffer_9_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_9_portA_response_get
  assign ibuf_9_portA_response_get =
	     ibuffer_9_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_9_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_9_memory$DOA ;
  assign RDY_ibuf_9_portA_response_get =
	     (ibuffer_9_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_9_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_9_serverAdapterA_outData_outData$whas ;

  // action method ibuf_9_portB_request_put
  assign RDY_ibuf_9_portB_request_put =
	     (ibuffer_9_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_9_portB_response_get
  assign ibuf_9_portB_response_get =
	     ibuffer_9_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_9_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_9_memory$DOB ;
  assign RDY_ibuf_9_portB_response_get =
	     (ibuffer_9_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_9_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_9_serverAdapterB_outData_outData$whas ;

  // action method ibuf_10_portA_request_put
  assign RDY_ibuf_10_portA_request_put =
	     (ibuffer_10_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_10_portA_response_get
  assign ibuf_10_portA_response_get =
	     ibuffer_10_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_10_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_10_memory$DOA ;
  assign RDY_ibuf_10_portA_response_get =
	     (ibuffer_10_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_10_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_10_serverAdapterA_outData_outData$whas ;

  // action method ibuf_10_portB_request_put
  assign RDY_ibuf_10_portB_request_put =
	     (ibuffer_10_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_10_portB_response_get
  assign ibuf_10_portB_response_get =
	     ibuffer_10_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_10_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_10_memory$DOB ;
  assign RDY_ibuf_10_portB_response_get =
	     (ibuffer_10_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_10_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_10_serverAdapterB_outData_outData$whas ;

  // action method ibuf_11_portA_request_put
  assign RDY_ibuf_11_portA_request_put =
	     (ibuffer_11_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_11_portA_response_get
  assign ibuf_11_portA_response_get =
	     ibuffer_11_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_11_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_11_memory$DOA ;
  assign RDY_ibuf_11_portA_response_get =
	     (ibuffer_11_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_11_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_11_serverAdapterA_outData_outData$whas ;

  // action method ibuf_11_portB_request_put
  assign RDY_ibuf_11_portB_request_put =
	     (ibuffer_11_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_11_portB_response_get
  assign ibuf_11_portB_response_get =
	     ibuffer_11_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_11_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_11_memory$DOB ;
  assign RDY_ibuf_11_portB_response_get =
	     (ibuffer_11_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_11_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_11_serverAdapterB_outData_outData$whas ;

  // action method ibuf_12_portA_request_put
  assign RDY_ibuf_12_portA_request_put =
	     (ibuffer_12_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_12_portA_response_get
  assign ibuf_12_portA_response_get =
	     ibuffer_12_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_12_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_12_memory$DOA ;
  assign RDY_ibuf_12_portA_response_get =
	     (ibuffer_12_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_12_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_12_serverAdapterA_outData_outData$whas ;

  // action method ibuf_12_portB_request_put
  assign RDY_ibuf_12_portB_request_put =
	     (ibuffer_12_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_12_portB_response_get
  assign ibuf_12_portB_response_get =
	     ibuffer_12_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_12_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_12_memory$DOB ;
  assign RDY_ibuf_12_portB_response_get =
	     (ibuffer_12_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_12_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_12_serverAdapterB_outData_outData$whas ;

  // action method ibuf_13_portA_request_put
  assign RDY_ibuf_13_portA_request_put =
	     (ibuffer_13_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_13_portA_response_get
  assign ibuf_13_portA_response_get =
	     ibuffer_13_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_13_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_13_memory$DOA ;
  assign RDY_ibuf_13_portA_response_get =
	     (ibuffer_13_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_13_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_13_serverAdapterA_outData_outData$whas ;

  // action method ibuf_13_portB_request_put
  assign RDY_ibuf_13_portB_request_put =
	     (ibuffer_13_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_13_portB_response_get
  assign ibuf_13_portB_response_get =
	     ibuffer_13_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_13_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_13_memory$DOB ;
  assign RDY_ibuf_13_portB_response_get =
	     (ibuffer_13_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_13_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_13_serverAdapterB_outData_outData$whas ;

  // action method ibuf_14_portA_request_put
  assign RDY_ibuf_14_portA_request_put =
	     (ibuffer_14_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_14_portA_response_get
  assign ibuf_14_portA_response_get =
	     ibuffer_14_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_14_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_14_memory$DOA ;
  assign RDY_ibuf_14_portA_response_get =
	     (ibuffer_14_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_14_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_14_serverAdapterA_outData_outData$whas ;

  // action method ibuf_14_portB_request_put
  assign RDY_ibuf_14_portB_request_put =
	     (ibuffer_14_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_14_portB_response_get
  assign ibuf_14_portB_response_get =
	     ibuffer_14_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_14_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_14_memory$DOB ;
  assign RDY_ibuf_14_portB_response_get =
	     (ibuffer_14_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_14_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_14_serverAdapterB_outData_outData$whas ;

  // action method ibuf_15_portA_request_put
  assign RDY_ibuf_15_portA_request_put =
	     (ibuffer_15_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_15_portA_response_get
  assign ibuf_15_portA_response_get =
	     ibuffer_15_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_15_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_15_memory$DOA ;
  assign RDY_ibuf_15_portA_response_get =
	     (ibuffer_15_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_15_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_15_serverAdapterA_outData_outData$whas ;

  // action method ibuf_15_portB_request_put
  assign RDY_ibuf_15_portB_request_put =
	     (ibuffer_15_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_15_portB_response_get
  assign ibuf_15_portB_response_get =
	     ibuffer_15_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_15_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_15_memory$DOB ;
  assign RDY_ibuf_15_portB_response_get =
	     (ibuffer_15_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_15_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_15_serverAdapterB_outData_outData$whas ;

  // action method ibuf_16_portA_request_put
  assign RDY_ibuf_16_portA_request_put =
	     (ibuffer_16_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_16_portA_response_get
  assign ibuf_16_portA_response_get =
	     ibuffer_16_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_16_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_16_memory$DOA ;
  assign RDY_ibuf_16_portA_response_get =
	     (ibuffer_16_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_16_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_16_serverAdapterA_outData_outData$whas ;

  // action method ibuf_16_portB_request_put
  assign RDY_ibuf_16_portB_request_put =
	     (ibuffer_16_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_16_portB_response_get
  assign ibuf_16_portB_response_get =
	     ibuffer_16_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_16_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_16_memory$DOB ;
  assign RDY_ibuf_16_portB_response_get =
	     (ibuffer_16_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_16_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_16_serverAdapterB_outData_outData$whas ;

  // action method ibuf_17_portA_request_put
  assign RDY_ibuf_17_portA_request_put =
	     (ibuffer_17_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_17_portA_response_get
  assign ibuf_17_portA_response_get =
	     ibuffer_17_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_17_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_17_memory$DOA ;
  assign RDY_ibuf_17_portA_response_get =
	     (ibuffer_17_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_17_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_17_serverAdapterA_outData_outData$whas ;

  // action method ibuf_17_portB_request_put
  assign RDY_ibuf_17_portB_request_put =
	     (ibuffer_17_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_17_portB_response_get
  assign ibuf_17_portB_response_get =
	     ibuffer_17_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_17_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_17_memory$DOB ;
  assign RDY_ibuf_17_portB_response_get =
	     (ibuffer_17_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_17_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_17_serverAdapterB_outData_outData$whas ;

  // action method ibuf_18_portA_request_put
  assign RDY_ibuf_18_portA_request_put =
	     (ibuffer_18_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_18_portA_response_get
  assign ibuf_18_portA_response_get =
	     ibuffer_18_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_18_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_18_memory$DOA ;
  assign RDY_ibuf_18_portA_response_get =
	     (ibuffer_18_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_18_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_18_serverAdapterA_outData_outData$whas ;

  // action method ibuf_18_portB_request_put
  assign RDY_ibuf_18_portB_request_put =
	     (ibuffer_18_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_18_portB_response_get
  assign ibuf_18_portB_response_get =
	     ibuffer_18_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_18_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_18_memory$DOB ;
  assign RDY_ibuf_18_portB_response_get =
	     (ibuffer_18_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_18_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_18_serverAdapterB_outData_outData$whas ;

  // action method ibuf_19_portA_request_put
  assign RDY_ibuf_19_portA_request_put =
	     (ibuffer_19_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_19_portA_response_get
  assign ibuf_19_portA_response_get =
	     ibuffer_19_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_19_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_19_memory$DOA ;
  assign RDY_ibuf_19_portA_response_get =
	     (ibuffer_19_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_19_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_19_serverAdapterA_outData_outData$whas ;

  // action method ibuf_19_portB_request_put
  assign RDY_ibuf_19_portB_request_put =
	     (ibuffer_19_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_19_portB_response_get
  assign ibuf_19_portB_response_get =
	     ibuffer_19_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_19_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_19_memory$DOB ;
  assign RDY_ibuf_19_portB_response_get =
	     (ibuffer_19_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_19_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_19_serverAdapterB_outData_outData$whas ;

  // action method ibuf_20_portA_request_put
  assign RDY_ibuf_20_portA_request_put =
	     (ibuffer_20_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_20_portA_response_get
  assign ibuf_20_portA_response_get =
	     ibuffer_20_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_20_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_20_memory$DOA ;
  assign RDY_ibuf_20_portA_response_get =
	     (ibuffer_20_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_20_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_20_serverAdapterA_outData_outData$whas ;

  // action method ibuf_20_portB_request_put
  assign RDY_ibuf_20_portB_request_put =
	     (ibuffer_20_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_20_portB_response_get
  assign ibuf_20_portB_response_get =
	     ibuffer_20_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_20_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_20_memory$DOB ;
  assign RDY_ibuf_20_portB_response_get =
	     (ibuffer_20_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_20_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_20_serverAdapterB_outData_outData$whas ;

  // action method ibuf_21_portA_request_put
  assign RDY_ibuf_21_portA_request_put =
	     (ibuffer_21_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_21_portA_response_get
  assign ibuf_21_portA_response_get =
	     ibuffer_21_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_21_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_21_memory$DOA ;
  assign RDY_ibuf_21_portA_response_get =
	     (ibuffer_21_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_21_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_21_serverAdapterA_outData_outData$whas ;

  // action method ibuf_21_portB_request_put
  assign RDY_ibuf_21_portB_request_put =
	     (ibuffer_21_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_21_portB_response_get
  assign ibuf_21_portB_response_get =
	     ibuffer_21_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_21_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_21_memory$DOB ;
  assign RDY_ibuf_21_portB_response_get =
	     (ibuffer_21_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_21_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_21_serverAdapterB_outData_outData$whas ;

  // action method ibuf_22_portA_request_put
  assign RDY_ibuf_22_portA_request_put =
	     (ibuffer_22_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_22_portA_response_get
  assign ibuf_22_portA_response_get =
	     ibuffer_22_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_22_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_22_memory$DOA ;
  assign RDY_ibuf_22_portA_response_get =
	     (ibuffer_22_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_22_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_22_serverAdapterA_outData_outData$whas ;

  // action method ibuf_22_portB_request_put
  assign RDY_ibuf_22_portB_request_put =
	     (ibuffer_22_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_22_portB_response_get
  assign ibuf_22_portB_response_get =
	     ibuffer_22_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_22_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_22_memory$DOB ;
  assign RDY_ibuf_22_portB_response_get =
	     (ibuffer_22_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_22_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_22_serverAdapterB_outData_outData$whas ;

  // action method ibuf_23_portA_request_put
  assign RDY_ibuf_23_portA_request_put =
	     (ibuffer_23_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_23_portA_response_get
  assign ibuf_23_portA_response_get =
	     ibuffer_23_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_23_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_23_memory$DOA ;
  assign RDY_ibuf_23_portA_response_get =
	     (ibuffer_23_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_23_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_23_serverAdapterA_outData_outData$whas ;

  // action method ibuf_23_portB_request_put
  assign RDY_ibuf_23_portB_request_put =
	     (ibuffer_23_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_23_portB_response_get
  assign ibuf_23_portB_response_get =
	     ibuffer_23_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_23_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_23_memory$DOB ;
  assign RDY_ibuf_23_portB_response_get =
	     (ibuffer_23_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_23_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_23_serverAdapterB_outData_outData$whas ;

  // action method ibuf_24_portA_request_put
  assign RDY_ibuf_24_portA_request_put =
	     (ibuffer_24_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_24_portA_response_get
  assign ibuf_24_portA_response_get =
	     ibuffer_24_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_24_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_24_memory$DOA ;
  assign RDY_ibuf_24_portA_response_get =
	     (ibuffer_24_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_24_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_24_serverAdapterA_outData_outData$whas ;

  // action method ibuf_24_portB_request_put
  assign RDY_ibuf_24_portB_request_put =
	     (ibuffer_24_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_24_portB_response_get
  assign ibuf_24_portB_response_get =
	     ibuffer_24_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_24_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_24_memory$DOB ;
  assign RDY_ibuf_24_portB_response_get =
	     (ibuffer_24_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_24_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_24_serverAdapterB_outData_outData$whas ;

  // action method ibuf_25_portA_request_put
  assign RDY_ibuf_25_portA_request_put =
	     (ibuffer_25_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_25_portA_response_get
  assign ibuf_25_portA_response_get =
	     ibuffer_25_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_25_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_25_memory$DOA ;
  assign RDY_ibuf_25_portA_response_get =
	     (ibuffer_25_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_25_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_25_serverAdapterA_outData_outData$whas ;

  // action method ibuf_25_portB_request_put
  assign RDY_ibuf_25_portB_request_put =
	     (ibuffer_25_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_25_portB_response_get
  assign ibuf_25_portB_response_get =
	     ibuffer_25_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_25_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_25_memory$DOB ;
  assign RDY_ibuf_25_portB_response_get =
	     (ibuffer_25_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_25_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_25_serverAdapterB_outData_outData$whas ;

  // action method ibuf_26_portA_request_put
  assign RDY_ibuf_26_portA_request_put =
	     (ibuffer_26_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_26_portA_response_get
  assign ibuf_26_portA_response_get =
	     ibuffer_26_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_26_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_26_memory$DOA ;
  assign RDY_ibuf_26_portA_response_get =
	     (ibuffer_26_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_26_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_26_serverAdapterA_outData_outData$whas ;

  // action method ibuf_26_portB_request_put
  assign RDY_ibuf_26_portB_request_put =
	     (ibuffer_26_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_26_portB_response_get
  assign ibuf_26_portB_response_get =
	     ibuffer_26_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_26_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_26_memory$DOB ;
  assign RDY_ibuf_26_portB_response_get =
	     (ibuffer_26_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_26_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_26_serverAdapterB_outData_outData$whas ;

  // action method ibuf_27_portA_request_put
  assign RDY_ibuf_27_portA_request_put =
	     (ibuffer_27_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_27_portA_response_get
  assign ibuf_27_portA_response_get =
	     ibuffer_27_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_27_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_27_memory$DOA ;
  assign RDY_ibuf_27_portA_response_get =
	     (ibuffer_27_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_27_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_27_serverAdapterA_outData_outData$whas ;

  // action method ibuf_27_portB_request_put
  assign RDY_ibuf_27_portB_request_put =
	     (ibuffer_27_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_27_portB_response_get
  assign ibuf_27_portB_response_get =
	     ibuffer_27_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_27_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_27_memory$DOB ;
  assign RDY_ibuf_27_portB_response_get =
	     (ibuffer_27_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_27_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_27_serverAdapterB_outData_outData$whas ;

  // action method ibuf_28_portA_request_put
  assign RDY_ibuf_28_portA_request_put =
	     (ibuffer_28_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_28_portA_response_get
  assign ibuf_28_portA_response_get =
	     ibuffer_28_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_28_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_28_memory$DOA ;
  assign RDY_ibuf_28_portA_response_get =
	     (ibuffer_28_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_28_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_28_serverAdapterA_outData_outData$whas ;

  // action method ibuf_28_portB_request_put
  assign RDY_ibuf_28_portB_request_put =
	     (ibuffer_28_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_28_portB_response_get
  assign ibuf_28_portB_response_get =
	     ibuffer_28_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_28_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_28_memory$DOB ;
  assign RDY_ibuf_28_portB_response_get =
	     (ibuffer_28_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_28_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_28_serverAdapterB_outData_outData$whas ;

  // action method ibuf_29_portA_request_put
  assign RDY_ibuf_29_portA_request_put =
	     (ibuffer_29_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_29_portA_response_get
  assign ibuf_29_portA_response_get =
	     ibuffer_29_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_29_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_29_memory$DOA ;
  assign RDY_ibuf_29_portA_response_get =
	     (ibuffer_29_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_29_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_29_serverAdapterA_outData_outData$whas ;

  // action method ibuf_29_portB_request_put
  assign RDY_ibuf_29_portB_request_put =
	     (ibuffer_29_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_29_portB_response_get
  assign ibuf_29_portB_response_get =
	     ibuffer_29_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_29_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_29_memory$DOB ;
  assign RDY_ibuf_29_portB_response_get =
	     (ibuffer_29_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_29_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_29_serverAdapterB_outData_outData$whas ;

  // action method ibuf_30_portA_request_put
  assign RDY_ibuf_30_portA_request_put =
	     (ibuffer_30_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_30_portA_response_get
  assign ibuf_30_portA_response_get =
	     ibuffer_30_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_30_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_30_memory$DOA ;
  assign RDY_ibuf_30_portA_response_get =
	     (ibuffer_30_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_30_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_30_serverAdapterA_outData_outData$whas ;

  // action method ibuf_30_portB_request_put
  assign RDY_ibuf_30_portB_request_put =
	     (ibuffer_30_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_30_portB_response_get
  assign ibuf_30_portB_response_get =
	     ibuffer_30_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_30_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_30_memory$DOB ;
  assign RDY_ibuf_30_portB_response_get =
	     (ibuffer_30_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_30_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_30_serverAdapterB_outData_outData$whas ;

  // action method ibuf_31_portA_request_put
  assign RDY_ibuf_31_portA_request_put =
	     (ibuffer_31_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_31_portA_response_get
  assign ibuf_31_portA_response_get =
	     ibuffer_31_serverAdapterA_outDataCore$EMPTY_N ?
	       ibuffer_31_serverAdapterA_outDataCore$D_OUT :
	       ibuffer_31_memory$DOA ;
  assign RDY_ibuf_31_portA_response_get =
	     (ibuffer_31_serverAdapterA_outDataCore$EMPTY_N ||
	      ibuffer_31_serverAdapterA_outData_enqData$whas) &&
	     ibuffer_31_serverAdapterA_outData_outData$whas ;

  // action method ibuf_31_portB_request_put
  assign RDY_ibuf_31_portB_request_put =
	     (ibuffer_31_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method ibuf_31_portB_response_get
  assign ibuf_31_portB_response_get =
	     ibuffer_31_serverAdapterB_outDataCore$EMPTY_N ?
	       ibuffer_31_serverAdapterB_outDataCore$D_OUT :
	       ibuffer_31_memory$DOB ;
  assign RDY_ibuf_31_portB_response_get =
	     (ibuffer_31_serverAdapterB_outDataCore$EMPTY_N ||
	      ibuffer_31_serverAdapterB_outData_enqData$whas) &&
	     ibuffer_31_serverAdapterB_outData_outData$whas ;

  // action method wbuf_0_portA_request_put
  assign RDY_wbuf_0_portA_request_put =
	     (wbuffer_0_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_0_portA_response_get
  assign wbuf_0_portA_response_get =
	     wbuffer_0_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_0_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_0_memory$DOA ;
  assign RDY_wbuf_0_portA_response_get =
	     (wbuffer_0_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_0_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_0_serverAdapterA_outData_outData$whas ;

  // action method wbuf_0_portB_request_put
  assign RDY_wbuf_0_portB_request_put =
	     (wbuffer_0_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_0_portB_response_get
  assign wbuf_0_portB_response_get =
	     wbuffer_0_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_0_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_0_memory$DOB ;
  assign RDY_wbuf_0_portB_response_get =
	     (wbuffer_0_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_0_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_0_serverAdapterB_outData_outData$whas ;

  // action method wbuf_1_portA_request_put
  assign RDY_wbuf_1_portA_request_put =
	     (wbuffer_1_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_1_portA_response_get
  assign wbuf_1_portA_response_get =
	     wbuffer_1_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_1_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_1_memory$DOA ;
  assign RDY_wbuf_1_portA_response_get =
	     (wbuffer_1_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_1_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_1_serverAdapterA_outData_outData$whas ;

  // action method wbuf_1_portB_request_put
  assign RDY_wbuf_1_portB_request_put =
	     (wbuffer_1_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_1_portB_response_get
  assign wbuf_1_portB_response_get =
	     wbuffer_1_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_1_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_1_memory$DOB ;
  assign RDY_wbuf_1_portB_response_get =
	     (wbuffer_1_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_1_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_1_serverAdapterB_outData_outData$whas ;

  // action method wbuf_2_portA_request_put
  assign RDY_wbuf_2_portA_request_put =
	     (wbuffer_2_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_2_portA_response_get
  assign wbuf_2_portA_response_get =
	     wbuffer_2_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_2_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_2_memory$DOA ;
  assign RDY_wbuf_2_portA_response_get =
	     (wbuffer_2_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_2_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_2_serverAdapterA_outData_outData$whas ;

  // action method wbuf_2_portB_request_put
  assign RDY_wbuf_2_portB_request_put =
	     (wbuffer_2_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_2_portB_response_get
  assign wbuf_2_portB_response_get =
	     wbuffer_2_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_2_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_2_memory$DOB ;
  assign RDY_wbuf_2_portB_response_get =
	     (wbuffer_2_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_2_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_2_serverAdapterB_outData_outData$whas ;

  // action method wbuf_3_portA_request_put
  assign RDY_wbuf_3_portA_request_put =
	     (wbuffer_3_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_3_portA_response_get
  assign wbuf_3_portA_response_get =
	     wbuffer_3_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_3_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_3_memory$DOA ;
  assign RDY_wbuf_3_portA_response_get =
	     (wbuffer_3_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_3_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_3_serverAdapterA_outData_outData$whas ;

  // action method wbuf_3_portB_request_put
  assign RDY_wbuf_3_portB_request_put =
	     (wbuffer_3_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_3_portB_response_get
  assign wbuf_3_portB_response_get =
	     wbuffer_3_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_3_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_3_memory$DOB ;
  assign RDY_wbuf_3_portB_response_get =
	     (wbuffer_3_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_3_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_3_serverAdapterB_outData_outData$whas ;

  // action method wbuf_4_portA_request_put
  assign RDY_wbuf_4_portA_request_put =
	     (wbuffer_4_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_4_portA_response_get
  assign wbuf_4_portA_response_get =
	     wbuffer_4_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_4_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_4_memory$DOA ;
  assign RDY_wbuf_4_portA_response_get =
	     (wbuffer_4_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_4_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_4_serverAdapterA_outData_outData$whas ;

  // action method wbuf_4_portB_request_put
  assign RDY_wbuf_4_portB_request_put =
	     (wbuffer_4_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_4_portB_response_get
  assign wbuf_4_portB_response_get =
	     wbuffer_4_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_4_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_4_memory$DOB ;
  assign RDY_wbuf_4_portB_response_get =
	     (wbuffer_4_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_4_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_4_serverAdapterB_outData_outData$whas ;

  // action method wbuf_5_portA_request_put
  assign RDY_wbuf_5_portA_request_put =
	     (wbuffer_5_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_5_portA_response_get
  assign wbuf_5_portA_response_get =
	     wbuffer_5_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_5_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_5_memory$DOA ;
  assign RDY_wbuf_5_portA_response_get =
	     (wbuffer_5_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_5_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_5_serverAdapterA_outData_outData$whas ;

  // action method wbuf_5_portB_request_put
  assign RDY_wbuf_5_portB_request_put =
	     (wbuffer_5_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_5_portB_response_get
  assign wbuf_5_portB_response_get =
	     wbuffer_5_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_5_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_5_memory$DOB ;
  assign RDY_wbuf_5_portB_response_get =
	     (wbuffer_5_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_5_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_5_serverAdapterB_outData_outData$whas ;

  // action method wbuf_6_portA_request_put
  assign RDY_wbuf_6_portA_request_put =
	     (wbuffer_6_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_6_portA_response_get
  assign wbuf_6_portA_response_get =
	     wbuffer_6_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_6_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_6_memory$DOA ;
  assign RDY_wbuf_6_portA_response_get =
	     (wbuffer_6_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_6_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_6_serverAdapterA_outData_outData$whas ;

  // action method wbuf_6_portB_request_put
  assign RDY_wbuf_6_portB_request_put =
	     (wbuffer_6_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_6_portB_response_get
  assign wbuf_6_portB_response_get =
	     wbuffer_6_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_6_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_6_memory$DOB ;
  assign RDY_wbuf_6_portB_response_get =
	     (wbuffer_6_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_6_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_6_serverAdapterB_outData_outData$whas ;

  // action method wbuf_7_portA_request_put
  assign RDY_wbuf_7_portA_request_put =
	     (wbuffer_7_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_7_portA_response_get
  assign wbuf_7_portA_response_get =
	     wbuffer_7_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_7_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_7_memory$DOA ;
  assign RDY_wbuf_7_portA_response_get =
	     (wbuffer_7_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_7_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_7_serverAdapterA_outData_outData$whas ;

  // action method wbuf_7_portB_request_put
  assign RDY_wbuf_7_portB_request_put =
	     (wbuffer_7_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_7_portB_response_get
  assign wbuf_7_portB_response_get =
	     wbuffer_7_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_7_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_7_memory$DOB ;
  assign RDY_wbuf_7_portB_response_get =
	     (wbuffer_7_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_7_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_7_serverAdapterB_outData_outData$whas ;

  // action method wbuf_8_portA_request_put
  assign RDY_wbuf_8_portA_request_put =
	     (wbuffer_8_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_8_portA_response_get
  assign wbuf_8_portA_response_get =
	     wbuffer_8_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_8_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_8_memory$DOA ;
  assign RDY_wbuf_8_portA_response_get =
	     (wbuffer_8_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_8_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_8_serverAdapterA_outData_outData$whas ;

  // action method wbuf_8_portB_request_put
  assign RDY_wbuf_8_portB_request_put =
	     (wbuffer_8_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_8_portB_response_get
  assign wbuf_8_portB_response_get =
	     wbuffer_8_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_8_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_8_memory$DOB ;
  assign RDY_wbuf_8_portB_response_get =
	     (wbuffer_8_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_8_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_8_serverAdapterB_outData_outData$whas ;

  // action method wbuf_9_portA_request_put
  assign RDY_wbuf_9_portA_request_put =
	     (wbuffer_9_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_9_portA_response_get
  assign wbuf_9_portA_response_get =
	     wbuffer_9_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_9_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_9_memory$DOA ;
  assign RDY_wbuf_9_portA_response_get =
	     (wbuffer_9_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_9_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_9_serverAdapterA_outData_outData$whas ;

  // action method wbuf_9_portB_request_put
  assign RDY_wbuf_9_portB_request_put =
	     (wbuffer_9_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_9_portB_response_get
  assign wbuf_9_portB_response_get =
	     wbuffer_9_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_9_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_9_memory$DOB ;
  assign RDY_wbuf_9_portB_response_get =
	     (wbuffer_9_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_9_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_9_serverAdapterB_outData_outData$whas ;

  // action method wbuf_10_portA_request_put
  assign RDY_wbuf_10_portA_request_put =
	     (wbuffer_10_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_10_portA_response_get
  assign wbuf_10_portA_response_get =
	     wbuffer_10_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_10_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_10_memory$DOA ;
  assign RDY_wbuf_10_portA_response_get =
	     (wbuffer_10_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_10_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_10_serverAdapterA_outData_outData$whas ;

  // action method wbuf_10_portB_request_put
  assign RDY_wbuf_10_portB_request_put =
	     (wbuffer_10_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_10_portB_response_get
  assign wbuf_10_portB_response_get =
	     wbuffer_10_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_10_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_10_memory$DOB ;
  assign RDY_wbuf_10_portB_response_get =
	     (wbuffer_10_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_10_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_10_serverAdapterB_outData_outData$whas ;

  // action method wbuf_11_portA_request_put
  assign RDY_wbuf_11_portA_request_put =
	     (wbuffer_11_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_11_portA_response_get
  assign wbuf_11_portA_response_get =
	     wbuffer_11_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_11_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_11_memory$DOA ;
  assign RDY_wbuf_11_portA_response_get =
	     (wbuffer_11_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_11_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_11_serverAdapterA_outData_outData$whas ;

  // action method wbuf_11_portB_request_put
  assign RDY_wbuf_11_portB_request_put =
	     (wbuffer_11_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_11_portB_response_get
  assign wbuf_11_portB_response_get =
	     wbuffer_11_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_11_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_11_memory$DOB ;
  assign RDY_wbuf_11_portB_response_get =
	     (wbuffer_11_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_11_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_11_serverAdapterB_outData_outData$whas ;

  // action method wbuf_12_portA_request_put
  assign RDY_wbuf_12_portA_request_put =
	     (wbuffer_12_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_12_portA_response_get
  assign wbuf_12_portA_response_get =
	     wbuffer_12_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_12_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_12_memory$DOA ;
  assign RDY_wbuf_12_portA_response_get =
	     (wbuffer_12_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_12_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_12_serverAdapterA_outData_outData$whas ;

  // action method wbuf_12_portB_request_put
  assign RDY_wbuf_12_portB_request_put =
	     (wbuffer_12_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_12_portB_response_get
  assign wbuf_12_portB_response_get =
	     wbuffer_12_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_12_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_12_memory$DOB ;
  assign RDY_wbuf_12_portB_response_get =
	     (wbuffer_12_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_12_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_12_serverAdapterB_outData_outData$whas ;

  // action method wbuf_13_portA_request_put
  assign RDY_wbuf_13_portA_request_put =
	     (wbuffer_13_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_13_portA_response_get
  assign wbuf_13_portA_response_get =
	     wbuffer_13_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_13_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_13_memory$DOA ;
  assign RDY_wbuf_13_portA_response_get =
	     (wbuffer_13_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_13_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_13_serverAdapterA_outData_outData$whas ;

  // action method wbuf_13_portB_request_put
  assign RDY_wbuf_13_portB_request_put =
	     (wbuffer_13_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_13_portB_response_get
  assign wbuf_13_portB_response_get =
	     wbuffer_13_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_13_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_13_memory$DOB ;
  assign RDY_wbuf_13_portB_response_get =
	     (wbuffer_13_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_13_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_13_serverAdapterB_outData_outData$whas ;

  // action method wbuf_14_portA_request_put
  assign RDY_wbuf_14_portA_request_put =
	     (wbuffer_14_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_14_portA_response_get
  assign wbuf_14_portA_response_get =
	     wbuffer_14_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_14_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_14_memory$DOA ;
  assign RDY_wbuf_14_portA_response_get =
	     (wbuffer_14_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_14_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_14_serverAdapterA_outData_outData$whas ;

  // action method wbuf_14_portB_request_put
  assign RDY_wbuf_14_portB_request_put =
	     (wbuffer_14_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_14_portB_response_get
  assign wbuf_14_portB_response_get =
	     wbuffer_14_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_14_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_14_memory$DOB ;
  assign RDY_wbuf_14_portB_response_get =
	     (wbuffer_14_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_14_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_14_serverAdapterB_outData_outData$whas ;

  // action method wbuf_15_portA_request_put
  assign RDY_wbuf_15_portA_request_put =
	     (wbuffer_15_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_15_portA_response_get
  assign wbuf_15_portA_response_get =
	     wbuffer_15_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_15_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_15_memory$DOA ;
  assign RDY_wbuf_15_portA_response_get =
	     (wbuffer_15_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_15_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_15_serverAdapterA_outData_outData$whas ;

  // action method wbuf_15_portB_request_put
  assign RDY_wbuf_15_portB_request_put =
	     (wbuffer_15_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_15_portB_response_get
  assign wbuf_15_portB_response_get =
	     wbuffer_15_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_15_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_15_memory$DOB ;
  assign RDY_wbuf_15_portB_response_get =
	     (wbuffer_15_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_15_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_15_serverAdapterB_outData_outData$whas ;

  // action method wbuf_16_portA_request_put
  assign RDY_wbuf_16_portA_request_put =
	     (wbuffer_16_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_16_portA_response_get
  assign wbuf_16_portA_response_get =
	     wbuffer_16_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_16_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_16_memory$DOA ;
  assign RDY_wbuf_16_portA_response_get =
	     (wbuffer_16_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_16_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_16_serverAdapterA_outData_outData$whas ;

  // action method wbuf_16_portB_request_put
  assign RDY_wbuf_16_portB_request_put =
	     (wbuffer_16_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_16_portB_response_get
  assign wbuf_16_portB_response_get =
	     wbuffer_16_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_16_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_16_memory$DOB ;
  assign RDY_wbuf_16_portB_response_get =
	     (wbuffer_16_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_16_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_16_serverAdapterB_outData_outData$whas ;

  // action method wbuf_17_portA_request_put
  assign RDY_wbuf_17_portA_request_put =
	     (wbuffer_17_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_17_portA_response_get
  assign wbuf_17_portA_response_get =
	     wbuffer_17_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_17_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_17_memory$DOA ;
  assign RDY_wbuf_17_portA_response_get =
	     (wbuffer_17_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_17_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_17_serverAdapterA_outData_outData$whas ;

  // action method wbuf_17_portB_request_put
  assign RDY_wbuf_17_portB_request_put =
	     (wbuffer_17_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_17_portB_response_get
  assign wbuf_17_portB_response_get =
	     wbuffer_17_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_17_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_17_memory$DOB ;
  assign RDY_wbuf_17_portB_response_get =
	     (wbuffer_17_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_17_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_17_serverAdapterB_outData_outData$whas ;

  // action method wbuf_18_portA_request_put
  assign RDY_wbuf_18_portA_request_put =
	     (wbuffer_18_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_18_portA_response_get
  assign wbuf_18_portA_response_get =
	     wbuffer_18_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_18_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_18_memory$DOA ;
  assign RDY_wbuf_18_portA_response_get =
	     (wbuffer_18_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_18_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_18_serverAdapterA_outData_outData$whas ;

  // action method wbuf_18_portB_request_put
  assign RDY_wbuf_18_portB_request_put =
	     (wbuffer_18_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_18_portB_response_get
  assign wbuf_18_portB_response_get =
	     wbuffer_18_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_18_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_18_memory$DOB ;
  assign RDY_wbuf_18_portB_response_get =
	     (wbuffer_18_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_18_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_18_serverAdapterB_outData_outData$whas ;

  // action method wbuf_19_portA_request_put
  assign RDY_wbuf_19_portA_request_put =
	     (wbuffer_19_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_19_portA_response_get
  assign wbuf_19_portA_response_get =
	     wbuffer_19_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_19_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_19_memory$DOA ;
  assign RDY_wbuf_19_portA_response_get =
	     (wbuffer_19_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_19_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_19_serverAdapterA_outData_outData$whas ;

  // action method wbuf_19_portB_request_put
  assign RDY_wbuf_19_portB_request_put =
	     (wbuffer_19_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_19_portB_response_get
  assign wbuf_19_portB_response_get =
	     wbuffer_19_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_19_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_19_memory$DOB ;
  assign RDY_wbuf_19_portB_response_get =
	     (wbuffer_19_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_19_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_19_serverAdapterB_outData_outData$whas ;

  // action method wbuf_20_portA_request_put
  assign RDY_wbuf_20_portA_request_put =
	     (wbuffer_20_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_20_portA_response_get
  assign wbuf_20_portA_response_get =
	     wbuffer_20_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_20_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_20_memory$DOA ;
  assign RDY_wbuf_20_portA_response_get =
	     (wbuffer_20_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_20_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_20_serverAdapterA_outData_outData$whas ;

  // action method wbuf_20_portB_request_put
  assign RDY_wbuf_20_portB_request_put =
	     (wbuffer_20_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_20_portB_response_get
  assign wbuf_20_portB_response_get =
	     wbuffer_20_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_20_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_20_memory$DOB ;
  assign RDY_wbuf_20_portB_response_get =
	     (wbuffer_20_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_20_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_20_serverAdapterB_outData_outData$whas ;

  // action method wbuf_21_portA_request_put
  assign RDY_wbuf_21_portA_request_put =
	     (wbuffer_21_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_21_portA_response_get
  assign wbuf_21_portA_response_get =
	     wbuffer_21_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_21_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_21_memory$DOA ;
  assign RDY_wbuf_21_portA_response_get =
	     (wbuffer_21_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_21_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_21_serverAdapterA_outData_outData$whas ;

  // action method wbuf_21_portB_request_put
  assign RDY_wbuf_21_portB_request_put =
	     (wbuffer_21_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_21_portB_response_get
  assign wbuf_21_portB_response_get =
	     wbuffer_21_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_21_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_21_memory$DOB ;
  assign RDY_wbuf_21_portB_response_get =
	     (wbuffer_21_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_21_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_21_serverAdapterB_outData_outData$whas ;

  // action method wbuf_22_portA_request_put
  assign RDY_wbuf_22_portA_request_put =
	     (wbuffer_22_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_22_portA_response_get
  assign wbuf_22_portA_response_get =
	     wbuffer_22_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_22_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_22_memory$DOA ;
  assign RDY_wbuf_22_portA_response_get =
	     (wbuffer_22_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_22_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_22_serverAdapterA_outData_outData$whas ;

  // action method wbuf_22_portB_request_put
  assign RDY_wbuf_22_portB_request_put =
	     (wbuffer_22_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_22_portB_response_get
  assign wbuf_22_portB_response_get =
	     wbuffer_22_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_22_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_22_memory$DOB ;
  assign RDY_wbuf_22_portB_response_get =
	     (wbuffer_22_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_22_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_22_serverAdapterB_outData_outData$whas ;

  // action method wbuf_23_portA_request_put
  assign RDY_wbuf_23_portA_request_put =
	     (wbuffer_23_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_23_portA_response_get
  assign wbuf_23_portA_response_get =
	     wbuffer_23_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_23_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_23_memory$DOA ;
  assign RDY_wbuf_23_portA_response_get =
	     (wbuffer_23_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_23_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_23_serverAdapterA_outData_outData$whas ;

  // action method wbuf_23_portB_request_put
  assign RDY_wbuf_23_portB_request_put =
	     (wbuffer_23_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_23_portB_response_get
  assign wbuf_23_portB_response_get =
	     wbuffer_23_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_23_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_23_memory$DOB ;
  assign RDY_wbuf_23_portB_response_get =
	     (wbuffer_23_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_23_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_23_serverAdapterB_outData_outData$whas ;

  // action method wbuf_24_portA_request_put
  assign RDY_wbuf_24_portA_request_put =
	     (wbuffer_24_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_24_portA_response_get
  assign wbuf_24_portA_response_get =
	     wbuffer_24_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_24_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_24_memory$DOA ;
  assign RDY_wbuf_24_portA_response_get =
	     (wbuffer_24_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_24_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_24_serverAdapterA_outData_outData$whas ;

  // action method wbuf_24_portB_request_put
  assign RDY_wbuf_24_portB_request_put =
	     (wbuffer_24_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_24_portB_response_get
  assign wbuf_24_portB_response_get =
	     wbuffer_24_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_24_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_24_memory$DOB ;
  assign RDY_wbuf_24_portB_response_get =
	     (wbuffer_24_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_24_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_24_serverAdapterB_outData_outData$whas ;

  // action method wbuf_25_portA_request_put
  assign RDY_wbuf_25_portA_request_put =
	     (wbuffer_25_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_25_portA_response_get
  assign wbuf_25_portA_response_get =
	     wbuffer_25_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_25_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_25_memory$DOA ;
  assign RDY_wbuf_25_portA_response_get =
	     (wbuffer_25_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_25_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_25_serverAdapterA_outData_outData$whas ;

  // action method wbuf_25_portB_request_put
  assign RDY_wbuf_25_portB_request_put =
	     (wbuffer_25_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_25_portB_response_get
  assign wbuf_25_portB_response_get =
	     wbuffer_25_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_25_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_25_memory$DOB ;
  assign RDY_wbuf_25_portB_response_get =
	     (wbuffer_25_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_25_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_25_serverAdapterB_outData_outData$whas ;

  // action method wbuf_26_portA_request_put
  assign RDY_wbuf_26_portA_request_put =
	     (wbuffer_26_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_26_portA_response_get
  assign wbuf_26_portA_response_get =
	     wbuffer_26_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_26_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_26_memory$DOA ;
  assign RDY_wbuf_26_portA_response_get =
	     (wbuffer_26_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_26_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_26_serverAdapterA_outData_outData$whas ;

  // action method wbuf_26_portB_request_put
  assign RDY_wbuf_26_portB_request_put =
	     (wbuffer_26_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_26_portB_response_get
  assign wbuf_26_portB_response_get =
	     wbuffer_26_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_26_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_26_memory$DOB ;
  assign RDY_wbuf_26_portB_response_get =
	     (wbuffer_26_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_26_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_26_serverAdapterB_outData_outData$whas ;

  // action method wbuf_27_portA_request_put
  assign RDY_wbuf_27_portA_request_put =
	     (wbuffer_27_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_27_portA_response_get
  assign wbuf_27_portA_response_get =
	     wbuffer_27_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_27_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_27_memory$DOA ;
  assign RDY_wbuf_27_portA_response_get =
	     (wbuffer_27_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_27_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_27_serverAdapterA_outData_outData$whas ;

  // action method wbuf_27_portB_request_put
  assign RDY_wbuf_27_portB_request_put =
	     (wbuffer_27_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_27_portB_response_get
  assign wbuf_27_portB_response_get =
	     wbuffer_27_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_27_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_27_memory$DOB ;
  assign RDY_wbuf_27_portB_response_get =
	     (wbuffer_27_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_27_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_27_serverAdapterB_outData_outData$whas ;

  // action method wbuf_28_portA_request_put
  assign RDY_wbuf_28_portA_request_put =
	     (wbuffer_28_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_28_portA_response_get
  assign wbuf_28_portA_response_get =
	     wbuffer_28_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_28_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_28_memory$DOA ;
  assign RDY_wbuf_28_portA_response_get =
	     (wbuffer_28_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_28_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_28_serverAdapterA_outData_outData$whas ;

  // action method wbuf_28_portB_request_put
  assign RDY_wbuf_28_portB_request_put =
	     (wbuffer_28_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_28_portB_response_get
  assign wbuf_28_portB_response_get =
	     wbuffer_28_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_28_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_28_memory$DOB ;
  assign RDY_wbuf_28_portB_response_get =
	     (wbuffer_28_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_28_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_28_serverAdapterB_outData_outData$whas ;

  // action method wbuf_29_portA_request_put
  assign RDY_wbuf_29_portA_request_put =
	     (wbuffer_29_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_29_portA_response_get
  assign wbuf_29_portA_response_get =
	     wbuffer_29_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_29_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_29_memory$DOA ;
  assign RDY_wbuf_29_portA_response_get =
	     (wbuffer_29_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_29_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_29_serverAdapterA_outData_outData$whas ;

  // action method wbuf_29_portB_request_put
  assign RDY_wbuf_29_portB_request_put =
	     (wbuffer_29_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_29_portB_response_get
  assign wbuf_29_portB_response_get =
	     wbuffer_29_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_29_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_29_memory$DOB ;
  assign RDY_wbuf_29_portB_response_get =
	     (wbuffer_29_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_29_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_29_serverAdapterB_outData_outData$whas ;

  // action method wbuf_30_portA_request_put
  assign RDY_wbuf_30_portA_request_put =
	     (wbuffer_30_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_30_portA_response_get
  assign wbuf_30_portA_response_get =
	     wbuffer_30_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_30_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_30_memory$DOA ;
  assign RDY_wbuf_30_portA_response_get =
	     (wbuffer_30_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_30_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_30_serverAdapterA_outData_outData$whas ;

  // action method wbuf_30_portB_request_put
  assign RDY_wbuf_30_portB_request_put =
	     (wbuffer_30_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_30_portB_response_get
  assign wbuf_30_portB_response_get =
	     wbuffer_30_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_30_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_30_memory$DOB ;
  assign RDY_wbuf_30_portB_response_get =
	     (wbuffer_30_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_30_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_30_serverAdapterB_outData_outData$whas ;

  // action method wbuf_31_portA_request_put
  assign RDY_wbuf_31_portA_request_put =
	     (wbuffer_31_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_31_portA_response_get
  assign wbuf_31_portA_response_get =
	     wbuffer_31_serverAdapterA_outDataCore$EMPTY_N ?
	       wbuffer_31_serverAdapterA_outDataCore$D_OUT :
	       wbuffer_31_memory$DOA ;
  assign RDY_wbuf_31_portA_response_get =
	     (wbuffer_31_serverAdapterA_outDataCore$EMPTY_N ||
	      wbuffer_31_serverAdapterA_outData_enqData$whas) &&
	     wbuffer_31_serverAdapterA_outData_outData$whas ;

  // action method wbuf_31_portB_request_put
  assign RDY_wbuf_31_portB_request_put =
	     (wbuffer_31_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method wbuf_31_portB_response_get
  assign wbuf_31_portB_response_get =
	     wbuffer_31_serverAdapterB_outDataCore$EMPTY_N ?
	       wbuffer_31_serverAdapterB_outDataCore$D_OUT :
	       wbuffer_31_memory$DOB ;
  assign RDY_wbuf_31_portB_response_get =
	     (wbuffer_31_serverAdapterB_outDataCore$EMPTY_N ||
	      wbuffer_31_serverAdapterB_outData_enqData$whas) &&
	     wbuffer_31_serverAdapterB_outData_outData$whas ;

  // action method obuf1_0_portA_request_put
  assign RDY_obuf1_0_portA_request_put =
	     (obuffer1_0_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_0_portA_response_get
  assign obuf1_0_portA_response_get =
	     obuffer1_0_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_0_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_0_memory$DOA ;
  assign RDY_obuf1_0_portA_response_get =
	     (obuffer1_0_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_0_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_0_serverAdapterA_outData_outData$whas ;

  // action method obuf1_0_portB_request_put
  assign RDY_obuf1_0_portB_request_put =
	     (obuffer1_0_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_0_portB_response_get
  assign obuf1_0_portB_response_get =
	     obuffer1_0_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_0_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_0_memory$DOB ;
  assign RDY_obuf1_0_portB_response_get =
	     (obuffer1_0_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_0_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_0_serverAdapterB_outData_outData$whas ;

  // action method obuf1_1_portA_request_put
  assign RDY_obuf1_1_portA_request_put =
	     (obuffer1_1_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_1_portA_response_get
  assign obuf1_1_portA_response_get =
	     obuffer1_1_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_1_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_1_memory$DOA ;
  assign RDY_obuf1_1_portA_response_get =
	     (obuffer1_1_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_1_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_1_serverAdapterA_outData_outData$whas ;

  // action method obuf1_1_portB_request_put
  assign RDY_obuf1_1_portB_request_put =
	     (obuffer1_1_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_1_portB_response_get
  assign obuf1_1_portB_response_get =
	     obuffer1_1_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_1_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_1_memory$DOB ;
  assign RDY_obuf1_1_portB_response_get =
	     (obuffer1_1_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_1_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_1_serverAdapterB_outData_outData$whas ;

  // action method obuf1_2_portA_request_put
  assign RDY_obuf1_2_portA_request_put =
	     (obuffer1_2_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_2_portA_response_get
  assign obuf1_2_portA_response_get =
	     obuffer1_2_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_2_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_2_memory$DOA ;
  assign RDY_obuf1_2_portA_response_get =
	     (obuffer1_2_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_2_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_2_serverAdapterA_outData_outData$whas ;

  // action method obuf1_2_portB_request_put
  assign RDY_obuf1_2_portB_request_put =
	     (obuffer1_2_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_2_portB_response_get
  assign obuf1_2_portB_response_get =
	     obuffer1_2_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_2_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_2_memory$DOB ;
  assign RDY_obuf1_2_portB_response_get =
	     (obuffer1_2_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_2_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_2_serverAdapterB_outData_outData$whas ;

  // action method obuf1_3_portA_request_put
  assign RDY_obuf1_3_portA_request_put =
	     (obuffer1_3_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_3_portA_response_get
  assign obuf1_3_portA_response_get =
	     obuffer1_3_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_3_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_3_memory$DOA ;
  assign RDY_obuf1_3_portA_response_get =
	     (obuffer1_3_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_3_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_3_serverAdapterA_outData_outData$whas ;

  // action method obuf1_3_portB_request_put
  assign RDY_obuf1_3_portB_request_put =
	     (obuffer1_3_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_3_portB_response_get
  assign obuf1_3_portB_response_get =
	     obuffer1_3_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_3_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_3_memory$DOB ;
  assign RDY_obuf1_3_portB_response_get =
	     (obuffer1_3_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_3_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_3_serverAdapterB_outData_outData$whas ;

  // action method obuf1_4_portA_request_put
  assign RDY_obuf1_4_portA_request_put =
	     (obuffer1_4_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_4_portA_response_get
  assign obuf1_4_portA_response_get =
	     obuffer1_4_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_4_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_4_memory$DOA ;
  assign RDY_obuf1_4_portA_response_get =
	     (obuffer1_4_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_4_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_4_serverAdapterA_outData_outData$whas ;

  // action method obuf1_4_portB_request_put
  assign RDY_obuf1_4_portB_request_put =
	     (obuffer1_4_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_4_portB_response_get
  assign obuf1_4_portB_response_get =
	     obuffer1_4_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_4_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_4_memory$DOB ;
  assign RDY_obuf1_4_portB_response_get =
	     (obuffer1_4_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_4_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_4_serverAdapterB_outData_outData$whas ;

  // action method obuf1_5_portA_request_put
  assign RDY_obuf1_5_portA_request_put =
	     (obuffer1_5_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_5_portA_response_get
  assign obuf1_5_portA_response_get =
	     obuffer1_5_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_5_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_5_memory$DOA ;
  assign RDY_obuf1_5_portA_response_get =
	     (obuffer1_5_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_5_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_5_serverAdapterA_outData_outData$whas ;

  // action method obuf1_5_portB_request_put
  assign RDY_obuf1_5_portB_request_put =
	     (obuffer1_5_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_5_portB_response_get
  assign obuf1_5_portB_response_get =
	     obuffer1_5_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_5_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_5_memory$DOB ;
  assign RDY_obuf1_5_portB_response_get =
	     (obuffer1_5_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_5_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_5_serverAdapterB_outData_outData$whas ;

  // action method obuf1_6_portA_request_put
  assign RDY_obuf1_6_portA_request_put =
	     (obuffer1_6_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_6_portA_response_get
  assign obuf1_6_portA_response_get =
	     obuffer1_6_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_6_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_6_memory$DOA ;
  assign RDY_obuf1_6_portA_response_get =
	     (obuffer1_6_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_6_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_6_serverAdapterA_outData_outData$whas ;

  // action method obuf1_6_portB_request_put
  assign RDY_obuf1_6_portB_request_put =
	     (obuffer1_6_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_6_portB_response_get
  assign obuf1_6_portB_response_get =
	     obuffer1_6_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_6_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_6_memory$DOB ;
  assign RDY_obuf1_6_portB_response_get =
	     (obuffer1_6_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_6_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_6_serverAdapterB_outData_outData$whas ;

  // action method obuf1_7_portA_request_put
  assign RDY_obuf1_7_portA_request_put =
	     (obuffer1_7_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_7_portA_response_get
  assign obuf1_7_portA_response_get =
	     obuffer1_7_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_7_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_7_memory$DOA ;
  assign RDY_obuf1_7_portA_response_get =
	     (obuffer1_7_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_7_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_7_serverAdapterA_outData_outData$whas ;

  // action method obuf1_7_portB_request_put
  assign RDY_obuf1_7_portB_request_put =
	     (obuffer1_7_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_7_portB_response_get
  assign obuf1_7_portB_response_get =
	     obuffer1_7_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_7_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_7_memory$DOB ;
  assign RDY_obuf1_7_portB_response_get =
	     (obuffer1_7_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_7_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_7_serverAdapterB_outData_outData$whas ;

  // action method obuf1_8_portA_request_put
  assign RDY_obuf1_8_portA_request_put =
	     (obuffer1_8_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_8_portA_response_get
  assign obuf1_8_portA_response_get =
	     obuffer1_8_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_8_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_8_memory$DOA ;
  assign RDY_obuf1_8_portA_response_get =
	     (obuffer1_8_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_8_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_8_serverAdapterA_outData_outData$whas ;

  // action method obuf1_8_portB_request_put
  assign RDY_obuf1_8_portB_request_put =
	     (obuffer1_8_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_8_portB_response_get
  assign obuf1_8_portB_response_get =
	     obuffer1_8_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_8_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_8_memory$DOB ;
  assign RDY_obuf1_8_portB_response_get =
	     (obuffer1_8_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_8_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_8_serverAdapterB_outData_outData$whas ;

  // action method obuf1_9_portA_request_put
  assign RDY_obuf1_9_portA_request_put =
	     (obuffer1_9_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_9_portA_response_get
  assign obuf1_9_portA_response_get =
	     obuffer1_9_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_9_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_9_memory$DOA ;
  assign RDY_obuf1_9_portA_response_get =
	     (obuffer1_9_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_9_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_9_serverAdapterA_outData_outData$whas ;

  // action method obuf1_9_portB_request_put
  assign RDY_obuf1_9_portB_request_put =
	     (obuffer1_9_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_9_portB_response_get
  assign obuf1_9_portB_response_get =
	     obuffer1_9_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_9_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_9_memory$DOB ;
  assign RDY_obuf1_9_portB_response_get =
	     (obuffer1_9_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_9_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_9_serverAdapterB_outData_outData$whas ;

  // action method obuf1_10_portA_request_put
  assign RDY_obuf1_10_portA_request_put =
	     (obuffer1_10_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_10_portA_response_get
  assign obuf1_10_portA_response_get =
	     obuffer1_10_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_10_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_10_memory$DOA ;
  assign RDY_obuf1_10_portA_response_get =
	     (obuffer1_10_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_10_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_10_serverAdapterA_outData_outData$whas ;

  // action method obuf1_10_portB_request_put
  assign RDY_obuf1_10_portB_request_put =
	     (obuffer1_10_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_10_portB_response_get
  assign obuf1_10_portB_response_get =
	     obuffer1_10_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_10_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_10_memory$DOB ;
  assign RDY_obuf1_10_portB_response_get =
	     (obuffer1_10_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_10_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_10_serverAdapterB_outData_outData$whas ;

  // action method obuf1_11_portA_request_put
  assign RDY_obuf1_11_portA_request_put =
	     (obuffer1_11_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_11_portA_response_get
  assign obuf1_11_portA_response_get =
	     obuffer1_11_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_11_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_11_memory$DOA ;
  assign RDY_obuf1_11_portA_response_get =
	     (obuffer1_11_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_11_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_11_serverAdapterA_outData_outData$whas ;

  // action method obuf1_11_portB_request_put
  assign RDY_obuf1_11_portB_request_put =
	     (obuffer1_11_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_11_portB_response_get
  assign obuf1_11_portB_response_get =
	     obuffer1_11_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_11_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_11_memory$DOB ;
  assign RDY_obuf1_11_portB_response_get =
	     (obuffer1_11_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_11_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_11_serverAdapterB_outData_outData$whas ;

  // action method obuf1_12_portA_request_put
  assign RDY_obuf1_12_portA_request_put =
	     (obuffer1_12_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_12_portA_response_get
  assign obuf1_12_portA_response_get =
	     obuffer1_12_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_12_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_12_memory$DOA ;
  assign RDY_obuf1_12_portA_response_get =
	     (obuffer1_12_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_12_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_12_serverAdapterA_outData_outData$whas ;

  // action method obuf1_12_portB_request_put
  assign RDY_obuf1_12_portB_request_put =
	     (obuffer1_12_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_12_portB_response_get
  assign obuf1_12_portB_response_get =
	     obuffer1_12_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_12_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_12_memory$DOB ;
  assign RDY_obuf1_12_portB_response_get =
	     (obuffer1_12_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_12_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_12_serverAdapterB_outData_outData$whas ;

  // action method obuf1_13_portA_request_put
  assign RDY_obuf1_13_portA_request_put =
	     (obuffer1_13_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_13_portA_response_get
  assign obuf1_13_portA_response_get =
	     obuffer1_13_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_13_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_13_memory$DOA ;
  assign RDY_obuf1_13_portA_response_get =
	     (obuffer1_13_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_13_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_13_serverAdapterA_outData_outData$whas ;

  // action method obuf1_13_portB_request_put
  assign RDY_obuf1_13_portB_request_put =
	     (obuffer1_13_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_13_portB_response_get
  assign obuf1_13_portB_response_get =
	     obuffer1_13_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_13_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_13_memory$DOB ;
  assign RDY_obuf1_13_portB_response_get =
	     (obuffer1_13_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_13_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_13_serverAdapterB_outData_outData$whas ;

  // action method obuf1_14_portA_request_put
  assign RDY_obuf1_14_portA_request_put =
	     (obuffer1_14_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_14_portA_response_get
  assign obuf1_14_portA_response_get =
	     obuffer1_14_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_14_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_14_memory$DOA ;
  assign RDY_obuf1_14_portA_response_get =
	     (obuffer1_14_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_14_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_14_serverAdapterA_outData_outData$whas ;

  // action method obuf1_14_portB_request_put
  assign RDY_obuf1_14_portB_request_put =
	     (obuffer1_14_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_14_portB_response_get
  assign obuf1_14_portB_response_get =
	     obuffer1_14_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_14_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_14_memory$DOB ;
  assign RDY_obuf1_14_portB_response_get =
	     (obuffer1_14_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_14_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_14_serverAdapterB_outData_outData$whas ;

  // action method obuf1_15_portA_request_put
  assign RDY_obuf1_15_portA_request_put =
	     (obuffer1_15_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_15_portA_response_get
  assign obuf1_15_portA_response_get =
	     obuffer1_15_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_15_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_15_memory$DOA ;
  assign RDY_obuf1_15_portA_response_get =
	     (obuffer1_15_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_15_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_15_serverAdapterA_outData_outData$whas ;

  // action method obuf1_15_portB_request_put
  assign RDY_obuf1_15_portB_request_put =
	     (obuffer1_15_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_15_portB_response_get
  assign obuf1_15_portB_response_get =
	     obuffer1_15_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_15_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_15_memory$DOB ;
  assign RDY_obuf1_15_portB_response_get =
	     (obuffer1_15_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_15_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_15_serverAdapterB_outData_outData$whas ;

  // action method obuf1_16_portA_request_put
  assign RDY_obuf1_16_portA_request_put =
	     (obuffer1_16_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_16_portA_response_get
  assign obuf1_16_portA_response_get =
	     obuffer1_16_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_16_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_16_memory$DOA ;
  assign RDY_obuf1_16_portA_response_get =
	     (obuffer1_16_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_16_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_16_serverAdapterA_outData_outData$whas ;

  // action method obuf1_16_portB_request_put
  assign RDY_obuf1_16_portB_request_put =
	     (obuffer1_16_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_16_portB_response_get
  assign obuf1_16_portB_response_get =
	     obuffer1_16_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_16_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_16_memory$DOB ;
  assign RDY_obuf1_16_portB_response_get =
	     (obuffer1_16_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_16_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_16_serverAdapterB_outData_outData$whas ;

  // action method obuf1_17_portA_request_put
  assign RDY_obuf1_17_portA_request_put =
	     (obuffer1_17_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_17_portA_response_get
  assign obuf1_17_portA_response_get =
	     obuffer1_17_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_17_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_17_memory$DOA ;
  assign RDY_obuf1_17_portA_response_get =
	     (obuffer1_17_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_17_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_17_serverAdapterA_outData_outData$whas ;

  // action method obuf1_17_portB_request_put
  assign RDY_obuf1_17_portB_request_put =
	     (obuffer1_17_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_17_portB_response_get
  assign obuf1_17_portB_response_get =
	     obuffer1_17_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_17_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_17_memory$DOB ;
  assign RDY_obuf1_17_portB_response_get =
	     (obuffer1_17_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_17_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_17_serverAdapterB_outData_outData$whas ;

  // action method obuf1_18_portA_request_put
  assign RDY_obuf1_18_portA_request_put =
	     (obuffer1_18_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_18_portA_response_get
  assign obuf1_18_portA_response_get =
	     obuffer1_18_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_18_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_18_memory$DOA ;
  assign RDY_obuf1_18_portA_response_get =
	     (obuffer1_18_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_18_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_18_serverAdapterA_outData_outData$whas ;

  // action method obuf1_18_portB_request_put
  assign RDY_obuf1_18_portB_request_put =
	     (obuffer1_18_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_18_portB_response_get
  assign obuf1_18_portB_response_get =
	     obuffer1_18_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_18_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_18_memory$DOB ;
  assign RDY_obuf1_18_portB_response_get =
	     (obuffer1_18_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_18_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_18_serverAdapterB_outData_outData$whas ;

  // action method obuf1_19_portA_request_put
  assign RDY_obuf1_19_portA_request_put =
	     (obuffer1_19_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_19_portA_response_get
  assign obuf1_19_portA_response_get =
	     obuffer1_19_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_19_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_19_memory$DOA ;
  assign RDY_obuf1_19_portA_response_get =
	     (obuffer1_19_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_19_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_19_serverAdapterA_outData_outData$whas ;

  // action method obuf1_19_portB_request_put
  assign RDY_obuf1_19_portB_request_put =
	     (obuffer1_19_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_19_portB_response_get
  assign obuf1_19_portB_response_get =
	     obuffer1_19_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_19_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_19_memory$DOB ;
  assign RDY_obuf1_19_portB_response_get =
	     (obuffer1_19_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_19_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_19_serverAdapterB_outData_outData$whas ;

  // action method obuf1_20_portA_request_put
  assign RDY_obuf1_20_portA_request_put =
	     (obuffer1_20_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_20_portA_response_get
  assign obuf1_20_portA_response_get =
	     obuffer1_20_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_20_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_20_memory$DOA ;
  assign RDY_obuf1_20_portA_response_get =
	     (obuffer1_20_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_20_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_20_serverAdapterA_outData_outData$whas ;

  // action method obuf1_20_portB_request_put
  assign RDY_obuf1_20_portB_request_put =
	     (obuffer1_20_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_20_portB_response_get
  assign obuf1_20_portB_response_get =
	     obuffer1_20_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_20_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_20_memory$DOB ;
  assign RDY_obuf1_20_portB_response_get =
	     (obuffer1_20_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_20_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_20_serverAdapterB_outData_outData$whas ;

  // action method obuf1_21_portA_request_put
  assign RDY_obuf1_21_portA_request_put =
	     (obuffer1_21_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_21_portA_response_get
  assign obuf1_21_portA_response_get =
	     obuffer1_21_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_21_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_21_memory$DOA ;
  assign RDY_obuf1_21_portA_response_get =
	     (obuffer1_21_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_21_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_21_serverAdapterA_outData_outData$whas ;

  // action method obuf1_21_portB_request_put
  assign RDY_obuf1_21_portB_request_put =
	     (obuffer1_21_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_21_portB_response_get
  assign obuf1_21_portB_response_get =
	     obuffer1_21_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_21_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_21_memory$DOB ;
  assign RDY_obuf1_21_portB_response_get =
	     (obuffer1_21_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_21_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_21_serverAdapterB_outData_outData$whas ;

  // action method obuf1_22_portA_request_put
  assign RDY_obuf1_22_portA_request_put =
	     (obuffer1_22_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_22_portA_response_get
  assign obuf1_22_portA_response_get =
	     obuffer1_22_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_22_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_22_memory$DOA ;
  assign RDY_obuf1_22_portA_response_get =
	     (obuffer1_22_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_22_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_22_serverAdapterA_outData_outData$whas ;

  // action method obuf1_22_portB_request_put
  assign RDY_obuf1_22_portB_request_put =
	     (obuffer1_22_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_22_portB_response_get
  assign obuf1_22_portB_response_get =
	     obuffer1_22_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_22_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_22_memory$DOB ;
  assign RDY_obuf1_22_portB_response_get =
	     (obuffer1_22_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_22_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_22_serverAdapterB_outData_outData$whas ;

  // action method obuf1_23_portA_request_put
  assign RDY_obuf1_23_portA_request_put =
	     (obuffer1_23_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_23_portA_response_get
  assign obuf1_23_portA_response_get =
	     obuffer1_23_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_23_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_23_memory$DOA ;
  assign RDY_obuf1_23_portA_response_get =
	     (obuffer1_23_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_23_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_23_serverAdapterA_outData_outData$whas ;

  // action method obuf1_23_portB_request_put
  assign RDY_obuf1_23_portB_request_put =
	     (obuffer1_23_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_23_portB_response_get
  assign obuf1_23_portB_response_get =
	     obuffer1_23_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_23_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_23_memory$DOB ;
  assign RDY_obuf1_23_portB_response_get =
	     (obuffer1_23_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_23_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_23_serverAdapterB_outData_outData$whas ;

  // action method obuf1_24_portA_request_put
  assign RDY_obuf1_24_portA_request_put =
	     (obuffer1_24_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_24_portA_response_get
  assign obuf1_24_portA_response_get =
	     obuffer1_24_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_24_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_24_memory$DOA ;
  assign RDY_obuf1_24_portA_response_get =
	     (obuffer1_24_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_24_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_24_serverAdapterA_outData_outData$whas ;

  // action method obuf1_24_portB_request_put
  assign RDY_obuf1_24_portB_request_put =
	     (obuffer1_24_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_24_portB_response_get
  assign obuf1_24_portB_response_get =
	     obuffer1_24_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_24_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_24_memory$DOB ;
  assign RDY_obuf1_24_portB_response_get =
	     (obuffer1_24_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_24_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_24_serverAdapterB_outData_outData$whas ;

  // action method obuf1_25_portA_request_put
  assign RDY_obuf1_25_portA_request_put =
	     (obuffer1_25_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_25_portA_response_get
  assign obuf1_25_portA_response_get =
	     obuffer1_25_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_25_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_25_memory$DOA ;
  assign RDY_obuf1_25_portA_response_get =
	     (obuffer1_25_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_25_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_25_serverAdapterA_outData_outData$whas ;

  // action method obuf1_25_portB_request_put
  assign RDY_obuf1_25_portB_request_put =
	     (obuffer1_25_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_25_portB_response_get
  assign obuf1_25_portB_response_get =
	     obuffer1_25_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_25_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_25_memory$DOB ;
  assign RDY_obuf1_25_portB_response_get =
	     (obuffer1_25_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_25_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_25_serverAdapterB_outData_outData$whas ;

  // action method obuf1_26_portA_request_put
  assign RDY_obuf1_26_portA_request_put =
	     (obuffer1_26_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_26_portA_response_get
  assign obuf1_26_portA_response_get =
	     obuffer1_26_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_26_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_26_memory$DOA ;
  assign RDY_obuf1_26_portA_response_get =
	     (obuffer1_26_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_26_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_26_serverAdapterA_outData_outData$whas ;

  // action method obuf1_26_portB_request_put
  assign RDY_obuf1_26_portB_request_put =
	     (obuffer1_26_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_26_portB_response_get
  assign obuf1_26_portB_response_get =
	     obuffer1_26_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_26_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_26_memory$DOB ;
  assign RDY_obuf1_26_portB_response_get =
	     (obuffer1_26_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_26_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_26_serverAdapterB_outData_outData$whas ;

  // action method obuf1_27_portA_request_put
  assign RDY_obuf1_27_portA_request_put =
	     (obuffer1_27_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_27_portA_response_get
  assign obuf1_27_portA_response_get =
	     obuffer1_27_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_27_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_27_memory$DOA ;
  assign RDY_obuf1_27_portA_response_get =
	     (obuffer1_27_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_27_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_27_serverAdapterA_outData_outData$whas ;

  // action method obuf1_27_portB_request_put
  assign RDY_obuf1_27_portB_request_put =
	     (obuffer1_27_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_27_portB_response_get
  assign obuf1_27_portB_response_get =
	     obuffer1_27_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_27_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_27_memory$DOB ;
  assign RDY_obuf1_27_portB_response_get =
	     (obuffer1_27_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_27_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_27_serverAdapterB_outData_outData$whas ;

  // action method obuf1_28_portA_request_put
  assign RDY_obuf1_28_portA_request_put =
	     (obuffer1_28_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_28_portA_response_get
  assign obuf1_28_portA_response_get =
	     obuffer1_28_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_28_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_28_memory$DOA ;
  assign RDY_obuf1_28_portA_response_get =
	     (obuffer1_28_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_28_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_28_serverAdapterA_outData_outData$whas ;

  // action method obuf1_28_portB_request_put
  assign RDY_obuf1_28_portB_request_put =
	     (obuffer1_28_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_28_portB_response_get
  assign obuf1_28_portB_response_get =
	     obuffer1_28_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_28_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_28_memory$DOB ;
  assign RDY_obuf1_28_portB_response_get =
	     (obuffer1_28_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_28_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_28_serverAdapterB_outData_outData$whas ;

  // action method obuf1_29_portA_request_put
  assign RDY_obuf1_29_portA_request_put =
	     (obuffer1_29_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_29_portA_response_get
  assign obuf1_29_portA_response_get =
	     obuffer1_29_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_29_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_29_memory$DOA ;
  assign RDY_obuf1_29_portA_response_get =
	     (obuffer1_29_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_29_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_29_serverAdapterA_outData_outData$whas ;

  // action method obuf1_29_portB_request_put
  assign RDY_obuf1_29_portB_request_put =
	     (obuffer1_29_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_29_portB_response_get
  assign obuf1_29_portB_response_get =
	     obuffer1_29_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_29_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_29_memory$DOB ;
  assign RDY_obuf1_29_portB_response_get =
	     (obuffer1_29_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_29_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_29_serverAdapterB_outData_outData$whas ;

  // action method obuf1_30_portA_request_put
  assign RDY_obuf1_30_portA_request_put =
	     (obuffer1_30_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_30_portA_response_get
  assign obuf1_30_portA_response_get =
	     obuffer1_30_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_30_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_30_memory$DOA ;
  assign RDY_obuf1_30_portA_response_get =
	     (obuffer1_30_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_30_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_30_serverAdapterA_outData_outData$whas ;

  // action method obuf1_30_portB_request_put
  assign RDY_obuf1_30_portB_request_put =
	     (obuffer1_30_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_30_portB_response_get
  assign obuf1_30_portB_response_get =
	     obuffer1_30_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_30_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_30_memory$DOB ;
  assign RDY_obuf1_30_portB_response_get =
	     (obuffer1_30_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_30_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_30_serverAdapterB_outData_outData$whas ;

  // action method obuf1_31_portA_request_put
  assign RDY_obuf1_31_portA_request_put =
	     (obuffer1_31_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_31_portA_response_get
  assign obuf1_31_portA_response_get =
	     obuffer1_31_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer1_31_serverAdapterA_outDataCore$D_OUT :
	       obuffer1_31_memory$DOA ;
  assign RDY_obuf1_31_portA_response_get =
	     (obuffer1_31_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer1_31_serverAdapterA_outData_enqData$whas) &&
	     obuffer1_31_serverAdapterA_outData_outData$whas ;

  // action method obuf1_31_portB_request_put
  assign RDY_obuf1_31_portB_request_put =
	     (obuffer1_31_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf1_31_portB_response_get
  assign obuf1_31_portB_response_get =
	     obuffer1_31_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer1_31_serverAdapterB_outDataCore$D_OUT :
	       obuffer1_31_memory$DOB ;
  assign RDY_obuf1_31_portB_response_get =
	     (obuffer1_31_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer1_31_serverAdapterB_outData_enqData$whas) &&
	     obuffer1_31_serverAdapterB_outData_outData$whas ;

  // action method obuf2_0_portA_request_put
  assign RDY_obuf2_0_portA_request_put =
	     (obuffer2_0_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_0_portA_response_get
  assign obuf2_0_portA_response_get =
	     obuffer2_0_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_0_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_0_memory$DOA ;
  assign RDY_obuf2_0_portA_response_get =
	     (obuffer2_0_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_0_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_0_serverAdapterA_outData_outData$whas ;

  // action method obuf2_0_portB_request_put
  assign RDY_obuf2_0_portB_request_put =
	     (obuffer2_0_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_0_portB_response_get
  assign obuf2_0_portB_response_get =
	     obuffer2_0_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_0_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_0_memory$DOB ;
  assign RDY_obuf2_0_portB_response_get =
	     (obuffer2_0_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_0_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_0_serverAdapterB_outData_outData$whas ;

  // action method obuf2_1_portA_request_put
  assign RDY_obuf2_1_portA_request_put =
	     (obuffer2_1_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_1_portA_response_get
  assign obuf2_1_portA_response_get =
	     obuffer2_1_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_1_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_1_memory$DOA ;
  assign RDY_obuf2_1_portA_response_get =
	     (obuffer2_1_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_1_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_1_serverAdapterA_outData_outData$whas ;

  // action method obuf2_1_portB_request_put
  assign RDY_obuf2_1_portB_request_put =
	     (obuffer2_1_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_1_portB_response_get
  assign obuf2_1_portB_response_get =
	     obuffer2_1_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_1_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_1_memory$DOB ;
  assign RDY_obuf2_1_portB_response_get =
	     (obuffer2_1_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_1_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_1_serverAdapterB_outData_outData$whas ;

  // action method obuf2_2_portA_request_put
  assign RDY_obuf2_2_portA_request_put =
	     (obuffer2_2_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_2_portA_response_get
  assign obuf2_2_portA_response_get =
	     obuffer2_2_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_2_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_2_memory$DOA ;
  assign RDY_obuf2_2_portA_response_get =
	     (obuffer2_2_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_2_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_2_serverAdapterA_outData_outData$whas ;

  // action method obuf2_2_portB_request_put
  assign RDY_obuf2_2_portB_request_put =
	     (obuffer2_2_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_2_portB_response_get
  assign obuf2_2_portB_response_get =
	     obuffer2_2_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_2_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_2_memory$DOB ;
  assign RDY_obuf2_2_portB_response_get =
	     (obuffer2_2_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_2_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_2_serverAdapterB_outData_outData$whas ;

  // action method obuf2_3_portA_request_put
  assign RDY_obuf2_3_portA_request_put =
	     (obuffer2_3_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_3_portA_response_get
  assign obuf2_3_portA_response_get =
	     obuffer2_3_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_3_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_3_memory$DOA ;
  assign RDY_obuf2_3_portA_response_get =
	     (obuffer2_3_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_3_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_3_serverAdapterA_outData_outData$whas ;

  // action method obuf2_3_portB_request_put
  assign RDY_obuf2_3_portB_request_put =
	     (obuffer2_3_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_3_portB_response_get
  assign obuf2_3_portB_response_get =
	     obuffer2_3_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_3_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_3_memory$DOB ;
  assign RDY_obuf2_3_portB_response_get =
	     (obuffer2_3_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_3_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_3_serverAdapterB_outData_outData$whas ;

  // action method obuf2_4_portA_request_put
  assign RDY_obuf2_4_portA_request_put =
	     (obuffer2_4_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_4_portA_response_get
  assign obuf2_4_portA_response_get =
	     obuffer2_4_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_4_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_4_memory$DOA ;
  assign RDY_obuf2_4_portA_response_get =
	     (obuffer2_4_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_4_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_4_serverAdapterA_outData_outData$whas ;

  // action method obuf2_4_portB_request_put
  assign RDY_obuf2_4_portB_request_put =
	     (obuffer2_4_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_4_portB_response_get
  assign obuf2_4_portB_response_get =
	     obuffer2_4_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_4_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_4_memory$DOB ;
  assign RDY_obuf2_4_portB_response_get =
	     (obuffer2_4_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_4_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_4_serverAdapterB_outData_outData$whas ;

  // action method obuf2_5_portA_request_put
  assign RDY_obuf2_5_portA_request_put =
	     (obuffer2_5_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_5_portA_response_get
  assign obuf2_5_portA_response_get =
	     obuffer2_5_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_5_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_5_memory$DOA ;
  assign RDY_obuf2_5_portA_response_get =
	     (obuffer2_5_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_5_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_5_serverAdapterA_outData_outData$whas ;

  // action method obuf2_5_portB_request_put
  assign RDY_obuf2_5_portB_request_put =
	     (obuffer2_5_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_5_portB_response_get
  assign obuf2_5_portB_response_get =
	     obuffer2_5_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_5_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_5_memory$DOB ;
  assign RDY_obuf2_5_portB_response_get =
	     (obuffer2_5_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_5_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_5_serverAdapterB_outData_outData$whas ;

  // action method obuf2_6_portA_request_put
  assign RDY_obuf2_6_portA_request_put =
	     (obuffer2_6_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_6_portA_response_get
  assign obuf2_6_portA_response_get =
	     obuffer2_6_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_6_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_6_memory$DOA ;
  assign RDY_obuf2_6_portA_response_get =
	     (obuffer2_6_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_6_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_6_serverAdapterA_outData_outData$whas ;

  // action method obuf2_6_portB_request_put
  assign RDY_obuf2_6_portB_request_put =
	     (obuffer2_6_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_6_portB_response_get
  assign obuf2_6_portB_response_get =
	     obuffer2_6_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_6_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_6_memory$DOB ;
  assign RDY_obuf2_6_portB_response_get =
	     (obuffer2_6_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_6_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_6_serverAdapterB_outData_outData$whas ;

  // action method obuf2_7_portA_request_put
  assign RDY_obuf2_7_portA_request_put =
	     (obuffer2_7_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_7_portA_response_get
  assign obuf2_7_portA_response_get =
	     obuffer2_7_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_7_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_7_memory$DOA ;
  assign RDY_obuf2_7_portA_response_get =
	     (obuffer2_7_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_7_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_7_serverAdapterA_outData_outData$whas ;

  // action method obuf2_7_portB_request_put
  assign RDY_obuf2_7_portB_request_put =
	     (obuffer2_7_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_7_portB_response_get
  assign obuf2_7_portB_response_get =
	     obuffer2_7_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_7_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_7_memory$DOB ;
  assign RDY_obuf2_7_portB_response_get =
	     (obuffer2_7_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_7_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_7_serverAdapterB_outData_outData$whas ;

  // action method obuf2_8_portA_request_put
  assign RDY_obuf2_8_portA_request_put =
	     (obuffer2_8_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_8_portA_response_get
  assign obuf2_8_portA_response_get =
	     obuffer2_8_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_8_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_8_memory$DOA ;
  assign RDY_obuf2_8_portA_response_get =
	     (obuffer2_8_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_8_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_8_serverAdapterA_outData_outData$whas ;

  // action method obuf2_8_portB_request_put
  assign RDY_obuf2_8_portB_request_put =
	     (obuffer2_8_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_8_portB_response_get
  assign obuf2_8_portB_response_get =
	     obuffer2_8_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_8_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_8_memory$DOB ;
  assign RDY_obuf2_8_portB_response_get =
	     (obuffer2_8_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_8_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_8_serverAdapterB_outData_outData$whas ;

  // action method obuf2_9_portA_request_put
  assign RDY_obuf2_9_portA_request_put =
	     (obuffer2_9_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_9_portA_response_get
  assign obuf2_9_portA_response_get =
	     obuffer2_9_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_9_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_9_memory$DOA ;
  assign RDY_obuf2_9_portA_response_get =
	     (obuffer2_9_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_9_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_9_serverAdapterA_outData_outData$whas ;

  // action method obuf2_9_portB_request_put
  assign RDY_obuf2_9_portB_request_put =
	     (obuffer2_9_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_9_portB_response_get
  assign obuf2_9_portB_response_get =
	     obuffer2_9_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_9_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_9_memory$DOB ;
  assign RDY_obuf2_9_portB_response_get =
	     (obuffer2_9_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_9_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_9_serverAdapterB_outData_outData$whas ;

  // action method obuf2_10_portA_request_put
  assign RDY_obuf2_10_portA_request_put =
	     (obuffer2_10_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_10_portA_response_get
  assign obuf2_10_portA_response_get =
	     obuffer2_10_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_10_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_10_memory$DOA ;
  assign RDY_obuf2_10_portA_response_get =
	     (obuffer2_10_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_10_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_10_serverAdapterA_outData_outData$whas ;

  // action method obuf2_10_portB_request_put
  assign RDY_obuf2_10_portB_request_put =
	     (obuffer2_10_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_10_portB_response_get
  assign obuf2_10_portB_response_get =
	     obuffer2_10_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_10_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_10_memory$DOB ;
  assign RDY_obuf2_10_portB_response_get =
	     (obuffer2_10_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_10_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_10_serverAdapterB_outData_outData$whas ;

  // action method obuf2_11_portA_request_put
  assign RDY_obuf2_11_portA_request_put =
	     (obuffer2_11_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_11_portA_response_get
  assign obuf2_11_portA_response_get =
	     obuffer2_11_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_11_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_11_memory$DOA ;
  assign RDY_obuf2_11_portA_response_get =
	     (obuffer2_11_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_11_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_11_serverAdapterA_outData_outData$whas ;

  // action method obuf2_11_portB_request_put
  assign RDY_obuf2_11_portB_request_put =
	     (obuffer2_11_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_11_portB_response_get
  assign obuf2_11_portB_response_get =
	     obuffer2_11_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_11_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_11_memory$DOB ;
  assign RDY_obuf2_11_portB_response_get =
	     (obuffer2_11_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_11_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_11_serverAdapterB_outData_outData$whas ;

  // action method obuf2_12_portA_request_put
  assign RDY_obuf2_12_portA_request_put =
	     (obuffer2_12_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_12_portA_response_get
  assign obuf2_12_portA_response_get =
	     obuffer2_12_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_12_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_12_memory$DOA ;
  assign RDY_obuf2_12_portA_response_get =
	     (obuffer2_12_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_12_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_12_serverAdapterA_outData_outData$whas ;

  // action method obuf2_12_portB_request_put
  assign RDY_obuf2_12_portB_request_put =
	     (obuffer2_12_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_12_portB_response_get
  assign obuf2_12_portB_response_get =
	     obuffer2_12_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_12_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_12_memory$DOB ;
  assign RDY_obuf2_12_portB_response_get =
	     (obuffer2_12_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_12_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_12_serverAdapterB_outData_outData$whas ;

  // action method obuf2_13_portA_request_put
  assign RDY_obuf2_13_portA_request_put =
	     (obuffer2_13_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_13_portA_response_get
  assign obuf2_13_portA_response_get =
	     obuffer2_13_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_13_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_13_memory$DOA ;
  assign RDY_obuf2_13_portA_response_get =
	     (obuffer2_13_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_13_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_13_serverAdapterA_outData_outData$whas ;

  // action method obuf2_13_portB_request_put
  assign RDY_obuf2_13_portB_request_put =
	     (obuffer2_13_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_13_portB_response_get
  assign obuf2_13_portB_response_get =
	     obuffer2_13_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_13_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_13_memory$DOB ;
  assign RDY_obuf2_13_portB_response_get =
	     (obuffer2_13_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_13_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_13_serverAdapterB_outData_outData$whas ;

  // action method obuf2_14_portA_request_put
  assign RDY_obuf2_14_portA_request_put =
	     (obuffer2_14_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_14_portA_response_get
  assign obuf2_14_portA_response_get =
	     obuffer2_14_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_14_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_14_memory$DOA ;
  assign RDY_obuf2_14_portA_response_get =
	     (obuffer2_14_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_14_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_14_serverAdapterA_outData_outData$whas ;

  // action method obuf2_14_portB_request_put
  assign RDY_obuf2_14_portB_request_put =
	     (obuffer2_14_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_14_portB_response_get
  assign obuf2_14_portB_response_get =
	     obuffer2_14_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_14_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_14_memory$DOB ;
  assign RDY_obuf2_14_portB_response_get =
	     (obuffer2_14_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_14_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_14_serverAdapterB_outData_outData$whas ;

  // action method obuf2_15_portA_request_put
  assign RDY_obuf2_15_portA_request_put =
	     (obuffer2_15_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_15_portA_response_get
  assign obuf2_15_portA_response_get =
	     obuffer2_15_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_15_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_15_memory$DOA ;
  assign RDY_obuf2_15_portA_response_get =
	     (obuffer2_15_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_15_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_15_serverAdapterA_outData_outData$whas ;

  // action method obuf2_15_portB_request_put
  assign RDY_obuf2_15_portB_request_put =
	     (obuffer2_15_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_15_portB_response_get
  assign obuf2_15_portB_response_get =
	     obuffer2_15_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_15_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_15_memory$DOB ;
  assign RDY_obuf2_15_portB_response_get =
	     (obuffer2_15_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_15_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_15_serverAdapterB_outData_outData$whas ;

  // action method obuf2_16_portA_request_put
  assign RDY_obuf2_16_portA_request_put =
	     (obuffer2_16_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_16_portA_response_get
  assign obuf2_16_portA_response_get =
	     obuffer2_16_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_16_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_16_memory$DOA ;
  assign RDY_obuf2_16_portA_response_get =
	     (obuffer2_16_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_16_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_16_serverAdapterA_outData_outData$whas ;

  // action method obuf2_16_portB_request_put
  assign RDY_obuf2_16_portB_request_put =
	     (obuffer2_16_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_16_portB_response_get
  assign obuf2_16_portB_response_get =
	     obuffer2_16_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_16_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_16_memory$DOB ;
  assign RDY_obuf2_16_portB_response_get =
	     (obuffer2_16_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_16_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_16_serverAdapterB_outData_outData$whas ;

  // action method obuf2_17_portA_request_put
  assign RDY_obuf2_17_portA_request_put =
	     (obuffer2_17_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_17_portA_response_get
  assign obuf2_17_portA_response_get =
	     obuffer2_17_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_17_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_17_memory$DOA ;
  assign RDY_obuf2_17_portA_response_get =
	     (obuffer2_17_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_17_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_17_serverAdapterA_outData_outData$whas ;

  // action method obuf2_17_portB_request_put
  assign RDY_obuf2_17_portB_request_put =
	     (obuffer2_17_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_17_portB_response_get
  assign obuf2_17_portB_response_get =
	     obuffer2_17_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_17_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_17_memory$DOB ;
  assign RDY_obuf2_17_portB_response_get =
	     (obuffer2_17_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_17_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_17_serverAdapterB_outData_outData$whas ;

  // action method obuf2_18_portA_request_put
  assign RDY_obuf2_18_portA_request_put =
	     (obuffer2_18_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_18_portA_response_get
  assign obuf2_18_portA_response_get =
	     obuffer2_18_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_18_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_18_memory$DOA ;
  assign RDY_obuf2_18_portA_response_get =
	     (obuffer2_18_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_18_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_18_serverAdapterA_outData_outData$whas ;

  // action method obuf2_18_portB_request_put
  assign RDY_obuf2_18_portB_request_put =
	     (obuffer2_18_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_18_portB_response_get
  assign obuf2_18_portB_response_get =
	     obuffer2_18_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_18_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_18_memory$DOB ;
  assign RDY_obuf2_18_portB_response_get =
	     (obuffer2_18_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_18_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_18_serverAdapterB_outData_outData$whas ;

  // action method obuf2_19_portA_request_put
  assign RDY_obuf2_19_portA_request_put =
	     (obuffer2_19_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_19_portA_response_get
  assign obuf2_19_portA_response_get =
	     obuffer2_19_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_19_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_19_memory$DOA ;
  assign RDY_obuf2_19_portA_response_get =
	     (obuffer2_19_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_19_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_19_serverAdapterA_outData_outData$whas ;

  // action method obuf2_19_portB_request_put
  assign RDY_obuf2_19_portB_request_put =
	     (obuffer2_19_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_19_portB_response_get
  assign obuf2_19_portB_response_get =
	     obuffer2_19_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_19_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_19_memory$DOB ;
  assign RDY_obuf2_19_portB_response_get =
	     (obuffer2_19_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_19_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_19_serverAdapterB_outData_outData$whas ;

  // action method obuf2_20_portA_request_put
  assign RDY_obuf2_20_portA_request_put =
	     (obuffer2_20_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_20_portA_response_get
  assign obuf2_20_portA_response_get =
	     obuffer2_20_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_20_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_20_memory$DOA ;
  assign RDY_obuf2_20_portA_response_get =
	     (obuffer2_20_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_20_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_20_serverAdapterA_outData_outData$whas ;

  // action method obuf2_20_portB_request_put
  assign RDY_obuf2_20_portB_request_put =
	     (obuffer2_20_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_20_portB_response_get
  assign obuf2_20_portB_response_get =
	     obuffer2_20_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_20_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_20_memory$DOB ;
  assign RDY_obuf2_20_portB_response_get =
	     (obuffer2_20_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_20_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_20_serverAdapterB_outData_outData$whas ;

  // action method obuf2_21_portA_request_put
  assign RDY_obuf2_21_portA_request_put =
	     (obuffer2_21_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_21_portA_response_get
  assign obuf2_21_portA_response_get =
	     obuffer2_21_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_21_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_21_memory$DOA ;
  assign RDY_obuf2_21_portA_response_get =
	     (obuffer2_21_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_21_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_21_serverAdapterA_outData_outData$whas ;

  // action method obuf2_21_portB_request_put
  assign RDY_obuf2_21_portB_request_put =
	     (obuffer2_21_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_21_portB_response_get
  assign obuf2_21_portB_response_get =
	     obuffer2_21_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_21_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_21_memory$DOB ;
  assign RDY_obuf2_21_portB_response_get =
	     (obuffer2_21_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_21_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_21_serverAdapterB_outData_outData$whas ;

  // action method obuf2_22_portA_request_put
  assign RDY_obuf2_22_portA_request_put =
	     (obuffer2_22_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_22_portA_response_get
  assign obuf2_22_portA_response_get =
	     obuffer2_22_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_22_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_22_memory$DOA ;
  assign RDY_obuf2_22_portA_response_get =
	     (obuffer2_22_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_22_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_22_serverAdapterA_outData_outData$whas ;

  // action method obuf2_22_portB_request_put
  assign RDY_obuf2_22_portB_request_put =
	     (obuffer2_22_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_22_portB_response_get
  assign obuf2_22_portB_response_get =
	     obuffer2_22_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_22_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_22_memory$DOB ;
  assign RDY_obuf2_22_portB_response_get =
	     (obuffer2_22_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_22_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_22_serverAdapterB_outData_outData$whas ;

  // action method obuf2_23_portA_request_put
  assign RDY_obuf2_23_portA_request_put =
	     (obuffer2_23_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_23_portA_response_get
  assign obuf2_23_portA_response_get =
	     obuffer2_23_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_23_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_23_memory$DOA ;
  assign RDY_obuf2_23_portA_response_get =
	     (obuffer2_23_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_23_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_23_serverAdapterA_outData_outData$whas ;

  // action method obuf2_23_portB_request_put
  assign RDY_obuf2_23_portB_request_put =
	     (obuffer2_23_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_23_portB_response_get
  assign obuf2_23_portB_response_get =
	     obuffer2_23_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_23_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_23_memory$DOB ;
  assign RDY_obuf2_23_portB_response_get =
	     (obuffer2_23_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_23_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_23_serverAdapterB_outData_outData$whas ;

  // action method obuf2_24_portA_request_put
  assign RDY_obuf2_24_portA_request_put =
	     (obuffer2_24_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_24_portA_response_get
  assign obuf2_24_portA_response_get =
	     obuffer2_24_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_24_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_24_memory$DOA ;
  assign RDY_obuf2_24_portA_response_get =
	     (obuffer2_24_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_24_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_24_serverAdapterA_outData_outData$whas ;

  // action method obuf2_24_portB_request_put
  assign RDY_obuf2_24_portB_request_put =
	     (obuffer2_24_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_24_portB_response_get
  assign obuf2_24_portB_response_get =
	     obuffer2_24_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_24_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_24_memory$DOB ;
  assign RDY_obuf2_24_portB_response_get =
	     (obuffer2_24_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_24_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_24_serverAdapterB_outData_outData$whas ;

  // action method obuf2_25_portA_request_put
  assign RDY_obuf2_25_portA_request_put =
	     (obuffer2_25_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_25_portA_response_get
  assign obuf2_25_portA_response_get =
	     obuffer2_25_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_25_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_25_memory$DOA ;
  assign RDY_obuf2_25_portA_response_get =
	     (obuffer2_25_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_25_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_25_serverAdapterA_outData_outData$whas ;

  // action method obuf2_25_portB_request_put
  assign RDY_obuf2_25_portB_request_put =
	     (obuffer2_25_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_25_portB_response_get
  assign obuf2_25_portB_response_get =
	     obuffer2_25_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_25_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_25_memory$DOB ;
  assign RDY_obuf2_25_portB_response_get =
	     (obuffer2_25_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_25_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_25_serverAdapterB_outData_outData$whas ;

  // action method obuf2_26_portA_request_put
  assign RDY_obuf2_26_portA_request_put =
	     (obuffer2_26_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_26_portA_response_get
  assign obuf2_26_portA_response_get =
	     obuffer2_26_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_26_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_26_memory$DOA ;
  assign RDY_obuf2_26_portA_response_get =
	     (obuffer2_26_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_26_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_26_serverAdapterA_outData_outData$whas ;

  // action method obuf2_26_portB_request_put
  assign RDY_obuf2_26_portB_request_put =
	     (obuffer2_26_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_26_portB_response_get
  assign obuf2_26_portB_response_get =
	     obuffer2_26_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_26_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_26_memory$DOB ;
  assign RDY_obuf2_26_portB_response_get =
	     (obuffer2_26_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_26_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_26_serverAdapterB_outData_outData$whas ;

  // action method obuf2_27_portA_request_put
  assign RDY_obuf2_27_portA_request_put =
	     (obuffer2_27_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_27_portA_response_get
  assign obuf2_27_portA_response_get =
	     obuffer2_27_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_27_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_27_memory$DOA ;
  assign RDY_obuf2_27_portA_response_get =
	     (obuffer2_27_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_27_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_27_serverAdapterA_outData_outData$whas ;

  // action method obuf2_27_portB_request_put
  assign RDY_obuf2_27_portB_request_put =
	     (obuffer2_27_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_27_portB_response_get
  assign obuf2_27_portB_response_get =
	     obuffer2_27_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_27_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_27_memory$DOB ;
  assign RDY_obuf2_27_portB_response_get =
	     (obuffer2_27_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_27_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_27_serverAdapterB_outData_outData$whas ;

  // action method obuf2_28_portA_request_put
  assign RDY_obuf2_28_portA_request_put =
	     (obuffer2_28_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_28_portA_response_get
  assign obuf2_28_portA_response_get =
	     obuffer2_28_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_28_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_28_memory$DOA ;
  assign RDY_obuf2_28_portA_response_get =
	     (obuffer2_28_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_28_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_28_serverAdapterA_outData_outData$whas ;

  // action method obuf2_28_portB_request_put
  assign RDY_obuf2_28_portB_request_put =
	     (obuffer2_28_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_28_portB_response_get
  assign obuf2_28_portB_response_get =
	     obuffer2_28_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_28_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_28_memory$DOB ;
  assign RDY_obuf2_28_portB_response_get =
	     (obuffer2_28_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_28_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_28_serverAdapterB_outData_outData$whas ;

  // action method obuf2_29_portA_request_put
  assign RDY_obuf2_29_portA_request_put =
	     (obuffer2_29_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_29_portA_response_get
  assign obuf2_29_portA_response_get =
	     obuffer2_29_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_29_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_29_memory$DOA ;
  assign RDY_obuf2_29_portA_response_get =
	     (obuffer2_29_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_29_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_29_serverAdapterA_outData_outData$whas ;

  // action method obuf2_29_portB_request_put
  assign RDY_obuf2_29_portB_request_put =
	     (obuffer2_29_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_29_portB_response_get
  assign obuf2_29_portB_response_get =
	     obuffer2_29_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_29_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_29_memory$DOB ;
  assign RDY_obuf2_29_portB_response_get =
	     (obuffer2_29_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_29_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_29_serverAdapterB_outData_outData$whas ;

  // action method obuf2_30_portA_request_put
  assign RDY_obuf2_30_portA_request_put =
	     (obuffer2_30_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_30_portA_response_get
  assign obuf2_30_portA_response_get =
	     obuffer2_30_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_30_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_30_memory$DOA ;
  assign RDY_obuf2_30_portA_response_get =
	     (obuffer2_30_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_30_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_30_serverAdapterA_outData_outData$whas ;

  // action method obuf2_30_portB_request_put
  assign RDY_obuf2_30_portB_request_put =
	     (obuffer2_30_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_30_portB_response_get
  assign obuf2_30_portB_response_get =
	     obuffer2_30_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_30_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_30_memory$DOB ;
  assign RDY_obuf2_30_portB_response_get =
	     (obuffer2_30_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_30_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_30_serverAdapterB_outData_outData$whas ;

  // action method obuf2_31_portA_request_put
  assign RDY_obuf2_31_portA_request_put =
	     (obuffer2_31_serverAdapterA_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_31_portA_response_get
  assign obuf2_31_portA_response_get =
	     obuffer2_31_serverAdapterA_outDataCore$EMPTY_N ?
	       obuffer2_31_serverAdapterA_outDataCore$D_OUT :
	       obuffer2_31_memory$DOA ;
  assign RDY_obuf2_31_portA_response_get =
	     (obuffer2_31_serverAdapterA_outDataCore$EMPTY_N ||
	      obuffer2_31_serverAdapterA_outData_enqData$whas) &&
	     obuffer2_31_serverAdapterA_outData_outData$whas ;

  // action method obuf2_31_portB_request_put
  assign RDY_obuf2_31_portB_request_put =
	     (obuffer2_31_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;

  // actionvalue method obuf2_31_portB_response_get
  assign obuf2_31_portB_response_get =
	     obuffer2_31_serverAdapterB_outDataCore$EMPTY_N ?
	       obuffer2_31_serverAdapterB_outDataCore$D_OUT :
	       obuffer2_31_memory$DOB ;
  assign RDY_obuf2_31_portB_response_get =
	     (obuffer2_31_serverAdapterB_outDataCore$EMPTY_N ||
	      obuffer2_31_serverAdapterB_outData_enqData$whas) &&
	     obuffer2_31_serverAdapterB_outData_outData$whas ;

  // submodule ibuffer_0_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_0_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_0_memory$ADDRA),
					     .ADDRB(ibuffer_0_memory$ADDRB),
					     .DIA(ibuffer_0_memory$DIA),
					     .DIB(ibuffer_0_memory$DIB),
					     .WEA(ibuffer_0_memory$WEA),
					     .WEB(ibuffer_0_memory$WEB),
					     .ENA(ibuffer_0_memory$ENA),
					     .ENB(ibuffer_0_memory$ENB),
					     .DOA(ibuffer_0_memory$DOA),
					     .DOB(ibuffer_0_memory$DOB));

  // submodule ibuffer_0_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_0_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_0_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_0_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_0_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_0_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_0_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_0_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_0_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_0_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_0_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_0_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_0_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_0_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_0_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_0_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_0_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_0_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_10_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_10_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_10_memory$ADDRA),
					      .ADDRB(ibuffer_10_memory$ADDRB),
					      .DIA(ibuffer_10_memory$DIA),
					      .DIB(ibuffer_10_memory$DIB),
					      .WEA(ibuffer_10_memory$WEA),
					      .WEB(ibuffer_10_memory$WEB),
					      .ENA(ibuffer_10_memory$ENA),
					      .ENB(ibuffer_10_memory$ENB),
					      .DOA(ibuffer_10_memory$DOA),
					      .DOB(ibuffer_10_memory$DOB));

  // submodule ibuffer_10_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_10_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_10_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_10_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_10_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_10_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_10_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_10_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_10_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_10_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_10_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_10_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_10_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_10_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_10_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_10_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_10_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_10_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_11_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_11_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_11_memory$ADDRA),
					      .ADDRB(ibuffer_11_memory$ADDRB),
					      .DIA(ibuffer_11_memory$DIA),
					      .DIB(ibuffer_11_memory$DIB),
					      .WEA(ibuffer_11_memory$WEA),
					      .WEB(ibuffer_11_memory$WEB),
					      .ENA(ibuffer_11_memory$ENA),
					      .ENB(ibuffer_11_memory$ENB),
					      .DOA(ibuffer_11_memory$DOA),
					      .DOB(ibuffer_11_memory$DOB));

  // submodule ibuffer_11_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_11_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_11_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_11_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_11_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_11_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_11_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_11_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_11_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_11_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_11_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_11_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_11_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_11_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_11_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_11_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_11_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_11_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_12_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_12_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_12_memory$ADDRA),
					      .ADDRB(ibuffer_12_memory$ADDRB),
					      .DIA(ibuffer_12_memory$DIA),
					      .DIB(ibuffer_12_memory$DIB),
					      .WEA(ibuffer_12_memory$WEA),
					      .WEB(ibuffer_12_memory$WEB),
					      .ENA(ibuffer_12_memory$ENA),
					      .ENB(ibuffer_12_memory$ENB),
					      .DOA(ibuffer_12_memory$DOA),
					      .DOB(ibuffer_12_memory$DOB));

  // submodule ibuffer_12_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_12_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_12_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_12_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_12_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_12_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_12_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_12_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_12_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_12_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_12_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_12_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_12_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_12_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_12_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_12_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_12_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_12_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_13_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_13_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_13_memory$ADDRA),
					      .ADDRB(ibuffer_13_memory$ADDRB),
					      .DIA(ibuffer_13_memory$DIA),
					      .DIB(ibuffer_13_memory$DIB),
					      .WEA(ibuffer_13_memory$WEA),
					      .WEB(ibuffer_13_memory$WEB),
					      .ENA(ibuffer_13_memory$ENA),
					      .ENB(ibuffer_13_memory$ENB),
					      .DOA(ibuffer_13_memory$DOA),
					      .DOB(ibuffer_13_memory$DOB));

  // submodule ibuffer_13_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_13_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_13_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_13_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_13_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_13_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_13_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_13_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_13_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_13_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_13_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_13_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_13_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_13_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_13_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_13_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_13_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_13_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_14_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_14_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_14_memory$ADDRA),
					      .ADDRB(ibuffer_14_memory$ADDRB),
					      .DIA(ibuffer_14_memory$DIA),
					      .DIB(ibuffer_14_memory$DIB),
					      .WEA(ibuffer_14_memory$WEA),
					      .WEB(ibuffer_14_memory$WEB),
					      .ENA(ibuffer_14_memory$ENA),
					      .ENB(ibuffer_14_memory$ENB),
					      .DOA(ibuffer_14_memory$DOA),
					      .DOB(ibuffer_14_memory$DOB));

  // submodule ibuffer_14_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_14_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_14_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_14_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_14_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_14_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_14_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_14_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_14_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_14_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_14_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_14_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_14_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_14_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_14_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_14_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_14_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_14_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_15_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_15_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_15_memory$ADDRA),
					      .ADDRB(ibuffer_15_memory$ADDRB),
					      .DIA(ibuffer_15_memory$DIA),
					      .DIB(ibuffer_15_memory$DIB),
					      .WEA(ibuffer_15_memory$WEA),
					      .WEB(ibuffer_15_memory$WEB),
					      .ENA(ibuffer_15_memory$ENA),
					      .ENB(ibuffer_15_memory$ENB),
					      .DOA(ibuffer_15_memory$DOA),
					      .DOB(ibuffer_15_memory$DOB));

  // submodule ibuffer_15_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_15_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_15_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_15_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_15_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_15_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_15_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_15_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_15_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_15_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_15_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_15_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_15_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_15_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_15_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_15_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_15_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_15_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_16_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_16_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_16_memory$ADDRA),
					      .ADDRB(ibuffer_16_memory$ADDRB),
					      .DIA(ibuffer_16_memory$DIA),
					      .DIB(ibuffer_16_memory$DIB),
					      .WEA(ibuffer_16_memory$WEA),
					      .WEB(ibuffer_16_memory$WEB),
					      .ENA(ibuffer_16_memory$ENA),
					      .ENB(ibuffer_16_memory$ENB),
					      .DOA(ibuffer_16_memory$DOA),
					      .DOB(ibuffer_16_memory$DOB));

  // submodule ibuffer_16_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_16_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_16_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_16_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_16_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_16_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_16_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_16_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_16_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_16_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_16_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_16_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_16_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_16_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_16_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_16_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_16_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_16_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_17_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_17_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_17_memory$ADDRA),
					      .ADDRB(ibuffer_17_memory$ADDRB),
					      .DIA(ibuffer_17_memory$DIA),
					      .DIB(ibuffer_17_memory$DIB),
					      .WEA(ibuffer_17_memory$WEA),
					      .WEB(ibuffer_17_memory$WEB),
					      .ENA(ibuffer_17_memory$ENA),
					      .ENB(ibuffer_17_memory$ENB),
					      .DOA(ibuffer_17_memory$DOA),
					      .DOB(ibuffer_17_memory$DOB));

  // submodule ibuffer_17_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_17_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_17_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_17_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_17_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_17_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_17_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_17_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_17_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_17_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_17_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_17_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_17_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_17_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_17_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_17_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_17_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_17_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_18_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_18_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_18_memory$ADDRA),
					      .ADDRB(ibuffer_18_memory$ADDRB),
					      .DIA(ibuffer_18_memory$DIA),
					      .DIB(ibuffer_18_memory$DIB),
					      .WEA(ibuffer_18_memory$WEA),
					      .WEB(ibuffer_18_memory$WEB),
					      .ENA(ibuffer_18_memory$ENA),
					      .ENB(ibuffer_18_memory$ENB),
					      .DOA(ibuffer_18_memory$DOA),
					      .DOB(ibuffer_18_memory$DOB));

  // submodule ibuffer_18_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_18_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_18_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_18_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_18_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_18_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_18_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_18_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_18_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_18_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_18_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_18_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_18_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_18_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_18_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_18_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_18_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_18_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_19_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_19_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_19_memory$ADDRA),
					      .ADDRB(ibuffer_19_memory$ADDRB),
					      .DIA(ibuffer_19_memory$DIA),
					      .DIB(ibuffer_19_memory$DIB),
					      .WEA(ibuffer_19_memory$WEA),
					      .WEB(ibuffer_19_memory$WEB),
					      .ENA(ibuffer_19_memory$ENA),
					      .ENB(ibuffer_19_memory$ENB),
					      .DOA(ibuffer_19_memory$DOA),
					      .DOB(ibuffer_19_memory$DOB));

  // submodule ibuffer_19_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_19_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_19_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_19_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_19_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_19_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_19_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_19_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_19_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_19_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_19_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_19_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_19_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_19_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_19_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_19_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_19_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_19_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_1_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_1_memory$ADDRA),
					     .ADDRB(ibuffer_1_memory$ADDRB),
					     .DIA(ibuffer_1_memory$DIA),
					     .DIB(ibuffer_1_memory$DIB),
					     .WEA(ibuffer_1_memory$WEA),
					     .WEB(ibuffer_1_memory$WEB),
					     .ENA(ibuffer_1_memory$ENA),
					     .ENB(ibuffer_1_memory$ENB),
					     .DOA(ibuffer_1_memory$DOA),
					     .DOB(ibuffer_1_memory$DOB));

  // submodule ibuffer_1_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_1_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_1_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_1_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_1_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_1_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_1_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_1_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_1_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_1_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_1_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_1_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_1_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_1_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_1_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_1_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_1_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_1_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_20_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_20_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_20_memory$ADDRA),
					      .ADDRB(ibuffer_20_memory$ADDRB),
					      .DIA(ibuffer_20_memory$DIA),
					      .DIB(ibuffer_20_memory$DIB),
					      .WEA(ibuffer_20_memory$WEA),
					      .WEB(ibuffer_20_memory$WEB),
					      .ENA(ibuffer_20_memory$ENA),
					      .ENB(ibuffer_20_memory$ENB),
					      .DOA(ibuffer_20_memory$DOA),
					      .DOB(ibuffer_20_memory$DOB));

  // submodule ibuffer_20_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_20_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_20_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_20_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_20_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_20_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_20_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_20_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_20_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_20_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_20_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_20_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_20_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_20_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_20_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_20_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_20_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_20_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_21_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_21_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_21_memory$ADDRA),
					      .ADDRB(ibuffer_21_memory$ADDRB),
					      .DIA(ibuffer_21_memory$DIA),
					      .DIB(ibuffer_21_memory$DIB),
					      .WEA(ibuffer_21_memory$WEA),
					      .WEB(ibuffer_21_memory$WEB),
					      .ENA(ibuffer_21_memory$ENA),
					      .ENB(ibuffer_21_memory$ENB),
					      .DOA(ibuffer_21_memory$DOA),
					      .DOB(ibuffer_21_memory$DOB));

  // submodule ibuffer_21_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_21_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_21_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_21_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_21_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_21_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_21_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_21_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_21_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_21_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_21_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_21_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_21_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_21_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_21_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_21_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_21_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_21_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_22_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_22_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_22_memory$ADDRA),
					      .ADDRB(ibuffer_22_memory$ADDRB),
					      .DIA(ibuffer_22_memory$DIA),
					      .DIB(ibuffer_22_memory$DIB),
					      .WEA(ibuffer_22_memory$WEA),
					      .WEB(ibuffer_22_memory$WEB),
					      .ENA(ibuffer_22_memory$ENA),
					      .ENB(ibuffer_22_memory$ENB),
					      .DOA(ibuffer_22_memory$DOA),
					      .DOB(ibuffer_22_memory$DOB));

  // submodule ibuffer_22_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_22_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_22_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_22_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_22_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_22_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_22_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_22_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_22_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_22_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_22_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_22_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_22_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_22_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_22_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_22_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_22_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_22_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_23_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_23_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_23_memory$ADDRA),
					      .ADDRB(ibuffer_23_memory$ADDRB),
					      .DIA(ibuffer_23_memory$DIA),
					      .DIB(ibuffer_23_memory$DIB),
					      .WEA(ibuffer_23_memory$WEA),
					      .WEB(ibuffer_23_memory$WEB),
					      .ENA(ibuffer_23_memory$ENA),
					      .ENB(ibuffer_23_memory$ENB),
					      .DOA(ibuffer_23_memory$DOA),
					      .DOB(ibuffer_23_memory$DOB));

  // submodule ibuffer_23_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_23_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_23_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_23_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_23_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_23_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_23_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_23_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_23_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_23_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_23_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_23_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_23_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_23_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_23_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_23_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_23_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_23_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_24_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_24_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_24_memory$ADDRA),
					      .ADDRB(ibuffer_24_memory$ADDRB),
					      .DIA(ibuffer_24_memory$DIA),
					      .DIB(ibuffer_24_memory$DIB),
					      .WEA(ibuffer_24_memory$WEA),
					      .WEB(ibuffer_24_memory$WEB),
					      .ENA(ibuffer_24_memory$ENA),
					      .ENB(ibuffer_24_memory$ENB),
					      .DOA(ibuffer_24_memory$DOA),
					      .DOB(ibuffer_24_memory$DOB));

  // submodule ibuffer_24_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_24_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_24_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_24_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_24_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_24_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_24_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_24_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_24_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_24_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_24_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_24_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_24_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_24_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_24_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_24_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_24_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_24_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_25_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_25_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_25_memory$ADDRA),
					      .ADDRB(ibuffer_25_memory$ADDRB),
					      .DIA(ibuffer_25_memory$DIA),
					      .DIB(ibuffer_25_memory$DIB),
					      .WEA(ibuffer_25_memory$WEA),
					      .WEB(ibuffer_25_memory$WEB),
					      .ENA(ibuffer_25_memory$ENA),
					      .ENB(ibuffer_25_memory$ENB),
					      .DOA(ibuffer_25_memory$DOA),
					      .DOB(ibuffer_25_memory$DOB));

  // submodule ibuffer_25_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_25_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_25_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_25_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_25_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_25_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_25_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_25_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_25_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_25_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_25_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_25_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_25_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_25_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_25_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_25_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_25_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_25_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_26_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_26_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_26_memory$ADDRA),
					      .ADDRB(ibuffer_26_memory$ADDRB),
					      .DIA(ibuffer_26_memory$DIA),
					      .DIB(ibuffer_26_memory$DIB),
					      .WEA(ibuffer_26_memory$WEA),
					      .WEB(ibuffer_26_memory$WEB),
					      .ENA(ibuffer_26_memory$ENA),
					      .ENB(ibuffer_26_memory$ENB),
					      .DOA(ibuffer_26_memory$DOA),
					      .DOB(ibuffer_26_memory$DOB));

  // submodule ibuffer_26_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_26_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_26_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_26_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_26_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_26_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_26_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_26_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_26_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_26_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_26_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_26_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_26_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_26_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_26_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_26_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_26_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_26_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_27_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_27_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_27_memory$ADDRA),
					      .ADDRB(ibuffer_27_memory$ADDRB),
					      .DIA(ibuffer_27_memory$DIA),
					      .DIB(ibuffer_27_memory$DIB),
					      .WEA(ibuffer_27_memory$WEA),
					      .WEB(ibuffer_27_memory$WEB),
					      .ENA(ibuffer_27_memory$ENA),
					      .ENB(ibuffer_27_memory$ENB),
					      .DOA(ibuffer_27_memory$DOA),
					      .DOB(ibuffer_27_memory$DOB));

  // submodule ibuffer_27_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_27_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_27_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_27_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_27_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_27_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_27_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_27_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_27_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_27_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_27_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_27_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_27_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_27_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_27_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_27_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_27_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_27_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_28_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_28_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_28_memory$ADDRA),
					      .ADDRB(ibuffer_28_memory$ADDRB),
					      .DIA(ibuffer_28_memory$DIA),
					      .DIB(ibuffer_28_memory$DIB),
					      .WEA(ibuffer_28_memory$WEA),
					      .WEB(ibuffer_28_memory$WEB),
					      .ENA(ibuffer_28_memory$ENA),
					      .ENB(ibuffer_28_memory$ENB),
					      .DOA(ibuffer_28_memory$DOA),
					      .DOB(ibuffer_28_memory$DOB));

  // submodule ibuffer_28_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_28_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_28_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_28_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_28_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_28_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_28_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_28_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_28_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_28_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_28_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_28_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_28_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_28_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_28_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_28_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_28_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_28_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_29_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_29_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_29_memory$ADDRA),
					      .ADDRB(ibuffer_29_memory$ADDRB),
					      .DIA(ibuffer_29_memory$DIA),
					      .DIB(ibuffer_29_memory$DIB),
					      .WEA(ibuffer_29_memory$WEA),
					      .WEB(ibuffer_29_memory$WEB),
					      .ENA(ibuffer_29_memory$ENA),
					      .ENB(ibuffer_29_memory$ENB),
					      .DOA(ibuffer_29_memory$DOA),
					      .DOB(ibuffer_29_memory$DOB));

  // submodule ibuffer_29_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_29_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_29_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_29_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_29_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_29_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_29_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_29_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_29_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_29_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_29_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_29_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_29_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_29_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_29_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_29_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_29_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_29_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_2_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_2_memory$ADDRA),
					     .ADDRB(ibuffer_2_memory$ADDRB),
					     .DIA(ibuffer_2_memory$DIA),
					     .DIB(ibuffer_2_memory$DIB),
					     .WEA(ibuffer_2_memory$WEA),
					     .WEB(ibuffer_2_memory$WEB),
					     .ENA(ibuffer_2_memory$ENA),
					     .ENB(ibuffer_2_memory$ENB),
					     .DOA(ibuffer_2_memory$DOA),
					     .DOB(ibuffer_2_memory$DOB));

  // submodule ibuffer_2_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_2_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_2_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_2_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_2_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_2_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_2_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_2_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_2_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_2_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_2_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_2_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_2_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_2_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_2_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_2_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_2_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_2_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_30_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_30_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_30_memory$ADDRA),
					      .ADDRB(ibuffer_30_memory$ADDRB),
					      .DIA(ibuffer_30_memory$DIA),
					      .DIB(ibuffer_30_memory$DIB),
					      .WEA(ibuffer_30_memory$WEA),
					      .WEB(ibuffer_30_memory$WEB),
					      .ENA(ibuffer_30_memory$ENA),
					      .ENB(ibuffer_30_memory$ENB),
					      .DOA(ibuffer_30_memory$DOA),
					      .DOB(ibuffer_30_memory$DOB));

  // submodule ibuffer_30_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_30_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_30_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_30_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_30_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_30_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_30_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_30_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_30_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_30_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_30_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_30_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_30_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_30_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_30_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_30_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_30_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_30_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_31_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_31_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(ibuffer_31_memory$ADDRA),
					      .ADDRB(ibuffer_31_memory$ADDRB),
					      .DIA(ibuffer_31_memory$DIA),
					      .DIB(ibuffer_31_memory$DIB),
					      .WEA(ibuffer_31_memory$WEA),
					      .WEB(ibuffer_31_memory$WEB),
					      .ENA(ibuffer_31_memory$ENA),
					      .ENB(ibuffer_31_memory$ENB),
					      .DOA(ibuffer_31_memory$DOA),
					      .DOB(ibuffer_31_memory$DOB));

  // submodule ibuffer_31_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_31_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_31_serverAdapterA_outDataCore$D_IN),
								    .ENQ(ibuffer_31_serverAdapterA_outDataCore$ENQ),
								    .DEQ(ibuffer_31_serverAdapterA_outDataCore$DEQ),
								    .CLR(ibuffer_31_serverAdapterA_outDataCore$CLR),
								    .D_OUT(ibuffer_31_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(ibuffer_31_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_31_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_31_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_31_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(ibuffer_31_serverAdapterB_outDataCore$D_IN),
								    .ENQ(ibuffer_31_serverAdapterB_outDataCore$ENQ),
								    .DEQ(ibuffer_31_serverAdapterB_outDataCore$DEQ),
								    .CLR(ibuffer_31_serverAdapterB_outDataCore$CLR),
								    .D_OUT(ibuffer_31_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(ibuffer_31_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(ibuffer_31_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_3_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_3_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_3_memory$ADDRA),
					     .ADDRB(ibuffer_3_memory$ADDRB),
					     .DIA(ibuffer_3_memory$DIA),
					     .DIB(ibuffer_3_memory$DIB),
					     .WEA(ibuffer_3_memory$WEA),
					     .WEB(ibuffer_3_memory$WEB),
					     .ENA(ibuffer_3_memory$ENA),
					     .ENB(ibuffer_3_memory$ENB),
					     .DOA(ibuffer_3_memory$DOA),
					     .DOB(ibuffer_3_memory$DOB));

  // submodule ibuffer_3_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_3_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_3_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_3_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_3_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_3_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_3_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_3_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_3_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_3_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_3_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_3_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_3_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_3_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_3_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_3_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_3_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_3_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_4_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_4_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_4_memory$ADDRA),
					     .ADDRB(ibuffer_4_memory$ADDRB),
					     .DIA(ibuffer_4_memory$DIA),
					     .DIB(ibuffer_4_memory$DIB),
					     .WEA(ibuffer_4_memory$WEA),
					     .WEB(ibuffer_4_memory$WEB),
					     .ENA(ibuffer_4_memory$ENA),
					     .ENB(ibuffer_4_memory$ENB),
					     .DOA(ibuffer_4_memory$DOA),
					     .DOB(ibuffer_4_memory$DOB));

  // submodule ibuffer_4_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_4_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_4_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_4_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_4_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_4_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_4_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_4_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_4_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_4_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_4_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_4_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_4_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_4_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_4_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_4_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_4_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_4_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_5_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_5_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_5_memory$ADDRA),
					     .ADDRB(ibuffer_5_memory$ADDRB),
					     .DIA(ibuffer_5_memory$DIA),
					     .DIB(ibuffer_5_memory$DIB),
					     .WEA(ibuffer_5_memory$WEA),
					     .WEB(ibuffer_5_memory$WEB),
					     .ENA(ibuffer_5_memory$ENA),
					     .ENB(ibuffer_5_memory$ENB),
					     .DOA(ibuffer_5_memory$DOA),
					     .DOB(ibuffer_5_memory$DOB));

  // submodule ibuffer_5_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_5_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_5_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_5_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_5_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_5_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_5_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_5_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_5_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_5_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_5_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_5_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_5_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_5_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_5_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_5_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_5_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_5_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_6_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_6_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_6_memory$ADDRA),
					     .ADDRB(ibuffer_6_memory$ADDRB),
					     .DIA(ibuffer_6_memory$DIA),
					     .DIB(ibuffer_6_memory$DIB),
					     .WEA(ibuffer_6_memory$WEA),
					     .WEB(ibuffer_6_memory$WEB),
					     .ENA(ibuffer_6_memory$ENA),
					     .ENB(ibuffer_6_memory$ENB),
					     .DOA(ibuffer_6_memory$DOA),
					     .DOB(ibuffer_6_memory$DOB));

  // submodule ibuffer_6_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_6_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_6_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_6_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_6_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_6_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_6_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_6_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_6_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_6_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_6_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_6_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_6_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_6_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_6_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_6_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_6_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_6_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_7_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_7_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_7_memory$ADDRA),
					     .ADDRB(ibuffer_7_memory$ADDRB),
					     .DIA(ibuffer_7_memory$DIA),
					     .DIB(ibuffer_7_memory$DIB),
					     .WEA(ibuffer_7_memory$WEA),
					     .WEB(ibuffer_7_memory$WEB),
					     .ENA(ibuffer_7_memory$ENA),
					     .ENB(ibuffer_7_memory$ENB),
					     .DOA(ibuffer_7_memory$DOA),
					     .DOB(ibuffer_7_memory$DOB));

  // submodule ibuffer_7_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_7_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_7_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_7_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_7_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_7_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_7_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_7_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_7_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_7_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_7_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_7_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_7_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_7_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_7_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_7_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_7_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_7_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_8_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_8_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_8_memory$ADDRA),
					     .ADDRB(ibuffer_8_memory$ADDRB),
					     .DIA(ibuffer_8_memory$DIA),
					     .DIB(ibuffer_8_memory$DIB),
					     .WEA(ibuffer_8_memory$WEA),
					     .WEB(ibuffer_8_memory$WEB),
					     .ENA(ibuffer_8_memory$ENA),
					     .ENB(ibuffer_8_memory$ENB),
					     .DOA(ibuffer_8_memory$DOA),
					     .DOB(ibuffer_8_memory$DOB));

  // submodule ibuffer_8_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_8_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_8_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_8_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_8_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_8_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_8_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_8_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_8_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_8_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_8_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_8_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_8_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_8_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_8_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_8_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_8_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_8_serverAdapterB_outDataCore$EMPTY_N));

  // submodule ibuffer_9_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) ibuffer_9_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(ibuffer_9_memory$ADDRA),
					     .ADDRB(ibuffer_9_memory$ADDRB),
					     .DIA(ibuffer_9_memory$DIA),
					     .DIB(ibuffer_9_memory$DIB),
					     .WEA(ibuffer_9_memory$WEA),
					     .WEB(ibuffer_9_memory$WEB),
					     .ENA(ibuffer_9_memory$ENA),
					     .ENB(ibuffer_9_memory$ENB),
					     .DOA(ibuffer_9_memory$DOA),
					     .DOB(ibuffer_9_memory$DOB));

  // submodule ibuffer_9_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_9_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_9_serverAdapterA_outDataCore$D_IN),
								   .ENQ(ibuffer_9_serverAdapterA_outDataCore$ENQ),
								   .DEQ(ibuffer_9_serverAdapterA_outDataCore$DEQ),
								   .CLR(ibuffer_9_serverAdapterA_outDataCore$CLR),
								   .D_OUT(ibuffer_9_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(ibuffer_9_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_9_serverAdapterA_outDataCore$EMPTY_N));

  // submodule ibuffer_9_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) ibuffer_9_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(ibuffer_9_serverAdapterB_outDataCore$D_IN),
								   .ENQ(ibuffer_9_serverAdapterB_outDataCore$ENQ),
								   .DEQ(ibuffer_9_serverAdapterB_outDataCore$DEQ),
								   .CLR(ibuffer_9_serverAdapterB_outDataCore$CLR),
								   .D_OUT(ibuffer_9_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(ibuffer_9_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(ibuffer_9_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_0_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_0_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_0_memory$ADDRA),
					      .ADDRB(obuffer1_0_memory$ADDRB),
					      .DIA(obuffer1_0_memory$DIA),
					      .DIB(obuffer1_0_memory$DIB),
					      .WEA(obuffer1_0_memory$WEA),
					      .WEB(obuffer1_0_memory$WEB),
					      .ENA(obuffer1_0_memory$ENA),
					      .ENB(obuffer1_0_memory$ENB),
					      .DOA(obuffer1_0_memory$DOA),
					      .DOB(obuffer1_0_memory$DOB));

  // submodule obuffer1_0_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_0_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_0_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_0_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_0_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_0_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_0_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_0_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_0_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_0_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_0_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_0_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_0_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_0_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_0_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_0_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_0_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_0_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_10_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_10_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_10_memory$ADDRA),
					       .ADDRB(obuffer1_10_memory$ADDRB),
					       .DIA(obuffer1_10_memory$DIA),
					       .DIB(obuffer1_10_memory$DIB),
					       .WEA(obuffer1_10_memory$WEA),
					       .WEB(obuffer1_10_memory$WEB),
					       .ENA(obuffer1_10_memory$ENA),
					       .ENB(obuffer1_10_memory$ENB),
					       .DOA(obuffer1_10_memory$DOA),
					       .DOB(obuffer1_10_memory$DOB));

  // submodule obuffer1_10_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_10_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_10_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_10_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_10_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_10_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_10_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_10_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_10_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_10_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_10_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_10_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_10_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_10_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_10_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_10_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_10_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_10_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_11_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_11_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_11_memory$ADDRA),
					       .ADDRB(obuffer1_11_memory$ADDRB),
					       .DIA(obuffer1_11_memory$DIA),
					       .DIB(obuffer1_11_memory$DIB),
					       .WEA(obuffer1_11_memory$WEA),
					       .WEB(obuffer1_11_memory$WEB),
					       .ENA(obuffer1_11_memory$ENA),
					       .ENB(obuffer1_11_memory$ENB),
					       .DOA(obuffer1_11_memory$DOA),
					       .DOB(obuffer1_11_memory$DOB));

  // submodule obuffer1_11_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_11_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_11_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_11_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_11_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_11_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_11_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_11_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_11_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_11_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_11_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_11_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_11_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_11_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_11_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_11_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_11_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_11_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_12_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_12_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_12_memory$ADDRA),
					       .ADDRB(obuffer1_12_memory$ADDRB),
					       .DIA(obuffer1_12_memory$DIA),
					       .DIB(obuffer1_12_memory$DIB),
					       .WEA(obuffer1_12_memory$WEA),
					       .WEB(obuffer1_12_memory$WEB),
					       .ENA(obuffer1_12_memory$ENA),
					       .ENB(obuffer1_12_memory$ENB),
					       .DOA(obuffer1_12_memory$DOA),
					       .DOB(obuffer1_12_memory$DOB));

  // submodule obuffer1_12_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_12_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_12_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_12_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_12_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_12_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_12_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_12_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_12_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_12_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_12_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_12_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_12_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_12_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_12_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_12_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_12_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_12_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_13_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_13_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_13_memory$ADDRA),
					       .ADDRB(obuffer1_13_memory$ADDRB),
					       .DIA(obuffer1_13_memory$DIA),
					       .DIB(obuffer1_13_memory$DIB),
					       .WEA(obuffer1_13_memory$WEA),
					       .WEB(obuffer1_13_memory$WEB),
					       .ENA(obuffer1_13_memory$ENA),
					       .ENB(obuffer1_13_memory$ENB),
					       .DOA(obuffer1_13_memory$DOA),
					       .DOB(obuffer1_13_memory$DOB));

  // submodule obuffer1_13_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_13_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_13_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_13_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_13_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_13_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_13_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_13_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_13_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_13_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_13_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_13_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_13_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_13_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_13_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_13_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_13_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_13_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_14_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_14_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_14_memory$ADDRA),
					       .ADDRB(obuffer1_14_memory$ADDRB),
					       .DIA(obuffer1_14_memory$DIA),
					       .DIB(obuffer1_14_memory$DIB),
					       .WEA(obuffer1_14_memory$WEA),
					       .WEB(obuffer1_14_memory$WEB),
					       .ENA(obuffer1_14_memory$ENA),
					       .ENB(obuffer1_14_memory$ENB),
					       .DOA(obuffer1_14_memory$DOA),
					       .DOB(obuffer1_14_memory$DOB));

  // submodule obuffer1_14_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_14_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_14_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_14_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_14_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_14_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_14_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_14_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_14_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_14_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_14_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_14_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_14_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_14_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_14_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_14_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_14_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_14_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_15_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_15_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_15_memory$ADDRA),
					       .ADDRB(obuffer1_15_memory$ADDRB),
					       .DIA(obuffer1_15_memory$DIA),
					       .DIB(obuffer1_15_memory$DIB),
					       .WEA(obuffer1_15_memory$WEA),
					       .WEB(obuffer1_15_memory$WEB),
					       .ENA(obuffer1_15_memory$ENA),
					       .ENB(obuffer1_15_memory$ENB),
					       .DOA(obuffer1_15_memory$DOA),
					       .DOB(obuffer1_15_memory$DOB));

  // submodule obuffer1_15_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_15_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_15_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_15_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_15_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_15_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_15_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_15_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_15_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_15_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_15_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_15_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_15_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_15_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_15_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_15_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_15_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_15_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_16_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_16_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_16_memory$ADDRA),
					       .ADDRB(obuffer1_16_memory$ADDRB),
					       .DIA(obuffer1_16_memory$DIA),
					       .DIB(obuffer1_16_memory$DIB),
					       .WEA(obuffer1_16_memory$WEA),
					       .WEB(obuffer1_16_memory$WEB),
					       .ENA(obuffer1_16_memory$ENA),
					       .ENB(obuffer1_16_memory$ENB),
					       .DOA(obuffer1_16_memory$DOA),
					       .DOB(obuffer1_16_memory$DOB));

  // submodule obuffer1_16_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_16_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_16_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_16_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_16_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_16_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_16_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_16_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_16_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_16_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_16_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_16_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_16_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_16_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_16_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_16_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_16_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_16_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_17_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_17_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_17_memory$ADDRA),
					       .ADDRB(obuffer1_17_memory$ADDRB),
					       .DIA(obuffer1_17_memory$DIA),
					       .DIB(obuffer1_17_memory$DIB),
					       .WEA(obuffer1_17_memory$WEA),
					       .WEB(obuffer1_17_memory$WEB),
					       .ENA(obuffer1_17_memory$ENA),
					       .ENB(obuffer1_17_memory$ENB),
					       .DOA(obuffer1_17_memory$DOA),
					       .DOB(obuffer1_17_memory$DOB));

  // submodule obuffer1_17_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_17_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_17_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_17_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_17_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_17_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_17_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_17_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_17_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_17_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_17_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_17_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_17_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_17_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_17_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_17_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_17_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_17_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_18_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_18_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_18_memory$ADDRA),
					       .ADDRB(obuffer1_18_memory$ADDRB),
					       .DIA(obuffer1_18_memory$DIA),
					       .DIB(obuffer1_18_memory$DIB),
					       .WEA(obuffer1_18_memory$WEA),
					       .WEB(obuffer1_18_memory$WEB),
					       .ENA(obuffer1_18_memory$ENA),
					       .ENB(obuffer1_18_memory$ENB),
					       .DOA(obuffer1_18_memory$DOA),
					       .DOB(obuffer1_18_memory$DOB));

  // submodule obuffer1_18_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_18_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_18_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_18_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_18_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_18_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_18_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_18_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_18_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_18_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_18_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_18_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_18_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_18_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_18_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_18_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_18_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_18_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_19_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_19_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_19_memory$ADDRA),
					       .ADDRB(obuffer1_19_memory$ADDRB),
					       .DIA(obuffer1_19_memory$DIA),
					       .DIB(obuffer1_19_memory$DIB),
					       .WEA(obuffer1_19_memory$WEA),
					       .WEB(obuffer1_19_memory$WEB),
					       .ENA(obuffer1_19_memory$ENA),
					       .ENB(obuffer1_19_memory$ENB),
					       .DOA(obuffer1_19_memory$DOA),
					       .DOB(obuffer1_19_memory$DOB));

  // submodule obuffer1_19_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_19_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_19_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_19_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_19_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_19_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_19_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_19_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_19_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_19_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_19_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_19_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_19_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_19_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_19_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_19_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_19_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_19_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_1_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_1_memory$ADDRA),
					      .ADDRB(obuffer1_1_memory$ADDRB),
					      .DIA(obuffer1_1_memory$DIA),
					      .DIB(obuffer1_1_memory$DIB),
					      .WEA(obuffer1_1_memory$WEA),
					      .WEB(obuffer1_1_memory$WEB),
					      .ENA(obuffer1_1_memory$ENA),
					      .ENB(obuffer1_1_memory$ENB),
					      .DOA(obuffer1_1_memory$DOA),
					      .DOB(obuffer1_1_memory$DOB));

  // submodule obuffer1_1_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_1_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_1_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_1_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_1_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_1_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_1_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_1_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_1_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_1_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_1_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_1_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_1_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_1_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_1_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_1_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_1_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_1_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_20_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_20_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_20_memory$ADDRA),
					       .ADDRB(obuffer1_20_memory$ADDRB),
					       .DIA(obuffer1_20_memory$DIA),
					       .DIB(obuffer1_20_memory$DIB),
					       .WEA(obuffer1_20_memory$WEA),
					       .WEB(obuffer1_20_memory$WEB),
					       .ENA(obuffer1_20_memory$ENA),
					       .ENB(obuffer1_20_memory$ENB),
					       .DOA(obuffer1_20_memory$DOA),
					       .DOB(obuffer1_20_memory$DOB));

  // submodule obuffer1_20_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_20_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_20_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_20_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_20_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_20_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_20_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_20_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_20_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_20_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_20_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_20_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_20_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_20_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_20_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_20_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_20_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_20_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_21_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_21_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_21_memory$ADDRA),
					       .ADDRB(obuffer1_21_memory$ADDRB),
					       .DIA(obuffer1_21_memory$DIA),
					       .DIB(obuffer1_21_memory$DIB),
					       .WEA(obuffer1_21_memory$WEA),
					       .WEB(obuffer1_21_memory$WEB),
					       .ENA(obuffer1_21_memory$ENA),
					       .ENB(obuffer1_21_memory$ENB),
					       .DOA(obuffer1_21_memory$DOA),
					       .DOB(obuffer1_21_memory$DOB));

  // submodule obuffer1_21_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_21_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_21_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_21_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_21_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_21_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_21_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_21_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_21_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_21_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_21_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_21_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_21_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_21_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_21_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_21_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_21_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_21_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_22_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_22_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_22_memory$ADDRA),
					       .ADDRB(obuffer1_22_memory$ADDRB),
					       .DIA(obuffer1_22_memory$DIA),
					       .DIB(obuffer1_22_memory$DIB),
					       .WEA(obuffer1_22_memory$WEA),
					       .WEB(obuffer1_22_memory$WEB),
					       .ENA(obuffer1_22_memory$ENA),
					       .ENB(obuffer1_22_memory$ENB),
					       .DOA(obuffer1_22_memory$DOA),
					       .DOB(obuffer1_22_memory$DOB));

  // submodule obuffer1_22_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_22_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_22_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_22_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_22_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_22_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_22_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_22_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_22_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_22_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_22_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_22_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_22_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_22_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_22_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_22_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_22_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_22_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_23_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_23_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_23_memory$ADDRA),
					       .ADDRB(obuffer1_23_memory$ADDRB),
					       .DIA(obuffer1_23_memory$DIA),
					       .DIB(obuffer1_23_memory$DIB),
					       .WEA(obuffer1_23_memory$WEA),
					       .WEB(obuffer1_23_memory$WEB),
					       .ENA(obuffer1_23_memory$ENA),
					       .ENB(obuffer1_23_memory$ENB),
					       .DOA(obuffer1_23_memory$DOA),
					       .DOB(obuffer1_23_memory$DOB));

  // submodule obuffer1_23_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_23_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_23_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_23_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_23_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_23_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_23_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_23_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_23_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_23_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_23_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_23_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_23_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_23_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_23_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_23_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_23_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_23_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_24_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_24_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_24_memory$ADDRA),
					       .ADDRB(obuffer1_24_memory$ADDRB),
					       .DIA(obuffer1_24_memory$DIA),
					       .DIB(obuffer1_24_memory$DIB),
					       .WEA(obuffer1_24_memory$WEA),
					       .WEB(obuffer1_24_memory$WEB),
					       .ENA(obuffer1_24_memory$ENA),
					       .ENB(obuffer1_24_memory$ENB),
					       .DOA(obuffer1_24_memory$DOA),
					       .DOB(obuffer1_24_memory$DOB));

  // submodule obuffer1_24_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_24_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_24_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_24_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_24_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_24_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_24_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_24_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_24_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_24_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_24_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_24_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_24_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_24_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_24_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_24_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_24_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_24_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_25_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_25_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_25_memory$ADDRA),
					       .ADDRB(obuffer1_25_memory$ADDRB),
					       .DIA(obuffer1_25_memory$DIA),
					       .DIB(obuffer1_25_memory$DIB),
					       .WEA(obuffer1_25_memory$WEA),
					       .WEB(obuffer1_25_memory$WEB),
					       .ENA(obuffer1_25_memory$ENA),
					       .ENB(obuffer1_25_memory$ENB),
					       .DOA(obuffer1_25_memory$DOA),
					       .DOB(obuffer1_25_memory$DOB));

  // submodule obuffer1_25_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_25_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_25_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_25_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_25_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_25_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_25_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_25_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_25_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_25_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_25_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_25_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_25_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_25_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_25_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_25_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_25_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_25_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_26_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_26_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_26_memory$ADDRA),
					       .ADDRB(obuffer1_26_memory$ADDRB),
					       .DIA(obuffer1_26_memory$DIA),
					       .DIB(obuffer1_26_memory$DIB),
					       .WEA(obuffer1_26_memory$WEA),
					       .WEB(obuffer1_26_memory$WEB),
					       .ENA(obuffer1_26_memory$ENA),
					       .ENB(obuffer1_26_memory$ENB),
					       .DOA(obuffer1_26_memory$DOA),
					       .DOB(obuffer1_26_memory$DOB));

  // submodule obuffer1_26_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_26_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_26_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_26_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_26_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_26_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_26_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_26_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_26_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_26_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_26_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_26_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_26_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_26_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_26_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_26_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_26_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_26_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_27_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_27_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_27_memory$ADDRA),
					       .ADDRB(obuffer1_27_memory$ADDRB),
					       .DIA(obuffer1_27_memory$DIA),
					       .DIB(obuffer1_27_memory$DIB),
					       .WEA(obuffer1_27_memory$WEA),
					       .WEB(obuffer1_27_memory$WEB),
					       .ENA(obuffer1_27_memory$ENA),
					       .ENB(obuffer1_27_memory$ENB),
					       .DOA(obuffer1_27_memory$DOA),
					       .DOB(obuffer1_27_memory$DOB));

  // submodule obuffer1_27_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_27_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_27_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_27_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_27_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_27_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_27_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_27_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_27_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_27_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_27_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_27_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_27_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_27_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_27_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_27_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_27_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_27_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_28_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_28_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_28_memory$ADDRA),
					       .ADDRB(obuffer1_28_memory$ADDRB),
					       .DIA(obuffer1_28_memory$DIA),
					       .DIB(obuffer1_28_memory$DIB),
					       .WEA(obuffer1_28_memory$WEA),
					       .WEB(obuffer1_28_memory$WEB),
					       .ENA(obuffer1_28_memory$ENA),
					       .ENB(obuffer1_28_memory$ENB),
					       .DOA(obuffer1_28_memory$DOA),
					       .DOB(obuffer1_28_memory$DOB));

  // submodule obuffer1_28_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_28_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_28_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_28_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_28_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_28_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_28_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_28_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_28_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_28_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_28_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_28_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_28_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_28_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_28_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_28_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_28_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_28_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_29_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_29_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_29_memory$ADDRA),
					       .ADDRB(obuffer1_29_memory$ADDRB),
					       .DIA(obuffer1_29_memory$DIA),
					       .DIB(obuffer1_29_memory$DIB),
					       .WEA(obuffer1_29_memory$WEA),
					       .WEB(obuffer1_29_memory$WEB),
					       .ENA(obuffer1_29_memory$ENA),
					       .ENB(obuffer1_29_memory$ENB),
					       .DOA(obuffer1_29_memory$DOA),
					       .DOB(obuffer1_29_memory$DOB));

  // submodule obuffer1_29_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_29_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_29_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_29_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_29_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_29_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_29_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_29_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_29_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_29_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_29_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_29_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_29_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_29_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_29_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_29_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_29_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_29_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_2_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_2_memory$ADDRA),
					      .ADDRB(obuffer1_2_memory$ADDRB),
					      .DIA(obuffer1_2_memory$DIA),
					      .DIB(obuffer1_2_memory$DIB),
					      .WEA(obuffer1_2_memory$WEA),
					      .WEB(obuffer1_2_memory$WEB),
					      .ENA(obuffer1_2_memory$ENA),
					      .ENB(obuffer1_2_memory$ENB),
					      .DOA(obuffer1_2_memory$DOA),
					      .DOB(obuffer1_2_memory$DOB));

  // submodule obuffer1_2_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_2_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_2_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_2_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_2_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_2_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_2_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_2_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_2_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_2_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_2_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_2_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_2_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_2_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_2_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_2_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_2_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_2_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_30_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_30_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_30_memory$ADDRA),
					       .ADDRB(obuffer1_30_memory$ADDRB),
					       .DIA(obuffer1_30_memory$DIA),
					       .DIB(obuffer1_30_memory$DIB),
					       .WEA(obuffer1_30_memory$WEA),
					       .WEB(obuffer1_30_memory$WEB),
					       .ENA(obuffer1_30_memory$ENA),
					       .ENB(obuffer1_30_memory$ENB),
					       .DOA(obuffer1_30_memory$DOA),
					       .DOB(obuffer1_30_memory$DOB));

  // submodule obuffer1_30_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_30_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_30_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_30_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_30_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_30_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_30_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_30_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_30_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_30_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_30_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_30_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_30_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_30_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_30_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_30_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_30_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_30_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_31_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_31_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer1_31_memory$ADDRA),
					       .ADDRB(obuffer1_31_memory$ADDRB),
					       .DIA(obuffer1_31_memory$DIA),
					       .DIB(obuffer1_31_memory$DIB),
					       .WEA(obuffer1_31_memory$WEA),
					       .WEB(obuffer1_31_memory$WEB),
					       .ENA(obuffer1_31_memory$ENA),
					       .ENB(obuffer1_31_memory$ENB),
					       .DOA(obuffer1_31_memory$DOA),
					       .DOB(obuffer1_31_memory$DOB));

  // submodule obuffer1_31_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_31_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_31_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer1_31_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer1_31_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer1_31_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer1_31_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer1_31_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_31_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_31_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_31_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer1_31_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer1_31_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer1_31_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer1_31_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer1_31_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer1_31_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer1_31_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_3_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_3_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_3_memory$ADDRA),
					      .ADDRB(obuffer1_3_memory$ADDRB),
					      .DIA(obuffer1_3_memory$DIA),
					      .DIB(obuffer1_3_memory$DIB),
					      .WEA(obuffer1_3_memory$WEA),
					      .WEB(obuffer1_3_memory$WEB),
					      .ENA(obuffer1_3_memory$ENA),
					      .ENB(obuffer1_3_memory$ENB),
					      .DOA(obuffer1_3_memory$DOA),
					      .DOB(obuffer1_3_memory$DOB));

  // submodule obuffer1_3_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_3_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_3_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_3_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_3_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_3_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_3_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_3_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_3_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_3_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_3_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_3_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_3_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_3_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_3_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_3_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_3_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_3_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_4_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_4_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_4_memory$ADDRA),
					      .ADDRB(obuffer1_4_memory$ADDRB),
					      .DIA(obuffer1_4_memory$DIA),
					      .DIB(obuffer1_4_memory$DIB),
					      .WEA(obuffer1_4_memory$WEA),
					      .WEB(obuffer1_4_memory$WEB),
					      .ENA(obuffer1_4_memory$ENA),
					      .ENB(obuffer1_4_memory$ENB),
					      .DOA(obuffer1_4_memory$DOA),
					      .DOB(obuffer1_4_memory$DOB));

  // submodule obuffer1_4_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_4_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_4_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_4_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_4_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_4_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_4_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_4_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_4_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_4_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_4_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_4_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_4_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_4_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_4_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_4_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_4_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_4_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_5_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_5_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_5_memory$ADDRA),
					      .ADDRB(obuffer1_5_memory$ADDRB),
					      .DIA(obuffer1_5_memory$DIA),
					      .DIB(obuffer1_5_memory$DIB),
					      .WEA(obuffer1_5_memory$WEA),
					      .WEB(obuffer1_5_memory$WEB),
					      .ENA(obuffer1_5_memory$ENA),
					      .ENB(obuffer1_5_memory$ENB),
					      .DOA(obuffer1_5_memory$DOA),
					      .DOB(obuffer1_5_memory$DOB));

  // submodule obuffer1_5_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_5_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_5_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_5_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_5_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_5_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_5_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_5_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_5_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_5_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_5_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_5_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_5_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_5_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_5_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_5_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_5_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_5_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_6_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_6_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_6_memory$ADDRA),
					      .ADDRB(obuffer1_6_memory$ADDRB),
					      .DIA(obuffer1_6_memory$DIA),
					      .DIB(obuffer1_6_memory$DIB),
					      .WEA(obuffer1_6_memory$WEA),
					      .WEB(obuffer1_6_memory$WEB),
					      .ENA(obuffer1_6_memory$ENA),
					      .ENB(obuffer1_6_memory$ENB),
					      .DOA(obuffer1_6_memory$DOA),
					      .DOB(obuffer1_6_memory$DOB));

  // submodule obuffer1_6_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_6_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_6_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_6_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_6_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_6_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_6_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_6_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_6_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_6_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_6_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_6_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_6_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_6_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_6_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_6_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_6_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_6_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_7_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_7_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_7_memory$ADDRA),
					      .ADDRB(obuffer1_7_memory$ADDRB),
					      .DIA(obuffer1_7_memory$DIA),
					      .DIB(obuffer1_7_memory$DIB),
					      .WEA(obuffer1_7_memory$WEA),
					      .WEB(obuffer1_7_memory$WEB),
					      .ENA(obuffer1_7_memory$ENA),
					      .ENB(obuffer1_7_memory$ENB),
					      .DOA(obuffer1_7_memory$DOA),
					      .DOB(obuffer1_7_memory$DOB));

  // submodule obuffer1_7_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_7_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_7_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_7_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_7_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_7_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_7_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_7_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_7_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_7_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_7_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_7_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_7_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_7_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_7_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_7_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_7_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_7_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_8_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_8_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_8_memory$ADDRA),
					      .ADDRB(obuffer1_8_memory$ADDRB),
					      .DIA(obuffer1_8_memory$DIA),
					      .DIB(obuffer1_8_memory$DIB),
					      .WEA(obuffer1_8_memory$WEA),
					      .WEB(obuffer1_8_memory$WEB),
					      .ENA(obuffer1_8_memory$ENA),
					      .ENB(obuffer1_8_memory$ENB),
					      .DOA(obuffer1_8_memory$DOA),
					      .DOB(obuffer1_8_memory$DOB));

  // submodule obuffer1_8_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_8_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_8_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_8_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_8_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_8_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_8_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_8_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_8_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_8_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_8_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_8_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_8_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_8_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_8_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_8_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_8_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_8_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer1_9_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer1_9_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer1_9_memory$ADDRA),
					      .ADDRB(obuffer1_9_memory$ADDRB),
					      .DIA(obuffer1_9_memory$DIA),
					      .DIB(obuffer1_9_memory$DIB),
					      .WEA(obuffer1_9_memory$WEA),
					      .WEB(obuffer1_9_memory$WEB),
					      .ENA(obuffer1_9_memory$ENA),
					      .ENB(obuffer1_9_memory$ENB),
					      .DOA(obuffer1_9_memory$DOA),
					      .DOB(obuffer1_9_memory$DOB));

  // submodule obuffer1_9_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_9_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_9_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer1_9_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer1_9_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer1_9_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer1_9_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer1_9_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_9_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer1_9_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer1_9_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer1_9_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer1_9_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer1_9_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer1_9_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer1_9_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer1_9_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer1_9_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_0_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_0_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_0_memory$ADDRA),
					      .ADDRB(obuffer2_0_memory$ADDRB),
					      .DIA(obuffer2_0_memory$DIA),
					      .DIB(obuffer2_0_memory$DIB),
					      .WEA(obuffer2_0_memory$WEA),
					      .WEB(obuffer2_0_memory$WEB),
					      .ENA(obuffer2_0_memory$ENA),
					      .ENB(obuffer2_0_memory$ENB),
					      .DOA(obuffer2_0_memory$DOA),
					      .DOB(obuffer2_0_memory$DOB));

  // submodule obuffer2_0_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_0_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_0_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_0_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_0_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_0_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_0_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_0_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_0_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_0_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_0_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_0_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_0_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_0_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_0_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_0_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_0_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_0_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_10_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_10_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_10_memory$ADDRA),
					       .ADDRB(obuffer2_10_memory$ADDRB),
					       .DIA(obuffer2_10_memory$DIA),
					       .DIB(obuffer2_10_memory$DIB),
					       .WEA(obuffer2_10_memory$WEA),
					       .WEB(obuffer2_10_memory$WEB),
					       .ENA(obuffer2_10_memory$ENA),
					       .ENB(obuffer2_10_memory$ENB),
					       .DOA(obuffer2_10_memory$DOA),
					       .DOB(obuffer2_10_memory$DOB));

  // submodule obuffer2_10_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_10_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_10_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_10_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_10_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_10_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_10_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_10_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_10_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_10_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_10_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_10_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_10_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_10_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_10_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_10_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_10_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_10_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_11_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_11_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_11_memory$ADDRA),
					       .ADDRB(obuffer2_11_memory$ADDRB),
					       .DIA(obuffer2_11_memory$DIA),
					       .DIB(obuffer2_11_memory$DIB),
					       .WEA(obuffer2_11_memory$WEA),
					       .WEB(obuffer2_11_memory$WEB),
					       .ENA(obuffer2_11_memory$ENA),
					       .ENB(obuffer2_11_memory$ENB),
					       .DOA(obuffer2_11_memory$DOA),
					       .DOB(obuffer2_11_memory$DOB));

  // submodule obuffer2_11_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_11_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_11_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_11_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_11_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_11_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_11_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_11_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_11_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_11_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_11_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_11_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_11_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_11_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_11_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_11_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_11_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_11_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_12_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_12_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_12_memory$ADDRA),
					       .ADDRB(obuffer2_12_memory$ADDRB),
					       .DIA(obuffer2_12_memory$DIA),
					       .DIB(obuffer2_12_memory$DIB),
					       .WEA(obuffer2_12_memory$WEA),
					       .WEB(obuffer2_12_memory$WEB),
					       .ENA(obuffer2_12_memory$ENA),
					       .ENB(obuffer2_12_memory$ENB),
					       .DOA(obuffer2_12_memory$DOA),
					       .DOB(obuffer2_12_memory$DOB));

  // submodule obuffer2_12_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_12_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_12_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_12_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_12_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_12_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_12_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_12_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_12_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_12_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_12_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_12_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_12_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_12_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_12_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_12_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_12_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_12_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_13_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_13_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_13_memory$ADDRA),
					       .ADDRB(obuffer2_13_memory$ADDRB),
					       .DIA(obuffer2_13_memory$DIA),
					       .DIB(obuffer2_13_memory$DIB),
					       .WEA(obuffer2_13_memory$WEA),
					       .WEB(obuffer2_13_memory$WEB),
					       .ENA(obuffer2_13_memory$ENA),
					       .ENB(obuffer2_13_memory$ENB),
					       .DOA(obuffer2_13_memory$DOA),
					       .DOB(obuffer2_13_memory$DOB));

  // submodule obuffer2_13_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_13_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_13_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_13_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_13_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_13_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_13_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_13_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_13_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_13_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_13_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_13_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_13_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_13_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_13_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_13_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_13_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_13_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_14_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_14_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_14_memory$ADDRA),
					       .ADDRB(obuffer2_14_memory$ADDRB),
					       .DIA(obuffer2_14_memory$DIA),
					       .DIB(obuffer2_14_memory$DIB),
					       .WEA(obuffer2_14_memory$WEA),
					       .WEB(obuffer2_14_memory$WEB),
					       .ENA(obuffer2_14_memory$ENA),
					       .ENB(obuffer2_14_memory$ENB),
					       .DOA(obuffer2_14_memory$DOA),
					       .DOB(obuffer2_14_memory$DOB));

  // submodule obuffer2_14_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_14_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_14_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_14_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_14_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_14_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_14_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_14_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_14_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_14_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_14_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_14_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_14_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_14_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_14_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_14_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_14_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_14_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_15_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_15_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_15_memory$ADDRA),
					       .ADDRB(obuffer2_15_memory$ADDRB),
					       .DIA(obuffer2_15_memory$DIA),
					       .DIB(obuffer2_15_memory$DIB),
					       .WEA(obuffer2_15_memory$WEA),
					       .WEB(obuffer2_15_memory$WEB),
					       .ENA(obuffer2_15_memory$ENA),
					       .ENB(obuffer2_15_memory$ENB),
					       .DOA(obuffer2_15_memory$DOA),
					       .DOB(obuffer2_15_memory$DOB));

  // submodule obuffer2_15_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_15_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_15_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_15_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_15_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_15_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_15_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_15_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_15_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_15_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_15_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_15_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_15_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_15_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_15_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_15_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_15_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_15_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_16_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_16_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_16_memory$ADDRA),
					       .ADDRB(obuffer2_16_memory$ADDRB),
					       .DIA(obuffer2_16_memory$DIA),
					       .DIB(obuffer2_16_memory$DIB),
					       .WEA(obuffer2_16_memory$WEA),
					       .WEB(obuffer2_16_memory$WEB),
					       .ENA(obuffer2_16_memory$ENA),
					       .ENB(obuffer2_16_memory$ENB),
					       .DOA(obuffer2_16_memory$DOA),
					       .DOB(obuffer2_16_memory$DOB));

  // submodule obuffer2_16_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_16_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_16_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_16_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_16_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_16_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_16_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_16_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_16_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_16_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_16_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_16_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_16_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_16_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_16_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_16_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_16_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_16_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_17_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_17_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_17_memory$ADDRA),
					       .ADDRB(obuffer2_17_memory$ADDRB),
					       .DIA(obuffer2_17_memory$DIA),
					       .DIB(obuffer2_17_memory$DIB),
					       .WEA(obuffer2_17_memory$WEA),
					       .WEB(obuffer2_17_memory$WEB),
					       .ENA(obuffer2_17_memory$ENA),
					       .ENB(obuffer2_17_memory$ENB),
					       .DOA(obuffer2_17_memory$DOA),
					       .DOB(obuffer2_17_memory$DOB));

  // submodule obuffer2_17_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_17_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_17_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_17_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_17_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_17_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_17_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_17_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_17_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_17_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_17_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_17_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_17_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_17_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_17_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_17_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_17_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_17_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_18_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_18_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_18_memory$ADDRA),
					       .ADDRB(obuffer2_18_memory$ADDRB),
					       .DIA(obuffer2_18_memory$DIA),
					       .DIB(obuffer2_18_memory$DIB),
					       .WEA(obuffer2_18_memory$WEA),
					       .WEB(obuffer2_18_memory$WEB),
					       .ENA(obuffer2_18_memory$ENA),
					       .ENB(obuffer2_18_memory$ENB),
					       .DOA(obuffer2_18_memory$DOA),
					       .DOB(obuffer2_18_memory$DOB));

  // submodule obuffer2_18_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_18_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_18_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_18_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_18_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_18_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_18_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_18_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_18_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_18_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_18_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_18_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_18_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_18_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_18_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_18_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_18_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_18_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_19_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_19_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_19_memory$ADDRA),
					       .ADDRB(obuffer2_19_memory$ADDRB),
					       .DIA(obuffer2_19_memory$DIA),
					       .DIB(obuffer2_19_memory$DIB),
					       .WEA(obuffer2_19_memory$WEA),
					       .WEB(obuffer2_19_memory$WEB),
					       .ENA(obuffer2_19_memory$ENA),
					       .ENB(obuffer2_19_memory$ENB),
					       .DOA(obuffer2_19_memory$DOA),
					       .DOB(obuffer2_19_memory$DOB));

  // submodule obuffer2_19_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_19_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_19_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_19_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_19_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_19_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_19_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_19_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_19_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_19_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_19_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_19_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_19_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_19_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_19_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_19_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_19_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_19_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_1_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_1_memory$ADDRA),
					      .ADDRB(obuffer2_1_memory$ADDRB),
					      .DIA(obuffer2_1_memory$DIA),
					      .DIB(obuffer2_1_memory$DIB),
					      .WEA(obuffer2_1_memory$WEA),
					      .WEB(obuffer2_1_memory$WEB),
					      .ENA(obuffer2_1_memory$ENA),
					      .ENB(obuffer2_1_memory$ENB),
					      .DOA(obuffer2_1_memory$DOA),
					      .DOB(obuffer2_1_memory$DOB));

  // submodule obuffer2_1_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_1_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_1_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_1_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_1_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_1_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_1_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_1_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_1_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_1_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_1_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_1_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_1_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_1_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_1_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_1_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_1_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_1_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_20_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_20_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_20_memory$ADDRA),
					       .ADDRB(obuffer2_20_memory$ADDRB),
					       .DIA(obuffer2_20_memory$DIA),
					       .DIB(obuffer2_20_memory$DIB),
					       .WEA(obuffer2_20_memory$WEA),
					       .WEB(obuffer2_20_memory$WEB),
					       .ENA(obuffer2_20_memory$ENA),
					       .ENB(obuffer2_20_memory$ENB),
					       .DOA(obuffer2_20_memory$DOA),
					       .DOB(obuffer2_20_memory$DOB));

  // submodule obuffer2_20_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_20_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_20_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_20_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_20_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_20_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_20_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_20_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_20_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_20_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_20_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_20_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_20_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_20_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_20_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_20_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_20_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_20_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_21_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_21_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_21_memory$ADDRA),
					       .ADDRB(obuffer2_21_memory$ADDRB),
					       .DIA(obuffer2_21_memory$DIA),
					       .DIB(obuffer2_21_memory$DIB),
					       .WEA(obuffer2_21_memory$WEA),
					       .WEB(obuffer2_21_memory$WEB),
					       .ENA(obuffer2_21_memory$ENA),
					       .ENB(obuffer2_21_memory$ENB),
					       .DOA(obuffer2_21_memory$DOA),
					       .DOB(obuffer2_21_memory$DOB));

  // submodule obuffer2_21_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_21_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_21_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_21_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_21_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_21_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_21_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_21_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_21_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_21_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_21_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_21_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_21_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_21_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_21_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_21_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_21_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_21_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_22_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_22_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_22_memory$ADDRA),
					       .ADDRB(obuffer2_22_memory$ADDRB),
					       .DIA(obuffer2_22_memory$DIA),
					       .DIB(obuffer2_22_memory$DIB),
					       .WEA(obuffer2_22_memory$WEA),
					       .WEB(obuffer2_22_memory$WEB),
					       .ENA(obuffer2_22_memory$ENA),
					       .ENB(obuffer2_22_memory$ENB),
					       .DOA(obuffer2_22_memory$DOA),
					       .DOB(obuffer2_22_memory$DOB));

  // submodule obuffer2_22_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_22_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_22_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_22_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_22_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_22_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_22_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_22_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_22_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_22_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_22_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_22_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_22_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_22_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_22_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_22_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_22_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_22_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_23_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_23_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_23_memory$ADDRA),
					       .ADDRB(obuffer2_23_memory$ADDRB),
					       .DIA(obuffer2_23_memory$DIA),
					       .DIB(obuffer2_23_memory$DIB),
					       .WEA(obuffer2_23_memory$WEA),
					       .WEB(obuffer2_23_memory$WEB),
					       .ENA(obuffer2_23_memory$ENA),
					       .ENB(obuffer2_23_memory$ENB),
					       .DOA(obuffer2_23_memory$DOA),
					       .DOB(obuffer2_23_memory$DOB));

  // submodule obuffer2_23_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_23_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_23_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_23_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_23_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_23_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_23_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_23_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_23_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_23_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_23_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_23_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_23_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_23_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_23_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_23_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_23_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_23_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_24_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_24_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_24_memory$ADDRA),
					       .ADDRB(obuffer2_24_memory$ADDRB),
					       .DIA(obuffer2_24_memory$DIA),
					       .DIB(obuffer2_24_memory$DIB),
					       .WEA(obuffer2_24_memory$WEA),
					       .WEB(obuffer2_24_memory$WEB),
					       .ENA(obuffer2_24_memory$ENA),
					       .ENB(obuffer2_24_memory$ENB),
					       .DOA(obuffer2_24_memory$DOA),
					       .DOB(obuffer2_24_memory$DOB));

  // submodule obuffer2_24_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_24_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_24_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_24_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_24_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_24_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_24_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_24_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_24_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_24_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_24_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_24_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_24_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_24_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_24_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_24_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_24_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_24_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_25_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_25_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_25_memory$ADDRA),
					       .ADDRB(obuffer2_25_memory$ADDRB),
					       .DIA(obuffer2_25_memory$DIA),
					       .DIB(obuffer2_25_memory$DIB),
					       .WEA(obuffer2_25_memory$WEA),
					       .WEB(obuffer2_25_memory$WEB),
					       .ENA(obuffer2_25_memory$ENA),
					       .ENB(obuffer2_25_memory$ENB),
					       .DOA(obuffer2_25_memory$DOA),
					       .DOB(obuffer2_25_memory$DOB));

  // submodule obuffer2_25_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_25_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_25_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_25_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_25_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_25_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_25_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_25_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_25_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_25_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_25_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_25_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_25_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_25_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_25_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_25_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_25_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_25_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_26_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_26_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_26_memory$ADDRA),
					       .ADDRB(obuffer2_26_memory$ADDRB),
					       .DIA(obuffer2_26_memory$DIA),
					       .DIB(obuffer2_26_memory$DIB),
					       .WEA(obuffer2_26_memory$WEA),
					       .WEB(obuffer2_26_memory$WEB),
					       .ENA(obuffer2_26_memory$ENA),
					       .ENB(obuffer2_26_memory$ENB),
					       .DOA(obuffer2_26_memory$DOA),
					       .DOB(obuffer2_26_memory$DOB));

  // submodule obuffer2_26_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_26_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_26_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_26_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_26_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_26_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_26_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_26_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_26_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_26_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_26_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_26_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_26_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_26_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_26_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_26_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_26_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_26_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_27_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_27_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_27_memory$ADDRA),
					       .ADDRB(obuffer2_27_memory$ADDRB),
					       .DIA(obuffer2_27_memory$DIA),
					       .DIB(obuffer2_27_memory$DIB),
					       .WEA(obuffer2_27_memory$WEA),
					       .WEB(obuffer2_27_memory$WEB),
					       .ENA(obuffer2_27_memory$ENA),
					       .ENB(obuffer2_27_memory$ENB),
					       .DOA(obuffer2_27_memory$DOA),
					       .DOB(obuffer2_27_memory$DOB));

  // submodule obuffer2_27_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_27_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_27_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_27_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_27_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_27_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_27_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_27_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_27_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_27_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_27_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_27_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_27_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_27_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_27_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_27_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_27_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_27_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_28_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_28_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_28_memory$ADDRA),
					       .ADDRB(obuffer2_28_memory$ADDRB),
					       .DIA(obuffer2_28_memory$DIA),
					       .DIB(obuffer2_28_memory$DIB),
					       .WEA(obuffer2_28_memory$WEA),
					       .WEB(obuffer2_28_memory$WEB),
					       .ENA(obuffer2_28_memory$ENA),
					       .ENB(obuffer2_28_memory$ENB),
					       .DOA(obuffer2_28_memory$DOA),
					       .DOB(obuffer2_28_memory$DOB));

  // submodule obuffer2_28_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_28_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_28_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_28_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_28_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_28_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_28_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_28_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_28_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_28_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_28_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_28_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_28_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_28_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_28_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_28_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_28_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_28_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_29_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_29_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_29_memory$ADDRA),
					       .ADDRB(obuffer2_29_memory$ADDRB),
					       .DIA(obuffer2_29_memory$DIA),
					       .DIB(obuffer2_29_memory$DIB),
					       .WEA(obuffer2_29_memory$WEA),
					       .WEB(obuffer2_29_memory$WEB),
					       .ENA(obuffer2_29_memory$ENA),
					       .ENB(obuffer2_29_memory$ENB),
					       .DOA(obuffer2_29_memory$DOA),
					       .DOB(obuffer2_29_memory$DOB));

  // submodule obuffer2_29_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_29_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_29_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_29_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_29_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_29_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_29_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_29_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_29_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_29_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_29_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_29_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_29_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_29_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_29_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_29_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_29_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_29_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_2_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_2_memory$ADDRA),
					      .ADDRB(obuffer2_2_memory$ADDRB),
					      .DIA(obuffer2_2_memory$DIA),
					      .DIB(obuffer2_2_memory$DIB),
					      .WEA(obuffer2_2_memory$WEA),
					      .WEB(obuffer2_2_memory$WEB),
					      .ENA(obuffer2_2_memory$ENA),
					      .ENB(obuffer2_2_memory$ENB),
					      .DOA(obuffer2_2_memory$DOA),
					      .DOB(obuffer2_2_memory$DOB));

  // submodule obuffer2_2_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_2_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_2_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_2_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_2_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_2_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_2_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_2_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_2_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_2_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_2_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_2_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_2_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_2_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_2_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_2_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_2_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_2_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_30_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_30_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_30_memory$ADDRA),
					       .ADDRB(obuffer2_30_memory$ADDRB),
					       .DIA(obuffer2_30_memory$DIA),
					       .DIB(obuffer2_30_memory$DIB),
					       .WEA(obuffer2_30_memory$WEA),
					       .WEB(obuffer2_30_memory$WEB),
					       .ENA(obuffer2_30_memory$ENA),
					       .ENB(obuffer2_30_memory$ENB),
					       .DOA(obuffer2_30_memory$DOA),
					       .DOB(obuffer2_30_memory$DOB));

  // submodule obuffer2_30_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_30_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_30_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_30_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_30_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_30_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_30_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_30_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_30_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_30_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_30_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_30_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_30_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_30_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_30_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_30_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_30_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_30_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_31_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_31_memory(.CLKA(CLK),
					       .CLKB(CLK),
					       .ADDRA(obuffer2_31_memory$ADDRA),
					       .ADDRB(obuffer2_31_memory$ADDRB),
					       .DIA(obuffer2_31_memory$DIA),
					       .DIB(obuffer2_31_memory$DIB),
					       .WEA(obuffer2_31_memory$WEA),
					       .WEB(obuffer2_31_memory$WEB),
					       .ENA(obuffer2_31_memory$ENA),
					       .ENB(obuffer2_31_memory$ENB),
					       .DOA(obuffer2_31_memory$DOA),
					       .DOB(obuffer2_31_memory$DOB));

  // submodule obuffer2_31_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_31_serverAdapterA_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_31_serverAdapterA_outDataCore$D_IN),
								     .ENQ(obuffer2_31_serverAdapterA_outDataCore$ENQ),
								     .DEQ(obuffer2_31_serverAdapterA_outDataCore$DEQ),
								     .CLR(obuffer2_31_serverAdapterA_outDataCore$CLR),
								     .D_OUT(obuffer2_31_serverAdapterA_outDataCore$D_OUT),
								     .FULL_N(obuffer2_31_serverAdapterA_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_31_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_31_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_31_serverAdapterB_outDataCore(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(obuffer2_31_serverAdapterB_outDataCore$D_IN),
								     .ENQ(obuffer2_31_serverAdapterB_outDataCore$ENQ),
								     .DEQ(obuffer2_31_serverAdapterB_outDataCore$DEQ),
								     .CLR(obuffer2_31_serverAdapterB_outDataCore$CLR),
								     .D_OUT(obuffer2_31_serverAdapterB_outDataCore$D_OUT),
								     .FULL_N(obuffer2_31_serverAdapterB_outDataCore$FULL_N),
								     .EMPTY_N(obuffer2_31_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_3_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_3_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_3_memory$ADDRA),
					      .ADDRB(obuffer2_3_memory$ADDRB),
					      .DIA(obuffer2_3_memory$DIA),
					      .DIB(obuffer2_3_memory$DIB),
					      .WEA(obuffer2_3_memory$WEA),
					      .WEB(obuffer2_3_memory$WEB),
					      .ENA(obuffer2_3_memory$ENA),
					      .ENB(obuffer2_3_memory$ENB),
					      .DOA(obuffer2_3_memory$DOA),
					      .DOB(obuffer2_3_memory$DOB));

  // submodule obuffer2_3_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_3_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_3_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_3_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_3_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_3_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_3_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_3_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_3_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_3_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_3_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_3_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_3_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_3_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_3_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_3_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_3_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_3_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_4_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_4_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_4_memory$ADDRA),
					      .ADDRB(obuffer2_4_memory$ADDRB),
					      .DIA(obuffer2_4_memory$DIA),
					      .DIB(obuffer2_4_memory$DIB),
					      .WEA(obuffer2_4_memory$WEA),
					      .WEB(obuffer2_4_memory$WEB),
					      .ENA(obuffer2_4_memory$ENA),
					      .ENB(obuffer2_4_memory$ENB),
					      .DOA(obuffer2_4_memory$DOA),
					      .DOB(obuffer2_4_memory$DOB));

  // submodule obuffer2_4_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_4_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_4_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_4_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_4_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_4_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_4_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_4_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_4_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_4_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_4_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_4_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_4_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_4_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_4_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_4_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_4_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_4_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_5_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_5_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_5_memory$ADDRA),
					      .ADDRB(obuffer2_5_memory$ADDRB),
					      .DIA(obuffer2_5_memory$DIA),
					      .DIB(obuffer2_5_memory$DIB),
					      .WEA(obuffer2_5_memory$WEA),
					      .WEB(obuffer2_5_memory$WEB),
					      .ENA(obuffer2_5_memory$ENA),
					      .ENB(obuffer2_5_memory$ENB),
					      .DOA(obuffer2_5_memory$DOA),
					      .DOB(obuffer2_5_memory$DOB));

  // submodule obuffer2_5_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_5_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_5_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_5_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_5_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_5_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_5_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_5_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_5_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_5_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_5_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_5_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_5_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_5_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_5_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_5_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_5_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_5_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_6_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_6_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_6_memory$ADDRA),
					      .ADDRB(obuffer2_6_memory$ADDRB),
					      .DIA(obuffer2_6_memory$DIA),
					      .DIB(obuffer2_6_memory$DIB),
					      .WEA(obuffer2_6_memory$WEA),
					      .WEB(obuffer2_6_memory$WEB),
					      .ENA(obuffer2_6_memory$ENA),
					      .ENB(obuffer2_6_memory$ENB),
					      .DOA(obuffer2_6_memory$DOA),
					      .DOB(obuffer2_6_memory$DOB));

  // submodule obuffer2_6_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_6_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_6_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_6_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_6_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_6_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_6_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_6_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_6_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_6_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_6_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_6_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_6_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_6_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_6_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_6_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_6_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_6_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_7_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_7_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_7_memory$ADDRA),
					      .ADDRB(obuffer2_7_memory$ADDRB),
					      .DIA(obuffer2_7_memory$DIA),
					      .DIB(obuffer2_7_memory$DIB),
					      .WEA(obuffer2_7_memory$WEA),
					      .WEB(obuffer2_7_memory$WEB),
					      .ENA(obuffer2_7_memory$ENA),
					      .ENB(obuffer2_7_memory$ENB),
					      .DOA(obuffer2_7_memory$DOA),
					      .DOB(obuffer2_7_memory$DOB));

  // submodule obuffer2_7_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_7_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_7_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_7_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_7_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_7_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_7_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_7_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_7_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_7_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_7_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_7_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_7_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_7_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_7_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_7_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_7_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_7_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_8_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_8_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_8_memory$ADDRA),
					      .ADDRB(obuffer2_8_memory$ADDRB),
					      .DIA(obuffer2_8_memory$DIA),
					      .DIB(obuffer2_8_memory$DIB),
					      .WEA(obuffer2_8_memory$WEA),
					      .WEB(obuffer2_8_memory$WEB),
					      .ENA(obuffer2_8_memory$ENA),
					      .ENB(obuffer2_8_memory$ENB),
					      .DOA(obuffer2_8_memory$DOA),
					      .DOB(obuffer2_8_memory$DOB));

  // submodule obuffer2_8_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_8_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_8_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_8_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_8_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_8_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_8_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_8_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_8_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_8_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_8_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_8_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_8_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_8_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_8_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_8_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_8_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_8_serverAdapterB_outDataCore$EMPTY_N));

  // submodule obuffer2_9_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(9'd256)) obuffer2_9_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(obuffer2_9_memory$ADDRA),
					      .ADDRB(obuffer2_9_memory$ADDRB),
					      .DIA(obuffer2_9_memory$DIA),
					      .DIB(obuffer2_9_memory$DIB),
					      .WEA(obuffer2_9_memory$WEA),
					      .WEB(obuffer2_9_memory$WEB),
					      .ENA(obuffer2_9_memory$ENA),
					      .ENB(obuffer2_9_memory$ENB),
					      .DOA(obuffer2_9_memory$DOA),
					      .DOB(obuffer2_9_memory$DOB));

  // submodule obuffer2_9_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_9_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_9_serverAdapterA_outDataCore$D_IN),
								    .ENQ(obuffer2_9_serverAdapterA_outDataCore$ENQ),
								    .DEQ(obuffer2_9_serverAdapterA_outDataCore$DEQ),
								    .CLR(obuffer2_9_serverAdapterA_outDataCore$CLR),
								    .D_OUT(obuffer2_9_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(obuffer2_9_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_9_serverAdapterA_outDataCore$EMPTY_N));

  // submodule obuffer2_9_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) obuffer2_9_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(obuffer2_9_serverAdapterB_outDataCore$D_IN),
								    .ENQ(obuffer2_9_serverAdapterB_outDataCore$ENQ),
								    .DEQ(obuffer2_9_serverAdapterB_outDataCore$DEQ),
								    .CLR(obuffer2_9_serverAdapterB_outDataCore$CLR),
								    .D_OUT(obuffer2_9_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(obuffer2_9_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(obuffer2_9_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_0_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_0_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_0_memory$ADDRA),
					     .ADDRB(wbuffer_0_memory$ADDRB),
					     .DIA(wbuffer_0_memory$DIA),
					     .DIB(wbuffer_0_memory$DIB),
					     .WEA(wbuffer_0_memory$WEA),
					     .WEB(wbuffer_0_memory$WEB),
					     .ENA(wbuffer_0_memory$ENA),
					     .ENB(wbuffer_0_memory$ENB),
					     .DOA(wbuffer_0_memory$DOA),
					     .DOB(wbuffer_0_memory$DOB));

  // submodule wbuffer_0_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_0_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_0_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_0_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_0_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_0_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_0_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_0_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_0_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_0_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_0_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_0_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_0_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_0_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_0_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_0_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_0_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_0_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_10_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_10_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_10_memory$ADDRA),
					      .ADDRB(wbuffer_10_memory$ADDRB),
					      .DIA(wbuffer_10_memory$DIA),
					      .DIB(wbuffer_10_memory$DIB),
					      .WEA(wbuffer_10_memory$WEA),
					      .WEB(wbuffer_10_memory$WEB),
					      .ENA(wbuffer_10_memory$ENA),
					      .ENB(wbuffer_10_memory$ENB),
					      .DOA(wbuffer_10_memory$DOA),
					      .DOB(wbuffer_10_memory$DOB));

  // submodule wbuffer_10_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_10_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_10_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_10_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_10_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_10_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_10_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_10_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_10_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_10_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_10_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_10_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_10_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_10_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_10_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_10_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_10_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_10_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_11_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_11_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_11_memory$ADDRA),
					      .ADDRB(wbuffer_11_memory$ADDRB),
					      .DIA(wbuffer_11_memory$DIA),
					      .DIB(wbuffer_11_memory$DIB),
					      .WEA(wbuffer_11_memory$WEA),
					      .WEB(wbuffer_11_memory$WEB),
					      .ENA(wbuffer_11_memory$ENA),
					      .ENB(wbuffer_11_memory$ENB),
					      .DOA(wbuffer_11_memory$DOA),
					      .DOB(wbuffer_11_memory$DOB));

  // submodule wbuffer_11_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_11_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_11_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_11_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_11_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_11_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_11_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_11_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_11_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_11_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_11_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_11_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_11_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_11_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_11_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_11_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_11_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_11_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_12_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_12_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_12_memory$ADDRA),
					      .ADDRB(wbuffer_12_memory$ADDRB),
					      .DIA(wbuffer_12_memory$DIA),
					      .DIB(wbuffer_12_memory$DIB),
					      .WEA(wbuffer_12_memory$WEA),
					      .WEB(wbuffer_12_memory$WEB),
					      .ENA(wbuffer_12_memory$ENA),
					      .ENB(wbuffer_12_memory$ENB),
					      .DOA(wbuffer_12_memory$DOA),
					      .DOB(wbuffer_12_memory$DOB));

  // submodule wbuffer_12_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_12_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_12_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_12_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_12_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_12_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_12_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_12_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_12_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_12_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_12_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_12_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_12_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_12_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_12_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_12_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_12_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_12_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_13_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_13_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_13_memory$ADDRA),
					      .ADDRB(wbuffer_13_memory$ADDRB),
					      .DIA(wbuffer_13_memory$DIA),
					      .DIB(wbuffer_13_memory$DIB),
					      .WEA(wbuffer_13_memory$WEA),
					      .WEB(wbuffer_13_memory$WEB),
					      .ENA(wbuffer_13_memory$ENA),
					      .ENB(wbuffer_13_memory$ENB),
					      .DOA(wbuffer_13_memory$DOA),
					      .DOB(wbuffer_13_memory$DOB));

  // submodule wbuffer_13_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_13_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_13_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_13_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_13_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_13_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_13_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_13_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_13_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_13_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_13_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_13_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_13_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_13_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_13_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_13_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_13_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_13_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_14_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_14_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_14_memory$ADDRA),
					      .ADDRB(wbuffer_14_memory$ADDRB),
					      .DIA(wbuffer_14_memory$DIA),
					      .DIB(wbuffer_14_memory$DIB),
					      .WEA(wbuffer_14_memory$WEA),
					      .WEB(wbuffer_14_memory$WEB),
					      .ENA(wbuffer_14_memory$ENA),
					      .ENB(wbuffer_14_memory$ENB),
					      .DOA(wbuffer_14_memory$DOA),
					      .DOB(wbuffer_14_memory$DOB));

  // submodule wbuffer_14_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_14_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_14_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_14_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_14_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_14_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_14_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_14_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_14_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_14_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_14_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_14_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_14_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_14_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_14_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_14_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_14_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_14_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_15_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_15_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_15_memory$ADDRA),
					      .ADDRB(wbuffer_15_memory$ADDRB),
					      .DIA(wbuffer_15_memory$DIA),
					      .DIB(wbuffer_15_memory$DIB),
					      .WEA(wbuffer_15_memory$WEA),
					      .WEB(wbuffer_15_memory$WEB),
					      .ENA(wbuffer_15_memory$ENA),
					      .ENB(wbuffer_15_memory$ENB),
					      .DOA(wbuffer_15_memory$DOA),
					      .DOB(wbuffer_15_memory$DOB));

  // submodule wbuffer_15_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_15_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_15_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_15_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_15_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_15_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_15_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_15_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_15_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_15_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_15_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_15_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_15_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_15_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_15_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_15_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_15_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_15_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_16_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_16_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_16_memory$ADDRA),
					      .ADDRB(wbuffer_16_memory$ADDRB),
					      .DIA(wbuffer_16_memory$DIA),
					      .DIB(wbuffer_16_memory$DIB),
					      .WEA(wbuffer_16_memory$WEA),
					      .WEB(wbuffer_16_memory$WEB),
					      .ENA(wbuffer_16_memory$ENA),
					      .ENB(wbuffer_16_memory$ENB),
					      .DOA(wbuffer_16_memory$DOA),
					      .DOB(wbuffer_16_memory$DOB));

  // submodule wbuffer_16_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_16_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_16_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_16_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_16_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_16_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_16_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_16_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_16_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_16_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_16_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_16_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_16_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_16_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_16_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_16_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_16_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_16_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_17_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_17_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_17_memory$ADDRA),
					      .ADDRB(wbuffer_17_memory$ADDRB),
					      .DIA(wbuffer_17_memory$DIA),
					      .DIB(wbuffer_17_memory$DIB),
					      .WEA(wbuffer_17_memory$WEA),
					      .WEB(wbuffer_17_memory$WEB),
					      .ENA(wbuffer_17_memory$ENA),
					      .ENB(wbuffer_17_memory$ENB),
					      .DOA(wbuffer_17_memory$DOA),
					      .DOB(wbuffer_17_memory$DOB));

  // submodule wbuffer_17_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_17_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_17_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_17_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_17_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_17_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_17_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_17_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_17_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_17_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_17_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_17_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_17_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_17_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_17_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_17_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_17_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_17_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_18_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_18_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_18_memory$ADDRA),
					      .ADDRB(wbuffer_18_memory$ADDRB),
					      .DIA(wbuffer_18_memory$DIA),
					      .DIB(wbuffer_18_memory$DIB),
					      .WEA(wbuffer_18_memory$WEA),
					      .WEB(wbuffer_18_memory$WEB),
					      .ENA(wbuffer_18_memory$ENA),
					      .ENB(wbuffer_18_memory$ENB),
					      .DOA(wbuffer_18_memory$DOA),
					      .DOB(wbuffer_18_memory$DOB));

  // submodule wbuffer_18_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_18_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_18_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_18_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_18_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_18_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_18_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_18_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_18_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_18_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_18_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_18_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_18_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_18_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_18_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_18_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_18_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_18_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_19_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_19_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_19_memory$ADDRA),
					      .ADDRB(wbuffer_19_memory$ADDRB),
					      .DIA(wbuffer_19_memory$DIA),
					      .DIB(wbuffer_19_memory$DIB),
					      .WEA(wbuffer_19_memory$WEA),
					      .WEB(wbuffer_19_memory$WEB),
					      .ENA(wbuffer_19_memory$ENA),
					      .ENB(wbuffer_19_memory$ENB),
					      .DOA(wbuffer_19_memory$DOA),
					      .DOB(wbuffer_19_memory$DOB));

  // submodule wbuffer_19_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_19_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_19_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_19_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_19_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_19_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_19_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_19_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_19_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_19_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_19_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_19_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_19_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_19_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_19_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_19_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_19_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_19_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_1_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_1_memory$ADDRA),
					     .ADDRB(wbuffer_1_memory$ADDRB),
					     .DIA(wbuffer_1_memory$DIA),
					     .DIB(wbuffer_1_memory$DIB),
					     .WEA(wbuffer_1_memory$WEA),
					     .WEB(wbuffer_1_memory$WEB),
					     .ENA(wbuffer_1_memory$ENA),
					     .ENB(wbuffer_1_memory$ENB),
					     .DOA(wbuffer_1_memory$DOA),
					     .DOB(wbuffer_1_memory$DOB));

  // submodule wbuffer_1_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_1_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_1_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_1_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_1_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_1_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_1_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_1_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_1_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_1_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_1_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_1_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_1_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_1_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_1_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_1_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_1_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_1_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_20_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_20_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_20_memory$ADDRA),
					      .ADDRB(wbuffer_20_memory$ADDRB),
					      .DIA(wbuffer_20_memory$DIA),
					      .DIB(wbuffer_20_memory$DIB),
					      .WEA(wbuffer_20_memory$WEA),
					      .WEB(wbuffer_20_memory$WEB),
					      .ENA(wbuffer_20_memory$ENA),
					      .ENB(wbuffer_20_memory$ENB),
					      .DOA(wbuffer_20_memory$DOA),
					      .DOB(wbuffer_20_memory$DOB));

  // submodule wbuffer_20_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_20_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_20_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_20_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_20_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_20_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_20_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_20_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_20_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_20_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_20_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_20_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_20_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_20_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_20_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_20_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_20_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_20_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_21_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_21_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_21_memory$ADDRA),
					      .ADDRB(wbuffer_21_memory$ADDRB),
					      .DIA(wbuffer_21_memory$DIA),
					      .DIB(wbuffer_21_memory$DIB),
					      .WEA(wbuffer_21_memory$WEA),
					      .WEB(wbuffer_21_memory$WEB),
					      .ENA(wbuffer_21_memory$ENA),
					      .ENB(wbuffer_21_memory$ENB),
					      .DOA(wbuffer_21_memory$DOA),
					      .DOB(wbuffer_21_memory$DOB));

  // submodule wbuffer_21_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_21_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_21_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_21_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_21_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_21_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_21_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_21_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_21_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_21_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_21_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_21_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_21_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_21_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_21_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_21_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_21_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_21_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_22_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_22_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_22_memory$ADDRA),
					      .ADDRB(wbuffer_22_memory$ADDRB),
					      .DIA(wbuffer_22_memory$DIA),
					      .DIB(wbuffer_22_memory$DIB),
					      .WEA(wbuffer_22_memory$WEA),
					      .WEB(wbuffer_22_memory$WEB),
					      .ENA(wbuffer_22_memory$ENA),
					      .ENB(wbuffer_22_memory$ENB),
					      .DOA(wbuffer_22_memory$DOA),
					      .DOB(wbuffer_22_memory$DOB));

  // submodule wbuffer_22_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_22_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_22_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_22_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_22_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_22_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_22_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_22_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_22_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_22_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_22_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_22_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_22_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_22_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_22_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_22_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_22_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_22_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_23_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_23_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_23_memory$ADDRA),
					      .ADDRB(wbuffer_23_memory$ADDRB),
					      .DIA(wbuffer_23_memory$DIA),
					      .DIB(wbuffer_23_memory$DIB),
					      .WEA(wbuffer_23_memory$WEA),
					      .WEB(wbuffer_23_memory$WEB),
					      .ENA(wbuffer_23_memory$ENA),
					      .ENB(wbuffer_23_memory$ENB),
					      .DOA(wbuffer_23_memory$DOA),
					      .DOB(wbuffer_23_memory$DOB));

  // submodule wbuffer_23_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_23_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_23_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_23_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_23_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_23_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_23_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_23_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_23_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_23_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_23_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_23_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_23_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_23_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_23_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_23_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_23_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_23_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_24_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_24_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_24_memory$ADDRA),
					      .ADDRB(wbuffer_24_memory$ADDRB),
					      .DIA(wbuffer_24_memory$DIA),
					      .DIB(wbuffer_24_memory$DIB),
					      .WEA(wbuffer_24_memory$WEA),
					      .WEB(wbuffer_24_memory$WEB),
					      .ENA(wbuffer_24_memory$ENA),
					      .ENB(wbuffer_24_memory$ENB),
					      .DOA(wbuffer_24_memory$DOA),
					      .DOB(wbuffer_24_memory$DOB));

  // submodule wbuffer_24_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_24_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_24_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_24_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_24_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_24_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_24_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_24_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_24_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_24_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_24_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_24_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_24_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_24_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_24_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_24_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_24_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_24_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_25_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_25_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_25_memory$ADDRA),
					      .ADDRB(wbuffer_25_memory$ADDRB),
					      .DIA(wbuffer_25_memory$DIA),
					      .DIB(wbuffer_25_memory$DIB),
					      .WEA(wbuffer_25_memory$WEA),
					      .WEB(wbuffer_25_memory$WEB),
					      .ENA(wbuffer_25_memory$ENA),
					      .ENB(wbuffer_25_memory$ENB),
					      .DOA(wbuffer_25_memory$DOA),
					      .DOB(wbuffer_25_memory$DOB));

  // submodule wbuffer_25_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_25_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_25_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_25_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_25_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_25_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_25_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_25_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_25_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_25_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_25_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_25_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_25_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_25_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_25_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_25_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_25_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_25_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_26_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_26_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_26_memory$ADDRA),
					      .ADDRB(wbuffer_26_memory$ADDRB),
					      .DIA(wbuffer_26_memory$DIA),
					      .DIB(wbuffer_26_memory$DIB),
					      .WEA(wbuffer_26_memory$WEA),
					      .WEB(wbuffer_26_memory$WEB),
					      .ENA(wbuffer_26_memory$ENA),
					      .ENB(wbuffer_26_memory$ENB),
					      .DOA(wbuffer_26_memory$DOA),
					      .DOB(wbuffer_26_memory$DOB));

  // submodule wbuffer_26_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_26_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_26_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_26_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_26_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_26_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_26_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_26_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_26_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_26_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_26_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_26_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_26_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_26_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_26_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_26_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_26_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_26_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_27_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_27_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_27_memory$ADDRA),
					      .ADDRB(wbuffer_27_memory$ADDRB),
					      .DIA(wbuffer_27_memory$DIA),
					      .DIB(wbuffer_27_memory$DIB),
					      .WEA(wbuffer_27_memory$WEA),
					      .WEB(wbuffer_27_memory$WEB),
					      .ENA(wbuffer_27_memory$ENA),
					      .ENB(wbuffer_27_memory$ENB),
					      .DOA(wbuffer_27_memory$DOA),
					      .DOB(wbuffer_27_memory$DOB));

  // submodule wbuffer_27_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_27_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_27_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_27_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_27_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_27_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_27_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_27_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_27_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_27_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_27_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_27_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_27_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_27_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_27_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_27_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_27_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_27_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_28_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_28_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_28_memory$ADDRA),
					      .ADDRB(wbuffer_28_memory$ADDRB),
					      .DIA(wbuffer_28_memory$DIA),
					      .DIB(wbuffer_28_memory$DIB),
					      .WEA(wbuffer_28_memory$WEA),
					      .WEB(wbuffer_28_memory$WEB),
					      .ENA(wbuffer_28_memory$ENA),
					      .ENB(wbuffer_28_memory$ENB),
					      .DOA(wbuffer_28_memory$DOA),
					      .DOB(wbuffer_28_memory$DOB));

  // submodule wbuffer_28_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_28_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_28_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_28_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_28_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_28_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_28_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_28_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_28_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_28_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_28_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_28_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_28_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_28_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_28_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_28_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_28_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_28_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_29_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_29_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_29_memory$ADDRA),
					      .ADDRB(wbuffer_29_memory$ADDRB),
					      .DIA(wbuffer_29_memory$DIA),
					      .DIB(wbuffer_29_memory$DIB),
					      .WEA(wbuffer_29_memory$WEA),
					      .WEB(wbuffer_29_memory$WEB),
					      .ENA(wbuffer_29_memory$ENA),
					      .ENB(wbuffer_29_memory$ENB),
					      .DOA(wbuffer_29_memory$DOA),
					      .DOB(wbuffer_29_memory$DOB));

  // submodule wbuffer_29_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_29_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_29_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_29_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_29_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_29_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_29_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_29_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_29_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_29_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_29_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_29_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_29_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_29_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_29_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_29_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_29_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_29_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_2_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_2_memory$ADDRA),
					     .ADDRB(wbuffer_2_memory$ADDRB),
					     .DIA(wbuffer_2_memory$DIA),
					     .DIB(wbuffer_2_memory$DIB),
					     .WEA(wbuffer_2_memory$WEA),
					     .WEB(wbuffer_2_memory$WEB),
					     .ENA(wbuffer_2_memory$ENA),
					     .ENB(wbuffer_2_memory$ENB),
					     .DOA(wbuffer_2_memory$DOA),
					     .DOB(wbuffer_2_memory$DOB));

  // submodule wbuffer_2_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_2_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_2_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_2_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_2_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_2_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_2_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_2_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_2_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_2_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_2_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_2_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_2_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_2_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_2_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_2_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_2_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_2_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_30_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_30_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_30_memory$ADDRA),
					      .ADDRB(wbuffer_30_memory$ADDRB),
					      .DIA(wbuffer_30_memory$DIA),
					      .DIB(wbuffer_30_memory$DIB),
					      .WEA(wbuffer_30_memory$WEA),
					      .WEB(wbuffer_30_memory$WEB),
					      .ENA(wbuffer_30_memory$ENA),
					      .ENB(wbuffer_30_memory$ENB),
					      .DOA(wbuffer_30_memory$DOA),
					      .DOB(wbuffer_30_memory$DOB));

  // submodule wbuffer_30_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_30_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_30_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_30_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_30_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_30_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_30_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_30_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_30_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_30_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_30_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_30_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_30_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_30_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_30_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_30_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_30_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_30_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_31_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_31_memory(.CLKA(CLK),
					      .CLKB(CLK),
					      .ADDRA(wbuffer_31_memory$ADDRA),
					      .ADDRB(wbuffer_31_memory$ADDRB),
					      .DIA(wbuffer_31_memory$DIA),
					      .DIB(wbuffer_31_memory$DIB),
					      .WEA(wbuffer_31_memory$WEA),
					      .WEB(wbuffer_31_memory$WEB),
					      .ENA(wbuffer_31_memory$ENA),
					      .ENB(wbuffer_31_memory$ENB),
					      .DOA(wbuffer_31_memory$DOA),
					      .DOB(wbuffer_31_memory$DOB));

  // submodule wbuffer_31_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_31_serverAdapterA_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_31_serverAdapterA_outDataCore$D_IN),
								    .ENQ(wbuffer_31_serverAdapterA_outDataCore$ENQ),
								    .DEQ(wbuffer_31_serverAdapterA_outDataCore$DEQ),
								    .CLR(wbuffer_31_serverAdapterA_outDataCore$CLR),
								    .D_OUT(wbuffer_31_serverAdapterA_outDataCore$D_OUT),
								    .FULL_N(wbuffer_31_serverAdapterA_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_31_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_31_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_31_serverAdapterB_outDataCore(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wbuffer_31_serverAdapterB_outDataCore$D_IN),
								    .ENQ(wbuffer_31_serverAdapterB_outDataCore$ENQ),
								    .DEQ(wbuffer_31_serverAdapterB_outDataCore$DEQ),
								    .CLR(wbuffer_31_serverAdapterB_outDataCore$CLR),
								    .D_OUT(wbuffer_31_serverAdapterB_outDataCore$D_OUT),
								    .FULL_N(wbuffer_31_serverAdapterB_outDataCore$FULL_N),
								    .EMPTY_N(wbuffer_31_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_3_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_3_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_3_memory$ADDRA),
					     .ADDRB(wbuffer_3_memory$ADDRB),
					     .DIA(wbuffer_3_memory$DIA),
					     .DIB(wbuffer_3_memory$DIB),
					     .WEA(wbuffer_3_memory$WEA),
					     .WEB(wbuffer_3_memory$WEB),
					     .ENA(wbuffer_3_memory$ENA),
					     .ENB(wbuffer_3_memory$ENB),
					     .DOA(wbuffer_3_memory$DOA),
					     .DOB(wbuffer_3_memory$DOB));

  // submodule wbuffer_3_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_3_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_3_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_3_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_3_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_3_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_3_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_3_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_3_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_3_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_3_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_3_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_3_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_3_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_3_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_3_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_3_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_3_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_4_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_4_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_4_memory$ADDRA),
					     .ADDRB(wbuffer_4_memory$ADDRB),
					     .DIA(wbuffer_4_memory$DIA),
					     .DIB(wbuffer_4_memory$DIB),
					     .WEA(wbuffer_4_memory$WEA),
					     .WEB(wbuffer_4_memory$WEB),
					     .ENA(wbuffer_4_memory$ENA),
					     .ENB(wbuffer_4_memory$ENB),
					     .DOA(wbuffer_4_memory$DOA),
					     .DOB(wbuffer_4_memory$DOB));

  // submodule wbuffer_4_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_4_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_4_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_4_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_4_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_4_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_4_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_4_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_4_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_4_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_4_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_4_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_4_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_4_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_4_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_4_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_4_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_4_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_5_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_5_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_5_memory$ADDRA),
					     .ADDRB(wbuffer_5_memory$ADDRB),
					     .DIA(wbuffer_5_memory$DIA),
					     .DIB(wbuffer_5_memory$DIB),
					     .WEA(wbuffer_5_memory$WEA),
					     .WEB(wbuffer_5_memory$WEB),
					     .ENA(wbuffer_5_memory$ENA),
					     .ENB(wbuffer_5_memory$ENB),
					     .DOA(wbuffer_5_memory$DOA),
					     .DOB(wbuffer_5_memory$DOB));

  // submodule wbuffer_5_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_5_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_5_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_5_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_5_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_5_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_5_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_5_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_5_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_5_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_5_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_5_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_5_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_5_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_5_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_5_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_5_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_5_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_6_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_6_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_6_memory$ADDRA),
					     .ADDRB(wbuffer_6_memory$ADDRB),
					     .DIA(wbuffer_6_memory$DIA),
					     .DIB(wbuffer_6_memory$DIB),
					     .WEA(wbuffer_6_memory$WEA),
					     .WEB(wbuffer_6_memory$WEB),
					     .ENA(wbuffer_6_memory$ENA),
					     .ENB(wbuffer_6_memory$ENB),
					     .DOA(wbuffer_6_memory$DOA),
					     .DOB(wbuffer_6_memory$DOB));

  // submodule wbuffer_6_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_6_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_6_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_6_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_6_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_6_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_6_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_6_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_6_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_6_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_6_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_6_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_6_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_6_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_6_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_6_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_6_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_6_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_7_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_7_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_7_memory$ADDRA),
					     .ADDRB(wbuffer_7_memory$ADDRB),
					     .DIA(wbuffer_7_memory$DIA),
					     .DIB(wbuffer_7_memory$DIB),
					     .WEA(wbuffer_7_memory$WEA),
					     .WEB(wbuffer_7_memory$WEB),
					     .ENA(wbuffer_7_memory$ENA),
					     .ENB(wbuffer_7_memory$ENB),
					     .DOA(wbuffer_7_memory$DOA),
					     .DOB(wbuffer_7_memory$DOB));

  // submodule wbuffer_7_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_7_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_7_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_7_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_7_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_7_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_7_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_7_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_7_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_7_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_7_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_7_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_7_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_7_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_7_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_7_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_7_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_7_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_8_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_8_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_8_memory$ADDRA),
					     .ADDRB(wbuffer_8_memory$ADDRB),
					     .DIA(wbuffer_8_memory$DIA),
					     .DIB(wbuffer_8_memory$DIB),
					     .WEA(wbuffer_8_memory$WEA),
					     .WEB(wbuffer_8_memory$WEB),
					     .ENA(wbuffer_8_memory$ENA),
					     .ENB(wbuffer_8_memory$ENB),
					     .DOA(wbuffer_8_memory$DOA),
					     .DOB(wbuffer_8_memory$DOB));

  // submodule wbuffer_8_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_8_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_8_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_8_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_8_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_8_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_8_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_8_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_8_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_8_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_8_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_8_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_8_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_8_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_8_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_8_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_8_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_8_serverAdapterB_outDataCore$EMPTY_N));

  // submodule wbuffer_9_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(9'd256)) wbuffer_9_memory(.CLKA(CLK),
					     .CLKB(CLK),
					     .ADDRA(wbuffer_9_memory$ADDRA),
					     .ADDRB(wbuffer_9_memory$ADDRB),
					     .DIA(wbuffer_9_memory$DIA),
					     .DIB(wbuffer_9_memory$DIB),
					     .WEA(wbuffer_9_memory$WEA),
					     .WEB(wbuffer_9_memory$WEB),
					     .ENA(wbuffer_9_memory$ENA),
					     .ENB(wbuffer_9_memory$ENB),
					     .DOA(wbuffer_9_memory$DOA),
					     .DOB(wbuffer_9_memory$DOB));

  // submodule wbuffer_9_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_9_serverAdapterA_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_9_serverAdapterA_outDataCore$D_IN),
								   .ENQ(wbuffer_9_serverAdapterA_outDataCore$ENQ),
								   .DEQ(wbuffer_9_serverAdapterA_outDataCore$DEQ),
								   .CLR(wbuffer_9_serverAdapterA_outDataCore$CLR),
								   .D_OUT(wbuffer_9_serverAdapterA_outDataCore$D_OUT),
								   .FULL_N(wbuffer_9_serverAdapterA_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_9_serverAdapterA_outDataCore$EMPTY_N));

  // submodule wbuffer_9_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd1)) wbuffer_9_serverAdapterB_outDataCore(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(wbuffer_9_serverAdapterB_outDataCore$D_IN),
								   .ENQ(wbuffer_9_serverAdapterB_outDataCore$ENQ),
								   .DEQ(wbuffer_9_serverAdapterB_outDataCore$DEQ),
								   .CLR(wbuffer_9_serverAdapterB_outDataCore$CLR),
								   .D_OUT(wbuffer_9_serverAdapterB_outDataCore$D_OUT),
								   .FULL_N(wbuffer_9_serverAdapterB_outDataCore$FULL_N),
								   .EMPTY_N(wbuffer_9_serverAdapterB_outDataCore$EMPTY_N));

  // rule RL_ibuffer_0_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_0_serverAdapterA_outData_enqAndDeq =
	     ibuffer_0_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_0_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_0_portA_response_get &&
	     ibuffer_0_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_0_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_0_serverAdapterB_outData_enqAndDeq =
	     ibuffer_0_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_0_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_0_portB_response_get &&
	     ibuffer_0_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_1_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_1_serverAdapterA_outData_enqAndDeq =
	     ibuffer_1_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_1_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_1_portA_response_get &&
	     ibuffer_1_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_1_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_1_serverAdapterB_outData_enqAndDeq =
	     ibuffer_1_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_1_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_1_portB_response_get &&
	     ibuffer_1_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_2_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_2_serverAdapterA_outData_enqAndDeq =
	     ibuffer_2_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_2_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_2_portA_response_get &&
	     ibuffer_2_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_2_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_2_serverAdapterB_outData_enqAndDeq =
	     ibuffer_2_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_2_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_2_portB_response_get &&
	     ibuffer_2_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_3_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_3_serverAdapterA_outData_enqAndDeq =
	     ibuffer_3_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_3_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_3_portA_response_get &&
	     ibuffer_3_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_3_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_3_serverAdapterB_outData_enqAndDeq =
	     ibuffer_3_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_3_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_3_portB_response_get &&
	     ibuffer_3_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_4_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_4_serverAdapterA_outData_enqAndDeq =
	     ibuffer_4_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_4_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_4_portA_response_get &&
	     ibuffer_4_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_4_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_4_serverAdapterB_outData_enqAndDeq =
	     ibuffer_4_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_4_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_4_portB_response_get &&
	     ibuffer_4_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_5_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_5_serverAdapterA_outData_enqAndDeq =
	     ibuffer_5_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_5_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_5_portA_response_get &&
	     ibuffer_5_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_5_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_5_serverAdapterB_outData_enqAndDeq =
	     ibuffer_5_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_5_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_5_portB_response_get &&
	     ibuffer_5_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_6_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_6_serverAdapterA_outData_enqAndDeq =
	     ibuffer_6_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_6_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_6_portA_response_get &&
	     ibuffer_6_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_6_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_6_serverAdapterB_outData_enqAndDeq =
	     ibuffer_6_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_6_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_6_portB_response_get &&
	     ibuffer_6_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_7_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_7_serverAdapterA_outData_enqAndDeq =
	     ibuffer_7_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_7_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_7_portA_response_get &&
	     ibuffer_7_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_7_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_7_serverAdapterB_outData_enqAndDeq =
	     ibuffer_7_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_7_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_7_portB_response_get &&
	     ibuffer_7_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_8_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_8_serverAdapterA_outData_enqAndDeq =
	     ibuffer_8_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_8_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_8_portA_response_get &&
	     ibuffer_8_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_8_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_8_serverAdapterB_outData_enqAndDeq =
	     ibuffer_8_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_8_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_8_portB_response_get &&
	     ibuffer_8_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_9_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_9_serverAdapterA_outData_enqAndDeq =
	     ibuffer_9_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_9_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_9_portA_response_get &&
	     ibuffer_9_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_9_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_9_serverAdapterB_outData_enqAndDeq =
	     ibuffer_9_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_9_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_9_portB_response_get &&
	     ibuffer_9_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_10_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_10_serverAdapterA_outData_enqAndDeq =
	     ibuffer_10_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_10_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_10_portA_response_get &&
	     ibuffer_10_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_10_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_10_serverAdapterB_outData_enqAndDeq =
	     ibuffer_10_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_10_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_10_portB_response_get &&
	     ibuffer_10_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_11_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_11_serverAdapterA_outData_enqAndDeq =
	     ibuffer_11_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_11_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_11_portA_response_get &&
	     ibuffer_11_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_11_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_11_serverAdapterB_outData_enqAndDeq =
	     ibuffer_11_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_11_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_11_portB_response_get &&
	     ibuffer_11_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_12_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_12_serverAdapterA_outData_enqAndDeq =
	     ibuffer_12_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_12_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_12_portA_response_get &&
	     ibuffer_12_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_12_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_12_serverAdapterB_outData_enqAndDeq =
	     ibuffer_12_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_12_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_12_portB_response_get &&
	     ibuffer_12_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_13_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_13_serverAdapterA_outData_enqAndDeq =
	     ibuffer_13_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_13_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_13_portA_response_get &&
	     ibuffer_13_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_13_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_13_serverAdapterB_outData_enqAndDeq =
	     ibuffer_13_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_13_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_13_portB_response_get &&
	     ibuffer_13_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_14_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_14_serverAdapterA_outData_enqAndDeq =
	     ibuffer_14_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_14_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_14_portA_response_get &&
	     ibuffer_14_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_14_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_14_serverAdapterB_outData_enqAndDeq =
	     ibuffer_14_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_14_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_14_portB_response_get &&
	     ibuffer_14_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_15_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_15_serverAdapterA_outData_enqAndDeq =
	     ibuffer_15_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_15_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_15_portA_response_get &&
	     ibuffer_15_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_15_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_15_serverAdapterB_outData_enqAndDeq =
	     ibuffer_15_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_15_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_15_portB_response_get &&
	     ibuffer_15_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_16_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_16_serverAdapterA_outData_enqAndDeq =
	     ibuffer_16_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_16_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_16_portA_response_get &&
	     ibuffer_16_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_16_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_16_serverAdapterB_outData_enqAndDeq =
	     ibuffer_16_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_16_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_16_portB_response_get &&
	     ibuffer_16_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_17_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_17_serverAdapterA_outData_enqAndDeq =
	     ibuffer_17_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_17_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_17_portA_response_get &&
	     ibuffer_17_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_17_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_17_serverAdapterB_outData_enqAndDeq =
	     ibuffer_17_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_17_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_17_portB_response_get &&
	     ibuffer_17_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_18_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_18_serverAdapterA_outData_enqAndDeq =
	     ibuffer_18_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_18_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_18_portA_response_get &&
	     ibuffer_18_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_18_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_18_serverAdapterB_outData_enqAndDeq =
	     ibuffer_18_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_18_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_18_portB_response_get &&
	     ibuffer_18_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_19_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_19_serverAdapterA_outData_enqAndDeq =
	     ibuffer_19_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_19_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_19_portA_response_get &&
	     ibuffer_19_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_19_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_19_serverAdapterB_outData_enqAndDeq =
	     ibuffer_19_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_19_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_19_portB_response_get &&
	     ibuffer_19_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_20_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_20_serverAdapterA_outData_enqAndDeq =
	     ibuffer_20_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_20_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_20_portA_response_get &&
	     ibuffer_20_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_20_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_20_serverAdapterB_outData_enqAndDeq =
	     ibuffer_20_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_20_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_20_portB_response_get &&
	     ibuffer_20_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_21_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_21_serverAdapterA_outData_enqAndDeq =
	     ibuffer_21_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_21_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_21_portA_response_get &&
	     ibuffer_21_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_21_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_21_serverAdapterB_outData_enqAndDeq =
	     ibuffer_21_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_21_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_21_portB_response_get &&
	     ibuffer_21_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_22_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_22_serverAdapterA_outData_enqAndDeq =
	     ibuffer_22_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_22_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_22_portA_response_get &&
	     ibuffer_22_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_22_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_22_serverAdapterB_outData_enqAndDeq =
	     ibuffer_22_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_22_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_22_portB_response_get &&
	     ibuffer_22_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_23_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_23_serverAdapterA_outData_enqAndDeq =
	     ibuffer_23_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_23_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_23_portA_response_get &&
	     ibuffer_23_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_23_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_23_serverAdapterB_outData_enqAndDeq =
	     ibuffer_23_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_23_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_23_portB_response_get &&
	     ibuffer_23_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_24_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_24_serverAdapterA_outData_enqAndDeq =
	     ibuffer_24_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_24_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_24_portA_response_get &&
	     ibuffer_24_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_24_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_24_serverAdapterB_outData_enqAndDeq =
	     ibuffer_24_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_24_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_24_portB_response_get &&
	     ibuffer_24_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_25_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_25_serverAdapterA_outData_enqAndDeq =
	     ibuffer_25_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_25_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_25_portA_response_get &&
	     ibuffer_25_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_25_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_25_serverAdapterB_outData_enqAndDeq =
	     ibuffer_25_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_25_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_25_portB_response_get &&
	     ibuffer_25_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_26_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_26_serverAdapterA_outData_enqAndDeq =
	     ibuffer_26_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_26_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_26_portA_response_get &&
	     ibuffer_26_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_26_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_26_serverAdapterB_outData_enqAndDeq =
	     ibuffer_26_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_26_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_26_portB_response_get &&
	     ibuffer_26_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_27_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_27_serverAdapterA_outData_enqAndDeq =
	     ibuffer_27_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_27_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_27_portA_response_get &&
	     ibuffer_27_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_27_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_27_serverAdapterB_outData_enqAndDeq =
	     ibuffer_27_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_27_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_27_portB_response_get &&
	     ibuffer_27_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_28_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_28_serverAdapterA_outData_enqAndDeq =
	     ibuffer_28_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_28_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_28_portA_response_get &&
	     ibuffer_28_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_28_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_28_serverAdapterB_outData_enqAndDeq =
	     ibuffer_28_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_28_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_28_portB_response_get &&
	     ibuffer_28_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_29_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_29_serverAdapterA_outData_enqAndDeq =
	     ibuffer_29_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_29_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_29_portA_response_get &&
	     ibuffer_29_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_29_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_29_serverAdapterB_outData_enqAndDeq =
	     ibuffer_29_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_29_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_29_portB_response_get &&
	     ibuffer_29_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_30_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_30_serverAdapterA_outData_enqAndDeq =
	     ibuffer_30_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_30_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_30_portA_response_get &&
	     ibuffer_30_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_30_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_30_serverAdapterB_outData_enqAndDeq =
	     ibuffer_30_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_30_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_30_portB_response_get &&
	     ibuffer_30_serverAdapterB_outData_enqData$whas ;

  // rule RL_ibuffer_31_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_31_serverAdapterA_outData_enqAndDeq =
	     ibuffer_31_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_31_serverAdapterA_outDataCore$FULL_N &&
	     EN_ibuf_31_portA_response_get &&
	     ibuffer_31_serverAdapterA_outData_enqData$whas ;

  // rule RL_ibuffer_31_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_ibuffer_31_serverAdapterB_outData_enqAndDeq =
	     ibuffer_31_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_31_serverAdapterB_outDataCore$FULL_N &&
	     EN_ibuf_31_portB_response_get &&
	     ibuffer_31_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_0_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_0_serverAdapterA_outData_enqAndDeq =
	     wbuffer_0_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_0_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_0_portA_response_get &&
	     wbuffer_0_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_0_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_0_serverAdapterB_outData_enqAndDeq =
	     wbuffer_0_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_0_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_0_portB_response_get &&
	     wbuffer_0_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_1_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_1_serverAdapterA_outData_enqAndDeq =
	     wbuffer_1_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_1_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_1_portA_response_get &&
	     wbuffer_1_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_1_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_1_serverAdapterB_outData_enqAndDeq =
	     wbuffer_1_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_1_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_1_portB_response_get &&
	     wbuffer_1_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_2_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_2_serverAdapterA_outData_enqAndDeq =
	     wbuffer_2_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_2_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_2_portA_response_get &&
	     wbuffer_2_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_2_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_2_serverAdapterB_outData_enqAndDeq =
	     wbuffer_2_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_2_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_2_portB_response_get &&
	     wbuffer_2_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_3_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_3_serverAdapterA_outData_enqAndDeq =
	     wbuffer_3_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_3_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_3_portA_response_get &&
	     wbuffer_3_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_3_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_3_serverAdapterB_outData_enqAndDeq =
	     wbuffer_3_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_3_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_3_portB_response_get &&
	     wbuffer_3_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_4_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_4_serverAdapterA_outData_enqAndDeq =
	     wbuffer_4_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_4_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_4_portA_response_get &&
	     wbuffer_4_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_4_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_4_serverAdapterB_outData_enqAndDeq =
	     wbuffer_4_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_4_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_4_portB_response_get &&
	     wbuffer_4_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_5_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_5_serverAdapterA_outData_enqAndDeq =
	     wbuffer_5_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_5_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_5_portA_response_get &&
	     wbuffer_5_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_5_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_5_serverAdapterB_outData_enqAndDeq =
	     wbuffer_5_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_5_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_5_portB_response_get &&
	     wbuffer_5_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_6_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_6_serverAdapterA_outData_enqAndDeq =
	     wbuffer_6_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_6_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_6_portA_response_get &&
	     wbuffer_6_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_6_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_6_serverAdapterB_outData_enqAndDeq =
	     wbuffer_6_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_6_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_6_portB_response_get &&
	     wbuffer_6_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_7_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_7_serverAdapterA_outData_enqAndDeq =
	     wbuffer_7_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_7_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_7_portA_response_get &&
	     wbuffer_7_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_7_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_7_serverAdapterB_outData_enqAndDeq =
	     wbuffer_7_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_7_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_7_portB_response_get &&
	     wbuffer_7_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_8_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_8_serverAdapterA_outData_enqAndDeq =
	     wbuffer_8_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_8_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_8_portA_response_get &&
	     wbuffer_8_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_8_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_8_serverAdapterB_outData_enqAndDeq =
	     wbuffer_8_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_8_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_8_portB_response_get &&
	     wbuffer_8_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_9_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_9_serverAdapterA_outData_enqAndDeq =
	     wbuffer_9_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_9_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_9_portA_response_get &&
	     wbuffer_9_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_9_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_9_serverAdapterB_outData_enqAndDeq =
	     wbuffer_9_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_9_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_9_portB_response_get &&
	     wbuffer_9_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_10_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_10_serverAdapterA_outData_enqAndDeq =
	     wbuffer_10_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_10_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_10_portA_response_get &&
	     wbuffer_10_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_10_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_10_serverAdapterB_outData_enqAndDeq =
	     wbuffer_10_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_10_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_10_portB_response_get &&
	     wbuffer_10_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_11_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_11_serverAdapterA_outData_enqAndDeq =
	     wbuffer_11_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_11_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_11_portA_response_get &&
	     wbuffer_11_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_11_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_11_serverAdapterB_outData_enqAndDeq =
	     wbuffer_11_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_11_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_11_portB_response_get &&
	     wbuffer_11_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_12_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_12_serverAdapterA_outData_enqAndDeq =
	     wbuffer_12_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_12_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_12_portA_response_get &&
	     wbuffer_12_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_12_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_12_serverAdapterB_outData_enqAndDeq =
	     wbuffer_12_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_12_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_12_portB_response_get &&
	     wbuffer_12_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_13_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_13_serverAdapterA_outData_enqAndDeq =
	     wbuffer_13_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_13_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_13_portA_response_get &&
	     wbuffer_13_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_13_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_13_serverAdapterB_outData_enqAndDeq =
	     wbuffer_13_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_13_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_13_portB_response_get &&
	     wbuffer_13_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_14_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_14_serverAdapterA_outData_enqAndDeq =
	     wbuffer_14_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_14_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_14_portA_response_get &&
	     wbuffer_14_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_14_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_14_serverAdapterB_outData_enqAndDeq =
	     wbuffer_14_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_14_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_14_portB_response_get &&
	     wbuffer_14_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_15_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_15_serverAdapterA_outData_enqAndDeq =
	     wbuffer_15_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_15_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_15_portA_response_get &&
	     wbuffer_15_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_15_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_15_serverAdapterB_outData_enqAndDeq =
	     wbuffer_15_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_15_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_15_portB_response_get &&
	     wbuffer_15_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_16_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_16_serverAdapterA_outData_enqAndDeq =
	     wbuffer_16_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_16_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_16_portA_response_get &&
	     wbuffer_16_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_16_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_16_serverAdapterB_outData_enqAndDeq =
	     wbuffer_16_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_16_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_16_portB_response_get &&
	     wbuffer_16_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_17_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_17_serverAdapterA_outData_enqAndDeq =
	     wbuffer_17_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_17_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_17_portA_response_get &&
	     wbuffer_17_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_17_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_17_serverAdapterB_outData_enqAndDeq =
	     wbuffer_17_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_17_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_17_portB_response_get &&
	     wbuffer_17_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_18_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_18_serverAdapterA_outData_enqAndDeq =
	     wbuffer_18_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_18_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_18_portA_response_get &&
	     wbuffer_18_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_18_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_18_serverAdapterB_outData_enqAndDeq =
	     wbuffer_18_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_18_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_18_portB_response_get &&
	     wbuffer_18_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_19_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_19_serverAdapterA_outData_enqAndDeq =
	     wbuffer_19_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_19_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_19_portA_response_get &&
	     wbuffer_19_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_19_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_19_serverAdapterB_outData_enqAndDeq =
	     wbuffer_19_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_19_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_19_portB_response_get &&
	     wbuffer_19_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_20_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_20_serverAdapterA_outData_enqAndDeq =
	     wbuffer_20_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_20_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_20_portA_response_get &&
	     wbuffer_20_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_20_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_20_serverAdapterB_outData_enqAndDeq =
	     wbuffer_20_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_20_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_20_portB_response_get &&
	     wbuffer_20_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_21_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_21_serverAdapterA_outData_enqAndDeq =
	     wbuffer_21_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_21_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_21_portA_response_get &&
	     wbuffer_21_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_21_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_21_serverAdapterB_outData_enqAndDeq =
	     wbuffer_21_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_21_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_21_portB_response_get &&
	     wbuffer_21_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_22_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_22_serverAdapterA_outData_enqAndDeq =
	     wbuffer_22_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_22_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_22_portA_response_get &&
	     wbuffer_22_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_22_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_22_serverAdapterB_outData_enqAndDeq =
	     wbuffer_22_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_22_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_22_portB_response_get &&
	     wbuffer_22_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_23_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_23_serverAdapterA_outData_enqAndDeq =
	     wbuffer_23_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_23_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_23_portA_response_get &&
	     wbuffer_23_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_23_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_23_serverAdapterB_outData_enqAndDeq =
	     wbuffer_23_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_23_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_23_portB_response_get &&
	     wbuffer_23_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_24_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_24_serverAdapterA_outData_enqAndDeq =
	     wbuffer_24_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_24_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_24_portA_response_get &&
	     wbuffer_24_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_24_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_24_serverAdapterB_outData_enqAndDeq =
	     wbuffer_24_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_24_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_24_portB_response_get &&
	     wbuffer_24_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_25_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_25_serverAdapterA_outData_enqAndDeq =
	     wbuffer_25_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_25_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_25_portA_response_get &&
	     wbuffer_25_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_25_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_25_serverAdapterB_outData_enqAndDeq =
	     wbuffer_25_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_25_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_25_portB_response_get &&
	     wbuffer_25_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_26_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_26_serverAdapterA_outData_enqAndDeq =
	     wbuffer_26_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_26_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_26_portA_response_get &&
	     wbuffer_26_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_26_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_26_serverAdapterB_outData_enqAndDeq =
	     wbuffer_26_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_26_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_26_portB_response_get &&
	     wbuffer_26_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_27_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_27_serverAdapterA_outData_enqAndDeq =
	     wbuffer_27_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_27_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_27_portA_response_get &&
	     wbuffer_27_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_27_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_27_serverAdapterB_outData_enqAndDeq =
	     wbuffer_27_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_27_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_27_portB_response_get &&
	     wbuffer_27_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_28_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_28_serverAdapterA_outData_enqAndDeq =
	     wbuffer_28_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_28_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_28_portA_response_get &&
	     wbuffer_28_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_28_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_28_serverAdapterB_outData_enqAndDeq =
	     wbuffer_28_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_28_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_28_portB_response_get &&
	     wbuffer_28_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_29_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_29_serverAdapterA_outData_enqAndDeq =
	     wbuffer_29_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_29_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_29_portA_response_get &&
	     wbuffer_29_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_29_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_29_serverAdapterB_outData_enqAndDeq =
	     wbuffer_29_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_29_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_29_portB_response_get &&
	     wbuffer_29_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_30_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_30_serverAdapterA_outData_enqAndDeq =
	     wbuffer_30_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_30_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_30_portA_response_get &&
	     wbuffer_30_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_30_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_30_serverAdapterB_outData_enqAndDeq =
	     wbuffer_30_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_30_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_30_portB_response_get &&
	     wbuffer_30_serverAdapterB_outData_enqData$whas ;

  // rule RL_wbuffer_31_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_31_serverAdapterA_outData_enqAndDeq =
	     wbuffer_31_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_31_serverAdapterA_outDataCore$FULL_N &&
	     EN_wbuf_31_portA_response_get &&
	     wbuffer_31_serverAdapterA_outData_enqData$whas ;

  // rule RL_wbuffer_31_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_wbuffer_31_serverAdapterB_outData_enqAndDeq =
	     wbuffer_31_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_31_serverAdapterB_outDataCore$FULL_N &&
	     EN_wbuf_31_portB_response_get &&
	     wbuffer_31_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_0_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_0_serverAdapterA_outData_enqAndDeq =
	     obuffer1_0_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_0_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_0_portA_response_get &&
	     obuffer1_0_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_0_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_0_serverAdapterB_outData_enqAndDeq =
	     obuffer1_0_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_0_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_0_portB_response_get &&
	     obuffer1_0_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_1_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_1_serverAdapterA_outData_enqAndDeq =
	     obuffer1_1_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_1_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_1_portA_response_get &&
	     obuffer1_1_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_1_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_1_serverAdapterB_outData_enqAndDeq =
	     obuffer1_1_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_1_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_1_portB_response_get &&
	     obuffer1_1_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_2_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_2_serverAdapterA_outData_enqAndDeq =
	     obuffer1_2_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_2_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_2_portA_response_get &&
	     obuffer1_2_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_2_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_2_serverAdapterB_outData_enqAndDeq =
	     obuffer1_2_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_2_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_2_portB_response_get &&
	     obuffer1_2_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_3_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_3_serverAdapterA_outData_enqAndDeq =
	     obuffer1_3_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_3_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_3_portA_response_get &&
	     obuffer1_3_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_3_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_3_serverAdapterB_outData_enqAndDeq =
	     obuffer1_3_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_3_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_3_portB_response_get &&
	     obuffer1_3_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_4_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_4_serverAdapterA_outData_enqAndDeq =
	     obuffer1_4_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_4_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_4_portA_response_get &&
	     obuffer1_4_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_4_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_4_serverAdapterB_outData_enqAndDeq =
	     obuffer1_4_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_4_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_4_portB_response_get &&
	     obuffer1_4_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_5_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_5_serverAdapterA_outData_enqAndDeq =
	     obuffer1_5_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_5_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_5_portA_response_get &&
	     obuffer1_5_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_5_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_5_serverAdapterB_outData_enqAndDeq =
	     obuffer1_5_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_5_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_5_portB_response_get &&
	     obuffer1_5_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_6_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_6_serverAdapterA_outData_enqAndDeq =
	     obuffer1_6_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_6_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_6_portA_response_get &&
	     obuffer1_6_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_6_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_6_serverAdapterB_outData_enqAndDeq =
	     obuffer1_6_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_6_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_6_portB_response_get &&
	     obuffer1_6_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_7_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_7_serverAdapterA_outData_enqAndDeq =
	     obuffer1_7_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_7_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_7_portA_response_get &&
	     obuffer1_7_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_7_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_7_serverAdapterB_outData_enqAndDeq =
	     obuffer1_7_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_7_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_7_portB_response_get &&
	     obuffer1_7_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_8_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_8_serverAdapterA_outData_enqAndDeq =
	     obuffer1_8_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_8_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_8_portA_response_get &&
	     obuffer1_8_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_8_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_8_serverAdapterB_outData_enqAndDeq =
	     obuffer1_8_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_8_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_8_portB_response_get &&
	     obuffer1_8_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_9_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_9_serverAdapterA_outData_enqAndDeq =
	     obuffer1_9_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_9_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_9_portA_response_get &&
	     obuffer1_9_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_9_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_9_serverAdapterB_outData_enqAndDeq =
	     obuffer1_9_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_9_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_9_portB_response_get &&
	     obuffer1_9_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_10_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_10_serverAdapterA_outData_enqAndDeq =
	     obuffer1_10_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_10_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_10_portA_response_get &&
	     obuffer1_10_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_10_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_10_serverAdapterB_outData_enqAndDeq =
	     obuffer1_10_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_10_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_10_portB_response_get &&
	     obuffer1_10_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_11_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_11_serverAdapterA_outData_enqAndDeq =
	     obuffer1_11_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_11_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_11_portA_response_get &&
	     obuffer1_11_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_11_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_11_serverAdapterB_outData_enqAndDeq =
	     obuffer1_11_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_11_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_11_portB_response_get &&
	     obuffer1_11_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_12_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_12_serverAdapterA_outData_enqAndDeq =
	     obuffer1_12_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_12_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_12_portA_response_get &&
	     obuffer1_12_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_12_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_12_serverAdapterB_outData_enqAndDeq =
	     obuffer1_12_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_12_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_12_portB_response_get &&
	     obuffer1_12_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_13_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_13_serverAdapterA_outData_enqAndDeq =
	     obuffer1_13_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_13_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_13_portA_response_get &&
	     obuffer1_13_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_13_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_13_serverAdapterB_outData_enqAndDeq =
	     obuffer1_13_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_13_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_13_portB_response_get &&
	     obuffer1_13_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_14_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_14_serverAdapterA_outData_enqAndDeq =
	     obuffer1_14_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_14_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_14_portA_response_get &&
	     obuffer1_14_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_14_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_14_serverAdapterB_outData_enqAndDeq =
	     obuffer1_14_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_14_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_14_portB_response_get &&
	     obuffer1_14_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_15_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_15_serverAdapterA_outData_enqAndDeq =
	     obuffer1_15_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_15_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_15_portA_response_get &&
	     obuffer1_15_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_15_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_15_serverAdapterB_outData_enqAndDeq =
	     obuffer1_15_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_15_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_15_portB_response_get &&
	     obuffer1_15_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_16_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_16_serverAdapterA_outData_enqAndDeq =
	     obuffer1_16_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_16_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_16_portA_response_get &&
	     obuffer1_16_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_16_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_16_serverAdapterB_outData_enqAndDeq =
	     obuffer1_16_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_16_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_16_portB_response_get &&
	     obuffer1_16_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_17_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_17_serverAdapterA_outData_enqAndDeq =
	     obuffer1_17_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_17_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_17_portA_response_get &&
	     obuffer1_17_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_17_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_17_serverAdapterB_outData_enqAndDeq =
	     obuffer1_17_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_17_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_17_portB_response_get &&
	     obuffer1_17_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_18_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_18_serverAdapterA_outData_enqAndDeq =
	     obuffer1_18_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_18_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_18_portA_response_get &&
	     obuffer1_18_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_18_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_18_serverAdapterB_outData_enqAndDeq =
	     obuffer1_18_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_18_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_18_portB_response_get &&
	     obuffer1_18_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_19_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_19_serverAdapterA_outData_enqAndDeq =
	     obuffer1_19_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_19_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_19_portA_response_get &&
	     obuffer1_19_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_19_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_19_serverAdapterB_outData_enqAndDeq =
	     obuffer1_19_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_19_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_19_portB_response_get &&
	     obuffer1_19_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_20_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_20_serverAdapterA_outData_enqAndDeq =
	     obuffer1_20_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_20_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_20_portA_response_get &&
	     obuffer1_20_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_20_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_20_serverAdapterB_outData_enqAndDeq =
	     obuffer1_20_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_20_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_20_portB_response_get &&
	     obuffer1_20_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_21_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_21_serverAdapterA_outData_enqAndDeq =
	     obuffer1_21_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_21_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_21_portA_response_get &&
	     obuffer1_21_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_21_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_21_serverAdapterB_outData_enqAndDeq =
	     obuffer1_21_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_21_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_21_portB_response_get &&
	     obuffer1_21_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_22_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_22_serverAdapterA_outData_enqAndDeq =
	     obuffer1_22_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_22_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_22_portA_response_get &&
	     obuffer1_22_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_22_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_22_serverAdapterB_outData_enqAndDeq =
	     obuffer1_22_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_22_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_22_portB_response_get &&
	     obuffer1_22_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_23_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_23_serverAdapterA_outData_enqAndDeq =
	     obuffer1_23_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_23_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_23_portA_response_get &&
	     obuffer1_23_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_23_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_23_serverAdapterB_outData_enqAndDeq =
	     obuffer1_23_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_23_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_23_portB_response_get &&
	     obuffer1_23_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_24_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_24_serverAdapterA_outData_enqAndDeq =
	     obuffer1_24_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_24_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_24_portA_response_get &&
	     obuffer1_24_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_24_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_24_serverAdapterB_outData_enqAndDeq =
	     obuffer1_24_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_24_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_24_portB_response_get &&
	     obuffer1_24_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_25_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_25_serverAdapterA_outData_enqAndDeq =
	     obuffer1_25_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_25_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_25_portA_response_get &&
	     obuffer1_25_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_25_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_25_serverAdapterB_outData_enqAndDeq =
	     obuffer1_25_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_25_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_25_portB_response_get &&
	     obuffer1_25_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_26_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_26_serverAdapterA_outData_enqAndDeq =
	     obuffer1_26_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_26_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_26_portA_response_get &&
	     obuffer1_26_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_26_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_26_serverAdapterB_outData_enqAndDeq =
	     obuffer1_26_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_26_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_26_portB_response_get &&
	     obuffer1_26_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_27_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_27_serverAdapterA_outData_enqAndDeq =
	     obuffer1_27_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_27_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_27_portA_response_get &&
	     obuffer1_27_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_27_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_27_serverAdapterB_outData_enqAndDeq =
	     obuffer1_27_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_27_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_27_portB_response_get &&
	     obuffer1_27_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_28_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_28_serverAdapterA_outData_enqAndDeq =
	     obuffer1_28_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_28_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_28_portA_response_get &&
	     obuffer1_28_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_28_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_28_serverAdapterB_outData_enqAndDeq =
	     obuffer1_28_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_28_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_28_portB_response_get &&
	     obuffer1_28_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_29_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_29_serverAdapterA_outData_enqAndDeq =
	     obuffer1_29_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_29_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_29_portA_response_get &&
	     obuffer1_29_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_29_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_29_serverAdapterB_outData_enqAndDeq =
	     obuffer1_29_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_29_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_29_portB_response_get &&
	     obuffer1_29_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_30_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_30_serverAdapterA_outData_enqAndDeq =
	     obuffer1_30_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_30_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_30_portA_response_get &&
	     obuffer1_30_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_30_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_30_serverAdapterB_outData_enqAndDeq =
	     obuffer1_30_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_30_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_30_portB_response_get &&
	     obuffer1_30_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer1_31_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_31_serverAdapterA_outData_enqAndDeq =
	     obuffer1_31_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_31_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf1_31_portA_response_get &&
	     obuffer1_31_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer1_31_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer1_31_serverAdapterB_outData_enqAndDeq =
	     obuffer1_31_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_31_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf1_31_portB_response_get &&
	     obuffer1_31_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_0_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_0_serverAdapterA_outData_enqAndDeq =
	     obuffer2_0_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_0_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_0_portA_response_get &&
	     obuffer2_0_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_0_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_0_serverAdapterB_outData_enqAndDeq =
	     obuffer2_0_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_0_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_0_portB_response_get &&
	     obuffer2_0_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_1_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_1_serverAdapterA_outData_enqAndDeq =
	     obuffer2_1_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_1_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_1_portA_response_get &&
	     obuffer2_1_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_1_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_1_serverAdapterB_outData_enqAndDeq =
	     obuffer2_1_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_1_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_1_portB_response_get &&
	     obuffer2_1_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_2_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_2_serverAdapterA_outData_enqAndDeq =
	     obuffer2_2_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_2_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_2_portA_response_get &&
	     obuffer2_2_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_2_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_2_serverAdapterB_outData_enqAndDeq =
	     obuffer2_2_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_2_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_2_portB_response_get &&
	     obuffer2_2_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_3_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_3_serverAdapterA_outData_enqAndDeq =
	     obuffer2_3_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_3_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_3_portA_response_get &&
	     obuffer2_3_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_3_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_3_serverAdapterB_outData_enqAndDeq =
	     obuffer2_3_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_3_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_3_portB_response_get &&
	     obuffer2_3_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_4_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_4_serverAdapterA_outData_enqAndDeq =
	     obuffer2_4_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_4_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_4_portA_response_get &&
	     obuffer2_4_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_4_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_4_serverAdapterB_outData_enqAndDeq =
	     obuffer2_4_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_4_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_4_portB_response_get &&
	     obuffer2_4_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_5_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_5_serverAdapterA_outData_enqAndDeq =
	     obuffer2_5_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_5_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_5_portA_response_get &&
	     obuffer2_5_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_5_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_5_serverAdapterB_outData_enqAndDeq =
	     obuffer2_5_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_5_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_5_portB_response_get &&
	     obuffer2_5_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_6_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_6_serverAdapterA_outData_enqAndDeq =
	     obuffer2_6_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_6_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_6_portA_response_get &&
	     obuffer2_6_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_6_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_6_serverAdapterB_outData_enqAndDeq =
	     obuffer2_6_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_6_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_6_portB_response_get &&
	     obuffer2_6_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_7_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_7_serverAdapterA_outData_enqAndDeq =
	     obuffer2_7_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_7_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_7_portA_response_get &&
	     obuffer2_7_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_7_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_7_serverAdapterB_outData_enqAndDeq =
	     obuffer2_7_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_7_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_7_portB_response_get &&
	     obuffer2_7_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_8_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_8_serverAdapterA_outData_enqAndDeq =
	     obuffer2_8_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_8_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_8_portA_response_get &&
	     obuffer2_8_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_8_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_8_serverAdapterB_outData_enqAndDeq =
	     obuffer2_8_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_8_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_8_portB_response_get &&
	     obuffer2_8_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_9_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_9_serverAdapterA_outData_enqAndDeq =
	     obuffer2_9_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_9_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_9_portA_response_get &&
	     obuffer2_9_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_9_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_9_serverAdapterB_outData_enqAndDeq =
	     obuffer2_9_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_9_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_9_portB_response_get &&
	     obuffer2_9_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_10_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_10_serverAdapterA_outData_enqAndDeq =
	     obuffer2_10_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_10_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_10_portA_response_get &&
	     obuffer2_10_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_10_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_10_serverAdapterB_outData_enqAndDeq =
	     obuffer2_10_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_10_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_10_portB_response_get &&
	     obuffer2_10_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_11_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_11_serverAdapterA_outData_enqAndDeq =
	     obuffer2_11_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_11_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_11_portA_response_get &&
	     obuffer2_11_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_11_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_11_serverAdapterB_outData_enqAndDeq =
	     obuffer2_11_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_11_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_11_portB_response_get &&
	     obuffer2_11_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_12_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_12_serverAdapterA_outData_enqAndDeq =
	     obuffer2_12_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_12_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_12_portA_response_get &&
	     obuffer2_12_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_12_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_12_serverAdapterB_outData_enqAndDeq =
	     obuffer2_12_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_12_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_12_portB_response_get &&
	     obuffer2_12_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_13_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_13_serverAdapterA_outData_enqAndDeq =
	     obuffer2_13_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_13_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_13_portA_response_get &&
	     obuffer2_13_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_13_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_13_serverAdapterB_outData_enqAndDeq =
	     obuffer2_13_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_13_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_13_portB_response_get &&
	     obuffer2_13_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_14_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_14_serverAdapterA_outData_enqAndDeq =
	     obuffer2_14_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_14_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_14_portA_response_get &&
	     obuffer2_14_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_14_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_14_serverAdapterB_outData_enqAndDeq =
	     obuffer2_14_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_14_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_14_portB_response_get &&
	     obuffer2_14_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_15_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_15_serverAdapterA_outData_enqAndDeq =
	     obuffer2_15_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_15_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_15_portA_response_get &&
	     obuffer2_15_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_15_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_15_serverAdapterB_outData_enqAndDeq =
	     obuffer2_15_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_15_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_15_portB_response_get &&
	     obuffer2_15_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_16_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_16_serverAdapterA_outData_enqAndDeq =
	     obuffer2_16_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_16_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_16_portA_response_get &&
	     obuffer2_16_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_16_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_16_serverAdapterB_outData_enqAndDeq =
	     obuffer2_16_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_16_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_16_portB_response_get &&
	     obuffer2_16_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_17_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_17_serverAdapterA_outData_enqAndDeq =
	     obuffer2_17_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_17_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_17_portA_response_get &&
	     obuffer2_17_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_17_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_17_serverAdapterB_outData_enqAndDeq =
	     obuffer2_17_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_17_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_17_portB_response_get &&
	     obuffer2_17_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_18_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_18_serverAdapterA_outData_enqAndDeq =
	     obuffer2_18_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_18_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_18_portA_response_get &&
	     obuffer2_18_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_18_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_18_serverAdapterB_outData_enqAndDeq =
	     obuffer2_18_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_18_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_18_portB_response_get &&
	     obuffer2_18_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_19_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_19_serverAdapterA_outData_enqAndDeq =
	     obuffer2_19_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_19_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_19_portA_response_get &&
	     obuffer2_19_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_19_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_19_serverAdapterB_outData_enqAndDeq =
	     obuffer2_19_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_19_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_19_portB_response_get &&
	     obuffer2_19_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_20_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_20_serverAdapterA_outData_enqAndDeq =
	     obuffer2_20_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_20_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_20_portA_response_get &&
	     obuffer2_20_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_20_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_20_serverAdapterB_outData_enqAndDeq =
	     obuffer2_20_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_20_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_20_portB_response_get &&
	     obuffer2_20_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_21_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_21_serverAdapterA_outData_enqAndDeq =
	     obuffer2_21_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_21_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_21_portA_response_get &&
	     obuffer2_21_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_21_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_21_serverAdapterB_outData_enqAndDeq =
	     obuffer2_21_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_21_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_21_portB_response_get &&
	     obuffer2_21_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_22_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_22_serverAdapterA_outData_enqAndDeq =
	     obuffer2_22_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_22_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_22_portA_response_get &&
	     obuffer2_22_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_22_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_22_serverAdapterB_outData_enqAndDeq =
	     obuffer2_22_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_22_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_22_portB_response_get &&
	     obuffer2_22_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_23_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_23_serverAdapterA_outData_enqAndDeq =
	     obuffer2_23_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_23_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_23_portA_response_get &&
	     obuffer2_23_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_23_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_23_serverAdapterB_outData_enqAndDeq =
	     obuffer2_23_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_23_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_23_portB_response_get &&
	     obuffer2_23_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_24_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_24_serverAdapterA_outData_enqAndDeq =
	     obuffer2_24_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_24_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_24_portA_response_get &&
	     obuffer2_24_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_24_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_24_serverAdapterB_outData_enqAndDeq =
	     obuffer2_24_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_24_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_24_portB_response_get &&
	     obuffer2_24_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_25_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_25_serverAdapterA_outData_enqAndDeq =
	     obuffer2_25_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_25_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_25_portA_response_get &&
	     obuffer2_25_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_25_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_25_serverAdapterB_outData_enqAndDeq =
	     obuffer2_25_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_25_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_25_portB_response_get &&
	     obuffer2_25_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_26_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_26_serverAdapterA_outData_enqAndDeq =
	     obuffer2_26_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_26_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_26_portA_response_get &&
	     obuffer2_26_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_26_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_26_serverAdapterB_outData_enqAndDeq =
	     obuffer2_26_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_26_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_26_portB_response_get &&
	     obuffer2_26_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_27_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_27_serverAdapterA_outData_enqAndDeq =
	     obuffer2_27_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_27_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_27_portA_response_get &&
	     obuffer2_27_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_27_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_27_serverAdapterB_outData_enqAndDeq =
	     obuffer2_27_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_27_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_27_portB_response_get &&
	     obuffer2_27_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_28_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_28_serverAdapterA_outData_enqAndDeq =
	     obuffer2_28_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_28_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_28_portA_response_get &&
	     obuffer2_28_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_28_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_28_serverAdapterB_outData_enqAndDeq =
	     obuffer2_28_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_28_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_28_portB_response_get &&
	     obuffer2_28_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_29_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_29_serverAdapterA_outData_enqAndDeq =
	     obuffer2_29_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_29_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_29_portA_response_get &&
	     obuffer2_29_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_29_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_29_serverAdapterB_outData_enqAndDeq =
	     obuffer2_29_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_29_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_29_portB_response_get &&
	     obuffer2_29_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_30_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_30_serverAdapterA_outData_enqAndDeq =
	     obuffer2_30_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_30_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_30_portA_response_get &&
	     obuffer2_30_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_30_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_30_serverAdapterB_outData_enqAndDeq =
	     obuffer2_30_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_30_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_30_portB_response_get &&
	     obuffer2_30_serverAdapterB_outData_enqData$whas ;

  // rule RL_obuffer2_31_serverAdapterA_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_31_serverAdapterA_outData_enqAndDeq =
	     obuffer2_31_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_31_serverAdapterA_outDataCore$FULL_N &&
	     EN_obuf2_31_portA_response_get &&
	     obuffer2_31_serverAdapterA_outData_enqData$whas ;

  // rule RL_obuffer2_31_serverAdapterB_outData_enqAndDeq
  assign WILL_FIRE_RL_obuffer2_31_serverAdapterB_outData_enqAndDeq =
	     obuffer2_31_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_31_serverAdapterB_outDataCore$FULL_N &&
	     EN_obuf2_31_portB_response_get &&
	     obuffer2_31_serverAdapterB_outData_enqData$whas ;

  // inputs to muxes for submodule ports
  assign MUX_ibuffer_0_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_0_portA_request_put_BITS_17_TO_16__q1[1] ||
	       ibuf_0_portA_request_put_BITS_17_TO_16__q1[0] } ;
  assign MUX_ibuffer_0_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_0_portB_request_put_BITS_17_TO_16__q2[1] ||
	       ibuf_0_portB_request_put_BITS_17_TO_16__q2[0] } ;
  assign MUX_ibuffer_10_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_10_portA_request_put_BITS_17_TO_16__q3[1] ||
	       ibuf_10_portA_request_put_BITS_17_TO_16__q3[0] } ;
  assign MUX_ibuffer_10_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_10_portB_request_put_BITS_17_TO_16__q4[1] ||
	       ibuf_10_portB_request_put_BITS_17_TO_16__q4[0] } ;
  assign MUX_ibuffer_11_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_11_portA_request_put_BITS_17_TO_16__q5[1] ||
	       ibuf_11_portA_request_put_BITS_17_TO_16__q5[0] } ;
  assign MUX_ibuffer_11_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_11_portB_request_put_BITS_17_TO_16__q6[1] ||
	       ibuf_11_portB_request_put_BITS_17_TO_16__q6[0] } ;
  assign MUX_ibuffer_12_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_12_portA_request_put_BITS_17_TO_16__q7[1] ||
	       ibuf_12_portA_request_put_BITS_17_TO_16__q7[0] } ;
  assign MUX_ibuffer_12_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_12_portB_request_put_BITS_17_TO_16__q8[1] ||
	       ibuf_12_portB_request_put_BITS_17_TO_16__q8[0] } ;
  assign MUX_ibuffer_13_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_13_portA_request_put_BITS_17_TO_16__q9[1] ||
	       ibuf_13_portA_request_put_BITS_17_TO_16__q9[0] } ;
  assign MUX_ibuffer_13_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_13_portB_request_put_BITS_17_TO_16__q10[1] ||
	       ibuf_13_portB_request_put_BITS_17_TO_16__q10[0] } ;
  assign MUX_ibuffer_14_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_14_portA_request_put_BITS_17_TO_16__q11[1] ||
	       ibuf_14_portA_request_put_BITS_17_TO_16__q11[0] } ;
  assign MUX_ibuffer_14_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_14_portB_request_put_BITS_17_TO_16__q12[1] ||
	       ibuf_14_portB_request_put_BITS_17_TO_16__q12[0] } ;
  assign MUX_ibuffer_15_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_15_portA_request_put_BITS_17_TO_16__q13[1] ||
	       ibuf_15_portA_request_put_BITS_17_TO_16__q13[0] } ;
  assign MUX_ibuffer_15_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_15_portB_request_put_BITS_17_TO_16__q14[1] ||
	       ibuf_15_portB_request_put_BITS_17_TO_16__q14[0] } ;
  assign MUX_ibuffer_16_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_16_portA_request_put_BITS_17_TO_16__q15[1] ||
	       ibuf_16_portA_request_put_BITS_17_TO_16__q15[0] } ;
  assign MUX_ibuffer_16_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_16_portB_request_put_BITS_17_TO_16__q16[1] ||
	       ibuf_16_portB_request_put_BITS_17_TO_16__q16[0] } ;
  assign MUX_ibuffer_17_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_17_portA_request_put_BITS_17_TO_16__q17[1] ||
	       ibuf_17_portA_request_put_BITS_17_TO_16__q17[0] } ;
  assign MUX_ibuffer_17_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_17_portB_request_put_BITS_17_TO_16__q18[1] ||
	       ibuf_17_portB_request_put_BITS_17_TO_16__q18[0] } ;
  assign MUX_ibuffer_18_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_18_portA_request_put_BITS_17_TO_16__q19[1] ||
	       ibuf_18_portA_request_put_BITS_17_TO_16__q19[0] } ;
  assign MUX_ibuffer_18_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_18_portB_request_put_BITS_17_TO_16__q20[1] ||
	       ibuf_18_portB_request_put_BITS_17_TO_16__q20[0] } ;
  assign MUX_ibuffer_19_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_19_portA_request_put_BITS_17_TO_16__q21[1] ||
	       ibuf_19_portA_request_put_BITS_17_TO_16__q21[0] } ;
  assign MUX_ibuffer_19_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_19_portB_request_put_BITS_17_TO_16__q22[1] ||
	       ibuf_19_portB_request_put_BITS_17_TO_16__q22[0] } ;
  assign MUX_ibuffer_1_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_1_portA_request_put_BITS_17_TO_16__q23[1] ||
	       ibuf_1_portA_request_put_BITS_17_TO_16__q23[0] } ;
  assign MUX_ibuffer_1_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_1_portB_request_put_BITS_17_TO_16__q24[1] ||
	       ibuf_1_portB_request_put_BITS_17_TO_16__q24[0] } ;
  assign MUX_ibuffer_20_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_20_portA_request_put_BITS_17_TO_16__q25[1] ||
	       ibuf_20_portA_request_put_BITS_17_TO_16__q25[0] } ;
  assign MUX_ibuffer_20_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_20_portB_request_put_BITS_17_TO_16__q26[1] ||
	       ibuf_20_portB_request_put_BITS_17_TO_16__q26[0] } ;
  assign MUX_ibuffer_21_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_21_portA_request_put_BITS_17_TO_16__q27[1] ||
	       ibuf_21_portA_request_put_BITS_17_TO_16__q27[0] } ;
  assign MUX_ibuffer_21_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_21_portB_request_put_BITS_17_TO_16__q28[1] ||
	       ibuf_21_portB_request_put_BITS_17_TO_16__q28[0] } ;
  assign MUX_ibuffer_22_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_22_portA_request_put_BITS_17_TO_16__q29[1] ||
	       ibuf_22_portA_request_put_BITS_17_TO_16__q29[0] } ;
  assign MUX_ibuffer_22_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_22_portB_request_put_BITS_17_TO_16__q30[1] ||
	       ibuf_22_portB_request_put_BITS_17_TO_16__q30[0] } ;
  assign MUX_ibuffer_23_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_23_portA_request_put_BITS_17_TO_16__q31[1] ||
	       ibuf_23_portA_request_put_BITS_17_TO_16__q31[0] } ;
  assign MUX_ibuffer_23_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_23_portB_request_put_BITS_17_TO_16__q32[1] ||
	       ibuf_23_portB_request_put_BITS_17_TO_16__q32[0] } ;
  assign MUX_ibuffer_24_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_24_portA_request_put_BITS_17_TO_16__q33[1] ||
	       ibuf_24_portA_request_put_BITS_17_TO_16__q33[0] } ;
  assign MUX_ibuffer_24_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_24_portB_request_put_BITS_17_TO_16__q34[1] ||
	       ibuf_24_portB_request_put_BITS_17_TO_16__q34[0] } ;
  assign MUX_ibuffer_25_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_25_portA_request_put_BITS_17_TO_16__q35[1] ||
	       ibuf_25_portA_request_put_BITS_17_TO_16__q35[0] } ;
  assign MUX_ibuffer_25_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_25_portB_request_put_BITS_17_TO_16__q36[1] ||
	       ibuf_25_portB_request_put_BITS_17_TO_16__q36[0] } ;
  assign MUX_ibuffer_26_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_26_portA_request_put_BITS_17_TO_16__q37[1] ||
	       ibuf_26_portA_request_put_BITS_17_TO_16__q37[0] } ;
  assign MUX_ibuffer_26_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_26_portB_request_put_BITS_17_TO_16__q38[1] ||
	       ibuf_26_portB_request_put_BITS_17_TO_16__q38[0] } ;
  assign MUX_ibuffer_27_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_27_portA_request_put_BITS_17_TO_16__q39[1] ||
	       ibuf_27_portA_request_put_BITS_17_TO_16__q39[0] } ;
  assign MUX_ibuffer_27_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_27_portB_request_put_BITS_17_TO_16__q40[1] ||
	       ibuf_27_portB_request_put_BITS_17_TO_16__q40[0] } ;
  assign MUX_ibuffer_28_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_28_portA_request_put_BITS_17_TO_16__q41[1] ||
	       ibuf_28_portA_request_put_BITS_17_TO_16__q41[0] } ;
  assign MUX_ibuffer_28_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_28_portB_request_put_BITS_17_TO_16__q42[1] ||
	       ibuf_28_portB_request_put_BITS_17_TO_16__q42[0] } ;
  assign MUX_ibuffer_29_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_29_portA_request_put_BITS_17_TO_16__q43[1] ||
	       ibuf_29_portA_request_put_BITS_17_TO_16__q43[0] } ;
  assign MUX_ibuffer_29_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_29_portB_request_put_BITS_17_TO_16__q44[1] ||
	       ibuf_29_portB_request_put_BITS_17_TO_16__q44[0] } ;
  assign MUX_ibuffer_2_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_2_portA_request_put_BITS_17_TO_16__q45[1] ||
	       ibuf_2_portA_request_put_BITS_17_TO_16__q45[0] } ;
  assign MUX_ibuffer_2_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_2_portB_request_put_BITS_17_TO_16__q46[1] ||
	       ibuf_2_portB_request_put_BITS_17_TO_16__q46[0] } ;
  assign MUX_ibuffer_30_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_30_portA_request_put_BITS_17_TO_16__q47[1] ||
	       ibuf_30_portA_request_put_BITS_17_TO_16__q47[0] } ;
  assign MUX_ibuffer_30_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_30_portB_request_put_BITS_17_TO_16__q48[1] ||
	       ibuf_30_portB_request_put_BITS_17_TO_16__q48[0] } ;
  assign MUX_ibuffer_31_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_31_portA_request_put_BITS_17_TO_16__q49[1] ||
	       ibuf_31_portA_request_put_BITS_17_TO_16__q49[0] } ;
  assign MUX_ibuffer_31_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_31_portB_request_put_BITS_17_TO_16__q50[1] ||
	       ibuf_31_portB_request_put_BITS_17_TO_16__q50[0] } ;
  assign MUX_ibuffer_3_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_3_portA_request_put_BITS_17_TO_16__q51[1] ||
	       ibuf_3_portA_request_put_BITS_17_TO_16__q51[0] } ;
  assign MUX_ibuffer_3_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_3_portB_request_put_BITS_17_TO_16__q52[1] ||
	       ibuf_3_portB_request_put_BITS_17_TO_16__q52[0] } ;
  assign MUX_ibuffer_4_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_4_portA_request_put_BITS_17_TO_16__q53[1] ||
	       ibuf_4_portA_request_put_BITS_17_TO_16__q53[0] } ;
  assign MUX_ibuffer_4_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_4_portB_request_put_BITS_17_TO_16__q54[1] ||
	       ibuf_4_portB_request_put_BITS_17_TO_16__q54[0] } ;
  assign MUX_ibuffer_5_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_5_portA_request_put_BITS_17_TO_16__q55[1] ||
	       ibuf_5_portA_request_put_BITS_17_TO_16__q55[0] } ;
  assign MUX_ibuffer_5_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_5_portB_request_put_BITS_17_TO_16__q56[1] ||
	       ibuf_5_portB_request_put_BITS_17_TO_16__q56[0] } ;
  assign MUX_ibuffer_6_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_6_portA_request_put_BITS_17_TO_16__q57[1] ||
	       ibuf_6_portA_request_put_BITS_17_TO_16__q57[0] } ;
  assign MUX_ibuffer_6_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_6_portB_request_put_BITS_17_TO_16__q58[1] ||
	       ibuf_6_portB_request_put_BITS_17_TO_16__q58[0] } ;
  assign MUX_ibuffer_7_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_7_portA_request_put_BITS_17_TO_16__q59[1] ||
	       ibuf_7_portA_request_put_BITS_17_TO_16__q59[0] } ;
  assign MUX_ibuffer_7_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_7_portB_request_put_BITS_17_TO_16__q60[1] ||
	       ibuf_7_portB_request_put_BITS_17_TO_16__q60[0] } ;
  assign MUX_ibuffer_8_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_8_portA_request_put_BITS_17_TO_16__q61[1] ||
	       ibuf_8_portA_request_put_BITS_17_TO_16__q61[0] } ;
  assign MUX_ibuffer_8_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_8_portB_request_put_BITS_17_TO_16__q62[1] ||
	       ibuf_8_portB_request_put_BITS_17_TO_16__q62[0] } ;
  assign MUX_ibuffer_9_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_9_portA_request_put_BITS_17_TO_16__q63[1] ||
	       ibuf_9_portA_request_put_BITS_17_TO_16__q63[0] } ;
  assign MUX_ibuffer_9_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !ibuf_9_portB_request_put_BITS_17_TO_16__q64[1] ||
	       ibuf_9_portB_request_put_BITS_17_TO_16__q64[0] } ;
  assign MUX_obuffer1_0_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_0_portA_request_put_BITS_41_TO_40__q65[1] ||
	       obuf1_0_portA_request_put_BITS_41_TO_40__q65[0] } ;
  assign MUX_obuffer1_0_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_0_portB_request_put_BITS_41_TO_40__q66[1] ||
	       obuf1_0_portB_request_put_BITS_41_TO_40__q66[0] } ;
  assign MUX_obuffer1_10_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_10_portA_request_put_BITS_41_TO_40__q67[1] ||
	       obuf1_10_portA_request_put_BITS_41_TO_40__q67[0] } ;
  assign MUX_obuffer1_10_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_10_portB_request_put_BITS_41_TO_40__q68[1] ||
	       obuf1_10_portB_request_put_BITS_41_TO_40__q68[0] } ;
  assign MUX_obuffer1_11_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_11_portA_request_put_BITS_41_TO_40__q69[1] ||
	       obuf1_11_portA_request_put_BITS_41_TO_40__q69[0] } ;
  assign MUX_obuffer1_11_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_11_portB_request_put_BITS_41_TO_40__q70[1] ||
	       obuf1_11_portB_request_put_BITS_41_TO_40__q70[0] } ;
  assign MUX_obuffer1_12_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_12_portA_request_put_BITS_41_TO_40__q71[1] ||
	       obuf1_12_portA_request_put_BITS_41_TO_40__q71[0] } ;
  assign MUX_obuffer1_12_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_12_portB_request_put_BITS_41_TO_40__q72[1] ||
	       obuf1_12_portB_request_put_BITS_41_TO_40__q72[0] } ;
  assign MUX_obuffer1_13_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_13_portA_request_put_BITS_41_TO_40__q73[1] ||
	       obuf1_13_portA_request_put_BITS_41_TO_40__q73[0] } ;
  assign MUX_obuffer1_13_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_13_portB_request_put_BITS_41_TO_40__q74[1] ||
	       obuf1_13_portB_request_put_BITS_41_TO_40__q74[0] } ;
  assign MUX_obuffer1_14_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_14_portA_request_put_BITS_41_TO_40__q75[1] ||
	       obuf1_14_portA_request_put_BITS_41_TO_40__q75[0] } ;
  assign MUX_obuffer1_14_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_14_portB_request_put_BITS_41_TO_40__q76[1] ||
	       obuf1_14_portB_request_put_BITS_41_TO_40__q76[0] } ;
  assign MUX_obuffer1_15_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_15_portA_request_put_BITS_41_TO_40__q77[1] ||
	       obuf1_15_portA_request_put_BITS_41_TO_40__q77[0] } ;
  assign MUX_obuffer1_15_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_15_portB_request_put_BITS_41_TO_40__q78[1] ||
	       obuf1_15_portB_request_put_BITS_41_TO_40__q78[0] } ;
  assign MUX_obuffer1_16_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_16_portA_request_put_BITS_41_TO_40__q79[1] ||
	       obuf1_16_portA_request_put_BITS_41_TO_40__q79[0] } ;
  assign MUX_obuffer1_16_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_16_portB_request_put_BITS_41_TO_40__q80[1] ||
	       obuf1_16_portB_request_put_BITS_41_TO_40__q80[0] } ;
  assign MUX_obuffer1_17_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_17_portA_request_put_BITS_41_TO_40__q81[1] ||
	       obuf1_17_portA_request_put_BITS_41_TO_40__q81[0] } ;
  assign MUX_obuffer1_17_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_17_portB_request_put_BITS_41_TO_40__q82[1] ||
	       obuf1_17_portB_request_put_BITS_41_TO_40__q82[0] } ;
  assign MUX_obuffer1_18_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_18_portA_request_put_BITS_41_TO_40__q83[1] ||
	       obuf1_18_portA_request_put_BITS_41_TO_40__q83[0] } ;
  assign MUX_obuffer1_18_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_18_portB_request_put_BITS_41_TO_40__q84[1] ||
	       obuf1_18_portB_request_put_BITS_41_TO_40__q84[0] } ;
  assign MUX_obuffer1_19_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_19_portA_request_put_BITS_41_TO_40__q85[1] ||
	       obuf1_19_portA_request_put_BITS_41_TO_40__q85[0] } ;
  assign MUX_obuffer1_19_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_19_portB_request_put_BITS_41_TO_40__q86[1] ||
	       obuf1_19_portB_request_put_BITS_41_TO_40__q86[0] } ;
  assign MUX_obuffer1_1_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_1_portA_request_put_BITS_41_TO_40__q87[1] ||
	       obuf1_1_portA_request_put_BITS_41_TO_40__q87[0] } ;
  assign MUX_obuffer1_1_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_1_portB_request_put_BITS_41_TO_40__q88[1] ||
	       obuf1_1_portB_request_put_BITS_41_TO_40__q88[0] } ;
  assign MUX_obuffer1_20_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_20_portA_request_put_BITS_41_TO_40__q89[1] ||
	       obuf1_20_portA_request_put_BITS_41_TO_40__q89[0] } ;
  assign MUX_obuffer1_20_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_20_portB_request_put_BITS_41_TO_40__q90[1] ||
	       obuf1_20_portB_request_put_BITS_41_TO_40__q90[0] } ;
  assign MUX_obuffer1_21_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_21_portA_request_put_BITS_41_TO_40__q91[1] ||
	       obuf1_21_portA_request_put_BITS_41_TO_40__q91[0] } ;
  assign MUX_obuffer1_21_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_21_portB_request_put_BITS_41_TO_40__q92[1] ||
	       obuf1_21_portB_request_put_BITS_41_TO_40__q92[0] } ;
  assign MUX_obuffer1_22_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_22_portA_request_put_BITS_41_TO_40__q93[1] ||
	       obuf1_22_portA_request_put_BITS_41_TO_40__q93[0] } ;
  assign MUX_obuffer1_22_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_22_portB_request_put_BITS_41_TO_40__q94[1] ||
	       obuf1_22_portB_request_put_BITS_41_TO_40__q94[0] } ;
  assign MUX_obuffer1_23_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_23_portA_request_put_BITS_41_TO_40__q95[1] ||
	       obuf1_23_portA_request_put_BITS_41_TO_40__q95[0] } ;
  assign MUX_obuffer1_23_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_23_portB_request_put_BITS_41_TO_40__q96[1] ||
	       obuf1_23_portB_request_put_BITS_41_TO_40__q96[0] } ;
  assign MUX_obuffer1_24_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_24_portA_request_put_BITS_41_TO_40__q97[1] ||
	       obuf1_24_portA_request_put_BITS_41_TO_40__q97[0] } ;
  assign MUX_obuffer1_24_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_24_portB_request_put_BITS_41_TO_40__q98[1] ||
	       obuf1_24_portB_request_put_BITS_41_TO_40__q98[0] } ;
  assign MUX_obuffer1_25_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_25_portA_request_put_BITS_41_TO_40__q99[1] ||
	       obuf1_25_portA_request_put_BITS_41_TO_40__q99[0] } ;
  assign MUX_obuffer1_25_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_25_portB_request_put_BITS_41_TO_40__q100[1] ||
	       obuf1_25_portB_request_put_BITS_41_TO_40__q100[0] } ;
  assign MUX_obuffer1_26_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_26_portA_request_put_BITS_41_TO_40__q101[1] ||
	       obuf1_26_portA_request_put_BITS_41_TO_40__q101[0] } ;
  assign MUX_obuffer1_26_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_26_portB_request_put_BITS_41_TO_40__q102[1] ||
	       obuf1_26_portB_request_put_BITS_41_TO_40__q102[0] } ;
  assign MUX_obuffer1_27_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_27_portA_request_put_BITS_41_TO_40__q103[1] ||
	       obuf1_27_portA_request_put_BITS_41_TO_40__q103[0] } ;
  assign MUX_obuffer1_27_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_27_portB_request_put_BITS_41_TO_40__q104[1] ||
	       obuf1_27_portB_request_put_BITS_41_TO_40__q104[0] } ;
  assign MUX_obuffer1_28_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_28_portA_request_put_BITS_41_TO_40__q105[1] ||
	       obuf1_28_portA_request_put_BITS_41_TO_40__q105[0] } ;
  assign MUX_obuffer1_28_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_28_portB_request_put_BITS_41_TO_40__q106[1] ||
	       obuf1_28_portB_request_put_BITS_41_TO_40__q106[0] } ;
  assign MUX_obuffer1_29_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_29_portA_request_put_BITS_41_TO_40__q107[1] ||
	       obuf1_29_portA_request_put_BITS_41_TO_40__q107[0] } ;
  assign MUX_obuffer1_29_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_29_portB_request_put_BITS_41_TO_40__q108[1] ||
	       obuf1_29_portB_request_put_BITS_41_TO_40__q108[0] } ;
  assign MUX_obuffer1_2_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_2_portA_request_put_BITS_41_TO_40__q109[1] ||
	       obuf1_2_portA_request_put_BITS_41_TO_40__q109[0] } ;
  assign MUX_obuffer1_2_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_2_portB_request_put_BITS_41_TO_40__q110[1] ||
	       obuf1_2_portB_request_put_BITS_41_TO_40__q110[0] } ;
  assign MUX_obuffer1_30_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_30_portA_request_put_BITS_41_TO_40__q111[1] ||
	       obuf1_30_portA_request_put_BITS_41_TO_40__q111[0] } ;
  assign MUX_obuffer1_30_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_30_portB_request_put_BITS_41_TO_40__q112[1] ||
	       obuf1_30_portB_request_put_BITS_41_TO_40__q112[0] } ;
  assign MUX_obuffer1_31_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_31_portA_request_put_BITS_41_TO_40__q113[1] ||
	       obuf1_31_portA_request_put_BITS_41_TO_40__q113[0] } ;
  assign MUX_obuffer1_31_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_31_portB_request_put_BITS_41_TO_40__q114[1] ||
	       obuf1_31_portB_request_put_BITS_41_TO_40__q114[0] } ;
  assign MUX_obuffer1_3_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_3_portA_request_put_BITS_41_TO_40__q115[1] ||
	       obuf1_3_portA_request_put_BITS_41_TO_40__q115[0] } ;
  assign MUX_obuffer1_3_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_3_portB_request_put_BITS_41_TO_40__q116[1] ||
	       obuf1_3_portB_request_put_BITS_41_TO_40__q116[0] } ;
  assign MUX_obuffer1_4_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_4_portA_request_put_BITS_41_TO_40__q117[1] ||
	       obuf1_4_portA_request_put_BITS_41_TO_40__q117[0] } ;
  assign MUX_obuffer1_4_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_4_portB_request_put_BITS_41_TO_40__q118[1] ||
	       obuf1_4_portB_request_put_BITS_41_TO_40__q118[0] } ;
  assign MUX_obuffer1_5_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_5_portA_request_put_BITS_41_TO_40__q119[1] ||
	       obuf1_5_portA_request_put_BITS_41_TO_40__q119[0] } ;
  assign MUX_obuffer1_5_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_5_portB_request_put_BITS_41_TO_40__q120[1] ||
	       obuf1_5_portB_request_put_BITS_41_TO_40__q120[0] } ;
  assign MUX_obuffer1_6_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_6_portA_request_put_BITS_41_TO_40__q121[1] ||
	       obuf1_6_portA_request_put_BITS_41_TO_40__q121[0] } ;
  assign MUX_obuffer1_6_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_6_portB_request_put_BITS_41_TO_40__q122[1] ||
	       obuf1_6_portB_request_put_BITS_41_TO_40__q122[0] } ;
  assign MUX_obuffer1_7_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_7_portA_request_put_BITS_41_TO_40__q123[1] ||
	       obuf1_7_portA_request_put_BITS_41_TO_40__q123[0] } ;
  assign MUX_obuffer1_7_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_7_portB_request_put_BITS_41_TO_40__q124[1] ||
	       obuf1_7_portB_request_put_BITS_41_TO_40__q124[0] } ;
  assign MUX_obuffer1_8_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_8_portA_request_put_BITS_41_TO_40__q125[1] ||
	       obuf1_8_portA_request_put_BITS_41_TO_40__q125[0] } ;
  assign MUX_obuffer1_8_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_8_portB_request_put_BITS_41_TO_40__q126[1] ||
	       obuf1_8_portB_request_put_BITS_41_TO_40__q126[0] } ;
  assign MUX_obuffer1_9_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_9_portA_request_put_BITS_41_TO_40__q127[1] ||
	       obuf1_9_portA_request_put_BITS_41_TO_40__q127[0] } ;
  assign MUX_obuffer1_9_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf1_9_portB_request_put_BITS_41_TO_40__q128[1] ||
	       obuf1_9_portB_request_put_BITS_41_TO_40__q128[0] } ;
  assign MUX_obuffer2_0_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_0_portA_request_put_BITS_41_TO_40__q129[1] ||
	       obuf2_0_portA_request_put_BITS_41_TO_40__q129[0] } ;
  assign MUX_obuffer2_0_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_0_portB_request_put_BITS_41_TO_40__q130[1] ||
	       obuf2_0_portB_request_put_BITS_41_TO_40__q130[0] } ;
  assign MUX_obuffer2_10_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_10_portA_request_put_BITS_41_TO_40__q131[1] ||
	       obuf2_10_portA_request_put_BITS_41_TO_40__q131[0] } ;
  assign MUX_obuffer2_10_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_10_portB_request_put_BITS_41_TO_40__q132[1] ||
	       obuf2_10_portB_request_put_BITS_41_TO_40__q132[0] } ;
  assign MUX_obuffer2_11_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_11_portA_request_put_BITS_41_TO_40__q133[1] ||
	       obuf2_11_portA_request_put_BITS_41_TO_40__q133[0] } ;
  assign MUX_obuffer2_11_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_11_portB_request_put_BITS_41_TO_40__q134[1] ||
	       obuf2_11_portB_request_put_BITS_41_TO_40__q134[0] } ;
  assign MUX_obuffer2_12_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_12_portA_request_put_BITS_41_TO_40__q135[1] ||
	       obuf2_12_portA_request_put_BITS_41_TO_40__q135[0] } ;
  assign MUX_obuffer2_12_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_12_portB_request_put_BITS_41_TO_40__q136[1] ||
	       obuf2_12_portB_request_put_BITS_41_TO_40__q136[0] } ;
  assign MUX_obuffer2_13_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_13_portA_request_put_BITS_41_TO_40__q137[1] ||
	       obuf2_13_portA_request_put_BITS_41_TO_40__q137[0] } ;
  assign MUX_obuffer2_13_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_13_portB_request_put_BITS_41_TO_40__q138[1] ||
	       obuf2_13_portB_request_put_BITS_41_TO_40__q138[0] } ;
  assign MUX_obuffer2_14_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_14_portA_request_put_BITS_41_TO_40__q139[1] ||
	       obuf2_14_portA_request_put_BITS_41_TO_40__q139[0] } ;
  assign MUX_obuffer2_14_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_14_portB_request_put_BITS_41_TO_40__q140[1] ||
	       obuf2_14_portB_request_put_BITS_41_TO_40__q140[0] } ;
  assign MUX_obuffer2_15_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_15_portA_request_put_BITS_41_TO_40__q141[1] ||
	       obuf2_15_portA_request_put_BITS_41_TO_40__q141[0] } ;
  assign MUX_obuffer2_15_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_15_portB_request_put_BITS_41_TO_40__q142[1] ||
	       obuf2_15_portB_request_put_BITS_41_TO_40__q142[0] } ;
  assign MUX_obuffer2_16_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_16_portA_request_put_BITS_41_TO_40__q143[1] ||
	       obuf2_16_portA_request_put_BITS_41_TO_40__q143[0] } ;
  assign MUX_obuffer2_16_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_16_portB_request_put_BITS_41_TO_40__q144[1] ||
	       obuf2_16_portB_request_put_BITS_41_TO_40__q144[0] } ;
  assign MUX_obuffer2_17_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_17_portA_request_put_BITS_41_TO_40__q145[1] ||
	       obuf2_17_portA_request_put_BITS_41_TO_40__q145[0] } ;
  assign MUX_obuffer2_17_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_17_portB_request_put_BITS_41_TO_40__q146[1] ||
	       obuf2_17_portB_request_put_BITS_41_TO_40__q146[0] } ;
  assign MUX_obuffer2_18_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_18_portA_request_put_BITS_41_TO_40__q147[1] ||
	       obuf2_18_portA_request_put_BITS_41_TO_40__q147[0] } ;
  assign MUX_obuffer2_18_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_18_portB_request_put_BITS_41_TO_40__q148[1] ||
	       obuf2_18_portB_request_put_BITS_41_TO_40__q148[0] } ;
  assign MUX_obuffer2_19_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_19_portA_request_put_BITS_41_TO_40__q149[1] ||
	       obuf2_19_portA_request_put_BITS_41_TO_40__q149[0] } ;
  assign MUX_obuffer2_19_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_19_portB_request_put_BITS_41_TO_40__q150[1] ||
	       obuf2_19_portB_request_put_BITS_41_TO_40__q150[0] } ;
  assign MUX_obuffer2_1_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_1_portA_request_put_BITS_41_TO_40__q151[1] ||
	       obuf2_1_portA_request_put_BITS_41_TO_40__q151[0] } ;
  assign MUX_obuffer2_1_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_1_portB_request_put_BITS_41_TO_40__q152[1] ||
	       obuf2_1_portB_request_put_BITS_41_TO_40__q152[0] } ;
  assign MUX_obuffer2_20_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_20_portA_request_put_BITS_41_TO_40__q153[1] ||
	       obuf2_20_portA_request_put_BITS_41_TO_40__q153[0] } ;
  assign MUX_obuffer2_20_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_20_portB_request_put_BITS_41_TO_40__q154[1] ||
	       obuf2_20_portB_request_put_BITS_41_TO_40__q154[0] } ;
  assign MUX_obuffer2_21_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_21_portA_request_put_BITS_41_TO_40__q155[1] ||
	       obuf2_21_portA_request_put_BITS_41_TO_40__q155[0] } ;
  assign MUX_obuffer2_21_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_21_portB_request_put_BITS_41_TO_40__q156[1] ||
	       obuf2_21_portB_request_put_BITS_41_TO_40__q156[0] } ;
  assign MUX_obuffer2_22_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_22_portA_request_put_BITS_41_TO_40__q157[1] ||
	       obuf2_22_portA_request_put_BITS_41_TO_40__q157[0] } ;
  assign MUX_obuffer2_22_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_22_portB_request_put_BITS_41_TO_40__q158[1] ||
	       obuf2_22_portB_request_put_BITS_41_TO_40__q158[0] } ;
  assign MUX_obuffer2_23_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_23_portA_request_put_BITS_41_TO_40__q159[1] ||
	       obuf2_23_portA_request_put_BITS_41_TO_40__q159[0] } ;
  assign MUX_obuffer2_23_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_23_portB_request_put_BITS_41_TO_40__q160[1] ||
	       obuf2_23_portB_request_put_BITS_41_TO_40__q160[0] } ;
  assign MUX_obuffer2_24_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_24_portA_request_put_BITS_41_TO_40__q161[1] ||
	       obuf2_24_portA_request_put_BITS_41_TO_40__q161[0] } ;
  assign MUX_obuffer2_24_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_24_portB_request_put_BITS_41_TO_40__q162[1] ||
	       obuf2_24_portB_request_put_BITS_41_TO_40__q162[0] } ;
  assign MUX_obuffer2_25_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_25_portA_request_put_BITS_41_TO_40__q163[1] ||
	       obuf2_25_portA_request_put_BITS_41_TO_40__q163[0] } ;
  assign MUX_obuffer2_25_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_25_portB_request_put_BITS_41_TO_40__q164[1] ||
	       obuf2_25_portB_request_put_BITS_41_TO_40__q164[0] } ;
  assign MUX_obuffer2_26_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_26_portA_request_put_BITS_41_TO_40__q165[1] ||
	       obuf2_26_portA_request_put_BITS_41_TO_40__q165[0] } ;
  assign MUX_obuffer2_26_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_26_portB_request_put_BITS_41_TO_40__q166[1] ||
	       obuf2_26_portB_request_put_BITS_41_TO_40__q166[0] } ;
  assign MUX_obuffer2_27_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_27_portA_request_put_BITS_41_TO_40__q167[1] ||
	       obuf2_27_portA_request_put_BITS_41_TO_40__q167[0] } ;
  assign MUX_obuffer2_27_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_27_portB_request_put_BITS_41_TO_40__q168[1] ||
	       obuf2_27_portB_request_put_BITS_41_TO_40__q168[0] } ;
  assign MUX_obuffer2_28_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_28_portA_request_put_BITS_41_TO_40__q169[1] ||
	       obuf2_28_portA_request_put_BITS_41_TO_40__q169[0] } ;
  assign MUX_obuffer2_28_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_28_portB_request_put_BITS_41_TO_40__q170[1] ||
	       obuf2_28_portB_request_put_BITS_41_TO_40__q170[0] } ;
  assign MUX_obuffer2_29_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_29_portA_request_put_BITS_41_TO_40__q171[1] ||
	       obuf2_29_portA_request_put_BITS_41_TO_40__q171[0] } ;
  assign MUX_obuffer2_29_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_29_portB_request_put_BITS_41_TO_40__q172[1] ||
	       obuf2_29_portB_request_put_BITS_41_TO_40__q172[0] } ;
  assign MUX_obuffer2_2_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_2_portA_request_put_BITS_41_TO_40__q173[1] ||
	       obuf2_2_portA_request_put_BITS_41_TO_40__q173[0] } ;
  assign MUX_obuffer2_2_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_2_portB_request_put_BITS_41_TO_40__q174[1] ||
	       obuf2_2_portB_request_put_BITS_41_TO_40__q174[0] } ;
  assign MUX_obuffer2_30_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_30_portA_request_put_BITS_41_TO_40__q175[1] ||
	       obuf2_30_portA_request_put_BITS_41_TO_40__q175[0] } ;
  assign MUX_obuffer2_30_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_30_portB_request_put_BITS_41_TO_40__q176[1] ||
	       obuf2_30_portB_request_put_BITS_41_TO_40__q176[0] } ;
  assign MUX_obuffer2_31_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_31_portA_request_put_BITS_41_TO_40__q177[1] ||
	       obuf2_31_portA_request_put_BITS_41_TO_40__q177[0] } ;
  assign MUX_obuffer2_31_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_31_portB_request_put_BITS_41_TO_40__q178[1] ||
	       obuf2_31_portB_request_put_BITS_41_TO_40__q178[0] } ;
  assign MUX_obuffer2_3_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_3_portA_request_put_BITS_41_TO_40__q179[1] ||
	       obuf2_3_portA_request_put_BITS_41_TO_40__q179[0] } ;
  assign MUX_obuffer2_3_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_3_portB_request_put_BITS_41_TO_40__q180[1] ||
	       obuf2_3_portB_request_put_BITS_41_TO_40__q180[0] } ;
  assign MUX_obuffer2_4_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_4_portA_request_put_BITS_41_TO_40__q181[1] ||
	       obuf2_4_portA_request_put_BITS_41_TO_40__q181[0] } ;
  assign MUX_obuffer2_4_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_4_portB_request_put_BITS_41_TO_40__q182[1] ||
	       obuf2_4_portB_request_put_BITS_41_TO_40__q182[0] } ;
  assign MUX_obuffer2_5_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_5_portA_request_put_BITS_41_TO_40__q183[1] ||
	       obuf2_5_portA_request_put_BITS_41_TO_40__q183[0] } ;
  assign MUX_obuffer2_5_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_5_portB_request_put_BITS_41_TO_40__q184[1] ||
	       obuf2_5_portB_request_put_BITS_41_TO_40__q184[0] } ;
  assign MUX_obuffer2_6_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_6_portA_request_put_BITS_41_TO_40__q185[1] ||
	       obuf2_6_portA_request_put_BITS_41_TO_40__q185[0] } ;
  assign MUX_obuffer2_6_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_6_portB_request_put_BITS_41_TO_40__q186[1] ||
	       obuf2_6_portB_request_put_BITS_41_TO_40__q186[0] } ;
  assign MUX_obuffer2_7_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_7_portA_request_put_BITS_41_TO_40__q187[1] ||
	       obuf2_7_portA_request_put_BITS_41_TO_40__q187[0] } ;
  assign MUX_obuffer2_7_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_7_portB_request_put_BITS_41_TO_40__q188[1] ||
	       obuf2_7_portB_request_put_BITS_41_TO_40__q188[0] } ;
  assign MUX_obuffer2_8_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_8_portA_request_put_BITS_41_TO_40__q189[1] ||
	       obuf2_8_portA_request_put_BITS_41_TO_40__q189[0] } ;
  assign MUX_obuffer2_8_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_8_portB_request_put_BITS_41_TO_40__q190[1] ||
	       obuf2_8_portB_request_put_BITS_41_TO_40__q190[0] } ;
  assign MUX_obuffer2_9_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_9_portA_request_put_BITS_41_TO_40__q191[1] ||
	       obuf2_9_portA_request_put_BITS_41_TO_40__q191[0] } ;
  assign MUX_obuffer2_9_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !obuf2_9_portB_request_put_BITS_41_TO_40__q192[1] ||
	       obuf2_9_portB_request_put_BITS_41_TO_40__q192[0] } ;
  assign MUX_wbuffer_0_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_0_portA_request_put_BITS_17_TO_16__q193[1] ||
	       wbuf_0_portA_request_put_BITS_17_TO_16__q193[0] } ;
  assign MUX_wbuffer_0_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_0_portB_request_put_BITS_17_TO_16__q194[1] ||
	       wbuf_0_portB_request_put_BITS_17_TO_16__q194[0] } ;
  assign MUX_wbuffer_10_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_10_portA_request_put_BITS_17_TO_16__q195[1] ||
	       wbuf_10_portA_request_put_BITS_17_TO_16__q195[0] } ;
  assign MUX_wbuffer_10_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_10_portB_request_put_BITS_17_TO_16__q196[1] ||
	       wbuf_10_portB_request_put_BITS_17_TO_16__q196[0] } ;
  assign MUX_wbuffer_11_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_11_portA_request_put_BITS_17_TO_16__q197[1] ||
	       wbuf_11_portA_request_put_BITS_17_TO_16__q197[0] } ;
  assign MUX_wbuffer_11_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_11_portB_request_put_BITS_17_TO_16__q198[1] ||
	       wbuf_11_portB_request_put_BITS_17_TO_16__q198[0] } ;
  assign MUX_wbuffer_12_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_12_portA_request_put_BITS_17_TO_16__q199[1] ||
	       wbuf_12_portA_request_put_BITS_17_TO_16__q199[0] } ;
  assign MUX_wbuffer_12_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_12_portB_request_put_BITS_17_TO_16__q200[1] ||
	       wbuf_12_portB_request_put_BITS_17_TO_16__q200[0] } ;
  assign MUX_wbuffer_13_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_13_portA_request_put_BITS_17_TO_16__q201[1] ||
	       wbuf_13_portA_request_put_BITS_17_TO_16__q201[0] } ;
  assign MUX_wbuffer_13_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_13_portB_request_put_BITS_17_TO_16__q202[1] ||
	       wbuf_13_portB_request_put_BITS_17_TO_16__q202[0] } ;
  assign MUX_wbuffer_14_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_14_portA_request_put_BITS_17_TO_16__q203[1] ||
	       wbuf_14_portA_request_put_BITS_17_TO_16__q203[0] } ;
  assign MUX_wbuffer_14_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_14_portB_request_put_BITS_17_TO_16__q204[1] ||
	       wbuf_14_portB_request_put_BITS_17_TO_16__q204[0] } ;
  assign MUX_wbuffer_15_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_15_portA_request_put_BITS_17_TO_16__q205[1] ||
	       wbuf_15_portA_request_put_BITS_17_TO_16__q205[0] } ;
  assign MUX_wbuffer_15_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_15_portB_request_put_BITS_17_TO_16__q206[1] ||
	       wbuf_15_portB_request_put_BITS_17_TO_16__q206[0] } ;
  assign MUX_wbuffer_16_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_16_portA_request_put_BITS_17_TO_16__q207[1] ||
	       wbuf_16_portA_request_put_BITS_17_TO_16__q207[0] } ;
  assign MUX_wbuffer_16_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_16_portB_request_put_BITS_17_TO_16__q208[1] ||
	       wbuf_16_portB_request_put_BITS_17_TO_16__q208[0] } ;
  assign MUX_wbuffer_17_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_17_portA_request_put_BITS_17_TO_16__q209[1] ||
	       wbuf_17_portA_request_put_BITS_17_TO_16__q209[0] } ;
  assign MUX_wbuffer_17_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_17_portB_request_put_BITS_17_TO_16__q210[1] ||
	       wbuf_17_portB_request_put_BITS_17_TO_16__q210[0] } ;
  assign MUX_wbuffer_18_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_18_portA_request_put_BITS_17_TO_16__q211[1] ||
	       wbuf_18_portA_request_put_BITS_17_TO_16__q211[0] } ;
  assign MUX_wbuffer_18_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_18_portB_request_put_BITS_17_TO_16__q212[1] ||
	       wbuf_18_portB_request_put_BITS_17_TO_16__q212[0] } ;
  assign MUX_wbuffer_19_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_19_portA_request_put_BITS_17_TO_16__q213[1] ||
	       wbuf_19_portA_request_put_BITS_17_TO_16__q213[0] } ;
  assign MUX_wbuffer_19_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_19_portB_request_put_BITS_17_TO_16__q214[1] ||
	       wbuf_19_portB_request_put_BITS_17_TO_16__q214[0] } ;
  assign MUX_wbuffer_1_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_1_portA_request_put_BITS_17_TO_16__q215[1] ||
	       wbuf_1_portA_request_put_BITS_17_TO_16__q215[0] } ;
  assign MUX_wbuffer_1_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_1_portB_request_put_BITS_17_TO_16__q216[1] ||
	       wbuf_1_portB_request_put_BITS_17_TO_16__q216[0] } ;
  assign MUX_wbuffer_20_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_20_portA_request_put_BITS_17_TO_16__q217[1] ||
	       wbuf_20_portA_request_put_BITS_17_TO_16__q217[0] } ;
  assign MUX_wbuffer_20_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_20_portB_request_put_BITS_17_TO_16__q218[1] ||
	       wbuf_20_portB_request_put_BITS_17_TO_16__q218[0] } ;
  assign MUX_wbuffer_21_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_21_portA_request_put_BITS_17_TO_16__q219[1] ||
	       wbuf_21_portA_request_put_BITS_17_TO_16__q219[0] } ;
  assign MUX_wbuffer_21_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_21_portB_request_put_BITS_17_TO_16__q220[1] ||
	       wbuf_21_portB_request_put_BITS_17_TO_16__q220[0] } ;
  assign MUX_wbuffer_22_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_22_portA_request_put_BITS_17_TO_16__q221[1] ||
	       wbuf_22_portA_request_put_BITS_17_TO_16__q221[0] } ;
  assign MUX_wbuffer_22_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_22_portB_request_put_BITS_17_TO_16__q222[1] ||
	       wbuf_22_portB_request_put_BITS_17_TO_16__q222[0] } ;
  assign MUX_wbuffer_23_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_23_portA_request_put_BITS_17_TO_16__q223[1] ||
	       wbuf_23_portA_request_put_BITS_17_TO_16__q223[0] } ;
  assign MUX_wbuffer_23_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_23_portB_request_put_BITS_17_TO_16__q224[1] ||
	       wbuf_23_portB_request_put_BITS_17_TO_16__q224[0] } ;
  assign MUX_wbuffer_24_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_24_portA_request_put_BITS_17_TO_16__q225[1] ||
	       wbuf_24_portA_request_put_BITS_17_TO_16__q225[0] } ;
  assign MUX_wbuffer_24_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_24_portB_request_put_BITS_17_TO_16__q226[1] ||
	       wbuf_24_portB_request_put_BITS_17_TO_16__q226[0] } ;
  assign MUX_wbuffer_25_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_25_portA_request_put_BITS_17_TO_16__q227[1] ||
	       wbuf_25_portA_request_put_BITS_17_TO_16__q227[0] } ;
  assign MUX_wbuffer_25_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_25_portB_request_put_BITS_17_TO_16__q228[1] ||
	       wbuf_25_portB_request_put_BITS_17_TO_16__q228[0] } ;
  assign MUX_wbuffer_26_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_26_portA_request_put_BITS_17_TO_16__q229[1] ||
	       wbuf_26_portA_request_put_BITS_17_TO_16__q229[0] } ;
  assign MUX_wbuffer_26_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_26_portB_request_put_BITS_17_TO_16__q230[1] ||
	       wbuf_26_portB_request_put_BITS_17_TO_16__q230[0] } ;
  assign MUX_wbuffer_27_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_27_portA_request_put_BITS_17_TO_16__q231[1] ||
	       wbuf_27_portA_request_put_BITS_17_TO_16__q231[0] } ;
  assign MUX_wbuffer_27_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_27_portB_request_put_BITS_17_TO_16__q232[1] ||
	       wbuf_27_portB_request_put_BITS_17_TO_16__q232[0] } ;
  assign MUX_wbuffer_28_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_28_portA_request_put_BITS_17_TO_16__q233[1] ||
	       wbuf_28_portA_request_put_BITS_17_TO_16__q233[0] } ;
  assign MUX_wbuffer_28_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_28_portB_request_put_BITS_17_TO_16__q234[1] ||
	       wbuf_28_portB_request_put_BITS_17_TO_16__q234[0] } ;
  assign MUX_wbuffer_29_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_29_portA_request_put_BITS_17_TO_16__q235[1] ||
	       wbuf_29_portA_request_put_BITS_17_TO_16__q235[0] } ;
  assign MUX_wbuffer_29_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_29_portB_request_put_BITS_17_TO_16__q236[1] ||
	       wbuf_29_portB_request_put_BITS_17_TO_16__q236[0] } ;
  assign MUX_wbuffer_2_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_2_portA_request_put_BITS_17_TO_16__q237[1] ||
	       wbuf_2_portA_request_put_BITS_17_TO_16__q237[0] } ;
  assign MUX_wbuffer_2_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_2_portB_request_put_BITS_17_TO_16__q238[1] ||
	       wbuf_2_portB_request_put_BITS_17_TO_16__q238[0] } ;
  assign MUX_wbuffer_30_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_30_portA_request_put_BITS_17_TO_16__q239[1] ||
	       wbuf_30_portA_request_put_BITS_17_TO_16__q239[0] } ;
  assign MUX_wbuffer_30_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_30_portB_request_put_BITS_17_TO_16__q240[1] ||
	       wbuf_30_portB_request_put_BITS_17_TO_16__q240[0] } ;
  assign MUX_wbuffer_31_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_31_portA_request_put_BITS_17_TO_16__q241[1] ||
	       wbuf_31_portA_request_put_BITS_17_TO_16__q241[0] } ;
  assign MUX_wbuffer_31_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_31_portB_request_put_BITS_17_TO_16__q242[1] ||
	       wbuf_31_portB_request_put_BITS_17_TO_16__q242[0] } ;
  assign MUX_wbuffer_3_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_3_portA_request_put_BITS_17_TO_16__q243[1] ||
	       wbuf_3_portA_request_put_BITS_17_TO_16__q243[0] } ;
  assign MUX_wbuffer_3_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_3_portB_request_put_BITS_17_TO_16__q244[1] ||
	       wbuf_3_portB_request_put_BITS_17_TO_16__q244[0] } ;
  assign MUX_wbuffer_4_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_4_portA_request_put_BITS_17_TO_16__q245[1] ||
	       wbuf_4_portA_request_put_BITS_17_TO_16__q245[0] } ;
  assign MUX_wbuffer_4_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_4_portB_request_put_BITS_17_TO_16__q246[1] ||
	       wbuf_4_portB_request_put_BITS_17_TO_16__q246[0] } ;
  assign MUX_wbuffer_5_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_5_portA_request_put_BITS_17_TO_16__q247[1] ||
	       wbuf_5_portA_request_put_BITS_17_TO_16__q247[0] } ;
  assign MUX_wbuffer_5_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_5_portB_request_put_BITS_17_TO_16__q248[1] ||
	       wbuf_5_portB_request_put_BITS_17_TO_16__q248[0] } ;
  assign MUX_wbuffer_6_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_6_portA_request_put_BITS_17_TO_16__q249[1] ||
	       wbuf_6_portA_request_put_BITS_17_TO_16__q249[0] } ;
  assign MUX_wbuffer_6_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_6_portB_request_put_BITS_17_TO_16__q250[1] ||
	       wbuf_6_portB_request_put_BITS_17_TO_16__q250[0] } ;
  assign MUX_wbuffer_7_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_7_portA_request_put_BITS_17_TO_16__q251[1] ||
	       wbuf_7_portA_request_put_BITS_17_TO_16__q251[0] } ;
  assign MUX_wbuffer_7_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_7_portB_request_put_BITS_17_TO_16__q252[1] ||
	       wbuf_7_portB_request_put_BITS_17_TO_16__q252[0] } ;
  assign MUX_wbuffer_8_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_8_portA_request_put_BITS_17_TO_16__q253[1] ||
	       wbuf_8_portA_request_put_BITS_17_TO_16__q253[0] } ;
  assign MUX_wbuffer_8_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_8_portB_request_put_BITS_17_TO_16__q254[1] ||
	       wbuf_8_portB_request_put_BITS_17_TO_16__q254[0] } ;
  assign MUX_wbuffer_9_serverAdapterA_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_9_portA_request_put_BITS_17_TO_16__q255[1] ||
	       wbuf_9_portA_request_put_BITS_17_TO_16__q255[0] } ;
  assign MUX_wbuffer_9_serverAdapterB_s1_1$wset_1__VAL_2 =
	     { 1'd1,
	       !wbuf_9_portB_request_put_BITS_17_TO_16__q256[1] ||
	       wbuf_9_portB_request_put_BITS_17_TO_16__q256[0] } ;

  // inlined wires
  assign ibuffer_0_serverAdapterA_outData_enqData$whas =
	     ibuffer_0_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_0_serverAdapterA_s1[1] &&
	     ibuffer_0_serverAdapterA_s1[0] ;
  assign ibuffer_0_serverAdapterA_outData_outData$whas =
	     ibuffer_0_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_0_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_0_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_0_serverAdapterA_cnt_1$whas =
	     EN_ibuf_0_portA_request_put &&
	     (!ibuf_0_portA_request_put_BITS_17_TO_16__q1[1] ||
	      ibuf_0_portA_request_put_BITS_17_TO_16__q1[0]) ;
  assign ibuffer_0_serverAdapterA_s1_1$wget =
	     EN_ibuf_0_portAClear ?
	       2'd0 :
	       MUX_ibuffer_0_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_0_serverAdapterA_s1_1$whas =
	     EN_ibuf_0_portAClear || EN_ibuf_0_portA_request_put ;
  assign ibuffer_0_serverAdapterB_outData_enqData$whas =
	     ibuffer_0_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_0_serverAdapterB_s1[1] &&
	     ibuffer_0_serverAdapterB_s1[0] ;
  assign ibuffer_0_serverAdapterB_outData_outData$whas =
	     ibuffer_0_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_0_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_0_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_0_serverAdapterB_cnt_1$whas =
	     EN_ibuf_0_portB_request_put &&
	     (!ibuf_0_portB_request_put_BITS_17_TO_16__q2[1] ||
	      ibuf_0_portB_request_put_BITS_17_TO_16__q2[0]) ;
  assign ibuffer_0_serverAdapterB_s1_1$wget =
	     EN_ibuf_0_portBClear ?
	       2'd0 :
	       MUX_ibuffer_0_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_0_serverAdapterB_s1_1$whas =
	     EN_ibuf_0_portBClear || EN_ibuf_0_portB_request_put ;
  assign ibuffer_1_serverAdapterA_outData_enqData$whas =
	     ibuffer_1_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_1_serverAdapterA_s1[1] &&
	     ibuffer_1_serverAdapterA_s1[0] ;
  assign ibuffer_1_serverAdapterA_outData_outData$whas =
	     ibuffer_1_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_1_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_1_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_1_serverAdapterA_cnt_1$whas =
	     EN_ibuf_1_portA_request_put &&
	     (!ibuf_1_portA_request_put_BITS_17_TO_16__q23[1] ||
	      ibuf_1_portA_request_put_BITS_17_TO_16__q23[0]) ;
  assign ibuffer_1_serverAdapterA_s1_1$wget =
	     EN_ibuf_1_portAClear ?
	       2'd0 :
	       MUX_ibuffer_1_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_1_serverAdapterA_s1_1$whas =
	     EN_ibuf_1_portAClear || EN_ibuf_1_portA_request_put ;
  assign ibuffer_1_serverAdapterB_outData_enqData$whas =
	     ibuffer_1_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_1_serverAdapterB_s1[1] &&
	     ibuffer_1_serverAdapterB_s1[0] ;
  assign ibuffer_1_serverAdapterB_outData_outData$whas =
	     ibuffer_1_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_1_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_1_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_1_serverAdapterB_cnt_1$whas =
	     EN_ibuf_1_portB_request_put &&
	     (!ibuf_1_portB_request_put_BITS_17_TO_16__q24[1] ||
	      ibuf_1_portB_request_put_BITS_17_TO_16__q24[0]) ;
  assign ibuffer_1_serverAdapterB_s1_1$wget =
	     EN_ibuf_1_portBClear ?
	       2'd0 :
	       MUX_ibuffer_1_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_1_serverAdapterB_s1_1$whas =
	     EN_ibuf_1_portBClear || EN_ibuf_1_portB_request_put ;
  assign ibuffer_2_serverAdapterA_outData_enqData$whas =
	     ibuffer_2_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_2_serverAdapterA_s1[1] &&
	     ibuffer_2_serverAdapterA_s1[0] ;
  assign ibuffer_2_serverAdapterA_outData_outData$whas =
	     ibuffer_2_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_2_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_2_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_2_serverAdapterA_cnt_1$whas =
	     EN_ibuf_2_portA_request_put &&
	     (!ibuf_2_portA_request_put_BITS_17_TO_16__q45[1] ||
	      ibuf_2_portA_request_put_BITS_17_TO_16__q45[0]) ;
  assign ibuffer_2_serverAdapterA_s1_1$wget =
	     EN_ibuf_2_portAClear ?
	       2'd0 :
	       MUX_ibuffer_2_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_2_serverAdapterA_s1_1$whas =
	     EN_ibuf_2_portAClear || EN_ibuf_2_portA_request_put ;
  assign ibuffer_2_serverAdapterB_outData_enqData$whas =
	     ibuffer_2_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_2_serverAdapterB_s1[1] &&
	     ibuffer_2_serverAdapterB_s1[0] ;
  assign ibuffer_2_serverAdapterB_outData_outData$whas =
	     ibuffer_2_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_2_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_2_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_2_serverAdapterB_cnt_1$whas =
	     EN_ibuf_2_portB_request_put &&
	     (!ibuf_2_portB_request_put_BITS_17_TO_16__q46[1] ||
	      ibuf_2_portB_request_put_BITS_17_TO_16__q46[0]) ;
  assign ibuffer_2_serverAdapterB_s1_1$wget =
	     EN_ibuf_2_portBClear ?
	       2'd0 :
	       MUX_ibuffer_2_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_2_serverAdapterB_s1_1$whas =
	     EN_ibuf_2_portBClear || EN_ibuf_2_portB_request_put ;
  assign ibuffer_3_serverAdapterA_outData_enqData$whas =
	     ibuffer_3_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_3_serverAdapterA_s1[1] &&
	     ibuffer_3_serverAdapterA_s1[0] ;
  assign ibuffer_3_serverAdapterA_outData_outData$whas =
	     ibuffer_3_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_3_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_3_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_3_serverAdapterA_cnt_1$whas =
	     EN_ibuf_3_portA_request_put &&
	     (!ibuf_3_portA_request_put_BITS_17_TO_16__q51[1] ||
	      ibuf_3_portA_request_put_BITS_17_TO_16__q51[0]) ;
  assign ibuffer_3_serverAdapterA_s1_1$wget =
	     EN_ibuf_3_portAClear ?
	       2'd0 :
	       MUX_ibuffer_3_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_3_serverAdapterA_s1_1$whas =
	     EN_ibuf_3_portAClear || EN_ibuf_3_portA_request_put ;
  assign ibuffer_3_serverAdapterB_outData_enqData$whas =
	     ibuffer_3_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_3_serverAdapterB_s1[1] &&
	     ibuffer_3_serverAdapterB_s1[0] ;
  assign ibuffer_3_serverAdapterB_outData_outData$whas =
	     ibuffer_3_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_3_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_3_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_3_serverAdapterB_cnt_1$whas =
	     EN_ibuf_3_portB_request_put &&
	     (!ibuf_3_portB_request_put_BITS_17_TO_16__q52[1] ||
	      ibuf_3_portB_request_put_BITS_17_TO_16__q52[0]) ;
  assign ibuffer_3_serverAdapterB_s1_1$wget =
	     EN_ibuf_3_portBClear ?
	       2'd0 :
	       MUX_ibuffer_3_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_3_serverAdapterB_s1_1$whas =
	     EN_ibuf_3_portBClear || EN_ibuf_3_portB_request_put ;
  assign ibuffer_4_serverAdapterA_outData_enqData$whas =
	     ibuffer_4_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_4_serverAdapterA_s1[1] &&
	     ibuffer_4_serverAdapterA_s1[0] ;
  assign ibuffer_4_serverAdapterA_outData_outData$whas =
	     ibuffer_4_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_4_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_4_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_4_serverAdapterA_cnt_1$whas =
	     EN_ibuf_4_portA_request_put &&
	     (!ibuf_4_portA_request_put_BITS_17_TO_16__q53[1] ||
	      ibuf_4_portA_request_put_BITS_17_TO_16__q53[0]) ;
  assign ibuffer_4_serverAdapterA_s1_1$wget =
	     EN_ibuf_4_portAClear ?
	       2'd0 :
	       MUX_ibuffer_4_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_4_serverAdapterA_s1_1$whas =
	     EN_ibuf_4_portAClear || EN_ibuf_4_portA_request_put ;
  assign ibuffer_4_serverAdapterB_outData_enqData$whas =
	     ibuffer_4_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_4_serverAdapterB_s1[1] &&
	     ibuffer_4_serverAdapterB_s1[0] ;
  assign ibuffer_4_serverAdapterB_outData_outData$whas =
	     ibuffer_4_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_4_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_4_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_4_serverAdapterB_cnt_1$whas =
	     EN_ibuf_4_portB_request_put &&
	     (!ibuf_4_portB_request_put_BITS_17_TO_16__q54[1] ||
	      ibuf_4_portB_request_put_BITS_17_TO_16__q54[0]) ;
  assign ibuffer_4_serverAdapterB_s1_1$wget =
	     EN_ibuf_4_portBClear ?
	       2'd0 :
	       MUX_ibuffer_4_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_4_serverAdapterB_s1_1$whas =
	     EN_ibuf_4_portBClear || EN_ibuf_4_portB_request_put ;
  assign ibuffer_5_serverAdapterA_outData_enqData$whas =
	     ibuffer_5_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_5_serverAdapterA_s1[1] &&
	     ibuffer_5_serverAdapterA_s1[0] ;
  assign ibuffer_5_serverAdapterA_outData_outData$whas =
	     ibuffer_5_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_5_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_5_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_5_serverAdapterA_cnt_1$whas =
	     EN_ibuf_5_portA_request_put &&
	     (!ibuf_5_portA_request_put_BITS_17_TO_16__q55[1] ||
	      ibuf_5_portA_request_put_BITS_17_TO_16__q55[0]) ;
  assign ibuffer_5_serverAdapterA_s1_1$wget =
	     EN_ibuf_5_portAClear ?
	       2'd0 :
	       MUX_ibuffer_5_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_5_serverAdapterA_s1_1$whas =
	     EN_ibuf_5_portAClear || EN_ibuf_5_portA_request_put ;
  assign ibuffer_5_serverAdapterB_outData_enqData$whas =
	     ibuffer_5_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_5_serverAdapterB_s1[1] &&
	     ibuffer_5_serverAdapterB_s1[0] ;
  assign ibuffer_5_serverAdapterB_outData_outData$whas =
	     ibuffer_5_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_5_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_5_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_5_serverAdapterB_cnt_1$whas =
	     EN_ibuf_5_portB_request_put &&
	     (!ibuf_5_portB_request_put_BITS_17_TO_16__q56[1] ||
	      ibuf_5_portB_request_put_BITS_17_TO_16__q56[0]) ;
  assign ibuffer_5_serverAdapterB_s1_1$wget =
	     EN_ibuf_5_portBClear ?
	       2'd0 :
	       MUX_ibuffer_5_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_5_serverAdapterB_s1_1$whas =
	     EN_ibuf_5_portBClear || EN_ibuf_5_portB_request_put ;
  assign ibuffer_6_serverAdapterA_outData_enqData$whas =
	     ibuffer_6_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_6_serverAdapterA_s1[1] &&
	     ibuffer_6_serverAdapterA_s1[0] ;
  assign ibuffer_6_serverAdapterA_outData_outData$whas =
	     ibuffer_6_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_6_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_6_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_6_serverAdapterA_cnt_1$whas =
	     EN_ibuf_6_portA_request_put &&
	     (!ibuf_6_portA_request_put_BITS_17_TO_16__q57[1] ||
	      ibuf_6_portA_request_put_BITS_17_TO_16__q57[0]) ;
  assign ibuffer_6_serverAdapterA_s1_1$wget =
	     EN_ibuf_6_portAClear ?
	       2'd0 :
	       MUX_ibuffer_6_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_6_serverAdapterA_s1_1$whas =
	     EN_ibuf_6_portAClear || EN_ibuf_6_portA_request_put ;
  assign ibuffer_6_serverAdapterB_outData_enqData$whas =
	     ibuffer_6_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_6_serverAdapterB_s1[1] &&
	     ibuffer_6_serverAdapterB_s1[0] ;
  assign ibuffer_6_serverAdapterB_outData_outData$whas =
	     ibuffer_6_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_6_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_6_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_6_serverAdapterB_cnt_1$whas =
	     EN_ibuf_6_portB_request_put &&
	     (!ibuf_6_portB_request_put_BITS_17_TO_16__q58[1] ||
	      ibuf_6_portB_request_put_BITS_17_TO_16__q58[0]) ;
  assign ibuffer_6_serverAdapterB_s1_1$wget =
	     EN_ibuf_6_portBClear ?
	       2'd0 :
	       MUX_ibuffer_6_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_6_serverAdapterB_s1_1$whas =
	     EN_ibuf_6_portBClear || EN_ibuf_6_portB_request_put ;
  assign ibuffer_7_serverAdapterA_outData_enqData$whas =
	     ibuffer_7_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_7_serverAdapterA_s1[1] &&
	     ibuffer_7_serverAdapterA_s1[0] ;
  assign ibuffer_7_serverAdapterA_outData_outData$whas =
	     ibuffer_7_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_7_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_7_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_7_serverAdapterA_cnt_1$whas =
	     EN_ibuf_7_portA_request_put &&
	     (!ibuf_7_portA_request_put_BITS_17_TO_16__q59[1] ||
	      ibuf_7_portA_request_put_BITS_17_TO_16__q59[0]) ;
  assign ibuffer_7_serverAdapterA_s1_1$wget =
	     EN_ibuf_7_portAClear ?
	       2'd0 :
	       MUX_ibuffer_7_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_7_serverAdapterA_s1_1$whas =
	     EN_ibuf_7_portAClear || EN_ibuf_7_portA_request_put ;
  assign ibuffer_7_serverAdapterB_outData_enqData$whas =
	     ibuffer_7_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_7_serverAdapterB_s1[1] &&
	     ibuffer_7_serverAdapterB_s1[0] ;
  assign ibuffer_7_serverAdapterB_outData_outData$whas =
	     ibuffer_7_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_7_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_7_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_7_serverAdapterB_cnt_1$whas =
	     EN_ibuf_7_portB_request_put &&
	     (!ibuf_7_portB_request_put_BITS_17_TO_16__q60[1] ||
	      ibuf_7_portB_request_put_BITS_17_TO_16__q60[0]) ;
  assign ibuffer_7_serverAdapterB_s1_1$wget =
	     EN_ibuf_7_portBClear ?
	       2'd0 :
	       MUX_ibuffer_7_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_7_serverAdapterB_s1_1$whas =
	     EN_ibuf_7_portBClear || EN_ibuf_7_portB_request_put ;
  assign ibuffer_8_serverAdapterA_outData_enqData$whas =
	     ibuffer_8_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_8_serverAdapterA_s1[1] &&
	     ibuffer_8_serverAdapterA_s1[0] ;
  assign ibuffer_8_serverAdapterA_outData_outData$whas =
	     ibuffer_8_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_8_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_8_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_8_serverAdapterA_cnt_1$whas =
	     EN_ibuf_8_portA_request_put &&
	     (!ibuf_8_portA_request_put_BITS_17_TO_16__q61[1] ||
	      ibuf_8_portA_request_put_BITS_17_TO_16__q61[0]) ;
  assign ibuffer_8_serverAdapterA_s1_1$wget =
	     EN_ibuf_8_portAClear ?
	       2'd0 :
	       MUX_ibuffer_8_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_8_serverAdapterA_s1_1$whas =
	     EN_ibuf_8_portAClear || EN_ibuf_8_portA_request_put ;
  assign ibuffer_8_serverAdapterB_outData_enqData$whas =
	     ibuffer_8_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_8_serverAdapterB_s1[1] &&
	     ibuffer_8_serverAdapterB_s1[0] ;
  assign ibuffer_8_serverAdapterB_outData_outData$whas =
	     ibuffer_8_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_8_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_8_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_8_serverAdapterB_cnt_1$whas =
	     EN_ibuf_8_portB_request_put &&
	     (!ibuf_8_portB_request_put_BITS_17_TO_16__q62[1] ||
	      ibuf_8_portB_request_put_BITS_17_TO_16__q62[0]) ;
  assign ibuffer_8_serverAdapterB_s1_1$wget =
	     EN_ibuf_8_portBClear ?
	       2'd0 :
	       MUX_ibuffer_8_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_8_serverAdapterB_s1_1$whas =
	     EN_ibuf_8_portBClear || EN_ibuf_8_portB_request_put ;
  assign ibuffer_9_serverAdapterA_outData_enqData$whas =
	     ibuffer_9_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_9_serverAdapterA_s1[1] &&
	     ibuffer_9_serverAdapterA_s1[0] ;
  assign ibuffer_9_serverAdapterA_outData_outData$whas =
	     ibuffer_9_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_9_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_9_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_9_serverAdapterA_cnt_1$whas =
	     EN_ibuf_9_portA_request_put &&
	     (!ibuf_9_portA_request_put_BITS_17_TO_16__q63[1] ||
	      ibuf_9_portA_request_put_BITS_17_TO_16__q63[0]) ;
  assign ibuffer_9_serverAdapterA_s1_1$wget =
	     EN_ibuf_9_portAClear ?
	       2'd0 :
	       MUX_ibuffer_9_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_9_serverAdapterA_s1_1$whas =
	     EN_ibuf_9_portAClear || EN_ibuf_9_portA_request_put ;
  assign ibuffer_9_serverAdapterB_outData_enqData$whas =
	     ibuffer_9_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_9_serverAdapterB_s1[1] &&
	     ibuffer_9_serverAdapterB_s1[0] ;
  assign ibuffer_9_serverAdapterB_outData_outData$whas =
	     ibuffer_9_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_9_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_9_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_9_serverAdapterB_cnt_1$whas =
	     EN_ibuf_9_portB_request_put &&
	     (!ibuf_9_portB_request_put_BITS_17_TO_16__q64[1] ||
	      ibuf_9_portB_request_put_BITS_17_TO_16__q64[0]) ;
  assign ibuffer_9_serverAdapterB_s1_1$wget =
	     EN_ibuf_9_portBClear ?
	       2'd0 :
	       MUX_ibuffer_9_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_9_serverAdapterB_s1_1$whas =
	     EN_ibuf_9_portBClear || EN_ibuf_9_portB_request_put ;
  assign ibuffer_10_serverAdapterA_outData_enqData$whas =
	     ibuffer_10_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_10_serverAdapterA_s1[1] &&
	     ibuffer_10_serverAdapterA_s1[0] ;
  assign ibuffer_10_serverAdapterA_outData_outData$whas =
	     ibuffer_10_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_10_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_10_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_10_serverAdapterA_cnt_1$whas =
	     EN_ibuf_10_portA_request_put &&
	     (!ibuf_10_portA_request_put_BITS_17_TO_16__q3[1] ||
	      ibuf_10_portA_request_put_BITS_17_TO_16__q3[0]) ;
  assign ibuffer_10_serverAdapterA_s1_1$wget =
	     EN_ibuf_10_portAClear ?
	       2'd0 :
	       MUX_ibuffer_10_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_10_serverAdapterA_s1_1$whas =
	     EN_ibuf_10_portAClear || EN_ibuf_10_portA_request_put ;
  assign ibuffer_10_serverAdapterB_outData_enqData$whas =
	     ibuffer_10_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_10_serverAdapterB_s1[1] &&
	     ibuffer_10_serverAdapterB_s1[0] ;
  assign ibuffer_10_serverAdapterB_outData_outData$whas =
	     ibuffer_10_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_10_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_10_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_10_serverAdapterB_cnt_1$whas =
	     EN_ibuf_10_portB_request_put &&
	     (!ibuf_10_portB_request_put_BITS_17_TO_16__q4[1] ||
	      ibuf_10_portB_request_put_BITS_17_TO_16__q4[0]) ;
  assign ibuffer_10_serverAdapterB_s1_1$wget =
	     EN_ibuf_10_portBClear ?
	       2'd0 :
	       MUX_ibuffer_10_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_10_serverAdapterB_s1_1$whas =
	     EN_ibuf_10_portBClear || EN_ibuf_10_portB_request_put ;
  assign ibuffer_11_serverAdapterA_outData_enqData$whas =
	     ibuffer_11_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_11_serverAdapterA_s1[1] &&
	     ibuffer_11_serverAdapterA_s1[0] ;
  assign ibuffer_11_serverAdapterA_outData_outData$whas =
	     ibuffer_11_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_11_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_11_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_11_serverAdapterA_cnt_1$whas =
	     EN_ibuf_11_portA_request_put &&
	     (!ibuf_11_portA_request_put_BITS_17_TO_16__q5[1] ||
	      ibuf_11_portA_request_put_BITS_17_TO_16__q5[0]) ;
  assign ibuffer_11_serverAdapterA_s1_1$wget =
	     EN_ibuf_11_portAClear ?
	       2'd0 :
	       MUX_ibuffer_11_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_11_serverAdapterA_s1_1$whas =
	     EN_ibuf_11_portAClear || EN_ibuf_11_portA_request_put ;
  assign ibuffer_11_serverAdapterB_outData_enqData$whas =
	     ibuffer_11_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_11_serverAdapterB_s1[1] &&
	     ibuffer_11_serverAdapterB_s1[0] ;
  assign ibuffer_11_serverAdapterB_outData_outData$whas =
	     ibuffer_11_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_11_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_11_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_11_serverAdapterB_cnt_1$whas =
	     EN_ibuf_11_portB_request_put &&
	     (!ibuf_11_portB_request_put_BITS_17_TO_16__q6[1] ||
	      ibuf_11_portB_request_put_BITS_17_TO_16__q6[0]) ;
  assign ibuffer_11_serverAdapterB_s1_1$wget =
	     EN_ibuf_11_portBClear ?
	       2'd0 :
	       MUX_ibuffer_11_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_11_serverAdapterB_s1_1$whas =
	     EN_ibuf_11_portBClear || EN_ibuf_11_portB_request_put ;
  assign ibuffer_12_serverAdapterA_outData_enqData$whas =
	     ibuffer_12_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_12_serverAdapterA_s1[1] &&
	     ibuffer_12_serverAdapterA_s1[0] ;
  assign ibuffer_12_serverAdapterA_outData_outData$whas =
	     ibuffer_12_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_12_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_12_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_12_serverAdapterA_cnt_1$whas =
	     EN_ibuf_12_portA_request_put &&
	     (!ibuf_12_portA_request_put_BITS_17_TO_16__q7[1] ||
	      ibuf_12_portA_request_put_BITS_17_TO_16__q7[0]) ;
  assign ibuffer_12_serverAdapterA_s1_1$wget =
	     EN_ibuf_12_portAClear ?
	       2'd0 :
	       MUX_ibuffer_12_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_12_serverAdapterA_s1_1$whas =
	     EN_ibuf_12_portAClear || EN_ibuf_12_portA_request_put ;
  assign ibuffer_12_serverAdapterB_outData_enqData$whas =
	     ibuffer_12_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_12_serverAdapterB_s1[1] &&
	     ibuffer_12_serverAdapterB_s1[0] ;
  assign ibuffer_12_serverAdapterB_outData_outData$whas =
	     ibuffer_12_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_12_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_12_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_12_serverAdapterB_cnt_1$whas =
	     EN_ibuf_12_portB_request_put &&
	     (!ibuf_12_portB_request_put_BITS_17_TO_16__q8[1] ||
	      ibuf_12_portB_request_put_BITS_17_TO_16__q8[0]) ;
  assign ibuffer_12_serverAdapterB_s1_1$wget =
	     EN_ibuf_12_portBClear ?
	       2'd0 :
	       MUX_ibuffer_12_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_12_serverAdapterB_s1_1$whas =
	     EN_ibuf_12_portBClear || EN_ibuf_12_portB_request_put ;
  assign ibuffer_13_serverAdapterA_outData_enqData$whas =
	     ibuffer_13_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_13_serverAdapterA_s1[1] &&
	     ibuffer_13_serverAdapterA_s1[0] ;
  assign ibuffer_13_serverAdapterA_outData_outData$whas =
	     ibuffer_13_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_13_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_13_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_13_serverAdapterA_cnt_1$whas =
	     EN_ibuf_13_portA_request_put &&
	     (!ibuf_13_portA_request_put_BITS_17_TO_16__q9[1] ||
	      ibuf_13_portA_request_put_BITS_17_TO_16__q9[0]) ;
  assign ibuffer_13_serverAdapterA_s1_1$wget =
	     EN_ibuf_13_portAClear ?
	       2'd0 :
	       MUX_ibuffer_13_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_13_serverAdapterA_s1_1$whas =
	     EN_ibuf_13_portAClear || EN_ibuf_13_portA_request_put ;
  assign ibuffer_13_serverAdapterB_outData_enqData$whas =
	     ibuffer_13_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_13_serverAdapterB_s1[1] &&
	     ibuffer_13_serverAdapterB_s1[0] ;
  assign ibuffer_13_serverAdapterB_outData_outData$whas =
	     ibuffer_13_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_13_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_13_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_13_serverAdapterB_cnt_1$whas =
	     EN_ibuf_13_portB_request_put &&
	     (!ibuf_13_portB_request_put_BITS_17_TO_16__q10[1] ||
	      ibuf_13_portB_request_put_BITS_17_TO_16__q10[0]) ;
  assign ibuffer_13_serverAdapterB_s1_1$wget =
	     EN_ibuf_13_portBClear ?
	       2'd0 :
	       MUX_ibuffer_13_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_13_serverAdapterB_s1_1$whas =
	     EN_ibuf_13_portBClear || EN_ibuf_13_portB_request_put ;
  assign ibuffer_14_serverAdapterA_outData_enqData$whas =
	     ibuffer_14_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_14_serverAdapterA_s1[1] &&
	     ibuffer_14_serverAdapterA_s1[0] ;
  assign ibuffer_14_serverAdapterA_outData_outData$whas =
	     ibuffer_14_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_14_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_14_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_14_serverAdapterA_cnt_1$whas =
	     EN_ibuf_14_portA_request_put &&
	     (!ibuf_14_portA_request_put_BITS_17_TO_16__q11[1] ||
	      ibuf_14_portA_request_put_BITS_17_TO_16__q11[0]) ;
  assign ibuffer_14_serverAdapterA_s1_1$wget =
	     EN_ibuf_14_portAClear ?
	       2'd0 :
	       MUX_ibuffer_14_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_14_serverAdapterA_s1_1$whas =
	     EN_ibuf_14_portAClear || EN_ibuf_14_portA_request_put ;
  assign ibuffer_14_serverAdapterB_outData_enqData$whas =
	     ibuffer_14_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_14_serverAdapterB_s1[1] &&
	     ibuffer_14_serverAdapterB_s1[0] ;
  assign ibuffer_14_serverAdapterB_outData_outData$whas =
	     ibuffer_14_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_14_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_14_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_14_serverAdapterB_cnt_1$whas =
	     EN_ibuf_14_portB_request_put &&
	     (!ibuf_14_portB_request_put_BITS_17_TO_16__q12[1] ||
	      ibuf_14_portB_request_put_BITS_17_TO_16__q12[0]) ;
  assign ibuffer_14_serverAdapterB_s1_1$wget =
	     EN_ibuf_14_portBClear ?
	       2'd0 :
	       MUX_ibuffer_14_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_14_serverAdapterB_s1_1$whas =
	     EN_ibuf_14_portBClear || EN_ibuf_14_portB_request_put ;
  assign ibuffer_15_serverAdapterA_outData_enqData$whas =
	     ibuffer_15_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_15_serverAdapterA_s1[1] &&
	     ibuffer_15_serverAdapterA_s1[0] ;
  assign ibuffer_15_serverAdapterA_outData_outData$whas =
	     ibuffer_15_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_15_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_15_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_15_serverAdapterA_cnt_1$whas =
	     EN_ibuf_15_portA_request_put &&
	     (!ibuf_15_portA_request_put_BITS_17_TO_16__q13[1] ||
	      ibuf_15_portA_request_put_BITS_17_TO_16__q13[0]) ;
  assign ibuffer_15_serverAdapterA_s1_1$wget =
	     EN_ibuf_15_portAClear ?
	       2'd0 :
	       MUX_ibuffer_15_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_15_serverAdapterA_s1_1$whas =
	     EN_ibuf_15_portAClear || EN_ibuf_15_portA_request_put ;
  assign ibuffer_15_serverAdapterB_outData_enqData$whas =
	     ibuffer_15_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_15_serverAdapterB_s1[1] &&
	     ibuffer_15_serverAdapterB_s1[0] ;
  assign ibuffer_15_serverAdapterB_outData_outData$whas =
	     ibuffer_15_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_15_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_15_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_15_serverAdapterB_cnt_1$whas =
	     EN_ibuf_15_portB_request_put &&
	     (!ibuf_15_portB_request_put_BITS_17_TO_16__q14[1] ||
	      ibuf_15_portB_request_put_BITS_17_TO_16__q14[0]) ;
  assign ibuffer_15_serverAdapterB_s1_1$wget =
	     EN_ibuf_15_portBClear ?
	       2'd0 :
	       MUX_ibuffer_15_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_15_serverAdapterB_s1_1$whas =
	     EN_ibuf_15_portBClear || EN_ibuf_15_portB_request_put ;
  assign ibuffer_16_serverAdapterA_outData_enqData$whas =
	     ibuffer_16_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_16_serverAdapterA_s1[1] &&
	     ibuffer_16_serverAdapterA_s1[0] ;
  assign ibuffer_16_serverAdapterA_outData_outData$whas =
	     ibuffer_16_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_16_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_16_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_16_serverAdapterA_cnt_1$whas =
	     EN_ibuf_16_portA_request_put &&
	     (!ibuf_16_portA_request_put_BITS_17_TO_16__q15[1] ||
	      ibuf_16_portA_request_put_BITS_17_TO_16__q15[0]) ;
  assign ibuffer_16_serverAdapterA_s1_1$wget =
	     EN_ibuf_16_portAClear ?
	       2'd0 :
	       MUX_ibuffer_16_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_16_serverAdapterA_s1_1$whas =
	     EN_ibuf_16_portAClear || EN_ibuf_16_portA_request_put ;
  assign ibuffer_16_serverAdapterB_outData_enqData$whas =
	     ibuffer_16_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_16_serverAdapterB_s1[1] &&
	     ibuffer_16_serverAdapterB_s1[0] ;
  assign ibuffer_16_serverAdapterB_outData_outData$whas =
	     ibuffer_16_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_16_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_16_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_16_serverAdapterB_cnt_1$whas =
	     EN_ibuf_16_portB_request_put &&
	     (!ibuf_16_portB_request_put_BITS_17_TO_16__q16[1] ||
	      ibuf_16_portB_request_put_BITS_17_TO_16__q16[0]) ;
  assign ibuffer_16_serverAdapterB_s1_1$wget =
	     EN_ibuf_16_portBClear ?
	       2'd0 :
	       MUX_ibuffer_16_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_16_serverAdapterB_s1_1$whas =
	     EN_ibuf_16_portBClear || EN_ibuf_16_portB_request_put ;
  assign ibuffer_17_serverAdapterA_outData_enqData$whas =
	     ibuffer_17_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_17_serverAdapterA_s1[1] &&
	     ibuffer_17_serverAdapterA_s1[0] ;
  assign ibuffer_17_serverAdapterA_outData_outData$whas =
	     ibuffer_17_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_17_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_17_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_17_serverAdapterA_cnt_1$whas =
	     EN_ibuf_17_portA_request_put &&
	     (!ibuf_17_portA_request_put_BITS_17_TO_16__q17[1] ||
	      ibuf_17_portA_request_put_BITS_17_TO_16__q17[0]) ;
  assign ibuffer_17_serverAdapterA_s1_1$wget =
	     EN_ibuf_17_portAClear ?
	       2'd0 :
	       MUX_ibuffer_17_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_17_serverAdapterA_s1_1$whas =
	     EN_ibuf_17_portAClear || EN_ibuf_17_portA_request_put ;
  assign ibuffer_17_serverAdapterB_outData_enqData$whas =
	     ibuffer_17_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_17_serverAdapterB_s1[1] &&
	     ibuffer_17_serverAdapterB_s1[0] ;
  assign ibuffer_17_serverAdapterB_outData_outData$whas =
	     ibuffer_17_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_17_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_17_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_17_serverAdapterB_cnt_1$whas =
	     EN_ibuf_17_portB_request_put &&
	     (!ibuf_17_portB_request_put_BITS_17_TO_16__q18[1] ||
	      ibuf_17_portB_request_put_BITS_17_TO_16__q18[0]) ;
  assign ibuffer_17_serverAdapterB_s1_1$wget =
	     EN_ibuf_17_portBClear ?
	       2'd0 :
	       MUX_ibuffer_17_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_17_serverAdapterB_s1_1$whas =
	     EN_ibuf_17_portBClear || EN_ibuf_17_portB_request_put ;
  assign ibuffer_18_serverAdapterA_outData_enqData$whas =
	     ibuffer_18_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_18_serverAdapterA_s1[1] &&
	     ibuffer_18_serverAdapterA_s1[0] ;
  assign ibuffer_18_serverAdapterA_outData_outData$whas =
	     ibuffer_18_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_18_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_18_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_18_serverAdapterA_cnt_1$whas =
	     EN_ibuf_18_portA_request_put &&
	     (!ibuf_18_portA_request_put_BITS_17_TO_16__q19[1] ||
	      ibuf_18_portA_request_put_BITS_17_TO_16__q19[0]) ;
  assign ibuffer_18_serverAdapterA_s1_1$wget =
	     EN_ibuf_18_portAClear ?
	       2'd0 :
	       MUX_ibuffer_18_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_18_serverAdapterA_s1_1$whas =
	     EN_ibuf_18_portAClear || EN_ibuf_18_portA_request_put ;
  assign ibuffer_18_serverAdapterB_outData_enqData$whas =
	     ibuffer_18_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_18_serverAdapterB_s1[1] &&
	     ibuffer_18_serverAdapterB_s1[0] ;
  assign ibuffer_18_serverAdapterB_outData_outData$whas =
	     ibuffer_18_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_18_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_18_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_18_serverAdapterB_cnt_1$whas =
	     EN_ibuf_18_portB_request_put &&
	     (!ibuf_18_portB_request_put_BITS_17_TO_16__q20[1] ||
	      ibuf_18_portB_request_put_BITS_17_TO_16__q20[0]) ;
  assign ibuffer_18_serverAdapterB_s1_1$wget =
	     EN_ibuf_18_portBClear ?
	       2'd0 :
	       MUX_ibuffer_18_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_18_serverAdapterB_s1_1$whas =
	     EN_ibuf_18_portBClear || EN_ibuf_18_portB_request_put ;
  assign ibuffer_19_serverAdapterA_outData_enqData$whas =
	     ibuffer_19_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_19_serverAdapterA_s1[1] &&
	     ibuffer_19_serverAdapterA_s1[0] ;
  assign ibuffer_19_serverAdapterA_outData_outData$whas =
	     ibuffer_19_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_19_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_19_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_19_serverAdapterA_cnt_1$whas =
	     EN_ibuf_19_portA_request_put &&
	     (!ibuf_19_portA_request_put_BITS_17_TO_16__q21[1] ||
	      ibuf_19_portA_request_put_BITS_17_TO_16__q21[0]) ;
  assign ibuffer_19_serverAdapterA_s1_1$wget =
	     EN_ibuf_19_portAClear ?
	       2'd0 :
	       MUX_ibuffer_19_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_19_serverAdapterA_s1_1$whas =
	     EN_ibuf_19_portAClear || EN_ibuf_19_portA_request_put ;
  assign ibuffer_19_serverAdapterB_outData_enqData$whas =
	     ibuffer_19_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_19_serverAdapterB_s1[1] &&
	     ibuffer_19_serverAdapterB_s1[0] ;
  assign ibuffer_19_serverAdapterB_outData_outData$whas =
	     ibuffer_19_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_19_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_19_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_19_serverAdapterB_cnt_1$whas =
	     EN_ibuf_19_portB_request_put &&
	     (!ibuf_19_portB_request_put_BITS_17_TO_16__q22[1] ||
	      ibuf_19_portB_request_put_BITS_17_TO_16__q22[0]) ;
  assign ibuffer_19_serverAdapterB_s1_1$wget =
	     EN_ibuf_19_portBClear ?
	       2'd0 :
	       MUX_ibuffer_19_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_19_serverAdapterB_s1_1$whas =
	     EN_ibuf_19_portBClear || EN_ibuf_19_portB_request_put ;
  assign ibuffer_20_serverAdapterA_outData_enqData$whas =
	     ibuffer_20_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_20_serverAdapterA_s1[1] &&
	     ibuffer_20_serverAdapterA_s1[0] ;
  assign ibuffer_20_serverAdapterA_outData_outData$whas =
	     ibuffer_20_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_20_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_20_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_20_serverAdapterA_cnt_1$whas =
	     EN_ibuf_20_portA_request_put &&
	     (!ibuf_20_portA_request_put_BITS_17_TO_16__q25[1] ||
	      ibuf_20_portA_request_put_BITS_17_TO_16__q25[0]) ;
  assign ibuffer_20_serverAdapterA_s1_1$wget =
	     EN_ibuf_20_portAClear ?
	       2'd0 :
	       MUX_ibuffer_20_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_20_serverAdapterA_s1_1$whas =
	     EN_ibuf_20_portAClear || EN_ibuf_20_portA_request_put ;
  assign ibuffer_20_serverAdapterB_outData_enqData$whas =
	     ibuffer_20_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_20_serverAdapterB_s1[1] &&
	     ibuffer_20_serverAdapterB_s1[0] ;
  assign ibuffer_20_serverAdapterB_outData_outData$whas =
	     ibuffer_20_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_20_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_20_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_20_serverAdapterB_cnt_1$whas =
	     EN_ibuf_20_portB_request_put &&
	     (!ibuf_20_portB_request_put_BITS_17_TO_16__q26[1] ||
	      ibuf_20_portB_request_put_BITS_17_TO_16__q26[0]) ;
  assign ibuffer_20_serverAdapterB_s1_1$wget =
	     EN_ibuf_20_portBClear ?
	       2'd0 :
	       MUX_ibuffer_20_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_20_serverAdapterB_s1_1$whas =
	     EN_ibuf_20_portBClear || EN_ibuf_20_portB_request_put ;
  assign ibuffer_21_serverAdapterA_outData_enqData$whas =
	     ibuffer_21_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_21_serverAdapterA_s1[1] &&
	     ibuffer_21_serverAdapterA_s1[0] ;
  assign ibuffer_21_serverAdapterA_outData_outData$whas =
	     ibuffer_21_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_21_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_21_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_21_serverAdapterA_cnt_1$whas =
	     EN_ibuf_21_portA_request_put &&
	     (!ibuf_21_portA_request_put_BITS_17_TO_16__q27[1] ||
	      ibuf_21_portA_request_put_BITS_17_TO_16__q27[0]) ;
  assign ibuffer_21_serverAdapterA_s1_1$wget =
	     EN_ibuf_21_portAClear ?
	       2'd0 :
	       MUX_ibuffer_21_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_21_serverAdapterA_s1_1$whas =
	     EN_ibuf_21_portAClear || EN_ibuf_21_portA_request_put ;
  assign ibuffer_21_serverAdapterB_outData_enqData$whas =
	     ibuffer_21_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_21_serverAdapterB_s1[1] &&
	     ibuffer_21_serverAdapterB_s1[0] ;
  assign ibuffer_21_serverAdapterB_outData_outData$whas =
	     ibuffer_21_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_21_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_21_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_21_serverAdapterB_cnt_1$whas =
	     EN_ibuf_21_portB_request_put &&
	     (!ibuf_21_portB_request_put_BITS_17_TO_16__q28[1] ||
	      ibuf_21_portB_request_put_BITS_17_TO_16__q28[0]) ;
  assign ibuffer_21_serverAdapterB_s1_1$wget =
	     EN_ibuf_21_portBClear ?
	       2'd0 :
	       MUX_ibuffer_21_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_21_serverAdapterB_s1_1$whas =
	     EN_ibuf_21_portBClear || EN_ibuf_21_portB_request_put ;
  assign ibuffer_22_serverAdapterA_outData_enqData$whas =
	     ibuffer_22_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_22_serverAdapterA_s1[1] &&
	     ibuffer_22_serverAdapterA_s1[0] ;
  assign ibuffer_22_serverAdapterA_outData_outData$whas =
	     ibuffer_22_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_22_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_22_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_22_serverAdapterA_cnt_1$whas =
	     EN_ibuf_22_portA_request_put &&
	     (!ibuf_22_portA_request_put_BITS_17_TO_16__q29[1] ||
	      ibuf_22_portA_request_put_BITS_17_TO_16__q29[0]) ;
  assign ibuffer_22_serverAdapterA_s1_1$wget =
	     EN_ibuf_22_portAClear ?
	       2'd0 :
	       MUX_ibuffer_22_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_22_serverAdapterA_s1_1$whas =
	     EN_ibuf_22_portAClear || EN_ibuf_22_portA_request_put ;
  assign ibuffer_22_serverAdapterB_outData_enqData$whas =
	     ibuffer_22_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_22_serverAdapterB_s1[1] &&
	     ibuffer_22_serverAdapterB_s1[0] ;
  assign ibuffer_22_serverAdapterB_outData_outData$whas =
	     ibuffer_22_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_22_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_22_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_22_serverAdapterB_cnt_1$whas =
	     EN_ibuf_22_portB_request_put &&
	     (!ibuf_22_portB_request_put_BITS_17_TO_16__q30[1] ||
	      ibuf_22_portB_request_put_BITS_17_TO_16__q30[0]) ;
  assign ibuffer_22_serverAdapterB_s1_1$wget =
	     EN_ibuf_22_portBClear ?
	       2'd0 :
	       MUX_ibuffer_22_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_22_serverAdapterB_s1_1$whas =
	     EN_ibuf_22_portBClear || EN_ibuf_22_portB_request_put ;
  assign ibuffer_23_serverAdapterA_outData_enqData$whas =
	     ibuffer_23_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_23_serverAdapterA_s1[1] &&
	     ibuffer_23_serverAdapterA_s1[0] ;
  assign ibuffer_23_serverAdapterA_outData_outData$whas =
	     ibuffer_23_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_23_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_23_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_23_serverAdapterA_cnt_1$whas =
	     EN_ibuf_23_portA_request_put &&
	     (!ibuf_23_portA_request_put_BITS_17_TO_16__q31[1] ||
	      ibuf_23_portA_request_put_BITS_17_TO_16__q31[0]) ;
  assign ibuffer_23_serverAdapterA_s1_1$wget =
	     EN_ibuf_23_portAClear ?
	       2'd0 :
	       MUX_ibuffer_23_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_23_serverAdapterA_s1_1$whas =
	     EN_ibuf_23_portAClear || EN_ibuf_23_portA_request_put ;
  assign ibuffer_23_serverAdapterB_outData_enqData$whas =
	     ibuffer_23_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_23_serverAdapterB_s1[1] &&
	     ibuffer_23_serverAdapterB_s1[0] ;
  assign ibuffer_23_serverAdapterB_outData_outData$whas =
	     ibuffer_23_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_23_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_23_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_23_serverAdapterB_cnt_1$whas =
	     EN_ibuf_23_portB_request_put &&
	     (!ibuf_23_portB_request_put_BITS_17_TO_16__q32[1] ||
	      ibuf_23_portB_request_put_BITS_17_TO_16__q32[0]) ;
  assign ibuffer_23_serverAdapterB_s1_1$wget =
	     EN_ibuf_23_portBClear ?
	       2'd0 :
	       MUX_ibuffer_23_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_23_serverAdapterB_s1_1$whas =
	     EN_ibuf_23_portBClear || EN_ibuf_23_portB_request_put ;
  assign ibuffer_24_serverAdapterA_outData_enqData$whas =
	     ibuffer_24_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_24_serverAdapterA_s1[1] &&
	     ibuffer_24_serverAdapterA_s1[0] ;
  assign ibuffer_24_serverAdapterA_outData_outData$whas =
	     ibuffer_24_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_24_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_24_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_24_serverAdapterA_cnt_1$whas =
	     EN_ibuf_24_portA_request_put &&
	     (!ibuf_24_portA_request_put_BITS_17_TO_16__q33[1] ||
	      ibuf_24_portA_request_put_BITS_17_TO_16__q33[0]) ;
  assign ibuffer_24_serverAdapterA_s1_1$wget =
	     EN_ibuf_24_portAClear ?
	       2'd0 :
	       MUX_ibuffer_24_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_24_serverAdapterA_s1_1$whas =
	     EN_ibuf_24_portAClear || EN_ibuf_24_portA_request_put ;
  assign ibuffer_24_serverAdapterB_outData_enqData$whas =
	     ibuffer_24_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_24_serverAdapterB_s1[1] &&
	     ibuffer_24_serverAdapterB_s1[0] ;
  assign ibuffer_24_serverAdapterB_outData_outData$whas =
	     ibuffer_24_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_24_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_24_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_24_serverAdapterB_cnt_1$whas =
	     EN_ibuf_24_portB_request_put &&
	     (!ibuf_24_portB_request_put_BITS_17_TO_16__q34[1] ||
	      ibuf_24_portB_request_put_BITS_17_TO_16__q34[0]) ;
  assign ibuffer_24_serverAdapterB_s1_1$wget =
	     EN_ibuf_24_portBClear ?
	       2'd0 :
	       MUX_ibuffer_24_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_24_serverAdapterB_s1_1$whas =
	     EN_ibuf_24_portBClear || EN_ibuf_24_portB_request_put ;
  assign ibuffer_25_serverAdapterA_outData_enqData$whas =
	     ibuffer_25_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_25_serverAdapterA_s1[1] &&
	     ibuffer_25_serverAdapterA_s1[0] ;
  assign ibuffer_25_serverAdapterA_outData_outData$whas =
	     ibuffer_25_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_25_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_25_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_25_serverAdapterA_cnt_1$whas =
	     EN_ibuf_25_portA_request_put &&
	     (!ibuf_25_portA_request_put_BITS_17_TO_16__q35[1] ||
	      ibuf_25_portA_request_put_BITS_17_TO_16__q35[0]) ;
  assign ibuffer_25_serverAdapterA_s1_1$wget =
	     EN_ibuf_25_portAClear ?
	       2'd0 :
	       MUX_ibuffer_25_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_25_serverAdapterA_s1_1$whas =
	     EN_ibuf_25_portAClear || EN_ibuf_25_portA_request_put ;
  assign ibuffer_25_serverAdapterB_outData_enqData$whas =
	     ibuffer_25_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_25_serverAdapterB_s1[1] &&
	     ibuffer_25_serverAdapterB_s1[0] ;
  assign ibuffer_25_serverAdapterB_outData_outData$whas =
	     ibuffer_25_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_25_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_25_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_25_serverAdapterB_cnt_1$whas =
	     EN_ibuf_25_portB_request_put &&
	     (!ibuf_25_portB_request_put_BITS_17_TO_16__q36[1] ||
	      ibuf_25_portB_request_put_BITS_17_TO_16__q36[0]) ;
  assign ibuffer_25_serverAdapterB_s1_1$wget =
	     EN_ibuf_25_portBClear ?
	       2'd0 :
	       MUX_ibuffer_25_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_25_serverAdapterB_s1_1$whas =
	     EN_ibuf_25_portBClear || EN_ibuf_25_portB_request_put ;
  assign ibuffer_26_serverAdapterA_outData_enqData$whas =
	     ibuffer_26_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_26_serverAdapterA_s1[1] &&
	     ibuffer_26_serverAdapterA_s1[0] ;
  assign ibuffer_26_serverAdapterA_outData_outData$whas =
	     ibuffer_26_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_26_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_26_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_26_serverAdapterA_cnt_1$whas =
	     EN_ibuf_26_portA_request_put &&
	     (!ibuf_26_portA_request_put_BITS_17_TO_16__q37[1] ||
	      ibuf_26_portA_request_put_BITS_17_TO_16__q37[0]) ;
  assign ibuffer_26_serverAdapterA_s1_1$wget =
	     EN_ibuf_26_portAClear ?
	       2'd0 :
	       MUX_ibuffer_26_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_26_serverAdapterA_s1_1$whas =
	     EN_ibuf_26_portAClear || EN_ibuf_26_portA_request_put ;
  assign ibuffer_26_serverAdapterB_outData_enqData$whas =
	     ibuffer_26_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_26_serverAdapterB_s1[1] &&
	     ibuffer_26_serverAdapterB_s1[0] ;
  assign ibuffer_26_serverAdapterB_outData_outData$whas =
	     ibuffer_26_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_26_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_26_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_26_serverAdapterB_cnt_1$whas =
	     EN_ibuf_26_portB_request_put &&
	     (!ibuf_26_portB_request_put_BITS_17_TO_16__q38[1] ||
	      ibuf_26_portB_request_put_BITS_17_TO_16__q38[0]) ;
  assign ibuffer_26_serverAdapterB_s1_1$wget =
	     EN_ibuf_26_portBClear ?
	       2'd0 :
	       MUX_ibuffer_26_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_26_serverAdapterB_s1_1$whas =
	     EN_ibuf_26_portBClear || EN_ibuf_26_portB_request_put ;
  assign ibuffer_27_serverAdapterA_outData_enqData$whas =
	     ibuffer_27_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_27_serverAdapterA_s1[1] &&
	     ibuffer_27_serverAdapterA_s1[0] ;
  assign ibuffer_27_serverAdapterA_outData_outData$whas =
	     ibuffer_27_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_27_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_27_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_27_serverAdapterA_cnt_1$whas =
	     EN_ibuf_27_portA_request_put &&
	     (!ibuf_27_portA_request_put_BITS_17_TO_16__q39[1] ||
	      ibuf_27_portA_request_put_BITS_17_TO_16__q39[0]) ;
  assign ibuffer_27_serverAdapterA_s1_1$wget =
	     EN_ibuf_27_portAClear ?
	       2'd0 :
	       MUX_ibuffer_27_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_27_serverAdapterA_s1_1$whas =
	     EN_ibuf_27_portAClear || EN_ibuf_27_portA_request_put ;
  assign ibuffer_27_serverAdapterB_outData_enqData$whas =
	     ibuffer_27_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_27_serverAdapterB_s1[1] &&
	     ibuffer_27_serverAdapterB_s1[0] ;
  assign ibuffer_27_serverAdapterB_outData_outData$whas =
	     ibuffer_27_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_27_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_27_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_27_serverAdapterB_cnt_1$whas =
	     EN_ibuf_27_portB_request_put &&
	     (!ibuf_27_portB_request_put_BITS_17_TO_16__q40[1] ||
	      ibuf_27_portB_request_put_BITS_17_TO_16__q40[0]) ;
  assign ibuffer_27_serverAdapterB_s1_1$wget =
	     EN_ibuf_27_portBClear ?
	       2'd0 :
	       MUX_ibuffer_27_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_27_serverAdapterB_s1_1$whas =
	     EN_ibuf_27_portBClear || EN_ibuf_27_portB_request_put ;
  assign ibuffer_28_serverAdapterA_outData_enqData$whas =
	     ibuffer_28_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_28_serverAdapterA_s1[1] &&
	     ibuffer_28_serverAdapterA_s1[0] ;
  assign ibuffer_28_serverAdapterA_outData_outData$whas =
	     ibuffer_28_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_28_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_28_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_28_serverAdapterA_cnt_1$whas =
	     EN_ibuf_28_portA_request_put &&
	     (!ibuf_28_portA_request_put_BITS_17_TO_16__q41[1] ||
	      ibuf_28_portA_request_put_BITS_17_TO_16__q41[0]) ;
  assign ibuffer_28_serverAdapterA_s1_1$wget =
	     EN_ibuf_28_portAClear ?
	       2'd0 :
	       MUX_ibuffer_28_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_28_serverAdapterA_s1_1$whas =
	     EN_ibuf_28_portAClear || EN_ibuf_28_portA_request_put ;
  assign ibuffer_28_serverAdapterB_outData_enqData$whas =
	     ibuffer_28_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_28_serverAdapterB_s1[1] &&
	     ibuffer_28_serverAdapterB_s1[0] ;
  assign ibuffer_28_serverAdapterB_outData_outData$whas =
	     ibuffer_28_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_28_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_28_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_28_serverAdapterB_cnt_1$whas =
	     EN_ibuf_28_portB_request_put &&
	     (!ibuf_28_portB_request_put_BITS_17_TO_16__q42[1] ||
	      ibuf_28_portB_request_put_BITS_17_TO_16__q42[0]) ;
  assign ibuffer_28_serverAdapterB_s1_1$wget =
	     EN_ibuf_28_portBClear ?
	       2'd0 :
	       MUX_ibuffer_28_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_28_serverAdapterB_s1_1$whas =
	     EN_ibuf_28_portBClear || EN_ibuf_28_portB_request_put ;
  assign ibuffer_29_serverAdapterA_outData_enqData$whas =
	     ibuffer_29_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_29_serverAdapterA_s1[1] &&
	     ibuffer_29_serverAdapterA_s1[0] ;
  assign ibuffer_29_serverAdapterA_outData_outData$whas =
	     ibuffer_29_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_29_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_29_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_29_serverAdapterA_cnt_1$whas =
	     EN_ibuf_29_portA_request_put &&
	     (!ibuf_29_portA_request_put_BITS_17_TO_16__q43[1] ||
	      ibuf_29_portA_request_put_BITS_17_TO_16__q43[0]) ;
  assign ibuffer_29_serverAdapterA_s1_1$wget =
	     EN_ibuf_29_portAClear ?
	       2'd0 :
	       MUX_ibuffer_29_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_29_serverAdapterA_s1_1$whas =
	     EN_ibuf_29_portAClear || EN_ibuf_29_portA_request_put ;
  assign ibuffer_29_serverAdapterB_outData_enqData$whas =
	     ibuffer_29_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_29_serverAdapterB_s1[1] &&
	     ibuffer_29_serverAdapterB_s1[0] ;
  assign ibuffer_29_serverAdapterB_outData_outData$whas =
	     ibuffer_29_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_29_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_29_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_29_serverAdapterB_cnt_1$whas =
	     EN_ibuf_29_portB_request_put &&
	     (!ibuf_29_portB_request_put_BITS_17_TO_16__q44[1] ||
	      ibuf_29_portB_request_put_BITS_17_TO_16__q44[0]) ;
  assign ibuffer_29_serverAdapterB_s1_1$wget =
	     EN_ibuf_29_portBClear ?
	       2'd0 :
	       MUX_ibuffer_29_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_29_serverAdapterB_s1_1$whas =
	     EN_ibuf_29_portBClear || EN_ibuf_29_portB_request_put ;
  assign ibuffer_30_serverAdapterA_outData_enqData$whas =
	     ibuffer_30_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_30_serverAdapterA_s1[1] &&
	     ibuffer_30_serverAdapterA_s1[0] ;
  assign ibuffer_30_serverAdapterA_outData_outData$whas =
	     ibuffer_30_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_30_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_30_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_30_serverAdapterA_cnt_1$whas =
	     EN_ibuf_30_portA_request_put &&
	     (!ibuf_30_portA_request_put_BITS_17_TO_16__q47[1] ||
	      ibuf_30_portA_request_put_BITS_17_TO_16__q47[0]) ;
  assign ibuffer_30_serverAdapterA_s1_1$wget =
	     EN_ibuf_30_portAClear ?
	       2'd0 :
	       MUX_ibuffer_30_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_30_serverAdapterA_s1_1$whas =
	     EN_ibuf_30_portAClear || EN_ibuf_30_portA_request_put ;
  assign ibuffer_30_serverAdapterB_outData_enqData$whas =
	     ibuffer_30_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_30_serverAdapterB_s1[1] &&
	     ibuffer_30_serverAdapterB_s1[0] ;
  assign ibuffer_30_serverAdapterB_outData_outData$whas =
	     ibuffer_30_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_30_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_30_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_30_serverAdapterB_cnt_1$whas =
	     EN_ibuf_30_portB_request_put &&
	     (!ibuf_30_portB_request_put_BITS_17_TO_16__q48[1] ||
	      ibuf_30_portB_request_put_BITS_17_TO_16__q48[0]) ;
  assign ibuffer_30_serverAdapterB_s1_1$wget =
	     EN_ibuf_30_portBClear ?
	       2'd0 :
	       MUX_ibuffer_30_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_30_serverAdapterB_s1_1$whas =
	     EN_ibuf_30_portBClear || EN_ibuf_30_portB_request_put ;
  assign ibuffer_31_serverAdapterA_outData_enqData$whas =
	     ibuffer_31_serverAdapterA_outDataCore$FULL_N &&
	     ibuffer_31_serverAdapterA_s1[1] &&
	     ibuffer_31_serverAdapterA_s1[0] ;
  assign ibuffer_31_serverAdapterA_outData_outData$whas =
	     ibuffer_31_serverAdapterA_outDataCore$EMPTY_N ||
	     !ibuffer_31_serverAdapterA_outDataCore$EMPTY_N &&
	     ibuffer_31_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_31_serverAdapterA_cnt_1$whas =
	     EN_ibuf_31_portA_request_put &&
	     (!ibuf_31_portA_request_put_BITS_17_TO_16__q49[1] ||
	      ibuf_31_portA_request_put_BITS_17_TO_16__q49[0]) ;
  assign ibuffer_31_serverAdapterA_s1_1$wget =
	     EN_ibuf_31_portAClear ?
	       2'd0 :
	       MUX_ibuffer_31_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign ibuffer_31_serverAdapterA_s1_1$whas =
	     EN_ibuf_31_portAClear || EN_ibuf_31_portA_request_put ;
  assign ibuffer_31_serverAdapterB_outData_enqData$whas =
	     ibuffer_31_serverAdapterB_outDataCore$FULL_N &&
	     ibuffer_31_serverAdapterB_s1[1] &&
	     ibuffer_31_serverAdapterB_s1[0] ;
  assign ibuffer_31_serverAdapterB_outData_outData$whas =
	     ibuffer_31_serverAdapterB_outDataCore$EMPTY_N ||
	     !ibuffer_31_serverAdapterB_outDataCore$EMPTY_N &&
	     ibuffer_31_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_31_serverAdapterB_cnt_1$whas =
	     EN_ibuf_31_portB_request_put &&
	     (!ibuf_31_portB_request_put_BITS_17_TO_16__q50[1] ||
	      ibuf_31_portB_request_put_BITS_17_TO_16__q50[0]) ;
  assign ibuffer_31_serverAdapterB_s1_1$wget =
	     EN_ibuf_31_portBClear ?
	       2'd0 :
	       MUX_ibuffer_31_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign ibuffer_31_serverAdapterB_s1_1$whas =
	     EN_ibuf_31_portBClear || EN_ibuf_31_portB_request_put ;
  assign wbuffer_0_serverAdapterA_outData_enqData$whas =
	     wbuffer_0_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_0_serverAdapterA_s1[1] &&
	     wbuffer_0_serverAdapterA_s1[0] ;
  assign wbuffer_0_serverAdapterA_outData_outData$whas =
	     wbuffer_0_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_0_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_0_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_0_serverAdapterA_cnt_1$whas =
	     EN_wbuf_0_portA_request_put &&
	     (!wbuf_0_portA_request_put_BITS_17_TO_16__q193[1] ||
	      wbuf_0_portA_request_put_BITS_17_TO_16__q193[0]) ;
  assign wbuffer_0_serverAdapterA_s1_1$wget =
	     EN_wbuf_0_portAClear ?
	       2'd0 :
	       MUX_wbuffer_0_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_0_serverAdapterA_s1_1$whas =
	     EN_wbuf_0_portAClear || EN_wbuf_0_portA_request_put ;
  assign wbuffer_0_serverAdapterB_outData_enqData$whas =
	     wbuffer_0_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_0_serverAdapterB_s1[1] &&
	     wbuffer_0_serverAdapterB_s1[0] ;
  assign wbuffer_0_serverAdapterB_outData_outData$whas =
	     wbuffer_0_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_0_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_0_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_0_serverAdapterB_cnt_1$whas =
	     EN_wbuf_0_portB_request_put &&
	     (!wbuf_0_portB_request_put_BITS_17_TO_16__q194[1] ||
	      wbuf_0_portB_request_put_BITS_17_TO_16__q194[0]) ;
  assign wbuffer_0_serverAdapterB_s1_1$wget =
	     EN_wbuf_0_portBClear ?
	       2'd0 :
	       MUX_wbuffer_0_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_0_serverAdapterB_s1_1$whas =
	     EN_wbuf_0_portBClear || EN_wbuf_0_portB_request_put ;
  assign wbuffer_1_serverAdapterA_outData_enqData$whas =
	     wbuffer_1_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_1_serverAdapterA_s1[1] &&
	     wbuffer_1_serverAdapterA_s1[0] ;
  assign wbuffer_1_serverAdapterA_outData_outData$whas =
	     wbuffer_1_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_1_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_1_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_1_serverAdapterA_cnt_1$whas =
	     EN_wbuf_1_portA_request_put &&
	     (!wbuf_1_portA_request_put_BITS_17_TO_16__q215[1] ||
	      wbuf_1_portA_request_put_BITS_17_TO_16__q215[0]) ;
  assign wbuffer_1_serverAdapterA_s1_1$wget =
	     EN_wbuf_1_portAClear ?
	       2'd0 :
	       MUX_wbuffer_1_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_1_serverAdapterA_s1_1$whas =
	     EN_wbuf_1_portAClear || EN_wbuf_1_portA_request_put ;
  assign wbuffer_1_serverAdapterB_outData_enqData$whas =
	     wbuffer_1_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_1_serverAdapterB_s1[1] &&
	     wbuffer_1_serverAdapterB_s1[0] ;
  assign wbuffer_1_serverAdapterB_outData_outData$whas =
	     wbuffer_1_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_1_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_1_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_1_serverAdapterB_cnt_1$whas =
	     EN_wbuf_1_portB_request_put &&
	     (!wbuf_1_portB_request_put_BITS_17_TO_16__q216[1] ||
	      wbuf_1_portB_request_put_BITS_17_TO_16__q216[0]) ;
  assign wbuffer_1_serverAdapterB_s1_1$wget =
	     EN_wbuf_1_portBClear ?
	       2'd0 :
	       MUX_wbuffer_1_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_1_serverAdapterB_s1_1$whas =
	     EN_wbuf_1_portBClear || EN_wbuf_1_portB_request_put ;
  assign wbuffer_2_serverAdapterA_outData_enqData$whas =
	     wbuffer_2_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_2_serverAdapterA_s1[1] &&
	     wbuffer_2_serverAdapterA_s1[0] ;
  assign wbuffer_2_serverAdapterA_outData_outData$whas =
	     wbuffer_2_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_2_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_2_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_2_serverAdapterA_cnt_1$whas =
	     EN_wbuf_2_portA_request_put &&
	     (!wbuf_2_portA_request_put_BITS_17_TO_16__q237[1] ||
	      wbuf_2_portA_request_put_BITS_17_TO_16__q237[0]) ;
  assign wbuffer_2_serverAdapterA_s1_1$wget =
	     EN_wbuf_2_portAClear ?
	       2'd0 :
	       MUX_wbuffer_2_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_2_serverAdapterA_s1_1$whas =
	     EN_wbuf_2_portAClear || EN_wbuf_2_portA_request_put ;
  assign wbuffer_2_serverAdapterB_outData_enqData$whas =
	     wbuffer_2_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_2_serverAdapterB_s1[1] &&
	     wbuffer_2_serverAdapterB_s1[0] ;
  assign wbuffer_2_serverAdapterB_outData_outData$whas =
	     wbuffer_2_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_2_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_2_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_2_serverAdapterB_cnt_1$whas =
	     EN_wbuf_2_portB_request_put &&
	     (!wbuf_2_portB_request_put_BITS_17_TO_16__q238[1] ||
	      wbuf_2_portB_request_put_BITS_17_TO_16__q238[0]) ;
  assign wbuffer_2_serverAdapterB_s1_1$wget =
	     EN_wbuf_2_portBClear ?
	       2'd0 :
	       MUX_wbuffer_2_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_2_serverAdapterB_s1_1$whas =
	     EN_wbuf_2_portBClear || EN_wbuf_2_portB_request_put ;
  assign wbuffer_3_serverAdapterA_outData_enqData$whas =
	     wbuffer_3_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_3_serverAdapterA_s1[1] &&
	     wbuffer_3_serverAdapterA_s1[0] ;
  assign wbuffer_3_serverAdapterA_outData_outData$whas =
	     wbuffer_3_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_3_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_3_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_3_serverAdapterA_cnt_1$whas =
	     EN_wbuf_3_portA_request_put &&
	     (!wbuf_3_portA_request_put_BITS_17_TO_16__q243[1] ||
	      wbuf_3_portA_request_put_BITS_17_TO_16__q243[0]) ;
  assign wbuffer_3_serverAdapterA_s1_1$wget =
	     EN_wbuf_3_portAClear ?
	       2'd0 :
	       MUX_wbuffer_3_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_3_serverAdapterA_s1_1$whas =
	     EN_wbuf_3_portAClear || EN_wbuf_3_portA_request_put ;
  assign wbuffer_3_serverAdapterB_outData_enqData$whas =
	     wbuffer_3_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_3_serverAdapterB_s1[1] &&
	     wbuffer_3_serverAdapterB_s1[0] ;
  assign wbuffer_3_serverAdapterB_outData_outData$whas =
	     wbuffer_3_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_3_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_3_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_3_serverAdapterB_cnt_1$whas =
	     EN_wbuf_3_portB_request_put &&
	     (!wbuf_3_portB_request_put_BITS_17_TO_16__q244[1] ||
	      wbuf_3_portB_request_put_BITS_17_TO_16__q244[0]) ;
  assign wbuffer_3_serverAdapterB_s1_1$wget =
	     EN_wbuf_3_portBClear ?
	       2'd0 :
	       MUX_wbuffer_3_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_3_serverAdapterB_s1_1$whas =
	     EN_wbuf_3_portBClear || EN_wbuf_3_portB_request_put ;
  assign wbuffer_4_serverAdapterA_outData_enqData$whas =
	     wbuffer_4_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_4_serverAdapterA_s1[1] &&
	     wbuffer_4_serverAdapterA_s1[0] ;
  assign wbuffer_4_serverAdapterA_outData_outData$whas =
	     wbuffer_4_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_4_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_4_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_4_serverAdapterA_cnt_1$whas =
	     EN_wbuf_4_portA_request_put &&
	     (!wbuf_4_portA_request_put_BITS_17_TO_16__q245[1] ||
	      wbuf_4_portA_request_put_BITS_17_TO_16__q245[0]) ;
  assign wbuffer_4_serverAdapterA_s1_1$wget =
	     EN_wbuf_4_portAClear ?
	       2'd0 :
	       MUX_wbuffer_4_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_4_serverAdapterA_s1_1$whas =
	     EN_wbuf_4_portAClear || EN_wbuf_4_portA_request_put ;
  assign wbuffer_4_serverAdapterB_outData_enqData$whas =
	     wbuffer_4_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_4_serverAdapterB_s1[1] &&
	     wbuffer_4_serverAdapterB_s1[0] ;
  assign wbuffer_4_serverAdapterB_outData_outData$whas =
	     wbuffer_4_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_4_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_4_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_4_serverAdapterB_cnt_1$whas =
	     EN_wbuf_4_portB_request_put &&
	     (!wbuf_4_portB_request_put_BITS_17_TO_16__q246[1] ||
	      wbuf_4_portB_request_put_BITS_17_TO_16__q246[0]) ;
  assign wbuffer_4_serverAdapterB_s1_1$wget =
	     EN_wbuf_4_portBClear ?
	       2'd0 :
	       MUX_wbuffer_4_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_4_serverAdapterB_s1_1$whas =
	     EN_wbuf_4_portBClear || EN_wbuf_4_portB_request_put ;
  assign wbuffer_5_serverAdapterA_outData_enqData$whas =
	     wbuffer_5_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_5_serverAdapterA_s1[1] &&
	     wbuffer_5_serverAdapterA_s1[0] ;
  assign wbuffer_5_serverAdapterA_outData_outData$whas =
	     wbuffer_5_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_5_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_5_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_5_serverAdapterA_cnt_1$whas =
	     EN_wbuf_5_portA_request_put &&
	     (!wbuf_5_portA_request_put_BITS_17_TO_16__q247[1] ||
	      wbuf_5_portA_request_put_BITS_17_TO_16__q247[0]) ;
  assign wbuffer_5_serverAdapterA_s1_1$wget =
	     EN_wbuf_5_portAClear ?
	       2'd0 :
	       MUX_wbuffer_5_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_5_serverAdapterA_s1_1$whas =
	     EN_wbuf_5_portAClear || EN_wbuf_5_portA_request_put ;
  assign wbuffer_5_serverAdapterB_outData_enqData$whas =
	     wbuffer_5_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_5_serverAdapterB_s1[1] &&
	     wbuffer_5_serverAdapterB_s1[0] ;
  assign wbuffer_5_serverAdapterB_outData_outData$whas =
	     wbuffer_5_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_5_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_5_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_5_serverAdapterB_cnt_1$whas =
	     EN_wbuf_5_portB_request_put &&
	     (!wbuf_5_portB_request_put_BITS_17_TO_16__q248[1] ||
	      wbuf_5_portB_request_put_BITS_17_TO_16__q248[0]) ;
  assign wbuffer_5_serverAdapterB_s1_1$wget =
	     EN_wbuf_5_portBClear ?
	       2'd0 :
	       MUX_wbuffer_5_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_5_serverAdapterB_s1_1$whas =
	     EN_wbuf_5_portBClear || EN_wbuf_5_portB_request_put ;
  assign wbuffer_6_serverAdapterA_outData_enqData$whas =
	     wbuffer_6_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_6_serverAdapterA_s1[1] &&
	     wbuffer_6_serverAdapterA_s1[0] ;
  assign wbuffer_6_serverAdapterA_outData_outData$whas =
	     wbuffer_6_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_6_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_6_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_6_serverAdapterA_cnt_1$whas =
	     EN_wbuf_6_portA_request_put &&
	     (!wbuf_6_portA_request_put_BITS_17_TO_16__q249[1] ||
	      wbuf_6_portA_request_put_BITS_17_TO_16__q249[0]) ;
  assign wbuffer_6_serverAdapterA_s1_1$wget =
	     EN_wbuf_6_portAClear ?
	       2'd0 :
	       MUX_wbuffer_6_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_6_serverAdapterA_s1_1$whas =
	     EN_wbuf_6_portAClear || EN_wbuf_6_portA_request_put ;
  assign wbuffer_6_serverAdapterB_outData_enqData$whas =
	     wbuffer_6_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_6_serverAdapterB_s1[1] &&
	     wbuffer_6_serverAdapterB_s1[0] ;
  assign wbuffer_6_serverAdapterB_outData_outData$whas =
	     wbuffer_6_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_6_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_6_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_6_serverAdapterB_cnt_1$whas =
	     EN_wbuf_6_portB_request_put &&
	     (!wbuf_6_portB_request_put_BITS_17_TO_16__q250[1] ||
	      wbuf_6_portB_request_put_BITS_17_TO_16__q250[0]) ;
  assign wbuffer_6_serverAdapterB_s1_1$wget =
	     EN_wbuf_6_portBClear ?
	       2'd0 :
	       MUX_wbuffer_6_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_6_serverAdapterB_s1_1$whas =
	     EN_wbuf_6_portBClear || EN_wbuf_6_portB_request_put ;
  assign wbuffer_7_serverAdapterA_outData_enqData$whas =
	     wbuffer_7_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_7_serverAdapterA_s1[1] &&
	     wbuffer_7_serverAdapterA_s1[0] ;
  assign wbuffer_7_serverAdapterA_outData_outData$whas =
	     wbuffer_7_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_7_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_7_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_7_serverAdapterA_cnt_1$whas =
	     EN_wbuf_7_portA_request_put &&
	     (!wbuf_7_portA_request_put_BITS_17_TO_16__q251[1] ||
	      wbuf_7_portA_request_put_BITS_17_TO_16__q251[0]) ;
  assign wbuffer_7_serverAdapterA_s1_1$wget =
	     EN_wbuf_7_portAClear ?
	       2'd0 :
	       MUX_wbuffer_7_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_7_serverAdapterA_s1_1$whas =
	     EN_wbuf_7_portAClear || EN_wbuf_7_portA_request_put ;
  assign wbuffer_7_serverAdapterB_outData_enqData$whas =
	     wbuffer_7_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_7_serverAdapterB_s1[1] &&
	     wbuffer_7_serverAdapterB_s1[0] ;
  assign wbuffer_7_serverAdapterB_outData_outData$whas =
	     wbuffer_7_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_7_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_7_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_7_serverAdapterB_cnt_1$whas =
	     EN_wbuf_7_portB_request_put &&
	     (!wbuf_7_portB_request_put_BITS_17_TO_16__q252[1] ||
	      wbuf_7_portB_request_put_BITS_17_TO_16__q252[0]) ;
  assign wbuffer_7_serverAdapterB_s1_1$wget =
	     EN_wbuf_7_portBClear ?
	       2'd0 :
	       MUX_wbuffer_7_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_7_serverAdapterB_s1_1$whas =
	     EN_wbuf_7_portBClear || EN_wbuf_7_portB_request_put ;
  assign wbuffer_8_serverAdapterA_outData_enqData$whas =
	     wbuffer_8_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_8_serverAdapterA_s1[1] &&
	     wbuffer_8_serverAdapterA_s1[0] ;
  assign wbuffer_8_serverAdapterA_outData_outData$whas =
	     wbuffer_8_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_8_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_8_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_8_serverAdapterA_cnt_1$whas =
	     EN_wbuf_8_portA_request_put &&
	     (!wbuf_8_portA_request_put_BITS_17_TO_16__q253[1] ||
	      wbuf_8_portA_request_put_BITS_17_TO_16__q253[0]) ;
  assign wbuffer_8_serverAdapterA_s1_1$wget =
	     EN_wbuf_8_portAClear ?
	       2'd0 :
	       MUX_wbuffer_8_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_8_serverAdapterA_s1_1$whas =
	     EN_wbuf_8_portAClear || EN_wbuf_8_portA_request_put ;
  assign wbuffer_8_serverAdapterB_outData_enqData$whas =
	     wbuffer_8_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_8_serverAdapterB_s1[1] &&
	     wbuffer_8_serverAdapterB_s1[0] ;
  assign wbuffer_8_serverAdapterB_outData_outData$whas =
	     wbuffer_8_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_8_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_8_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_8_serverAdapterB_cnt_1$whas =
	     EN_wbuf_8_portB_request_put &&
	     (!wbuf_8_portB_request_put_BITS_17_TO_16__q254[1] ||
	      wbuf_8_portB_request_put_BITS_17_TO_16__q254[0]) ;
  assign wbuffer_8_serverAdapterB_s1_1$wget =
	     EN_wbuf_8_portBClear ?
	       2'd0 :
	       MUX_wbuffer_8_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_8_serverAdapterB_s1_1$whas =
	     EN_wbuf_8_portBClear || EN_wbuf_8_portB_request_put ;
  assign wbuffer_9_serverAdapterA_outData_enqData$whas =
	     wbuffer_9_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_9_serverAdapterA_s1[1] &&
	     wbuffer_9_serverAdapterA_s1[0] ;
  assign wbuffer_9_serverAdapterA_outData_outData$whas =
	     wbuffer_9_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_9_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_9_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_9_serverAdapterA_cnt_1$whas =
	     EN_wbuf_9_portA_request_put &&
	     (!wbuf_9_portA_request_put_BITS_17_TO_16__q255[1] ||
	      wbuf_9_portA_request_put_BITS_17_TO_16__q255[0]) ;
  assign wbuffer_9_serverAdapterA_s1_1$wget =
	     EN_wbuf_9_portAClear ?
	       2'd0 :
	       MUX_wbuffer_9_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_9_serverAdapterA_s1_1$whas =
	     EN_wbuf_9_portAClear || EN_wbuf_9_portA_request_put ;
  assign wbuffer_9_serverAdapterB_outData_enqData$whas =
	     wbuffer_9_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_9_serverAdapterB_s1[1] &&
	     wbuffer_9_serverAdapterB_s1[0] ;
  assign wbuffer_9_serverAdapterB_outData_outData$whas =
	     wbuffer_9_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_9_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_9_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_9_serverAdapterB_cnt_1$whas =
	     EN_wbuf_9_portB_request_put &&
	     (!wbuf_9_portB_request_put_BITS_17_TO_16__q256[1] ||
	      wbuf_9_portB_request_put_BITS_17_TO_16__q256[0]) ;
  assign wbuffer_9_serverAdapterB_s1_1$wget =
	     EN_wbuf_9_portBClear ?
	       2'd0 :
	       MUX_wbuffer_9_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_9_serverAdapterB_s1_1$whas =
	     EN_wbuf_9_portBClear || EN_wbuf_9_portB_request_put ;
  assign wbuffer_10_serverAdapterA_outData_enqData$whas =
	     wbuffer_10_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_10_serverAdapterA_s1[1] &&
	     wbuffer_10_serverAdapterA_s1[0] ;
  assign wbuffer_10_serverAdapterA_outData_outData$whas =
	     wbuffer_10_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_10_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_10_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_10_serverAdapterA_cnt_1$whas =
	     EN_wbuf_10_portA_request_put &&
	     (!wbuf_10_portA_request_put_BITS_17_TO_16__q195[1] ||
	      wbuf_10_portA_request_put_BITS_17_TO_16__q195[0]) ;
  assign wbuffer_10_serverAdapterA_s1_1$wget =
	     EN_wbuf_10_portAClear ?
	       2'd0 :
	       MUX_wbuffer_10_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_10_serverAdapterA_s1_1$whas =
	     EN_wbuf_10_portAClear || EN_wbuf_10_portA_request_put ;
  assign wbuffer_10_serverAdapterB_outData_enqData$whas =
	     wbuffer_10_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_10_serverAdapterB_s1[1] &&
	     wbuffer_10_serverAdapterB_s1[0] ;
  assign wbuffer_10_serverAdapterB_outData_outData$whas =
	     wbuffer_10_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_10_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_10_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_10_serverAdapterB_cnt_1$whas =
	     EN_wbuf_10_portB_request_put &&
	     (!wbuf_10_portB_request_put_BITS_17_TO_16__q196[1] ||
	      wbuf_10_portB_request_put_BITS_17_TO_16__q196[0]) ;
  assign wbuffer_10_serverAdapterB_s1_1$wget =
	     EN_wbuf_10_portBClear ?
	       2'd0 :
	       MUX_wbuffer_10_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_10_serverAdapterB_s1_1$whas =
	     EN_wbuf_10_portBClear || EN_wbuf_10_portB_request_put ;
  assign wbuffer_11_serverAdapterA_outData_enqData$whas =
	     wbuffer_11_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_11_serverAdapterA_s1[1] &&
	     wbuffer_11_serverAdapterA_s1[0] ;
  assign wbuffer_11_serverAdapterA_outData_outData$whas =
	     wbuffer_11_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_11_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_11_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_11_serverAdapterA_cnt_1$whas =
	     EN_wbuf_11_portA_request_put &&
	     (!wbuf_11_portA_request_put_BITS_17_TO_16__q197[1] ||
	      wbuf_11_portA_request_put_BITS_17_TO_16__q197[0]) ;
  assign wbuffer_11_serverAdapterA_s1_1$wget =
	     EN_wbuf_11_portAClear ?
	       2'd0 :
	       MUX_wbuffer_11_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_11_serverAdapterA_s1_1$whas =
	     EN_wbuf_11_portAClear || EN_wbuf_11_portA_request_put ;
  assign wbuffer_11_serverAdapterB_outData_enqData$whas =
	     wbuffer_11_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_11_serverAdapterB_s1[1] &&
	     wbuffer_11_serverAdapterB_s1[0] ;
  assign wbuffer_11_serverAdapterB_outData_outData$whas =
	     wbuffer_11_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_11_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_11_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_11_serverAdapterB_cnt_1$whas =
	     EN_wbuf_11_portB_request_put &&
	     (!wbuf_11_portB_request_put_BITS_17_TO_16__q198[1] ||
	      wbuf_11_portB_request_put_BITS_17_TO_16__q198[0]) ;
  assign wbuffer_11_serverAdapterB_s1_1$wget =
	     EN_wbuf_11_portBClear ?
	       2'd0 :
	       MUX_wbuffer_11_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_11_serverAdapterB_s1_1$whas =
	     EN_wbuf_11_portBClear || EN_wbuf_11_portB_request_put ;
  assign wbuffer_12_serverAdapterA_outData_enqData$whas =
	     wbuffer_12_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_12_serverAdapterA_s1[1] &&
	     wbuffer_12_serverAdapterA_s1[0] ;
  assign wbuffer_12_serverAdapterA_outData_outData$whas =
	     wbuffer_12_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_12_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_12_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_12_serverAdapterA_cnt_1$whas =
	     EN_wbuf_12_portA_request_put &&
	     (!wbuf_12_portA_request_put_BITS_17_TO_16__q199[1] ||
	      wbuf_12_portA_request_put_BITS_17_TO_16__q199[0]) ;
  assign wbuffer_12_serverAdapterA_s1_1$wget =
	     EN_wbuf_12_portAClear ?
	       2'd0 :
	       MUX_wbuffer_12_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_12_serverAdapterA_s1_1$whas =
	     EN_wbuf_12_portAClear || EN_wbuf_12_portA_request_put ;
  assign wbuffer_12_serverAdapterB_outData_enqData$whas =
	     wbuffer_12_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_12_serverAdapterB_s1[1] &&
	     wbuffer_12_serverAdapterB_s1[0] ;
  assign wbuffer_12_serverAdapterB_outData_outData$whas =
	     wbuffer_12_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_12_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_12_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_12_serverAdapterB_cnt_1$whas =
	     EN_wbuf_12_portB_request_put &&
	     (!wbuf_12_portB_request_put_BITS_17_TO_16__q200[1] ||
	      wbuf_12_portB_request_put_BITS_17_TO_16__q200[0]) ;
  assign wbuffer_12_serverAdapterB_s1_1$wget =
	     EN_wbuf_12_portBClear ?
	       2'd0 :
	       MUX_wbuffer_12_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_12_serverAdapterB_s1_1$whas =
	     EN_wbuf_12_portBClear || EN_wbuf_12_portB_request_put ;
  assign wbuffer_13_serverAdapterA_outData_enqData$whas =
	     wbuffer_13_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_13_serverAdapterA_s1[1] &&
	     wbuffer_13_serverAdapterA_s1[0] ;
  assign wbuffer_13_serverAdapterA_outData_outData$whas =
	     wbuffer_13_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_13_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_13_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_13_serverAdapterA_cnt_1$whas =
	     EN_wbuf_13_portA_request_put &&
	     (!wbuf_13_portA_request_put_BITS_17_TO_16__q201[1] ||
	      wbuf_13_portA_request_put_BITS_17_TO_16__q201[0]) ;
  assign wbuffer_13_serverAdapterA_s1_1$wget =
	     EN_wbuf_13_portAClear ?
	       2'd0 :
	       MUX_wbuffer_13_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_13_serverAdapterA_s1_1$whas =
	     EN_wbuf_13_portAClear || EN_wbuf_13_portA_request_put ;
  assign wbuffer_13_serverAdapterB_outData_enqData$whas =
	     wbuffer_13_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_13_serverAdapterB_s1[1] &&
	     wbuffer_13_serverAdapterB_s1[0] ;
  assign wbuffer_13_serverAdapterB_outData_outData$whas =
	     wbuffer_13_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_13_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_13_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_13_serverAdapterB_cnt_1$whas =
	     EN_wbuf_13_portB_request_put &&
	     (!wbuf_13_portB_request_put_BITS_17_TO_16__q202[1] ||
	      wbuf_13_portB_request_put_BITS_17_TO_16__q202[0]) ;
  assign wbuffer_13_serverAdapterB_s1_1$wget =
	     EN_wbuf_13_portBClear ?
	       2'd0 :
	       MUX_wbuffer_13_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_13_serverAdapterB_s1_1$whas =
	     EN_wbuf_13_portBClear || EN_wbuf_13_portB_request_put ;
  assign wbuffer_14_serverAdapterA_outData_enqData$whas =
	     wbuffer_14_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_14_serverAdapterA_s1[1] &&
	     wbuffer_14_serverAdapterA_s1[0] ;
  assign wbuffer_14_serverAdapterA_outData_outData$whas =
	     wbuffer_14_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_14_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_14_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_14_serverAdapterA_cnt_1$whas =
	     EN_wbuf_14_portA_request_put &&
	     (!wbuf_14_portA_request_put_BITS_17_TO_16__q203[1] ||
	      wbuf_14_portA_request_put_BITS_17_TO_16__q203[0]) ;
  assign wbuffer_14_serverAdapterA_s1_1$wget =
	     EN_wbuf_14_portAClear ?
	       2'd0 :
	       MUX_wbuffer_14_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_14_serverAdapterA_s1_1$whas =
	     EN_wbuf_14_portAClear || EN_wbuf_14_portA_request_put ;
  assign wbuffer_14_serverAdapterB_outData_enqData$whas =
	     wbuffer_14_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_14_serverAdapterB_s1[1] &&
	     wbuffer_14_serverAdapterB_s1[0] ;
  assign wbuffer_14_serverAdapterB_outData_outData$whas =
	     wbuffer_14_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_14_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_14_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_14_serverAdapterB_cnt_1$whas =
	     EN_wbuf_14_portB_request_put &&
	     (!wbuf_14_portB_request_put_BITS_17_TO_16__q204[1] ||
	      wbuf_14_portB_request_put_BITS_17_TO_16__q204[0]) ;
  assign wbuffer_14_serverAdapterB_s1_1$wget =
	     EN_wbuf_14_portBClear ?
	       2'd0 :
	       MUX_wbuffer_14_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_14_serverAdapterB_s1_1$whas =
	     EN_wbuf_14_portBClear || EN_wbuf_14_portB_request_put ;
  assign wbuffer_15_serverAdapterA_outData_enqData$whas =
	     wbuffer_15_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_15_serverAdapterA_s1[1] &&
	     wbuffer_15_serverAdapterA_s1[0] ;
  assign wbuffer_15_serverAdapterA_outData_outData$whas =
	     wbuffer_15_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_15_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_15_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_15_serverAdapterA_cnt_1$whas =
	     EN_wbuf_15_portA_request_put &&
	     (!wbuf_15_portA_request_put_BITS_17_TO_16__q205[1] ||
	      wbuf_15_portA_request_put_BITS_17_TO_16__q205[0]) ;
  assign wbuffer_15_serverAdapterA_s1_1$wget =
	     EN_wbuf_15_portAClear ?
	       2'd0 :
	       MUX_wbuffer_15_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_15_serverAdapterA_s1_1$whas =
	     EN_wbuf_15_portAClear || EN_wbuf_15_portA_request_put ;
  assign wbuffer_15_serverAdapterB_outData_enqData$whas =
	     wbuffer_15_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_15_serverAdapterB_s1[1] &&
	     wbuffer_15_serverAdapterB_s1[0] ;
  assign wbuffer_15_serverAdapterB_outData_outData$whas =
	     wbuffer_15_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_15_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_15_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_15_serverAdapterB_cnt_1$whas =
	     EN_wbuf_15_portB_request_put &&
	     (!wbuf_15_portB_request_put_BITS_17_TO_16__q206[1] ||
	      wbuf_15_portB_request_put_BITS_17_TO_16__q206[0]) ;
  assign wbuffer_15_serverAdapterB_s1_1$wget =
	     EN_wbuf_15_portBClear ?
	       2'd0 :
	       MUX_wbuffer_15_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_15_serverAdapterB_s1_1$whas =
	     EN_wbuf_15_portBClear || EN_wbuf_15_portB_request_put ;
  assign wbuffer_16_serverAdapterA_outData_enqData$whas =
	     wbuffer_16_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_16_serverAdapterA_s1[1] &&
	     wbuffer_16_serverAdapterA_s1[0] ;
  assign wbuffer_16_serverAdapterA_outData_outData$whas =
	     wbuffer_16_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_16_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_16_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_16_serverAdapterA_cnt_1$whas =
	     EN_wbuf_16_portA_request_put &&
	     (!wbuf_16_portA_request_put_BITS_17_TO_16__q207[1] ||
	      wbuf_16_portA_request_put_BITS_17_TO_16__q207[0]) ;
  assign wbuffer_16_serverAdapterA_s1_1$wget =
	     EN_wbuf_16_portAClear ?
	       2'd0 :
	       MUX_wbuffer_16_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_16_serverAdapterA_s1_1$whas =
	     EN_wbuf_16_portAClear || EN_wbuf_16_portA_request_put ;
  assign wbuffer_16_serverAdapterB_outData_enqData$whas =
	     wbuffer_16_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_16_serverAdapterB_s1[1] &&
	     wbuffer_16_serverAdapterB_s1[0] ;
  assign wbuffer_16_serverAdapterB_outData_outData$whas =
	     wbuffer_16_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_16_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_16_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_16_serverAdapterB_cnt_1$whas =
	     EN_wbuf_16_portB_request_put &&
	     (!wbuf_16_portB_request_put_BITS_17_TO_16__q208[1] ||
	      wbuf_16_portB_request_put_BITS_17_TO_16__q208[0]) ;
  assign wbuffer_16_serverAdapterB_s1_1$wget =
	     EN_wbuf_16_portBClear ?
	       2'd0 :
	       MUX_wbuffer_16_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_16_serverAdapterB_s1_1$whas =
	     EN_wbuf_16_portBClear || EN_wbuf_16_portB_request_put ;
  assign wbuffer_17_serverAdapterA_outData_enqData$whas =
	     wbuffer_17_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_17_serverAdapterA_s1[1] &&
	     wbuffer_17_serverAdapterA_s1[0] ;
  assign wbuffer_17_serverAdapterA_outData_outData$whas =
	     wbuffer_17_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_17_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_17_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_17_serverAdapterA_cnt_1$whas =
	     EN_wbuf_17_portA_request_put &&
	     (!wbuf_17_portA_request_put_BITS_17_TO_16__q209[1] ||
	      wbuf_17_portA_request_put_BITS_17_TO_16__q209[0]) ;
  assign wbuffer_17_serverAdapterA_s1_1$wget =
	     EN_wbuf_17_portAClear ?
	       2'd0 :
	       MUX_wbuffer_17_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_17_serverAdapterA_s1_1$whas =
	     EN_wbuf_17_portAClear || EN_wbuf_17_portA_request_put ;
  assign wbuffer_17_serverAdapterB_outData_enqData$whas =
	     wbuffer_17_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_17_serverAdapterB_s1[1] &&
	     wbuffer_17_serverAdapterB_s1[0] ;
  assign wbuffer_17_serverAdapterB_outData_outData$whas =
	     wbuffer_17_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_17_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_17_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_17_serverAdapterB_cnt_1$whas =
	     EN_wbuf_17_portB_request_put &&
	     (!wbuf_17_portB_request_put_BITS_17_TO_16__q210[1] ||
	      wbuf_17_portB_request_put_BITS_17_TO_16__q210[0]) ;
  assign wbuffer_17_serverAdapterB_s1_1$wget =
	     EN_wbuf_17_portBClear ?
	       2'd0 :
	       MUX_wbuffer_17_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_17_serverAdapterB_s1_1$whas =
	     EN_wbuf_17_portBClear || EN_wbuf_17_portB_request_put ;
  assign wbuffer_18_serverAdapterA_outData_enqData$whas =
	     wbuffer_18_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_18_serverAdapterA_s1[1] &&
	     wbuffer_18_serverAdapterA_s1[0] ;
  assign wbuffer_18_serverAdapterA_outData_outData$whas =
	     wbuffer_18_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_18_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_18_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_18_serverAdapterA_cnt_1$whas =
	     EN_wbuf_18_portA_request_put &&
	     (!wbuf_18_portA_request_put_BITS_17_TO_16__q211[1] ||
	      wbuf_18_portA_request_put_BITS_17_TO_16__q211[0]) ;
  assign wbuffer_18_serverAdapterA_s1_1$wget =
	     EN_wbuf_18_portAClear ?
	       2'd0 :
	       MUX_wbuffer_18_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_18_serverAdapterA_s1_1$whas =
	     EN_wbuf_18_portAClear || EN_wbuf_18_portA_request_put ;
  assign wbuffer_18_serverAdapterB_outData_enqData$whas =
	     wbuffer_18_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_18_serverAdapterB_s1[1] &&
	     wbuffer_18_serverAdapterB_s1[0] ;
  assign wbuffer_18_serverAdapterB_outData_outData$whas =
	     wbuffer_18_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_18_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_18_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_18_serverAdapterB_cnt_1$whas =
	     EN_wbuf_18_portB_request_put &&
	     (!wbuf_18_portB_request_put_BITS_17_TO_16__q212[1] ||
	      wbuf_18_portB_request_put_BITS_17_TO_16__q212[0]) ;
  assign wbuffer_18_serverAdapterB_s1_1$wget =
	     EN_wbuf_18_portBClear ?
	       2'd0 :
	       MUX_wbuffer_18_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_18_serverAdapterB_s1_1$whas =
	     EN_wbuf_18_portBClear || EN_wbuf_18_portB_request_put ;
  assign wbuffer_19_serverAdapterA_outData_enqData$whas =
	     wbuffer_19_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_19_serverAdapterA_s1[1] &&
	     wbuffer_19_serverAdapterA_s1[0] ;
  assign wbuffer_19_serverAdapterA_outData_outData$whas =
	     wbuffer_19_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_19_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_19_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_19_serverAdapterA_cnt_1$whas =
	     EN_wbuf_19_portA_request_put &&
	     (!wbuf_19_portA_request_put_BITS_17_TO_16__q213[1] ||
	      wbuf_19_portA_request_put_BITS_17_TO_16__q213[0]) ;
  assign wbuffer_19_serverAdapterA_s1_1$wget =
	     EN_wbuf_19_portAClear ?
	       2'd0 :
	       MUX_wbuffer_19_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_19_serverAdapterA_s1_1$whas =
	     EN_wbuf_19_portAClear || EN_wbuf_19_portA_request_put ;
  assign wbuffer_19_serverAdapterB_outData_enqData$whas =
	     wbuffer_19_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_19_serverAdapterB_s1[1] &&
	     wbuffer_19_serverAdapterB_s1[0] ;
  assign wbuffer_19_serverAdapterB_outData_outData$whas =
	     wbuffer_19_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_19_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_19_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_19_serverAdapterB_cnt_1$whas =
	     EN_wbuf_19_portB_request_put &&
	     (!wbuf_19_portB_request_put_BITS_17_TO_16__q214[1] ||
	      wbuf_19_portB_request_put_BITS_17_TO_16__q214[0]) ;
  assign wbuffer_19_serverAdapterB_s1_1$wget =
	     EN_wbuf_19_portBClear ?
	       2'd0 :
	       MUX_wbuffer_19_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_19_serverAdapterB_s1_1$whas =
	     EN_wbuf_19_portBClear || EN_wbuf_19_portB_request_put ;
  assign wbuffer_20_serverAdapterA_outData_enqData$whas =
	     wbuffer_20_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_20_serverAdapterA_s1[1] &&
	     wbuffer_20_serverAdapterA_s1[0] ;
  assign wbuffer_20_serverAdapterA_outData_outData$whas =
	     wbuffer_20_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_20_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_20_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_20_serverAdapterA_cnt_1$whas =
	     EN_wbuf_20_portA_request_put &&
	     (!wbuf_20_portA_request_put_BITS_17_TO_16__q217[1] ||
	      wbuf_20_portA_request_put_BITS_17_TO_16__q217[0]) ;
  assign wbuffer_20_serverAdapterA_s1_1$wget =
	     EN_wbuf_20_portAClear ?
	       2'd0 :
	       MUX_wbuffer_20_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_20_serverAdapterA_s1_1$whas =
	     EN_wbuf_20_portAClear || EN_wbuf_20_portA_request_put ;
  assign wbuffer_20_serverAdapterB_outData_enqData$whas =
	     wbuffer_20_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_20_serverAdapterB_s1[1] &&
	     wbuffer_20_serverAdapterB_s1[0] ;
  assign wbuffer_20_serverAdapterB_outData_outData$whas =
	     wbuffer_20_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_20_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_20_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_20_serverAdapterB_cnt_1$whas =
	     EN_wbuf_20_portB_request_put &&
	     (!wbuf_20_portB_request_put_BITS_17_TO_16__q218[1] ||
	      wbuf_20_portB_request_put_BITS_17_TO_16__q218[0]) ;
  assign wbuffer_20_serverAdapterB_s1_1$wget =
	     EN_wbuf_20_portBClear ?
	       2'd0 :
	       MUX_wbuffer_20_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_20_serverAdapterB_s1_1$whas =
	     EN_wbuf_20_portBClear || EN_wbuf_20_portB_request_put ;
  assign wbuffer_21_serverAdapterA_outData_enqData$whas =
	     wbuffer_21_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_21_serverAdapterA_s1[1] &&
	     wbuffer_21_serverAdapterA_s1[0] ;
  assign wbuffer_21_serverAdapterA_outData_outData$whas =
	     wbuffer_21_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_21_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_21_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_21_serverAdapterA_cnt_1$whas =
	     EN_wbuf_21_portA_request_put &&
	     (!wbuf_21_portA_request_put_BITS_17_TO_16__q219[1] ||
	      wbuf_21_portA_request_put_BITS_17_TO_16__q219[0]) ;
  assign wbuffer_21_serverAdapterA_s1_1$wget =
	     EN_wbuf_21_portAClear ?
	       2'd0 :
	       MUX_wbuffer_21_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_21_serverAdapterA_s1_1$whas =
	     EN_wbuf_21_portAClear || EN_wbuf_21_portA_request_put ;
  assign wbuffer_21_serverAdapterB_outData_enqData$whas =
	     wbuffer_21_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_21_serverAdapterB_s1[1] &&
	     wbuffer_21_serverAdapterB_s1[0] ;
  assign wbuffer_21_serverAdapterB_outData_outData$whas =
	     wbuffer_21_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_21_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_21_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_21_serverAdapterB_cnt_1$whas =
	     EN_wbuf_21_portB_request_put &&
	     (!wbuf_21_portB_request_put_BITS_17_TO_16__q220[1] ||
	      wbuf_21_portB_request_put_BITS_17_TO_16__q220[0]) ;
  assign wbuffer_21_serverAdapterB_s1_1$wget =
	     EN_wbuf_21_portBClear ?
	       2'd0 :
	       MUX_wbuffer_21_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_21_serverAdapterB_s1_1$whas =
	     EN_wbuf_21_portBClear || EN_wbuf_21_portB_request_put ;
  assign wbuffer_22_serverAdapterA_outData_enqData$whas =
	     wbuffer_22_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_22_serverAdapterA_s1[1] &&
	     wbuffer_22_serverAdapterA_s1[0] ;
  assign wbuffer_22_serverAdapterA_outData_outData$whas =
	     wbuffer_22_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_22_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_22_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_22_serverAdapterA_cnt_1$whas =
	     EN_wbuf_22_portA_request_put &&
	     (!wbuf_22_portA_request_put_BITS_17_TO_16__q221[1] ||
	      wbuf_22_portA_request_put_BITS_17_TO_16__q221[0]) ;
  assign wbuffer_22_serverAdapterA_s1_1$wget =
	     EN_wbuf_22_portAClear ?
	       2'd0 :
	       MUX_wbuffer_22_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_22_serverAdapterA_s1_1$whas =
	     EN_wbuf_22_portAClear || EN_wbuf_22_portA_request_put ;
  assign wbuffer_22_serverAdapterB_outData_enqData$whas =
	     wbuffer_22_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_22_serverAdapterB_s1[1] &&
	     wbuffer_22_serverAdapterB_s1[0] ;
  assign wbuffer_22_serverAdapterB_outData_outData$whas =
	     wbuffer_22_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_22_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_22_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_22_serverAdapterB_cnt_1$whas =
	     EN_wbuf_22_portB_request_put &&
	     (!wbuf_22_portB_request_put_BITS_17_TO_16__q222[1] ||
	      wbuf_22_portB_request_put_BITS_17_TO_16__q222[0]) ;
  assign wbuffer_22_serverAdapterB_s1_1$wget =
	     EN_wbuf_22_portBClear ?
	       2'd0 :
	       MUX_wbuffer_22_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_22_serverAdapterB_s1_1$whas =
	     EN_wbuf_22_portBClear || EN_wbuf_22_portB_request_put ;
  assign wbuffer_23_serverAdapterA_outData_enqData$whas =
	     wbuffer_23_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_23_serverAdapterA_s1[1] &&
	     wbuffer_23_serverAdapterA_s1[0] ;
  assign wbuffer_23_serverAdapterA_outData_outData$whas =
	     wbuffer_23_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_23_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_23_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_23_serverAdapterA_cnt_1$whas =
	     EN_wbuf_23_portA_request_put &&
	     (!wbuf_23_portA_request_put_BITS_17_TO_16__q223[1] ||
	      wbuf_23_portA_request_put_BITS_17_TO_16__q223[0]) ;
  assign wbuffer_23_serverAdapterA_s1_1$wget =
	     EN_wbuf_23_portAClear ?
	       2'd0 :
	       MUX_wbuffer_23_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_23_serverAdapterA_s1_1$whas =
	     EN_wbuf_23_portAClear || EN_wbuf_23_portA_request_put ;
  assign wbuffer_23_serverAdapterB_outData_enqData$whas =
	     wbuffer_23_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_23_serverAdapterB_s1[1] &&
	     wbuffer_23_serverAdapterB_s1[0] ;
  assign wbuffer_23_serverAdapterB_outData_outData$whas =
	     wbuffer_23_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_23_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_23_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_23_serverAdapterB_cnt_1$whas =
	     EN_wbuf_23_portB_request_put &&
	     (!wbuf_23_portB_request_put_BITS_17_TO_16__q224[1] ||
	      wbuf_23_portB_request_put_BITS_17_TO_16__q224[0]) ;
  assign wbuffer_23_serverAdapterB_s1_1$wget =
	     EN_wbuf_23_portBClear ?
	       2'd0 :
	       MUX_wbuffer_23_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_23_serverAdapterB_s1_1$whas =
	     EN_wbuf_23_portBClear || EN_wbuf_23_portB_request_put ;
  assign wbuffer_24_serverAdapterA_outData_enqData$whas =
	     wbuffer_24_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_24_serverAdapterA_s1[1] &&
	     wbuffer_24_serverAdapterA_s1[0] ;
  assign wbuffer_24_serverAdapterA_outData_outData$whas =
	     wbuffer_24_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_24_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_24_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_24_serverAdapterA_cnt_1$whas =
	     EN_wbuf_24_portA_request_put &&
	     (!wbuf_24_portA_request_put_BITS_17_TO_16__q225[1] ||
	      wbuf_24_portA_request_put_BITS_17_TO_16__q225[0]) ;
  assign wbuffer_24_serverAdapterA_s1_1$wget =
	     EN_wbuf_24_portAClear ?
	       2'd0 :
	       MUX_wbuffer_24_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_24_serverAdapterA_s1_1$whas =
	     EN_wbuf_24_portAClear || EN_wbuf_24_portA_request_put ;
  assign wbuffer_24_serverAdapterB_outData_enqData$whas =
	     wbuffer_24_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_24_serverAdapterB_s1[1] &&
	     wbuffer_24_serverAdapterB_s1[0] ;
  assign wbuffer_24_serverAdapterB_outData_outData$whas =
	     wbuffer_24_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_24_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_24_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_24_serverAdapterB_cnt_1$whas =
	     EN_wbuf_24_portB_request_put &&
	     (!wbuf_24_portB_request_put_BITS_17_TO_16__q226[1] ||
	      wbuf_24_portB_request_put_BITS_17_TO_16__q226[0]) ;
  assign wbuffer_24_serverAdapterB_s1_1$wget =
	     EN_wbuf_24_portBClear ?
	       2'd0 :
	       MUX_wbuffer_24_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_24_serverAdapterB_s1_1$whas =
	     EN_wbuf_24_portBClear || EN_wbuf_24_portB_request_put ;
  assign wbuffer_25_serverAdapterA_outData_enqData$whas =
	     wbuffer_25_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_25_serverAdapterA_s1[1] &&
	     wbuffer_25_serverAdapterA_s1[0] ;
  assign wbuffer_25_serverAdapterA_outData_outData$whas =
	     wbuffer_25_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_25_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_25_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_25_serverAdapterA_cnt_1$whas =
	     EN_wbuf_25_portA_request_put &&
	     (!wbuf_25_portA_request_put_BITS_17_TO_16__q227[1] ||
	      wbuf_25_portA_request_put_BITS_17_TO_16__q227[0]) ;
  assign wbuffer_25_serverAdapterA_s1_1$wget =
	     EN_wbuf_25_portAClear ?
	       2'd0 :
	       MUX_wbuffer_25_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_25_serverAdapterA_s1_1$whas =
	     EN_wbuf_25_portAClear || EN_wbuf_25_portA_request_put ;
  assign wbuffer_25_serverAdapterB_outData_enqData$whas =
	     wbuffer_25_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_25_serverAdapterB_s1[1] &&
	     wbuffer_25_serverAdapterB_s1[0] ;
  assign wbuffer_25_serverAdapterB_outData_outData$whas =
	     wbuffer_25_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_25_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_25_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_25_serverAdapterB_cnt_1$whas =
	     EN_wbuf_25_portB_request_put &&
	     (!wbuf_25_portB_request_put_BITS_17_TO_16__q228[1] ||
	      wbuf_25_portB_request_put_BITS_17_TO_16__q228[0]) ;
  assign wbuffer_25_serverAdapterB_s1_1$wget =
	     EN_wbuf_25_portBClear ?
	       2'd0 :
	       MUX_wbuffer_25_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_25_serverAdapterB_s1_1$whas =
	     EN_wbuf_25_portBClear || EN_wbuf_25_portB_request_put ;
  assign wbuffer_26_serverAdapterA_outData_enqData$whas =
	     wbuffer_26_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_26_serverAdapterA_s1[1] &&
	     wbuffer_26_serverAdapterA_s1[0] ;
  assign wbuffer_26_serverAdapterA_outData_outData$whas =
	     wbuffer_26_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_26_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_26_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_26_serverAdapterA_cnt_1$whas =
	     EN_wbuf_26_portA_request_put &&
	     (!wbuf_26_portA_request_put_BITS_17_TO_16__q229[1] ||
	      wbuf_26_portA_request_put_BITS_17_TO_16__q229[0]) ;
  assign wbuffer_26_serverAdapterA_s1_1$wget =
	     EN_wbuf_26_portAClear ?
	       2'd0 :
	       MUX_wbuffer_26_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_26_serverAdapterA_s1_1$whas =
	     EN_wbuf_26_portAClear || EN_wbuf_26_portA_request_put ;
  assign wbuffer_26_serverAdapterB_outData_enqData$whas =
	     wbuffer_26_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_26_serverAdapterB_s1[1] &&
	     wbuffer_26_serverAdapterB_s1[0] ;
  assign wbuffer_26_serverAdapterB_outData_outData$whas =
	     wbuffer_26_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_26_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_26_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_26_serverAdapterB_cnt_1$whas =
	     EN_wbuf_26_portB_request_put &&
	     (!wbuf_26_portB_request_put_BITS_17_TO_16__q230[1] ||
	      wbuf_26_portB_request_put_BITS_17_TO_16__q230[0]) ;
  assign wbuffer_26_serverAdapterB_s1_1$wget =
	     EN_wbuf_26_portBClear ?
	       2'd0 :
	       MUX_wbuffer_26_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_26_serverAdapterB_s1_1$whas =
	     EN_wbuf_26_portBClear || EN_wbuf_26_portB_request_put ;
  assign wbuffer_27_serverAdapterA_outData_enqData$whas =
	     wbuffer_27_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_27_serverAdapterA_s1[1] &&
	     wbuffer_27_serverAdapterA_s1[0] ;
  assign wbuffer_27_serverAdapterA_outData_outData$whas =
	     wbuffer_27_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_27_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_27_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_27_serverAdapterA_cnt_1$whas =
	     EN_wbuf_27_portA_request_put &&
	     (!wbuf_27_portA_request_put_BITS_17_TO_16__q231[1] ||
	      wbuf_27_portA_request_put_BITS_17_TO_16__q231[0]) ;
  assign wbuffer_27_serverAdapterA_s1_1$wget =
	     EN_wbuf_27_portAClear ?
	       2'd0 :
	       MUX_wbuffer_27_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_27_serverAdapterA_s1_1$whas =
	     EN_wbuf_27_portAClear || EN_wbuf_27_portA_request_put ;
  assign wbuffer_27_serverAdapterB_outData_enqData$whas =
	     wbuffer_27_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_27_serverAdapterB_s1[1] &&
	     wbuffer_27_serverAdapterB_s1[0] ;
  assign wbuffer_27_serverAdapterB_outData_outData$whas =
	     wbuffer_27_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_27_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_27_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_27_serverAdapterB_cnt_1$whas =
	     EN_wbuf_27_portB_request_put &&
	     (!wbuf_27_portB_request_put_BITS_17_TO_16__q232[1] ||
	      wbuf_27_portB_request_put_BITS_17_TO_16__q232[0]) ;
  assign wbuffer_27_serverAdapterB_s1_1$wget =
	     EN_wbuf_27_portBClear ?
	       2'd0 :
	       MUX_wbuffer_27_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_27_serverAdapterB_s1_1$whas =
	     EN_wbuf_27_portBClear || EN_wbuf_27_portB_request_put ;
  assign wbuffer_28_serverAdapterA_outData_enqData$whas =
	     wbuffer_28_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_28_serverAdapterA_s1[1] &&
	     wbuffer_28_serverAdapterA_s1[0] ;
  assign wbuffer_28_serverAdapterA_outData_outData$whas =
	     wbuffer_28_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_28_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_28_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_28_serverAdapterA_cnt_1$whas =
	     EN_wbuf_28_portA_request_put &&
	     (!wbuf_28_portA_request_put_BITS_17_TO_16__q233[1] ||
	      wbuf_28_portA_request_put_BITS_17_TO_16__q233[0]) ;
  assign wbuffer_28_serverAdapterA_s1_1$wget =
	     EN_wbuf_28_portAClear ?
	       2'd0 :
	       MUX_wbuffer_28_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_28_serverAdapterA_s1_1$whas =
	     EN_wbuf_28_portAClear || EN_wbuf_28_portA_request_put ;
  assign wbuffer_28_serverAdapterB_outData_enqData$whas =
	     wbuffer_28_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_28_serverAdapterB_s1[1] &&
	     wbuffer_28_serverAdapterB_s1[0] ;
  assign wbuffer_28_serverAdapterB_outData_outData$whas =
	     wbuffer_28_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_28_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_28_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_28_serverAdapterB_cnt_1$whas =
	     EN_wbuf_28_portB_request_put &&
	     (!wbuf_28_portB_request_put_BITS_17_TO_16__q234[1] ||
	      wbuf_28_portB_request_put_BITS_17_TO_16__q234[0]) ;
  assign wbuffer_28_serverAdapterB_s1_1$wget =
	     EN_wbuf_28_portBClear ?
	       2'd0 :
	       MUX_wbuffer_28_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_28_serverAdapterB_s1_1$whas =
	     EN_wbuf_28_portBClear || EN_wbuf_28_portB_request_put ;
  assign wbuffer_29_serverAdapterA_outData_enqData$whas =
	     wbuffer_29_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_29_serverAdapterA_s1[1] &&
	     wbuffer_29_serverAdapterA_s1[0] ;
  assign wbuffer_29_serverAdapterA_outData_outData$whas =
	     wbuffer_29_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_29_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_29_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_29_serverAdapterA_cnt_1$whas =
	     EN_wbuf_29_portA_request_put &&
	     (!wbuf_29_portA_request_put_BITS_17_TO_16__q235[1] ||
	      wbuf_29_portA_request_put_BITS_17_TO_16__q235[0]) ;
  assign wbuffer_29_serverAdapterA_s1_1$wget =
	     EN_wbuf_29_portAClear ?
	       2'd0 :
	       MUX_wbuffer_29_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_29_serverAdapterA_s1_1$whas =
	     EN_wbuf_29_portAClear || EN_wbuf_29_portA_request_put ;
  assign wbuffer_29_serverAdapterB_outData_enqData$whas =
	     wbuffer_29_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_29_serverAdapterB_s1[1] &&
	     wbuffer_29_serverAdapterB_s1[0] ;
  assign wbuffer_29_serverAdapterB_outData_outData$whas =
	     wbuffer_29_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_29_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_29_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_29_serverAdapterB_cnt_1$whas =
	     EN_wbuf_29_portB_request_put &&
	     (!wbuf_29_portB_request_put_BITS_17_TO_16__q236[1] ||
	      wbuf_29_portB_request_put_BITS_17_TO_16__q236[0]) ;
  assign wbuffer_29_serverAdapterB_s1_1$wget =
	     EN_wbuf_29_portBClear ?
	       2'd0 :
	       MUX_wbuffer_29_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_29_serverAdapterB_s1_1$whas =
	     EN_wbuf_29_portBClear || EN_wbuf_29_portB_request_put ;
  assign wbuffer_30_serverAdapterA_outData_enqData$whas =
	     wbuffer_30_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_30_serverAdapterA_s1[1] &&
	     wbuffer_30_serverAdapterA_s1[0] ;
  assign wbuffer_30_serverAdapterA_outData_outData$whas =
	     wbuffer_30_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_30_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_30_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_30_serverAdapterA_cnt_1$whas =
	     EN_wbuf_30_portA_request_put &&
	     (!wbuf_30_portA_request_put_BITS_17_TO_16__q239[1] ||
	      wbuf_30_portA_request_put_BITS_17_TO_16__q239[0]) ;
  assign wbuffer_30_serverAdapterA_s1_1$wget =
	     EN_wbuf_30_portAClear ?
	       2'd0 :
	       MUX_wbuffer_30_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_30_serverAdapterA_s1_1$whas =
	     EN_wbuf_30_portAClear || EN_wbuf_30_portA_request_put ;
  assign wbuffer_30_serverAdapterB_outData_enqData$whas =
	     wbuffer_30_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_30_serverAdapterB_s1[1] &&
	     wbuffer_30_serverAdapterB_s1[0] ;
  assign wbuffer_30_serverAdapterB_outData_outData$whas =
	     wbuffer_30_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_30_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_30_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_30_serverAdapterB_cnt_1$whas =
	     EN_wbuf_30_portB_request_put &&
	     (!wbuf_30_portB_request_put_BITS_17_TO_16__q240[1] ||
	      wbuf_30_portB_request_put_BITS_17_TO_16__q240[0]) ;
  assign wbuffer_30_serverAdapterB_s1_1$wget =
	     EN_wbuf_30_portBClear ?
	       2'd0 :
	       MUX_wbuffer_30_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_30_serverAdapterB_s1_1$whas =
	     EN_wbuf_30_portBClear || EN_wbuf_30_portB_request_put ;
  assign wbuffer_31_serverAdapterA_outData_enqData$whas =
	     wbuffer_31_serverAdapterA_outDataCore$FULL_N &&
	     wbuffer_31_serverAdapterA_s1[1] &&
	     wbuffer_31_serverAdapterA_s1[0] ;
  assign wbuffer_31_serverAdapterA_outData_outData$whas =
	     wbuffer_31_serverAdapterA_outDataCore$EMPTY_N ||
	     !wbuffer_31_serverAdapterA_outDataCore$EMPTY_N &&
	     wbuffer_31_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_31_serverAdapterA_cnt_1$whas =
	     EN_wbuf_31_portA_request_put &&
	     (!wbuf_31_portA_request_put_BITS_17_TO_16__q241[1] ||
	      wbuf_31_portA_request_put_BITS_17_TO_16__q241[0]) ;
  assign wbuffer_31_serverAdapterA_s1_1$wget =
	     EN_wbuf_31_portAClear ?
	       2'd0 :
	       MUX_wbuffer_31_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign wbuffer_31_serverAdapterA_s1_1$whas =
	     EN_wbuf_31_portAClear || EN_wbuf_31_portA_request_put ;
  assign wbuffer_31_serverAdapterB_outData_enqData$whas =
	     wbuffer_31_serverAdapterB_outDataCore$FULL_N &&
	     wbuffer_31_serverAdapterB_s1[1] &&
	     wbuffer_31_serverAdapterB_s1[0] ;
  assign wbuffer_31_serverAdapterB_outData_outData$whas =
	     wbuffer_31_serverAdapterB_outDataCore$EMPTY_N ||
	     !wbuffer_31_serverAdapterB_outDataCore$EMPTY_N &&
	     wbuffer_31_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_31_serverAdapterB_cnt_1$whas =
	     EN_wbuf_31_portB_request_put &&
	     (!wbuf_31_portB_request_put_BITS_17_TO_16__q242[1] ||
	      wbuf_31_portB_request_put_BITS_17_TO_16__q242[0]) ;
  assign wbuffer_31_serverAdapterB_s1_1$wget =
	     EN_wbuf_31_portBClear ?
	       2'd0 :
	       MUX_wbuffer_31_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign wbuffer_31_serverAdapterB_s1_1$whas =
	     EN_wbuf_31_portBClear || EN_wbuf_31_portB_request_put ;
  assign obuffer1_0_serverAdapterA_outData_enqData$whas =
	     obuffer1_0_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_0_serverAdapterA_s1[1] &&
	     obuffer1_0_serverAdapterA_s1[0] ;
  assign obuffer1_0_serverAdapterA_outData_outData$whas =
	     obuffer1_0_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_0_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_0_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_0_serverAdapterA_cnt_1$whas =
	     EN_obuf1_0_portA_request_put &&
	     (!obuf1_0_portA_request_put_BITS_41_TO_40__q65[1] ||
	      obuf1_0_portA_request_put_BITS_41_TO_40__q65[0]) ;
  assign obuffer1_0_serverAdapterA_s1_1$wget =
	     EN_obuf1_0_portAClear ?
	       2'd0 :
	       MUX_obuffer1_0_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_0_serverAdapterA_s1_1$whas =
	     EN_obuf1_0_portAClear || EN_obuf1_0_portA_request_put ;
  assign obuffer1_0_serverAdapterB_outData_enqData$whas =
	     obuffer1_0_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_0_serverAdapterB_s1[1] &&
	     obuffer1_0_serverAdapterB_s1[0] ;
  assign obuffer1_0_serverAdapterB_outData_outData$whas =
	     obuffer1_0_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_0_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_0_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_0_serverAdapterB_cnt_1$whas =
	     EN_obuf1_0_portB_request_put &&
	     (!obuf1_0_portB_request_put_BITS_41_TO_40__q66[1] ||
	      obuf1_0_portB_request_put_BITS_41_TO_40__q66[0]) ;
  assign obuffer1_0_serverAdapterB_s1_1$wget =
	     EN_obuf1_0_portBClear ?
	       2'd0 :
	       MUX_obuffer1_0_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_0_serverAdapterB_s1_1$whas =
	     EN_obuf1_0_portBClear || EN_obuf1_0_portB_request_put ;
  assign obuffer1_1_serverAdapterA_outData_enqData$whas =
	     obuffer1_1_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_1_serverAdapterA_s1[1] &&
	     obuffer1_1_serverAdapterA_s1[0] ;
  assign obuffer1_1_serverAdapterA_outData_outData$whas =
	     obuffer1_1_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_1_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_1_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_1_serverAdapterA_cnt_1$whas =
	     EN_obuf1_1_portA_request_put &&
	     (!obuf1_1_portA_request_put_BITS_41_TO_40__q87[1] ||
	      obuf1_1_portA_request_put_BITS_41_TO_40__q87[0]) ;
  assign obuffer1_1_serverAdapterA_s1_1$wget =
	     EN_obuf1_1_portAClear ?
	       2'd0 :
	       MUX_obuffer1_1_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_1_serverAdapterA_s1_1$whas =
	     EN_obuf1_1_portAClear || EN_obuf1_1_portA_request_put ;
  assign obuffer1_1_serverAdapterB_outData_enqData$whas =
	     obuffer1_1_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_1_serverAdapterB_s1[1] &&
	     obuffer1_1_serverAdapterB_s1[0] ;
  assign obuffer1_1_serverAdapterB_outData_outData$whas =
	     obuffer1_1_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_1_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_1_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_1_serverAdapterB_cnt_1$whas =
	     EN_obuf1_1_portB_request_put &&
	     (!obuf1_1_portB_request_put_BITS_41_TO_40__q88[1] ||
	      obuf1_1_portB_request_put_BITS_41_TO_40__q88[0]) ;
  assign obuffer1_1_serverAdapterB_s1_1$wget =
	     EN_obuf1_1_portBClear ?
	       2'd0 :
	       MUX_obuffer1_1_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_1_serverAdapterB_s1_1$whas =
	     EN_obuf1_1_portBClear || EN_obuf1_1_portB_request_put ;
  assign obuffer1_2_serverAdapterA_outData_enqData$whas =
	     obuffer1_2_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_2_serverAdapterA_s1[1] &&
	     obuffer1_2_serverAdapterA_s1[0] ;
  assign obuffer1_2_serverAdapterA_outData_outData$whas =
	     obuffer1_2_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_2_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_2_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_2_serverAdapterA_cnt_1$whas =
	     EN_obuf1_2_portA_request_put &&
	     (!obuf1_2_portA_request_put_BITS_41_TO_40__q109[1] ||
	      obuf1_2_portA_request_put_BITS_41_TO_40__q109[0]) ;
  assign obuffer1_2_serverAdapterA_s1_1$wget =
	     EN_obuf1_2_portAClear ?
	       2'd0 :
	       MUX_obuffer1_2_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_2_serverAdapterA_s1_1$whas =
	     EN_obuf1_2_portAClear || EN_obuf1_2_portA_request_put ;
  assign obuffer1_2_serverAdapterB_outData_enqData$whas =
	     obuffer1_2_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_2_serverAdapterB_s1[1] &&
	     obuffer1_2_serverAdapterB_s1[0] ;
  assign obuffer1_2_serverAdapterB_outData_outData$whas =
	     obuffer1_2_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_2_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_2_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_2_serverAdapterB_cnt_1$whas =
	     EN_obuf1_2_portB_request_put &&
	     (!obuf1_2_portB_request_put_BITS_41_TO_40__q110[1] ||
	      obuf1_2_portB_request_put_BITS_41_TO_40__q110[0]) ;
  assign obuffer1_2_serverAdapterB_s1_1$wget =
	     EN_obuf1_2_portBClear ?
	       2'd0 :
	       MUX_obuffer1_2_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_2_serverAdapterB_s1_1$whas =
	     EN_obuf1_2_portBClear || EN_obuf1_2_portB_request_put ;
  assign obuffer1_3_serverAdapterA_outData_enqData$whas =
	     obuffer1_3_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_3_serverAdapterA_s1[1] &&
	     obuffer1_3_serverAdapterA_s1[0] ;
  assign obuffer1_3_serverAdapterA_outData_outData$whas =
	     obuffer1_3_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_3_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_3_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_3_serverAdapterA_cnt_1$whas =
	     EN_obuf1_3_portA_request_put &&
	     (!obuf1_3_portA_request_put_BITS_41_TO_40__q115[1] ||
	      obuf1_3_portA_request_put_BITS_41_TO_40__q115[0]) ;
  assign obuffer1_3_serverAdapterA_s1_1$wget =
	     EN_obuf1_3_portAClear ?
	       2'd0 :
	       MUX_obuffer1_3_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_3_serverAdapterA_s1_1$whas =
	     EN_obuf1_3_portAClear || EN_obuf1_3_portA_request_put ;
  assign obuffer1_3_serverAdapterB_outData_enqData$whas =
	     obuffer1_3_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_3_serverAdapterB_s1[1] &&
	     obuffer1_3_serverAdapterB_s1[0] ;
  assign obuffer1_3_serverAdapterB_outData_outData$whas =
	     obuffer1_3_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_3_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_3_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_3_serverAdapterB_cnt_1$whas =
	     EN_obuf1_3_portB_request_put &&
	     (!obuf1_3_portB_request_put_BITS_41_TO_40__q116[1] ||
	      obuf1_3_portB_request_put_BITS_41_TO_40__q116[0]) ;
  assign obuffer1_3_serverAdapterB_s1_1$wget =
	     EN_obuf1_3_portBClear ?
	       2'd0 :
	       MUX_obuffer1_3_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_3_serverAdapterB_s1_1$whas =
	     EN_obuf1_3_portBClear || EN_obuf1_3_portB_request_put ;
  assign obuffer1_4_serverAdapterA_outData_enqData$whas =
	     obuffer1_4_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_4_serverAdapterA_s1[1] &&
	     obuffer1_4_serverAdapterA_s1[0] ;
  assign obuffer1_4_serverAdapterA_outData_outData$whas =
	     obuffer1_4_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_4_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_4_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_4_serverAdapterA_cnt_1$whas =
	     EN_obuf1_4_portA_request_put &&
	     (!obuf1_4_portA_request_put_BITS_41_TO_40__q117[1] ||
	      obuf1_4_portA_request_put_BITS_41_TO_40__q117[0]) ;
  assign obuffer1_4_serverAdapterA_s1_1$wget =
	     EN_obuf1_4_portAClear ?
	       2'd0 :
	       MUX_obuffer1_4_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_4_serverAdapterA_s1_1$whas =
	     EN_obuf1_4_portAClear || EN_obuf1_4_portA_request_put ;
  assign obuffer1_4_serverAdapterB_outData_enqData$whas =
	     obuffer1_4_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_4_serverAdapterB_s1[1] &&
	     obuffer1_4_serverAdapterB_s1[0] ;
  assign obuffer1_4_serverAdapterB_outData_outData$whas =
	     obuffer1_4_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_4_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_4_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_4_serverAdapterB_cnt_1$whas =
	     EN_obuf1_4_portB_request_put &&
	     (!obuf1_4_portB_request_put_BITS_41_TO_40__q118[1] ||
	      obuf1_4_portB_request_put_BITS_41_TO_40__q118[0]) ;
  assign obuffer1_4_serverAdapterB_s1_1$wget =
	     EN_obuf1_4_portBClear ?
	       2'd0 :
	       MUX_obuffer1_4_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_4_serverAdapterB_s1_1$whas =
	     EN_obuf1_4_portBClear || EN_obuf1_4_portB_request_put ;
  assign obuffer1_5_serverAdapterA_outData_enqData$whas =
	     obuffer1_5_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_5_serverAdapterA_s1[1] &&
	     obuffer1_5_serverAdapterA_s1[0] ;
  assign obuffer1_5_serverAdapterA_outData_outData$whas =
	     obuffer1_5_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_5_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_5_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_5_serverAdapterA_cnt_1$whas =
	     EN_obuf1_5_portA_request_put &&
	     (!obuf1_5_portA_request_put_BITS_41_TO_40__q119[1] ||
	      obuf1_5_portA_request_put_BITS_41_TO_40__q119[0]) ;
  assign obuffer1_5_serverAdapterA_s1_1$wget =
	     EN_obuf1_5_portAClear ?
	       2'd0 :
	       MUX_obuffer1_5_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_5_serverAdapterA_s1_1$whas =
	     EN_obuf1_5_portAClear || EN_obuf1_5_portA_request_put ;
  assign obuffer1_5_serverAdapterB_outData_enqData$whas =
	     obuffer1_5_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_5_serverAdapterB_s1[1] &&
	     obuffer1_5_serverAdapterB_s1[0] ;
  assign obuffer1_5_serverAdapterB_outData_outData$whas =
	     obuffer1_5_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_5_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_5_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_5_serverAdapterB_cnt_1$whas =
	     EN_obuf1_5_portB_request_put &&
	     (!obuf1_5_portB_request_put_BITS_41_TO_40__q120[1] ||
	      obuf1_5_portB_request_put_BITS_41_TO_40__q120[0]) ;
  assign obuffer1_5_serverAdapterB_s1_1$wget =
	     EN_obuf1_5_portBClear ?
	       2'd0 :
	       MUX_obuffer1_5_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_5_serverAdapterB_s1_1$whas =
	     EN_obuf1_5_portBClear || EN_obuf1_5_portB_request_put ;
  assign obuffer1_6_serverAdapterA_outData_enqData$whas =
	     obuffer1_6_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_6_serverAdapterA_s1[1] &&
	     obuffer1_6_serverAdapterA_s1[0] ;
  assign obuffer1_6_serverAdapterA_outData_outData$whas =
	     obuffer1_6_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_6_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_6_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_6_serverAdapterA_cnt_1$whas =
	     EN_obuf1_6_portA_request_put &&
	     (!obuf1_6_portA_request_put_BITS_41_TO_40__q121[1] ||
	      obuf1_6_portA_request_put_BITS_41_TO_40__q121[0]) ;
  assign obuffer1_6_serverAdapterA_s1_1$wget =
	     EN_obuf1_6_portAClear ?
	       2'd0 :
	       MUX_obuffer1_6_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_6_serverAdapterA_s1_1$whas =
	     EN_obuf1_6_portAClear || EN_obuf1_6_portA_request_put ;
  assign obuffer1_6_serverAdapterB_outData_enqData$whas =
	     obuffer1_6_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_6_serverAdapterB_s1[1] &&
	     obuffer1_6_serverAdapterB_s1[0] ;
  assign obuffer1_6_serverAdapterB_outData_outData$whas =
	     obuffer1_6_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_6_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_6_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_6_serverAdapterB_cnt_1$whas =
	     EN_obuf1_6_portB_request_put &&
	     (!obuf1_6_portB_request_put_BITS_41_TO_40__q122[1] ||
	      obuf1_6_portB_request_put_BITS_41_TO_40__q122[0]) ;
  assign obuffer1_6_serverAdapterB_s1_1$wget =
	     EN_obuf1_6_portBClear ?
	       2'd0 :
	       MUX_obuffer1_6_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_6_serverAdapterB_s1_1$whas =
	     EN_obuf1_6_portBClear || EN_obuf1_6_portB_request_put ;
  assign obuffer1_7_serverAdapterA_outData_enqData$whas =
	     obuffer1_7_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_7_serverAdapterA_s1[1] &&
	     obuffer1_7_serverAdapterA_s1[0] ;
  assign obuffer1_7_serverAdapterA_outData_outData$whas =
	     obuffer1_7_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_7_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_7_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_7_serverAdapterA_cnt_1$whas =
	     EN_obuf1_7_portA_request_put &&
	     (!obuf1_7_portA_request_put_BITS_41_TO_40__q123[1] ||
	      obuf1_7_portA_request_put_BITS_41_TO_40__q123[0]) ;
  assign obuffer1_7_serverAdapterA_s1_1$wget =
	     EN_obuf1_7_portAClear ?
	       2'd0 :
	       MUX_obuffer1_7_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_7_serverAdapterA_s1_1$whas =
	     EN_obuf1_7_portAClear || EN_obuf1_7_portA_request_put ;
  assign obuffer1_7_serverAdapterB_outData_enqData$whas =
	     obuffer1_7_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_7_serverAdapterB_s1[1] &&
	     obuffer1_7_serverAdapterB_s1[0] ;
  assign obuffer1_7_serverAdapterB_outData_outData$whas =
	     obuffer1_7_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_7_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_7_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_7_serverAdapterB_cnt_1$whas =
	     EN_obuf1_7_portB_request_put &&
	     (!obuf1_7_portB_request_put_BITS_41_TO_40__q124[1] ||
	      obuf1_7_portB_request_put_BITS_41_TO_40__q124[0]) ;
  assign obuffer1_7_serverAdapterB_s1_1$wget =
	     EN_obuf1_7_portBClear ?
	       2'd0 :
	       MUX_obuffer1_7_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_7_serverAdapterB_s1_1$whas =
	     EN_obuf1_7_portBClear || EN_obuf1_7_portB_request_put ;
  assign obuffer1_8_serverAdapterA_outData_enqData$whas =
	     obuffer1_8_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_8_serverAdapterA_s1[1] &&
	     obuffer1_8_serverAdapterA_s1[0] ;
  assign obuffer1_8_serverAdapterA_outData_outData$whas =
	     obuffer1_8_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_8_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_8_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_8_serverAdapterA_cnt_1$whas =
	     EN_obuf1_8_portA_request_put &&
	     (!obuf1_8_portA_request_put_BITS_41_TO_40__q125[1] ||
	      obuf1_8_portA_request_put_BITS_41_TO_40__q125[0]) ;
  assign obuffer1_8_serverAdapterA_s1_1$wget =
	     EN_obuf1_8_portAClear ?
	       2'd0 :
	       MUX_obuffer1_8_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_8_serverAdapterA_s1_1$whas =
	     EN_obuf1_8_portAClear || EN_obuf1_8_portA_request_put ;
  assign obuffer1_8_serverAdapterB_outData_enqData$whas =
	     obuffer1_8_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_8_serverAdapterB_s1[1] &&
	     obuffer1_8_serverAdapterB_s1[0] ;
  assign obuffer1_8_serverAdapterB_outData_outData$whas =
	     obuffer1_8_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_8_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_8_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_8_serverAdapterB_cnt_1$whas =
	     EN_obuf1_8_portB_request_put &&
	     (!obuf1_8_portB_request_put_BITS_41_TO_40__q126[1] ||
	      obuf1_8_portB_request_put_BITS_41_TO_40__q126[0]) ;
  assign obuffer1_8_serverAdapterB_s1_1$wget =
	     EN_obuf1_8_portBClear ?
	       2'd0 :
	       MUX_obuffer1_8_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_8_serverAdapterB_s1_1$whas =
	     EN_obuf1_8_portBClear || EN_obuf1_8_portB_request_put ;
  assign obuffer1_9_serverAdapterA_outData_enqData$whas =
	     obuffer1_9_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_9_serverAdapterA_s1[1] &&
	     obuffer1_9_serverAdapterA_s1[0] ;
  assign obuffer1_9_serverAdapterA_outData_outData$whas =
	     obuffer1_9_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_9_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_9_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_9_serverAdapterA_cnt_1$whas =
	     EN_obuf1_9_portA_request_put &&
	     (!obuf1_9_portA_request_put_BITS_41_TO_40__q127[1] ||
	      obuf1_9_portA_request_put_BITS_41_TO_40__q127[0]) ;
  assign obuffer1_9_serverAdapterA_s1_1$wget =
	     EN_obuf1_9_portAClear ?
	       2'd0 :
	       MUX_obuffer1_9_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_9_serverAdapterA_s1_1$whas =
	     EN_obuf1_9_portAClear || EN_obuf1_9_portA_request_put ;
  assign obuffer1_9_serverAdapterB_outData_enqData$whas =
	     obuffer1_9_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_9_serverAdapterB_s1[1] &&
	     obuffer1_9_serverAdapterB_s1[0] ;
  assign obuffer1_9_serverAdapterB_outData_outData$whas =
	     obuffer1_9_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_9_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_9_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_9_serverAdapterB_cnt_1$whas =
	     EN_obuf1_9_portB_request_put &&
	     (!obuf1_9_portB_request_put_BITS_41_TO_40__q128[1] ||
	      obuf1_9_portB_request_put_BITS_41_TO_40__q128[0]) ;
  assign obuffer1_9_serverAdapterB_s1_1$wget =
	     EN_obuf1_9_portBClear ?
	       2'd0 :
	       MUX_obuffer1_9_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_9_serverAdapterB_s1_1$whas =
	     EN_obuf1_9_portBClear || EN_obuf1_9_portB_request_put ;
  assign obuffer1_10_serverAdapterA_outData_enqData$whas =
	     obuffer1_10_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_10_serverAdapterA_s1[1] &&
	     obuffer1_10_serverAdapterA_s1[0] ;
  assign obuffer1_10_serverAdapterA_outData_outData$whas =
	     obuffer1_10_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_10_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_10_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_10_serverAdapterA_cnt_1$whas =
	     EN_obuf1_10_portA_request_put &&
	     (!obuf1_10_portA_request_put_BITS_41_TO_40__q67[1] ||
	      obuf1_10_portA_request_put_BITS_41_TO_40__q67[0]) ;
  assign obuffer1_10_serverAdapterA_s1_1$wget =
	     EN_obuf1_10_portAClear ?
	       2'd0 :
	       MUX_obuffer1_10_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_10_serverAdapterA_s1_1$whas =
	     EN_obuf1_10_portAClear || EN_obuf1_10_portA_request_put ;
  assign obuffer1_10_serverAdapterB_outData_enqData$whas =
	     obuffer1_10_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_10_serverAdapterB_s1[1] &&
	     obuffer1_10_serverAdapterB_s1[0] ;
  assign obuffer1_10_serverAdapterB_outData_outData$whas =
	     obuffer1_10_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_10_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_10_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_10_serverAdapterB_cnt_1$whas =
	     EN_obuf1_10_portB_request_put &&
	     (!obuf1_10_portB_request_put_BITS_41_TO_40__q68[1] ||
	      obuf1_10_portB_request_put_BITS_41_TO_40__q68[0]) ;
  assign obuffer1_10_serverAdapterB_s1_1$wget =
	     EN_obuf1_10_portBClear ?
	       2'd0 :
	       MUX_obuffer1_10_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_10_serverAdapterB_s1_1$whas =
	     EN_obuf1_10_portBClear || EN_obuf1_10_portB_request_put ;
  assign obuffer1_11_serverAdapterA_outData_enqData$whas =
	     obuffer1_11_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_11_serverAdapterA_s1[1] &&
	     obuffer1_11_serverAdapterA_s1[0] ;
  assign obuffer1_11_serverAdapterA_outData_outData$whas =
	     obuffer1_11_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_11_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_11_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_11_serverAdapterA_cnt_1$whas =
	     EN_obuf1_11_portA_request_put &&
	     (!obuf1_11_portA_request_put_BITS_41_TO_40__q69[1] ||
	      obuf1_11_portA_request_put_BITS_41_TO_40__q69[0]) ;
  assign obuffer1_11_serverAdapterA_s1_1$wget =
	     EN_obuf1_11_portAClear ?
	       2'd0 :
	       MUX_obuffer1_11_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_11_serverAdapterA_s1_1$whas =
	     EN_obuf1_11_portAClear || EN_obuf1_11_portA_request_put ;
  assign obuffer1_11_serverAdapterB_outData_enqData$whas =
	     obuffer1_11_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_11_serverAdapterB_s1[1] &&
	     obuffer1_11_serverAdapterB_s1[0] ;
  assign obuffer1_11_serverAdapterB_outData_outData$whas =
	     obuffer1_11_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_11_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_11_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_11_serverAdapterB_cnt_1$whas =
	     EN_obuf1_11_portB_request_put &&
	     (!obuf1_11_portB_request_put_BITS_41_TO_40__q70[1] ||
	      obuf1_11_portB_request_put_BITS_41_TO_40__q70[0]) ;
  assign obuffer1_11_serverAdapterB_s1_1$wget =
	     EN_obuf1_11_portBClear ?
	       2'd0 :
	       MUX_obuffer1_11_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_11_serverAdapterB_s1_1$whas =
	     EN_obuf1_11_portBClear || EN_obuf1_11_portB_request_put ;
  assign obuffer1_12_serverAdapterA_outData_enqData$whas =
	     obuffer1_12_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_12_serverAdapterA_s1[1] &&
	     obuffer1_12_serverAdapterA_s1[0] ;
  assign obuffer1_12_serverAdapterA_outData_outData$whas =
	     obuffer1_12_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_12_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_12_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_12_serverAdapterA_cnt_1$whas =
	     EN_obuf1_12_portA_request_put &&
	     (!obuf1_12_portA_request_put_BITS_41_TO_40__q71[1] ||
	      obuf1_12_portA_request_put_BITS_41_TO_40__q71[0]) ;
  assign obuffer1_12_serverAdapterA_s1_1$wget =
	     EN_obuf1_12_portAClear ?
	       2'd0 :
	       MUX_obuffer1_12_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_12_serverAdapterA_s1_1$whas =
	     EN_obuf1_12_portAClear || EN_obuf1_12_portA_request_put ;
  assign obuffer1_12_serverAdapterB_outData_enqData$whas =
	     obuffer1_12_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_12_serverAdapterB_s1[1] &&
	     obuffer1_12_serverAdapterB_s1[0] ;
  assign obuffer1_12_serverAdapterB_outData_outData$whas =
	     obuffer1_12_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_12_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_12_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_12_serverAdapterB_cnt_1$whas =
	     EN_obuf1_12_portB_request_put &&
	     (!obuf1_12_portB_request_put_BITS_41_TO_40__q72[1] ||
	      obuf1_12_portB_request_put_BITS_41_TO_40__q72[0]) ;
  assign obuffer1_12_serverAdapterB_s1_1$wget =
	     EN_obuf1_12_portBClear ?
	       2'd0 :
	       MUX_obuffer1_12_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_12_serverAdapterB_s1_1$whas =
	     EN_obuf1_12_portBClear || EN_obuf1_12_portB_request_put ;
  assign obuffer1_13_serverAdapterA_outData_enqData$whas =
	     obuffer1_13_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_13_serverAdapterA_s1[1] &&
	     obuffer1_13_serverAdapterA_s1[0] ;
  assign obuffer1_13_serverAdapterA_outData_outData$whas =
	     obuffer1_13_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_13_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_13_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_13_serverAdapterA_cnt_1$whas =
	     EN_obuf1_13_portA_request_put &&
	     (!obuf1_13_portA_request_put_BITS_41_TO_40__q73[1] ||
	      obuf1_13_portA_request_put_BITS_41_TO_40__q73[0]) ;
  assign obuffer1_13_serverAdapterA_s1_1$wget =
	     EN_obuf1_13_portAClear ?
	       2'd0 :
	       MUX_obuffer1_13_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_13_serverAdapterA_s1_1$whas =
	     EN_obuf1_13_portAClear || EN_obuf1_13_portA_request_put ;
  assign obuffer1_13_serverAdapterB_outData_enqData$whas =
	     obuffer1_13_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_13_serverAdapterB_s1[1] &&
	     obuffer1_13_serverAdapterB_s1[0] ;
  assign obuffer1_13_serverAdapterB_outData_outData$whas =
	     obuffer1_13_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_13_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_13_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_13_serverAdapterB_cnt_1$whas =
	     EN_obuf1_13_portB_request_put &&
	     (!obuf1_13_portB_request_put_BITS_41_TO_40__q74[1] ||
	      obuf1_13_portB_request_put_BITS_41_TO_40__q74[0]) ;
  assign obuffer1_13_serverAdapterB_s1_1$wget =
	     EN_obuf1_13_portBClear ?
	       2'd0 :
	       MUX_obuffer1_13_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_13_serverAdapterB_s1_1$whas =
	     EN_obuf1_13_portBClear || EN_obuf1_13_portB_request_put ;
  assign obuffer1_14_serverAdapterA_outData_enqData$whas =
	     obuffer1_14_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_14_serverAdapterA_s1[1] &&
	     obuffer1_14_serverAdapterA_s1[0] ;
  assign obuffer1_14_serverAdapterA_outData_outData$whas =
	     obuffer1_14_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_14_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_14_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_14_serverAdapterA_cnt_1$whas =
	     EN_obuf1_14_portA_request_put &&
	     (!obuf1_14_portA_request_put_BITS_41_TO_40__q75[1] ||
	      obuf1_14_portA_request_put_BITS_41_TO_40__q75[0]) ;
  assign obuffer1_14_serverAdapterA_s1_1$wget =
	     EN_obuf1_14_portAClear ?
	       2'd0 :
	       MUX_obuffer1_14_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_14_serverAdapterA_s1_1$whas =
	     EN_obuf1_14_portAClear || EN_obuf1_14_portA_request_put ;
  assign obuffer1_14_serverAdapterB_outData_enqData$whas =
	     obuffer1_14_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_14_serverAdapterB_s1[1] &&
	     obuffer1_14_serverAdapterB_s1[0] ;
  assign obuffer1_14_serverAdapterB_outData_outData$whas =
	     obuffer1_14_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_14_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_14_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_14_serverAdapterB_cnt_1$whas =
	     EN_obuf1_14_portB_request_put &&
	     (!obuf1_14_portB_request_put_BITS_41_TO_40__q76[1] ||
	      obuf1_14_portB_request_put_BITS_41_TO_40__q76[0]) ;
  assign obuffer1_14_serverAdapterB_s1_1$wget =
	     EN_obuf1_14_portBClear ?
	       2'd0 :
	       MUX_obuffer1_14_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_14_serverAdapterB_s1_1$whas =
	     EN_obuf1_14_portBClear || EN_obuf1_14_portB_request_put ;
  assign obuffer1_15_serverAdapterA_outData_enqData$whas =
	     obuffer1_15_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_15_serverAdapterA_s1[1] &&
	     obuffer1_15_serverAdapterA_s1[0] ;
  assign obuffer1_15_serverAdapterA_outData_outData$whas =
	     obuffer1_15_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_15_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_15_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_15_serverAdapterA_cnt_1$whas =
	     EN_obuf1_15_portA_request_put &&
	     (!obuf1_15_portA_request_put_BITS_41_TO_40__q77[1] ||
	      obuf1_15_portA_request_put_BITS_41_TO_40__q77[0]) ;
  assign obuffer1_15_serverAdapterA_s1_1$wget =
	     EN_obuf1_15_portAClear ?
	       2'd0 :
	       MUX_obuffer1_15_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_15_serverAdapterA_s1_1$whas =
	     EN_obuf1_15_portAClear || EN_obuf1_15_portA_request_put ;
  assign obuffer1_15_serverAdapterB_outData_enqData$whas =
	     obuffer1_15_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_15_serverAdapterB_s1[1] &&
	     obuffer1_15_serverAdapterB_s1[0] ;
  assign obuffer1_15_serverAdapterB_outData_outData$whas =
	     obuffer1_15_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_15_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_15_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_15_serverAdapterB_cnt_1$whas =
	     EN_obuf1_15_portB_request_put &&
	     (!obuf1_15_portB_request_put_BITS_41_TO_40__q78[1] ||
	      obuf1_15_portB_request_put_BITS_41_TO_40__q78[0]) ;
  assign obuffer1_15_serverAdapterB_s1_1$wget =
	     EN_obuf1_15_portBClear ?
	       2'd0 :
	       MUX_obuffer1_15_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_15_serverAdapterB_s1_1$whas =
	     EN_obuf1_15_portBClear || EN_obuf1_15_portB_request_put ;
  assign obuffer1_16_serverAdapterA_outData_enqData$whas =
	     obuffer1_16_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_16_serverAdapterA_s1[1] &&
	     obuffer1_16_serverAdapterA_s1[0] ;
  assign obuffer1_16_serverAdapterA_outData_outData$whas =
	     obuffer1_16_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_16_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_16_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_16_serverAdapterA_cnt_1$whas =
	     EN_obuf1_16_portA_request_put &&
	     (!obuf1_16_portA_request_put_BITS_41_TO_40__q79[1] ||
	      obuf1_16_portA_request_put_BITS_41_TO_40__q79[0]) ;
  assign obuffer1_16_serverAdapterA_s1_1$wget =
	     EN_obuf1_16_portAClear ?
	       2'd0 :
	       MUX_obuffer1_16_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_16_serverAdapterA_s1_1$whas =
	     EN_obuf1_16_portAClear || EN_obuf1_16_portA_request_put ;
  assign obuffer1_16_serverAdapterB_outData_enqData$whas =
	     obuffer1_16_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_16_serverAdapterB_s1[1] &&
	     obuffer1_16_serverAdapterB_s1[0] ;
  assign obuffer1_16_serverAdapterB_outData_outData$whas =
	     obuffer1_16_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_16_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_16_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_16_serverAdapterB_cnt_1$whas =
	     EN_obuf1_16_portB_request_put &&
	     (!obuf1_16_portB_request_put_BITS_41_TO_40__q80[1] ||
	      obuf1_16_portB_request_put_BITS_41_TO_40__q80[0]) ;
  assign obuffer1_16_serverAdapterB_s1_1$wget =
	     EN_obuf1_16_portBClear ?
	       2'd0 :
	       MUX_obuffer1_16_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_16_serverAdapterB_s1_1$whas =
	     EN_obuf1_16_portBClear || EN_obuf1_16_portB_request_put ;
  assign obuffer1_17_serverAdapterA_outData_enqData$whas =
	     obuffer1_17_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_17_serverAdapterA_s1[1] &&
	     obuffer1_17_serverAdapterA_s1[0] ;
  assign obuffer1_17_serverAdapterA_outData_outData$whas =
	     obuffer1_17_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_17_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_17_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_17_serverAdapterA_cnt_1$whas =
	     EN_obuf1_17_portA_request_put &&
	     (!obuf1_17_portA_request_put_BITS_41_TO_40__q81[1] ||
	      obuf1_17_portA_request_put_BITS_41_TO_40__q81[0]) ;
  assign obuffer1_17_serverAdapterA_s1_1$wget =
	     EN_obuf1_17_portAClear ?
	       2'd0 :
	       MUX_obuffer1_17_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_17_serverAdapterA_s1_1$whas =
	     EN_obuf1_17_portAClear || EN_obuf1_17_portA_request_put ;
  assign obuffer1_17_serverAdapterB_outData_enqData$whas =
	     obuffer1_17_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_17_serverAdapterB_s1[1] &&
	     obuffer1_17_serverAdapterB_s1[0] ;
  assign obuffer1_17_serverAdapterB_outData_outData$whas =
	     obuffer1_17_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_17_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_17_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_17_serverAdapterB_cnt_1$whas =
	     EN_obuf1_17_portB_request_put &&
	     (!obuf1_17_portB_request_put_BITS_41_TO_40__q82[1] ||
	      obuf1_17_portB_request_put_BITS_41_TO_40__q82[0]) ;
  assign obuffer1_17_serverAdapterB_s1_1$wget =
	     EN_obuf1_17_portBClear ?
	       2'd0 :
	       MUX_obuffer1_17_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_17_serverAdapterB_s1_1$whas =
	     EN_obuf1_17_portBClear || EN_obuf1_17_portB_request_put ;
  assign obuffer1_18_serverAdapterA_outData_enqData$whas =
	     obuffer1_18_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_18_serverAdapterA_s1[1] &&
	     obuffer1_18_serverAdapterA_s1[0] ;
  assign obuffer1_18_serverAdapterA_outData_outData$whas =
	     obuffer1_18_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_18_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_18_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_18_serverAdapterA_cnt_1$whas =
	     EN_obuf1_18_portA_request_put &&
	     (!obuf1_18_portA_request_put_BITS_41_TO_40__q83[1] ||
	      obuf1_18_portA_request_put_BITS_41_TO_40__q83[0]) ;
  assign obuffer1_18_serverAdapterA_s1_1$wget =
	     EN_obuf1_18_portAClear ?
	       2'd0 :
	       MUX_obuffer1_18_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_18_serverAdapterA_s1_1$whas =
	     EN_obuf1_18_portAClear || EN_obuf1_18_portA_request_put ;
  assign obuffer1_18_serverAdapterB_outData_enqData$whas =
	     obuffer1_18_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_18_serverAdapterB_s1[1] &&
	     obuffer1_18_serverAdapterB_s1[0] ;
  assign obuffer1_18_serverAdapterB_outData_outData$whas =
	     obuffer1_18_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_18_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_18_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_18_serverAdapterB_cnt_1$whas =
	     EN_obuf1_18_portB_request_put &&
	     (!obuf1_18_portB_request_put_BITS_41_TO_40__q84[1] ||
	      obuf1_18_portB_request_put_BITS_41_TO_40__q84[0]) ;
  assign obuffer1_18_serverAdapterB_s1_1$wget =
	     EN_obuf1_18_portBClear ?
	       2'd0 :
	       MUX_obuffer1_18_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_18_serverAdapterB_s1_1$whas =
	     EN_obuf1_18_portBClear || EN_obuf1_18_portB_request_put ;
  assign obuffer1_19_serverAdapterA_outData_enqData$whas =
	     obuffer1_19_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_19_serverAdapterA_s1[1] &&
	     obuffer1_19_serverAdapterA_s1[0] ;
  assign obuffer1_19_serverAdapterA_outData_outData$whas =
	     obuffer1_19_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_19_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_19_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_19_serverAdapterA_cnt_1$whas =
	     EN_obuf1_19_portA_request_put &&
	     (!obuf1_19_portA_request_put_BITS_41_TO_40__q85[1] ||
	      obuf1_19_portA_request_put_BITS_41_TO_40__q85[0]) ;
  assign obuffer1_19_serverAdapterA_s1_1$wget =
	     EN_obuf1_19_portAClear ?
	       2'd0 :
	       MUX_obuffer1_19_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_19_serverAdapterA_s1_1$whas =
	     EN_obuf1_19_portAClear || EN_obuf1_19_portA_request_put ;
  assign obuffer1_19_serverAdapterB_outData_enqData$whas =
	     obuffer1_19_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_19_serverAdapterB_s1[1] &&
	     obuffer1_19_serverAdapterB_s1[0] ;
  assign obuffer1_19_serverAdapterB_outData_outData$whas =
	     obuffer1_19_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_19_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_19_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_19_serverAdapterB_cnt_1$whas =
	     EN_obuf1_19_portB_request_put &&
	     (!obuf1_19_portB_request_put_BITS_41_TO_40__q86[1] ||
	      obuf1_19_portB_request_put_BITS_41_TO_40__q86[0]) ;
  assign obuffer1_19_serverAdapterB_s1_1$wget =
	     EN_obuf1_19_portBClear ?
	       2'd0 :
	       MUX_obuffer1_19_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_19_serverAdapterB_s1_1$whas =
	     EN_obuf1_19_portBClear || EN_obuf1_19_portB_request_put ;
  assign obuffer1_20_serverAdapterA_outData_enqData$whas =
	     obuffer1_20_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_20_serverAdapterA_s1[1] &&
	     obuffer1_20_serverAdapterA_s1[0] ;
  assign obuffer1_20_serverAdapterA_outData_outData$whas =
	     obuffer1_20_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_20_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_20_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_20_serverAdapterA_cnt_1$whas =
	     EN_obuf1_20_portA_request_put &&
	     (!obuf1_20_portA_request_put_BITS_41_TO_40__q89[1] ||
	      obuf1_20_portA_request_put_BITS_41_TO_40__q89[0]) ;
  assign obuffer1_20_serverAdapterA_s1_1$wget =
	     EN_obuf1_20_portAClear ?
	       2'd0 :
	       MUX_obuffer1_20_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_20_serverAdapterA_s1_1$whas =
	     EN_obuf1_20_portAClear || EN_obuf1_20_portA_request_put ;
  assign obuffer1_20_serverAdapterB_outData_enqData$whas =
	     obuffer1_20_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_20_serverAdapterB_s1[1] &&
	     obuffer1_20_serverAdapterB_s1[0] ;
  assign obuffer1_20_serverAdapterB_outData_outData$whas =
	     obuffer1_20_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_20_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_20_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_20_serverAdapterB_cnt_1$whas =
	     EN_obuf1_20_portB_request_put &&
	     (!obuf1_20_portB_request_put_BITS_41_TO_40__q90[1] ||
	      obuf1_20_portB_request_put_BITS_41_TO_40__q90[0]) ;
  assign obuffer1_20_serverAdapterB_s1_1$wget =
	     EN_obuf1_20_portBClear ?
	       2'd0 :
	       MUX_obuffer1_20_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_20_serverAdapterB_s1_1$whas =
	     EN_obuf1_20_portBClear || EN_obuf1_20_portB_request_put ;
  assign obuffer1_21_serverAdapterA_outData_enqData$whas =
	     obuffer1_21_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_21_serverAdapterA_s1[1] &&
	     obuffer1_21_serverAdapterA_s1[0] ;
  assign obuffer1_21_serverAdapterA_outData_outData$whas =
	     obuffer1_21_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_21_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_21_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_21_serverAdapterA_cnt_1$whas =
	     EN_obuf1_21_portA_request_put &&
	     (!obuf1_21_portA_request_put_BITS_41_TO_40__q91[1] ||
	      obuf1_21_portA_request_put_BITS_41_TO_40__q91[0]) ;
  assign obuffer1_21_serverAdapterA_s1_1$wget =
	     EN_obuf1_21_portAClear ?
	       2'd0 :
	       MUX_obuffer1_21_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_21_serverAdapterA_s1_1$whas =
	     EN_obuf1_21_portAClear || EN_obuf1_21_portA_request_put ;
  assign obuffer1_21_serverAdapterB_outData_enqData$whas =
	     obuffer1_21_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_21_serverAdapterB_s1[1] &&
	     obuffer1_21_serverAdapterB_s1[0] ;
  assign obuffer1_21_serverAdapterB_outData_outData$whas =
	     obuffer1_21_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_21_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_21_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_21_serverAdapterB_cnt_1$whas =
	     EN_obuf1_21_portB_request_put &&
	     (!obuf1_21_portB_request_put_BITS_41_TO_40__q92[1] ||
	      obuf1_21_portB_request_put_BITS_41_TO_40__q92[0]) ;
  assign obuffer1_21_serverAdapterB_s1_1$wget =
	     EN_obuf1_21_portBClear ?
	       2'd0 :
	       MUX_obuffer1_21_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_21_serverAdapterB_s1_1$whas =
	     EN_obuf1_21_portBClear || EN_obuf1_21_portB_request_put ;
  assign obuffer1_22_serverAdapterA_outData_enqData$whas =
	     obuffer1_22_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_22_serverAdapterA_s1[1] &&
	     obuffer1_22_serverAdapterA_s1[0] ;
  assign obuffer1_22_serverAdapterA_outData_outData$whas =
	     obuffer1_22_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_22_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_22_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_22_serverAdapterA_cnt_1$whas =
	     EN_obuf1_22_portA_request_put &&
	     (!obuf1_22_portA_request_put_BITS_41_TO_40__q93[1] ||
	      obuf1_22_portA_request_put_BITS_41_TO_40__q93[0]) ;
  assign obuffer1_22_serverAdapterA_s1_1$wget =
	     EN_obuf1_22_portAClear ?
	       2'd0 :
	       MUX_obuffer1_22_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_22_serverAdapterA_s1_1$whas =
	     EN_obuf1_22_portAClear || EN_obuf1_22_portA_request_put ;
  assign obuffer1_22_serverAdapterB_outData_enqData$whas =
	     obuffer1_22_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_22_serverAdapterB_s1[1] &&
	     obuffer1_22_serverAdapterB_s1[0] ;
  assign obuffer1_22_serverAdapterB_outData_outData$whas =
	     obuffer1_22_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_22_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_22_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_22_serverAdapterB_cnt_1$whas =
	     EN_obuf1_22_portB_request_put &&
	     (!obuf1_22_portB_request_put_BITS_41_TO_40__q94[1] ||
	      obuf1_22_portB_request_put_BITS_41_TO_40__q94[0]) ;
  assign obuffer1_22_serverAdapterB_s1_1$wget =
	     EN_obuf1_22_portBClear ?
	       2'd0 :
	       MUX_obuffer1_22_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_22_serverAdapterB_s1_1$whas =
	     EN_obuf1_22_portBClear || EN_obuf1_22_portB_request_put ;
  assign obuffer1_23_serverAdapterA_outData_enqData$whas =
	     obuffer1_23_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_23_serverAdapterA_s1[1] &&
	     obuffer1_23_serverAdapterA_s1[0] ;
  assign obuffer1_23_serverAdapterA_outData_outData$whas =
	     obuffer1_23_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_23_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_23_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_23_serverAdapterA_cnt_1$whas =
	     EN_obuf1_23_portA_request_put &&
	     (!obuf1_23_portA_request_put_BITS_41_TO_40__q95[1] ||
	      obuf1_23_portA_request_put_BITS_41_TO_40__q95[0]) ;
  assign obuffer1_23_serverAdapterA_s1_1$wget =
	     EN_obuf1_23_portAClear ?
	       2'd0 :
	       MUX_obuffer1_23_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_23_serverAdapterA_s1_1$whas =
	     EN_obuf1_23_portAClear || EN_obuf1_23_portA_request_put ;
  assign obuffer1_23_serverAdapterB_outData_enqData$whas =
	     obuffer1_23_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_23_serverAdapterB_s1[1] &&
	     obuffer1_23_serverAdapterB_s1[0] ;
  assign obuffer1_23_serverAdapterB_outData_outData$whas =
	     obuffer1_23_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_23_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_23_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_23_serverAdapterB_cnt_1$whas =
	     EN_obuf1_23_portB_request_put &&
	     (!obuf1_23_portB_request_put_BITS_41_TO_40__q96[1] ||
	      obuf1_23_portB_request_put_BITS_41_TO_40__q96[0]) ;
  assign obuffer1_23_serverAdapterB_s1_1$wget =
	     EN_obuf1_23_portBClear ?
	       2'd0 :
	       MUX_obuffer1_23_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_23_serverAdapterB_s1_1$whas =
	     EN_obuf1_23_portBClear || EN_obuf1_23_portB_request_put ;
  assign obuffer1_24_serverAdapterA_outData_enqData$whas =
	     obuffer1_24_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_24_serverAdapterA_s1[1] &&
	     obuffer1_24_serverAdapterA_s1[0] ;
  assign obuffer1_24_serverAdapterA_outData_outData$whas =
	     obuffer1_24_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_24_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_24_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_24_serverAdapterA_cnt_1$whas =
	     EN_obuf1_24_portA_request_put &&
	     (!obuf1_24_portA_request_put_BITS_41_TO_40__q97[1] ||
	      obuf1_24_portA_request_put_BITS_41_TO_40__q97[0]) ;
  assign obuffer1_24_serverAdapterA_s1_1$wget =
	     EN_obuf1_24_portAClear ?
	       2'd0 :
	       MUX_obuffer1_24_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_24_serverAdapterA_s1_1$whas =
	     EN_obuf1_24_portAClear || EN_obuf1_24_portA_request_put ;
  assign obuffer1_24_serverAdapterB_outData_enqData$whas =
	     obuffer1_24_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_24_serverAdapterB_s1[1] &&
	     obuffer1_24_serverAdapterB_s1[0] ;
  assign obuffer1_24_serverAdapterB_outData_outData$whas =
	     obuffer1_24_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_24_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_24_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_24_serverAdapterB_cnt_1$whas =
	     EN_obuf1_24_portB_request_put &&
	     (!obuf1_24_portB_request_put_BITS_41_TO_40__q98[1] ||
	      obuf1_24_portB_request_put_BITS_41_TO_40__q98[0]) ;
  assign obuffer1_24_serverAdapterB_s1_1$wget =
	     EN_obuf1_24_portBClear ?
	       2'd0 :
	       MUX_obuffer1_24_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_24_serverAdapterB_s1_1$whas =
	     EN_obuf1_24_portBClear || EN_obuf1_24_portB_request_put ;
  assign obuffer1_25_serverAdapterA_outData_enqData$whas =
	     obuffer1_25_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_25_serverAdapterA_s1[1] &&
	     obuffer1_25_serverAdapterA_s1[0] ;
  assign obuffer1_25_serverAdapterA_outData_outData$whas =
	     obuffer1_25_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_25_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_25_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_25_serverAdapterA_cnt_1$whas =
	     EN_obuf1_25_portA_request_put &&
	     (!obuf1_25_portA_request_put_BITS_41_TO_40__q99[1] ||
	      obuf1_25_portA_request_put_BITS_41_TO_40__q99[0]) ;
  assign obuffer1_25_serverAdapterA_s1_1$wget =
	     EN_obuf1_25_portAClear ?
	       2'd0 :
	       MUX_obuffer1_25_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_25_serverAdapterA_s1_1$whas =
	     EN_obuf1_25_portAClear || EN_obuf1_25_portA_request_put ;
  assign obuffer1_25_serverAdapterB_outData_enqData$whas =
	     obuffer1_25_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_25_serverAdapterB_s1[1] &&
	     obuffer1_25_serverAdapterB_s1[0] ;
  assign obuffer1_25_serverAdapterB_outData_outData$whas =
	     obuffer1_25_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_25_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_25_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_25_serverAdapterB_cnt_1$whas =
	     EN_obuf1_25_portB_request_put &&
	     (!obuf1_25_portB_request_put_BITS_41_TO_40__q100[1] ||
	      obuf1_25_portB_request_put_BITS_41_TO_40__q100[0]) ;
  assign obuffer1_25_serverAdapterB_s1_1$wget =
	     EN_obuf1_25_portBClear ?
	       2'd0 :
	       MUX_obuffer1_25_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_25_serverAdapterB_s1_1$whas =
	     EN_obuf1_25_portBClear || EN_obuf1_25_portB_request_put ;
  assign obuffer1_26_serverAdapterA_outData_enqData$whas =
	     obuffer1_26_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_26_serverAdapterA_s1[1] &&
	     obuffer1_26_serverAdapterA_s1[0] ;
  assign obuffer1_26_serverAdapterA_outData_outData$whas =
	     obuffer1_26_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_26_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_26_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_26_serverAdapterA_cnt_1$whas =
	     EN_obuf1_26_portA_request_put &&
	     (!obuf1_26_portA_request_put_BITS_41_TO_40__q101[1] ||
	      obuf1_26_portA_request_put_BITS_41_TO_40__q101[0]) ;
  assign obuffer1_26_serverAdapterA_s1_1$wget =
	     EN_obuf1_26_portAClear ?
	       2'd0 :
	       MUX_obuffer1_26_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_26_serverAdapterA_s1_1$whas =
	     EN_obuf1_26_portAClear || EN_obuf1_26_portA_request_put ;
  assign obuffer1_26_serverAdapterB_outData_enqData$whas =
	     obuffer1_26_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_26_serverAdapterB_s1[1] &&
	     obuffer1_26_serverAdapterB_s1[0] ;
  assign obuffer1_26_serverAdapterB_outData_outData$whas =
	     obuffer1_26_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_26_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_26_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_26_serverAdapterB_cnt_1$whas =
	     EN_obuf1_26_portB_request_put &&
	     (!obuf1_26_portB_request_put_BITS_41_TO_40__q102[1] ||
	      obuf1_26_portB_request_put_BITS_41_TO_40__q102[0]) ;
  assign obuffer1_26_serverAdapterB_s1_1$wget =
	     EN_obuf1_26_portBClear ?
	       2'd0 :
	       MUX_obuffer1_26_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_26_serverAdapterB_s1_1$whas =
	     EN_obuf1_26_portBClear || EN_obuf1_26_portB_request_put ;
  assign obuffer1_27_serverAdapterA_outData_enqData$whas =
	     obuffer1_27_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_27_serverAdapterA_s1[1] &&
	     obuffer1_27_serverAdapterA_s1[0] ;
  assign obuffer1_27_serverAdapterA_outData_outData$whas =
	     obuffer1_27_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_27_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_27_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_27_serverAdapterA_cnt_1$whas =
	     EN_obuf1_27_portA_request_put &&
	     (!obuf1_27_portA_request_put_BITS_41_TO_40__q103[1] ||
	      obuf1_27_portA_request_put_BITS_41_TO_40__q103[0]) ;
  assign obuffer1_27_serverAdapterA_s1_1$wget =
	     EN_obuf1_27_portAClear ?
	       2'd0 :
	       MUX_obuffer1_27_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_27_serverAdapterA_s1_1$whas =
	     EN_obuf1_27_portAClear || EN_obuf1_27_portA_request_put ;
  assign obuffer1_27_serverAdapterB_outData_enqData$whas =
	     obuffer1_27_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_27_serverAdapterB_s1[1] &&
	     obuffer1_27_serverAdapterB_s1[0] ;
  assign obuffer1_27_serverAdapterB_outData_outData$whas =
	     obuffer1_27_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_27_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_27_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_27_serverAdapterB_cnt_1$whas =
	     EN_obuf1_27_portB_request_put &&
	     (!obuf1_27_portB_request_put_BITS_41_TO_40__q104[1] ||
	      obuf1_27_portB_request_put_BITS_41_TO_40__q104[0]) ;
  assign obuffer1_27_serverAdapterB_s1_1$wget =
	     EN_obuf1_27_portBClear ?
	       2'd0 :
	       MUX_obuffer1_27_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_27_serverAdapterB_s1_1$whas =
	     EN_obuf1_27_portBClear || EN_obuf1_27_portB_request_put ;
  assign obuffer1_28_serverAdapterA_outData_enqData$whas =
	     obuffer1_28_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_28_serverAdapterA_s1[1] &&
	     obuffer1_28_serverAdapterA_s1[0] ;
  assign obuffer1_28_serverAdapterA_outData_outData$whas =
	     obuffer1_28_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_28_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_28_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_28_serverAdapterA_cnt_1$whas =
	     EN_obuf1_28_portA_request_put &&
	     (!obuf1_28_portA_request_put_BITS_41_TO_40__q105[1] ||
	      obuf1_28_portA_request_put_BITS_41_TO_40__q105[0]) ;
  assign obuffer1_28_serverAdapterA_s1_1$wget =
	     EN_obuf1_28_portAClear ?
	       2'd0 :
	       MUX_obuffer1_28_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_28_serverAdapterA_s1_1$whas =
	     EN_obuf1_28_portAClear || EN_obuf1_28_portA_request_put ;
  assign obuffer1_28_serverAdapterB_outData_enqData$whas =
	     obuffer1_28_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_28_serverAdapterB_s1[1] &&
	     obuffer1_28_serverAdapterB_s1[0] ;
  assign obuffer1_28_serverAdapterB_outData_outData$whas =
	     obuffer1_28_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_28_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_28_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_28_serverAdapterB_cnt_1$whas =
	     EN_obuf1_28_portB_request_put &&
	     (!obuf1_28_portB_request_put_BITS_41_TO_40__q106[1] ||
	      obuf1_28_portB_request_put_BITS_41_TO_40__q106[0]) ;
  assign obuffer1_28_serverAdapterB_s1_1$wget =
	     EN_obuf1_28_portBClear ?
	       2'd0 :
	       MUX_obuffer1_28_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_28_serverAdapterB_s1_1$whas =
	     EN_obuf1_28_portBClear || EN_obuf1_28_portB_request_put ;
  assign obuffer1_29_serverAdapterA_outData_enqData$whas =
	     obuffer1_29_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_29_serverAdapterA_s1[1] &&
	     obuffer1_29_serverAdapterA_s1[0] ;
  assign obuffer1_29_serverAdapterA_outData_outData$whas =
	     obuffer1_29_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_29_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_29_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_29_serverAdapterA_cnt_1$whas =
	     EN_obuf1_29_portA_request_put &&
	     (!obuf1_29_portA_request_put_BITS_41_TO_40__q107[1] ||
	      obuf1_29_portA_request_put_BITS_41_TO_40__q107[0]) ;
  assign obuffer1_29_serverAdapterA_s1_1$wget =
	     EN_obuf1_29_portAClear ?
	       2'd0 :
	       MUX_obuffer1_29_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_29_serverAdapterA_s1_1$whas =
	     EN_obuf1_29_portAClear || EN_obuf1_29_portA_request_put ;
  assign obuffer1_29_serverAdapterB_outData_enqData$whas =
	     obuffer1_29_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_29_serverAdapterB_s1[1] &&
	     obuffer1_29_serverAdapterB_s1[0] ;
  assign obuffer1_29_serverAdapterB_outData_outData$whas =
	     obuffer1_29_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_29_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_29_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_29_serverAdapterB_cnt_1$whas =
	     EN_obuf1_29_portB_request_put &&
	     (!obuf1_29_portB_request_put_BITS_41_TO_40__q108[1] ||
	      obuf1_29_portB_request_put_BITS_41_TO_40__q108[0]) ;
  assign obuffer1_29_serverAdapterB_s1_1$wget =
	     EN_obuf1_29_portBClear ?
	       2'd0 :
	       MUX_obuffer1_29_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_29_serverAdapterB_s1_1$whas =
	     EN_obuf1_29_portBClear || EN_obuf1_29_portB_request_put ;
  assign obuffer1_30_serverAdapterA_outData_enqData$whas =
	     obuffer1_30_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_30_serverAdapterA_s1[1] &&
	     obuffer1_30_serverAdapterA_s1[0] ;
  assign obuffer1_30_serverAdapterA_outData_outData$whas =
	     obuffer1_30_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_30_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_30_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_30_serverAdapterA_cnt_1$whas =
	     EN_obuf1_30_portA_request_put &&
	     (!obuf1_30_portA_request_put_BITS_41_TO_40__q111[1] ||
	      obuf1_30_portA_request_put_BITS_41_TO_40__q111[0]) ;
  assign obuffer1_30_serverAdapterA_s1_1$wget =
	     EN_obuf1_30_portAClear ?
	       2'd0 :
	       MUX_obuffer1_30_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_30_serverAdapterA_s1_1$whas =
	     EN_obuf1_30_portAClear || EN_obuf1_30_portA_request_put ;
  assign obuffer1_30_serverAdapterB_outData_enqData$whas =
	     obuffer1_30_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_30_serverAdapterB_s1[1] &&
	     obuffer1_30_serverAdapterB_s1[0] ;
  assign obuffer1_30_serverAdapterB_outData_outData$whas =
	     obuffer1_30_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_30_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_30_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_30_serverAdapterB_cnt_1$whas =
	     EN_obuf1_30_portB_request_put &&
	     (!obuf1_30_portB_request_put_BITS_41_TO_40__q112[1] ||
	      obuf1_30_portB_request_put_BITS_41_TO_40__q112[0]) ;
  assign obuffer1_30_serverAdapterB_s1_1$wget =
	     EN_obuf1_30_portBClear ?
	       2'd0 :
	       MUX_obuffer1_30_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_30_serverAdapterB_s1_1$whas =
	     EN_obuf1_30_portBClear || EN_obuf1_30_portB_request_put ;
  assign obuffer1_31_serverAdapterA_outData_enqData$whas =
	     obuffer1_31_serverAdapterA_outDataCore$FULL_N &&
	     obuffer1_31_serverAdapterA_s1[1] &&
	     obuffer1_31_serverAdapterA_s1[0] ;
  assign obuffer1_31_serverAdapterA_outData_outData$whas =
	     obuffer1_31_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer1_31_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer1_31_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_31_serverAdapterA_cnt_1$whas =
	     EN_obuf1_31_portA_request_put &&
	     (!obuf1_31_portA_request_put_BITS_41_TO_40__q113[1] ||
	      obuf1_31_portA_request_put_BITS_41_TO_40__q113[0]) ;
  assign obuffer1_31_serverAdapterA_s1_1$wget =
	     EN_obuf1_31_portAClear ?
	       2'd0 :
	       MUX_obuffer1_31_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer1_31_serverAdapterA_s1_1$whas =
	     EN_obuf1_31_portAClear || EN_obuf1_31_portA_request_put ;
  assign obuffer1_31_serverAdapterB_outData_enqData$whas =
	     obuffer1_31_serverAdapterB_outDataCore$FULL_N &&
	     obuffer1_31_serverAdapterB_s1[1] &&
	     obuffer1_31_serverAdapterB_s1[0] ;
  assign obuffer1_31_serverAdapterB_outData_outData$whas =
	     obuffer1_31_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer1_31_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer1_31_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_31_serverAdapterB_cnt_1$whas =
	     EN_obuf1_31_portB_request_put &&
	     (!obuf1_31_portB_request_put_BITS_41_TO_40__q114[1] ||
	      obuf1_31_portB_request_put_BITS_41_TO_40__q114[0]) ;
  assign obuffer1_31_serverAdapterB_s1_1$wget =
	     EN_obuf1_31_portBClear ?
	       2'd0 :
	       MUX_obuffer1_31_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer1_31_serverAdapterB_s1_1$whas =
	     EN_obuf1_31_portBClear || EN_obuf1_31_portB_request_put ;
  assign obuffer2_0_serverAdapterA_outData_enqData$whas =
	     obuffer2_0_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_0_serverAdapterA_s1[1] &&
	     obuffer2_0_serverAdapterA_s1[0] ;
  assign obuffer2_0_serverAdapterA_outData_outData$whas =
	     obuffer2_0_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_0_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_0_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_0_serverAdapterA_cnt_1$whas =
	     EN_obuf2_0_portA_request_put &&
	     (!obuf2_0_portA_request_put_BITS_41_TO_40__q129[1] ||
	      obuf2_0_portA_request_put_BITS_41_TO_40__q129[0]) ;
  assign obuffer2_0_serverAdapterA_s1_1$wget =
	     EN_obuf2_0_portAClear ?
	       2'd0 :
	       MUX_obuffer2_0_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_0_serverAdapterA_s1_1$whas =
	     EN_obuf2_0_portAClear || EN_obuf2_0_portA_request_put ;
  assign obuffer2_0_serverAdapterB_outData_enqData$whas =
	     obuffer2_0_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_0_serverAdapterB_s1[1] &&
	     obuffer2_0_serverAdapterB_s1[0] ;
  assign obuffer2_0_serverAdapterB_outData_outData$whas =
	     obuffer2_0_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_0_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_0_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_0_serverAdapterB_cnt_1$whas =
	     EN_obuf2_0_portB_request_put &&
	     (!obuf2_0_portB_request_put_BITS_41_TO_40__q130[1] ||
	      obuf2_0_portB_request_put_BITS_41_TO_40__q130[0]) ;
  assign obuffer2_0_serverAdapterB_s1_1$wget =
	     EN_obuf2_0_portBClear ?
	       2'd0 :
	       MUX_obuffer2_0_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_0_serverAdapterB_s1_1$whas =
	     EN_obuf2_0_portBClear || EN_obuf2_0_portB_request_put ;
  assign obuffer2_1_serverAdapterA_outData_enqData$whas =
	     obuffer2_1_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_1_serverAdapterA_s1[1] &&
	     obuffer2_1_serverAdapterA_s1[0] ;
  assign obuffer2_1_serverAdapterA_outData_outData$whas =
	     obuffer2_1_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_1_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_1_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_1_serverAdapterA_cnt_1$whas =
	     EN_obuf2_1_portA_request_put &&
	     (!obuf2_1_portA_request_put_BITS_41_TO_40__q151[1] ||
	      obuf2_1_portA_request_put_BITS_41_TO_40__q151[0]) ;
  assign obuffer2_1_serverAdapterA_s1_1$wget =
	     EN_obuf2_1_portAClear ?
	       2'd0 :
	       MUX_obuffer2_1_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_1_serverAdapterA_s1_1$whas =
	     EN_obuf2_1_portAClear || EN_obuf2_1_portA_request_put ;
  assign obuffer2_1_serverAdapterB_outData_enqData$whas =
	     obuffer2_1_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_1_serverAdapterB_s1[1] &&
	     obuffer2_1_serverAdapterB_s1[0] ;
  assign obuffer2_1_serverAdapterB_outData_outData$whas =
	     obuffer2_1_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_1_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_1_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_1_serverAdapterB_cnt_1$whas =
	     EN_obuf2_1_portB_request_put &&
	     (!obuf2_1_portB_request_put_BITS_41_TO_40__q152[1] ||
	      obuf2_1_portB_request_put_BITS_41_TO_40__q152[0]) ;
  assign obuffer2_1_serverAdapterB_s1_1$wget =
	     EN_obuf2_1_portBClear ?
	       2'd0 :
	       MUX_obuffer2_1_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_1_serverAdapterB_s1_1$whas =
	     EN_obuf2_1_portBClear || EN_obuf2_1_portB_request_put ;
  assign obuffer2_2_serverAdapterA_outData_enqData$whas =
	     obuffer2_2_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_2_serverAdapterA_s1[1] &&
	     obuffer2_2_serverAdapterA_s1[0] ;
  assign obuffer2_2_serverAdapterA_outData_outData$whas =
	     obuffer2_2_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_2_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_2_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_2_serverAdapterA_cnt_1$whas =
	     EN_obuf2_2_portA_request_put &&
	     (!obuf2_2_portA_request_put_BITS_41_TO_40__q173[1] ||
	      obuf2_2_portA_request_put_BITS_41_TO_40__q173[0]) ;
  assign obuffer2_2_serverAdapterA_s1_1$wget =
	     EN_obuf2_2_portAClear ?
	       2'd0 :
	       MUX_obuffer2_2_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_2_serverAdapterA_s1_1$whas =
	     EN_obuf2_2_portAClear || EN_obuf2_2_portA_request_put ;
  assign obuffer2_2_serverAdapterB_outData_enqData$whas =
	     obuffer2_2_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_2_serverAdapterB_s1[1] &&
	     obuffer2_2_serverAdapterB_s1[0] ;
  assign obuffer2_2_serverAdapterB_outData_outData$whas =
	     obuffer2_2_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_2_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_2_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_2_serverAdapterB_cnt_1$whas =
	     EN_obuf2_2_portB_request_put &&
	     (!obuf2_2_portB_request_put_BITS_41_TO_40__q174[1] ||
	      obuf2_2_portB_request_put_BITS_41_TO_40__q174[0]) ;
  assign obuffer2_2_serverAdapterB_s1_1$wget =
	     EN_obuf2_2_portBClear ?
	       2'd0 :
	       MUX_obuffer2_2_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_2_serverAdapterB_s1_1$whas =
	     EN_obuf2_2_portBClear || EN_obuf2_2_portB_request_put ;
  assign obuffer2_3_serverAdapterA_outData_enqData$whas =
	     obuffer2_3_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_3_serverAdapterA_s1[1] &&
	     obuffer2_3_serverAdapterA_s1[0] ;
  assign obuffer2_3_serverAdapterA_outData_outData$whas =
	     obuffer2_3_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_3_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_3_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_3_serverAdapterA_cnt_1$whas =
	     EN_obuf2_3_portA_request_put &&
	     (!obuf2_3_portA_request_put_BITS_41_TO_40__q179[1] ||
	      obuf2_3_portA_request_put_BITS_41_TO_40__q179[0]) ;
  assign obuffer2_3_serverAdapterA_s1_1$wget =
	     EN_obuf2_3_portAClear ?
	       2'd0 :
	       MUX_obuffer2_3_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_3_serverAdapterA_s1_1$whas =
	     EN_obuf2_3_portAClear || EN_obuf2_3_portA_request_put ;
  assign obuffer2_3_serverAdapterB_outData_enqData$whas =
	     obuffer2_3_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_3_serverAdapterB_s1[1] &&
	     obuffer2_3_serverAdapterB_s1[0] ;
  assign obuffer2_3_serverAdapterB_outData_outData$whas =
	     obuffer2_3_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_3_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_3_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_3_serverAdapterB_cnt_1$whas =
	     EN_obuf2_3_portB_request_put &&
	     (!obuf2_3_portB_request_put_BITS_41_TO_40__q180[1] ||
	      obuf2_3_portB_request_put_BITS_41_TO_40__q180[0]) ;
  assign obuffer2_3_serverAdapterB_s1_1$wget =
	     EN_obuf2_3_portBClear ?
	       2'd0 :
	       MUX_obuffer2_3_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_3_serverAdapterB_s1_1$whas =
	     EN_obuf2_3_portBClear || EN_obuf2_3_portB_request_put ;
  assign obuffer2_4_serverAdapterA_outData_enqData$whas =
	     obuffer2_4_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_4_serverAdapterA_s1[1] &&
	     obuffer2_4_serverAdapterA_s1[0] ;
  assign obuffer2_4_serverAdapterA_outData_outData$whas =
	     obuffer2_4_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_4_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_4_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_4_serverAdapterA_cnt_1$whas =
	     EN_obuf2_4_portA_request_put &&
	     (!obuf2_4_portA_request_put_BITS_41_TO_40__q181[1] ||
	      obuf2_4_portA_request_put_BITS_41_TO_40__q181[0]) ;
  assign obuffer2_4_serverAdapterA_s1_1$wget =
	     EN_obuf2_4_portAClear ?
	       2'd0 :
	       MUX_obuffer2_4_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_4_serverAdapterA_s1_1$whas =
	     EN_obuf2_4_portAClear || EN_obuf2_4_portA_request_put ;
  assign obuffer2_4_serverAdapterB_outData_enqData$whas =
	     obuffer2_4_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_4_serverAdapterB_s1[1] &&
	     obuffer2_4_serverAdapterB_s1[0] ;
  assign obuffer2_4_serverAdapterB_outData_outData$whas =
	     obuffer2_4_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_4_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_4_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_4_serverAdapterB_cnt_1$whas =
	     EN_obuf2_4_portB_request_put &&
	     (!obuf2_4_portB_request_put_BITS_41_TO_40__q182[1] ||
	      obuf2_4_portB_request_put_BITS_41_TO_40__q182[0]) ;
  assign obuffer2_4_serverAdapterB_s1_1$wget =
	     EN_obuf2_4_portBClear ?
	       2'd0 :
	       MUX_obuffer2_4_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_4_serverAdapterB_s1_1$whas =
	     EN_obuf2_4_portBClear || EN_obuf2_4_portB_request_put ;
  assign obuffer2_5_serverAdapterA_outData_enqData$whas =
	     obuffer2_5_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_5_serverAdapterA_s1[1] &&
	     obuffer2_5_serverAdapterA_s1[0] ;
  assign obuffer2_5_serverAdapterA_outData_outData$whas =
	     obuffer2_5_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_5_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_5_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_5_serverAdapterA_cnt_1$whas =
	     EN_obuf2_5_portA_request_put &&
	     (!obuf2_5_portA_request_put_BITS_41_TO_40__q183[1] ||
	      obuf2_5_portA_request_put_BITS_41_TO_40__q183[0]) ;
  assign obuffer2_5_serverAdapterA_s1_1$wget =
	     EN_obuf2_5_portAClear ?
	       2'd0 :
	       MUX_obuffer2_5_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_5_serverAdapterA_s1_1$whas =
	     EN_obuf2_5_portAClear || EN_obuf2_5_portA_request_put ;
  assign obuffer2_5_serverAdapterB_outData_enqData$whas =
	     obuffer2_5_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_5_serverAdapterB_s1[1] &&
	     obuffer2_5_serverAdapterB_s1[0] ;
  assign obuffer2_5_serverAdapterB_outData_outData$whas =
	     obuffer2_5_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_5_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_5_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_5_serverAdapterB_cnt_1$whas =
	     EN_obuf2_5_portB_request_put &&
	     (!obuf2_5_portB_request_put_BITS_41_TO_40__q184[1] ||
	      obuf2_5_portB_request_put_BITS_41_TO_40__q184[0]) ;
  assign obuffer2_5_serverAdapterB_s1_1$wget =
	     EN_obuf2_5_portBClear ?
	       2'd0 :
	       MUX_obuffer2_5_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_5_serverAdapterB_s1_1$whas =
	     EN_obuf2_5_portBClear || EN_obuf2_5_portB_request_put ;
  assign obuffer2_6_serverAdapterA_outData_enqData$whas =
	     obuffer2_6_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_6_serverAdapterA_s1[1] &&
	     obuffer2_6_serverAdapterA_s1[0] ;
  assign obuffer2_6_serverAdapterA_outData_outData$whas =
	     obuffer2_6_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_6_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_6_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_6_serverAdapterA_cnt_1$whas =
	     EN_obuf2_6_portA_request_put &&
	     (!obuf2_6_portA_request_put_BITS_41_TO_40__q185[1] ||
	      obuf2_6_portA_request_put_BITS_41_TO_40__q185[0]) ;
  assign obuffer2_6_serverAdapterA_s1_1$wget =
	     EN_obuf2_6_portAClear ?
	       2'd0 :
	       MUX_obuffer2_6_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_6_serverAdapterA_s1_1$whas =
	     EN_obuf2_6_portAClear || EN_obuf2_6_portA_request_put ;
  assign obuffer2_6_serverAdapterB_outData_enqData$whas =
	     obuffer2_6_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_6_serverAdapterB_s1[1] &&
	     obuffer2_6_serverAdapterB_s1[0] ;
  assign obuffer2_6_serverAdapterB_outData_outData$whas =
	     obuffer2_6_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_6_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_6_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_6_serverAdapterB_cnt_1$whas =
	     EN_obuf2_6_portB_request_put &&
	     (!obuf2_6_portB_request_put_BITS_41_TO_40__q186[1] ||
	      obuf2_6_portB_request_put_BITS_41_TO_40__q186[0]) ;
  assign obuffer2_6_serverAdapterB_s1_1$wget =
	     EN_obuf2_6_portBClear ?
	       2'd0 :
	       MUX_obuffer2_6_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_6_serverAdapterB_s1_1$whas =
	     EN_obuf2_6_portBClear || EN_obuf2_6_portB_request_put ;
  assign obuffer2_7_serverAdapterA_outData_enqData$whas =
	     obuffer2_7_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_7_serverAdapterA_s1[1] &&
	     obuffer2_7_serverAdapterA_s1[0] ;
  assign obuffer2_7_serverAdapterA_outData_outData$whas =
	     obuffer2_7_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_7_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_7_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_7_serverAdapterA_cnt_1$whas =
	     EN_obuf2_7_portA_request_put &&
	     (!obuf2_7_portA_request_put_BITS_41_TO_40__q187[1] ||
	      obuf2_7_portA_request_put_BITS_41_TO_40__q187[0]) ;
  assign obuffer2_7_serverAdapterA_s1_1$wget =
	     EN_obuf2_7_portAClear ?
	       2'd0 :
	       MUX_obuffer2_7_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_7_serverAdapterA_s1_1$whas =
	     EN_obuf2_7_portAClear || EN_obuf2_7_portA_request_put ;
  assign obuffer2_7_serverAdapterB_outData_enqData$whas =
	     obuffer2_7_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_7_serverAdapterB_s1[1] &&
	     obuffer2_7_serverAdapterB_s1[0] ;
  assign obuffer2_7_serverAdapterB_outData_outData$whas =
	     obuffer2_7_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_7_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_7_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_7_serverAdapterB_cnt_1$whas =
	     EN_obuf2_7_portB_request_put &&
	     (!obuf2_7_portB_request_put_BITS_41_TO_40__q188[1] ||
	      obuf2_7_portB_request_put_BITS_41_TO_40__q188[0]) ;
  assign obuffer2_7_serverAdapterB_s1_1$wget =
	     EN_obuf2_7_portBClear ?
	       2'd0 :
	       MUX_obuffer2_7_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_7_serverAdapterB_s1_1$whas =
	     EN_obuf2_7_portBClear || EN_obuf2_7_portB_request_put ;
  assign obuffer2_8_serverAdapterA_outData_enqData$whas =
	     obuffer2_8_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_8_serverAdapterA_s1[1] &&
	     obuffer2_8_serverAdapterA_s1[0] ;
  assign obuffer2_8_serverAdapterA_outData_outData$whas =
	     obuffer2_8_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_8_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_8_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_8_serverAdapterA_cnt_1$whas =
	     EN_obuf2_8_portA_request_put &&
	     (!obuf2_8_portA_request_put_BITS_41_TO_40__q189[1] ||
	      obuf2_8_portA_request_put_BITS_41_TO_40__q189[0]) ;
  assign obuffer2_8_serverAdapterA_s1_1$wget =
	     EN_obuf2_8_portAClear ?
	       2'd0 :
	       MUX_obuffer2_8_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_8_serverAdapterA_s1_1$whas =
	     EN_obuf2_8_portAClear || EN_obuf2_8_portA_request_put ;
  assign obuffer2_8_serverAdapterB_outData_enqData$whas =
	     obuffer2_8_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_8_serverAdapterB_s1[1] &&
	     obuffer2_8_serverAdapterB_s1[0] ;
  assign obuffer2_8_serverAdapterB_outData_outData$whas =
	     obuffer2_8_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_8_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_8_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_8_serverAdapterB_cnt_1$whas =
	     EN_obuf2_8_portB_request_put &&
	     (!obuf2_8_portB_request_put_BITS_41_TO_40__q190[1] ||
	      obuf2_8_portB_request_put_BITS_41_TO_40__q190[0]) ;
  assign obuffer2_8_serverAdapterB_s1_1$wget =
	     EN_obuf2_8_portBClear ?
	       2'd0 :
	       MUX_obuffer2_8_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_8_serverAdapterB_s1_1$whas =
	     EN_obuf2_8_portBClear || EN_obuf2_8_portB_request_put ;
  assign obuffer2_9_serverAdapterA_outData_enqData$whas =
	     obuffer2_9_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_9_serverAdapterA_s1[1] &&
	     obuffer2_9_serverAdapterA_s1[0] ;
  assign obuffer2_9_serverAdapterA_outData_outData$whas =
	     obuffer2_9_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_9_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_9_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_9_serverAdapterA_cnt_1$whas =
	     EN_obuf2_9_portA_request_put &&
	     (!obuf2_9_portA_request_put_BITS_41_TO_40__q191[1] ||
	      obuf2_9_portA_request_put_BITS_41_TO_40__q191[0]) ;
  assign obuffer2_9_serverAdapterA_s1_1$wget =
	     EN_obuf2_9_portAClear ?
	       2'd0 :
	       MUX_obuffer2_9_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_9_serverAdapterA_s1_1$whas =
	     EN_obuf2_9_portAClear || EN_obuf2_9_portA_request_put ;
  assign obuffer2_9_serverAdapterB_outData_enqData$whas =
	     obuffer2_9_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_9_serverAdapterB_s1[1] &&
	     obuffer2_9_serverAdapterB_s1[0] ;
  assign obuffer2_9_serverAdapterB_outData_outData$whas =
	     obuffer2_9_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_9_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_9_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_9_serverAdapterB_cnt_1$whas =
	     EN_obuf2_9_portB_request_put &&
	     (!obuf2_9_portB_request_put_BITS_41_TO_40__q192[1] ||
	      obuf2_9_portB_request_put_BITS_41_TO_40__q192[0]) ;
  assign obuffer2_9_serverAdapterB_s1_1$wget =
	     EN_obuf2_9_portBClear ?
	       2'd0 :
	       MUX_obuffer2_9_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_9_serverAdapterB_s1_1$whas =
	     EN_obuf2_9_portBClear || EN_obuf2_9_portB_request_put ;
  assign obuffer2_10_serverAdapterA_outData_enqData$whas =
	     obuffer2_10_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_10_serverAdapterA_s1[1] &&
	     obuffer2_10_serverAdapterA_s1[0] ;
  assign obuffer2_10_serverAdapterA_outData_outData$whas =
	     obuffer2_10_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_10_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_10_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_10_serverAdapterA_cnt_1$whas =
	     EN_obuf2_10_portA_request_put &&
	     (!obuf2_10_portA_request_put_BITS_41_TO_40__q131[1] ||
	      obuf2_10_portA_request_put_BITS_41_TO_40__q131[0]) ;
  assign obuffer2_10_serverAdapterA_s1_1$wget =
	     EN_obuf2_10_portAClear ?
	       2'd0 :
	       MUX_obuffer2_10_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_10_serverAdapterA_s1_1$whas =
	     EN_obuf2_10_portAClear || EN_obuf2_10_portA_request_put ;
  assign obuffer2_10_serverAdapterB_outData_enqData$whas =
	     obuffer2_10_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_10_serverAdapterB_s1[1] &&
	     obuffer2_10_serverAdapterB_s1[0] ;
  assign obuffer2_10_serverAdapterB_outData_outData$whas =
	     obuffer2_10_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_10_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_10_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_10_serverAdapterB_cnt_1$whas =
	     EN_obuf2_10_portB_request_put &&
	     (!obuf2_10_portB_request_put_BITS_41_TO_40__q132[1] ||
	      obuf2_10_portB_request_put_BITS_41_TO_40__q132[0]) ;
  assign obuffer2_10_serverAdapterB_s1_1$wget =
	     EN_obuf2_10_portBClear ?
	       2'd0 :
	       MUX_obuffer2_10_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_10_serverAdapterB_s1_1$whas =
	     EN_obuf2_10_portBClear || EN_obuf2_10_portB_request_put ;
  assign obuffer2_11_serverAdapterA_outData_enqData$whas =
	     obuffer2_11_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_11_serverAdapterA_s1[1] &&
	     obuffer2_11_serverAdapterA_s1[0] ;
  assign obuffer2_11_serverAdapterA_outData_outData$whas =
	     obuffer2_11_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_11_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_11_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_11_serverAdapterA_cnt_1$whas =
	     EN_obuf2_11_portA_request_put &&
	     (!obuf2_11_portA_request_put_BITS_41_TO_40__q133[1] ||
	      obuf2_11_portA_request_put_BITS_41_TO_40__q133[0]) ;
  assign obuffer2_11_serverAdapterA_s1_1$wget =
	     EN_obuf2_11_portAClear ?
	       2'd0 :
	       MUX_obuffer2_11_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_11_serverAdapterA_s1_1$whas =
	     EN_obuf2_11_portAClear || EN_obuf2_11_portA_request_put ;
  assign obuffer2_11_serverAdapterB_outData_enqData$whas =
	     obuffer2_11_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_11_serverAdapterB_s1[1] &&
	     obuffer2_11_serverAdapterB_s1[0] ;
  assign obuffer2_11_serverAdapterB_outData_outData$whas =
	     obuffer2_11_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_11_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_11_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_11_serverAdapterB_cnt_1$whas =
	     EN_obuf2_11_portB_request_put &&
	     (!obuf2_11_portB_request_put_BITS_41_TO_40__q134[1] ||
	      obuf2_11_portB_request_put_BITS_41_TO_40__q134[0]) ;
  assign obuffer2_11_serverAdapterB_s1_1$wget =
	     EN_obuf2_11_portBClear ?
	       2'd0 :
	       MUX_obuffer2_11_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_11_serverAdapterB_s1_1$whas =
	     EN_obuf2_11_portBClear || EN_obuf2_11_portB_request_put ;
  assign obuffer2_12_serverAdapterA_outData_enqData$whas =
	     obuffer2_12_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_12_serverAdapterA_s1[1] &&
	     obuffer2_12_serverAdapterA_s1[0] ;
  assign obuffer2_12_serverAdapterA_outData_outData$whas =
	     obuffer2_12_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_12_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_12_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_12_serverAdapterA_cnt_1$whas =
	     EN_obuf2_12_portA_request_put &&
	     (!obuf2_12_portA_request_put_BITS_41_TO_40__q135[1] ||
	      obuf2_12_portA_request_put_BITS_41_TO_40__q135[0]) ;
  assign obuffer2_12_serverAdapterA_s1_1$wget =
	     EN_obuf2_12_portAClear ?
	       2'd0 :
	       MUX_obuffer2_12_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_12_serverAdapterA_s1_1$whas =
	     EN_obuf2_12_portAClear || EN_obuf2_12_portA_request_put ;
  assign obuffer2_12_serverAdapterB_outData_enqData$whas =
	     obuffer2_12_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_12_serverAdapterB_s1[1] &&
	     obuffer2_12_serverAdapterB_s1[0] ;
  assign obuffer2_12_serverAdapterB_outData_outData$whas =
	     obuffer2_12_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_12_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_12_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_12_serverAdapterB_cnt_1$whas =
	     EN_obuf2_12_portB_request_put &&
	     (!obuf2_12_portB_request_put_BITS_41_TO_40__q136[1] ||
	      obuf2_12_portB_request_put_BITS_41_TO_40__q136[0]) ;
  assign obuffer2_12_serverAdapterB_s1_1$wget =
	     EN_obuf2_12_portBClear ?
	       2'd0 :
	       MUX_obuffer2_12_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_12_serverAdapterB_s1_1$whas =
	     EN_obuf2_12_portBClear || EN_obuf2_12_portB_request_put ;
  assign obuffer2_13_serverAdapterA_outData_enqData$whas =
	     obuffer2_13_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_13_serverAdapterA_s1[1] &&
	     obuffer2_13_serverAdapterA_s1[0] ;
  assign obuffer2_13_serverAdapterA_outData_outData$whas =
	     obuffer2_13_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_13_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_13_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_13_serverAdapterA_cnt_1$whas =
	     EN_obuf2_13_portA_request_put &&
	     (!obuf2_13_portA_request_put_BITS_41_TO_40__q137[1] ||
	      obuf2_13_portA_request_put_BITS_41_TO_40__q137[0]) ;
  assign obuffer2_13_serverAdapterA_s1_1$wget =
	     EN_obuf2_13_portAClear ?
	       2'd0 :
	       MUX_obuffer2_13_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_13_serverAdapterA_s1_1$whas =
	     EN_obuf2_13_portAClear || EN_obuf2_13_portA_request_put ;
  assign obuffer2_13_serverAdapterB_outData_enqData$whas =
	     obuffer2_13_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_13_serverAdapterB_s1[1] &&
	     obuffer2_13_serverAdapterB_s1[0] ;
  assign obuffer2_13_serverAdapterB_outData_outData$whas =
	     obuffer2_13_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_13_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_13_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_13_serverAdapterB_cnt_1$whas =
	     EN_obuf2_13_portB_request_put &&
	     (!obuf2_13_portB_request_put_BITS_41_TO_40__q138[1] ||
	      obuf2_13_portB_request_put_BITS_41_TO_40__q138[0]) ;
  assign obuffer2_13_serverAdapterB_s1_1$wget =
	     EN_obuf2_13_portBClear ?
	       2'd0 :
	       MUX_obuffer2_13_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_13_serverAdapterB_s1_1$whas =
	     EN_obuf2_13_portBClear || EN_obuf2_13_portB_request_put ;
  assign obuffer2_14_serverAdapterA_outData_enqData$whas =
	     obuffer2_14_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_14_serverAdapterA_s1[1] &&
	     obuffer2_14_serverAdapterA_s1[0] ;
  assign obuffer2_14_serverAdapterA_outData_outData$whas =
	     obuffer2_14_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_14_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_14_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_14_serverAdapterA_cnt_1$whas =
	     EN_obuf2_14_portA_request_put &&
	     (!obuf2_14_portA_request_put_BITS_41_TO_40__q139[1] ||
	      obuf2_14_portA_request_put_BITS_41_TO_40__q139[0]) ;
  assign obuffer2_14_serverAdapterA_s1_1$wget =
	     EN_obuf2_14_portAClear ?
	       2'd0 :
	       MUX_obuffer2_14_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_14_serverAdapterA_s1_1$whas =
	     EN_obuf2_14_portAClear || EN_obuf2_14_portA_request_put ;
  assign obuffer2_14_serverAdapterB_outData_enqData$whas =
	     obuffer2_14_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_14_serverAdapterB_s1[1] &&
	     obuffer2_14_serverAdapterB_s1[0] ;
  assign obuffer2_14_serverAdapterB_outData_outData$whas =
	     obuffer2_14_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_14_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_14_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_14_serverAdapterB_cnt_1$whas =
	     EN_obuf2_14_portB_request_put &&
	     (!obuf2_14_portB_request_put_BITS_41_TO_40__q140[1] ||
	      obuf2_14_portB_request_put_BITS_41_TO_40__q140[0]) ;
  assign obuffer2_14_serverAdapterB_s1_1$wget =
	     EN_obuf2_14_portBClear ?
	       2'd0 :
	       MUX_obuffer2_14_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_14_serverAdapterB_s1_1$whas =
	     EN_obuf2_14_portBClear || EN_obuf2_14_portB_request_put ;
  assign obuffer2_15_serverAdapterA_outData_enqData$whas =
	     obuffer2_15_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_15_serverAdapterA_s1[1] &&
	     obuffer2_15_serverAdapterA_s1[0] ;
  assign obuffer2_15_serverAdapterA_outData_outData$whas =
	     obuffer2_15_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_15_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_15_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_15_serverAdapterA_cnt_1$whas =
	     EN_obuf2_15_portA_request_put &&
	     (!obuf2_15_portA_request_put_BITS_41_TO_40__q141[1] ||
	      obuf2_15_portA_request_put_BITS_41_TO_40__q141[0]) ;
  assign obuffer2_15_serverAdapterA_s1_1$wget =
	     EN_obuf2_15_portAClear ?
	       2'd0 :
	       MUX_obuffer2_15_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_15_serverAdapterA_s1_1$whas =
	     EN_obuf2_15_portAClear || EN_obuf2_15_portA_request_put ;
  assign obuffer2_15_serverAdapterB_outData_enqData$whas =
	     obuffer2_15_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_15_serverAdapterB_s1[1] &&
	     obuffer2_15_serverAdapterB_s1[0] ;
  assign obuffer2_15_serverAdapterB_outData_outData$whas =
	     obuffer2_15_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_15_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_15_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_15_serverAdapterB_cnt_1$whas =
	     EN_obuf2_15_portB_request_put &&
	     (!obuf2_15_portB_request_put_BITS_41_TO_40__q142[1] ||
	      obuf2_15_portB_request_put_BITS_41_TO_40__q142[0]) ;
  assign obuffer2_15_serverAdapterB_s1_1$wget =
	     EN_obuf2_15_portBClear ?
	       2'd0 :
	       MUX_obuffer2_15_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_15_serverAdapterB_s1_1$whas =
	     EN_obuf2_15_portBClear || EN_obuf2_15_portB_request_put ;
  assign obuffer2_16_serverAdapterA_outData_enqData$whas =
	     obuffer2_16_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_16_serverAdapterA_s1[1] &&
	     obuffer2_16_serverAdapterA_s1[0] ;
  assign obuffer2_16_serverAdapterA_outData_outData$whas =
	     obuffer2_16_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_16_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_16_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_16_serverAdapterA_cnt_1$whas =
	     EN_obuf2_16_portA_request_put &&
	     (!obuf2_16_portA_request_put_BITS_41_TO_40__q143[1] ||
	      obuf2_16_portA_request_put_BITS_41_TO_40__q143[0]) ;
  assign obuffer2_16_serverAdapterA_s1_1$wget =
	     EN_obuf2_16_portAClear ?
	       2'd0 :
	       MUX_obuffer2_16_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_16_serverAdapterA_s1_1$whas =
	     EN_obuf2_16_portAClear || EN_obuf2_16_portA_request_put ;
  assign obuffer2_16_serverAdapterB_outData_enqData$whas =
	     obuffer2_16_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_16_serverAdapterB_s1[1] &&
	     obuffer2_16_serverAdapterB_s1[0] ;
  assign obuffer2_16_serverAdapterB_outData_outData$whas =
	     obuffer2_16_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_16_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_16_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_16_serverAdapterB_cnt_1$whas =
	     EN_obuf2_16_portB_request_put &&
	     (!obuf2_16_portB_request_put_BITS_41_TO_40__q144[1] ||
	      obuf2_16_portB_request_put_BITS_41_TO_40__q144[0]) ;
  assign obuffer2_16_serverAdapterB_s1_1$wget =
	     EN_obuf2_16_portBClear ?
	       2'd0 :
	       MUX_obuffer2_16_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_16_serverAdapterB_s1_1$whas =
	     EN_obuf2_16_portBClear || EN_obuf2_16_portB_request_put ;
  assign obuffer2_17_serverAdapterA_outData_enqData$whas =
	     obuffer2_17_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_17_serverAdapterA_s1[1] &&
	     obuffer2_17_serverAdapterA_s1[0] ;
  assign obuffer2_17_serverAdapterA_outData_outData$whas =
	     obuffer2_17_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_17_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_17_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_17_serverAdapterA_cnt_1$whas =
	     EN_obuf2_17_portA_request_put &&
	     (!obuf2_17_portA_request_put_BITS_41_TO_40__q145[1] ||
	      obuf2_17_portA_request_put_BITS_41_TO_40__q145[0]) ;
  assign obuffer2_17_serverAdapterA_s1_1$wget =
	     EN_obuf2_17_portAClear ?
	       2'd0 :
	       MUX_obuffer2_17_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_17_serverAdapterA_s1_1$whas =
	     EN_obuf2_17_portAClear || EN_obuf2_17_portA_request_put ;
  assign obuffer2_17_serverAdapterB_outData_enqData$whas =
	     obuffer2_17_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_17_serverAdapterB_s1[1] &&
	     obuffer2_17_serverAdapterB_s1[0] ;
  assign obuffer2_17_serverAdapterB_outData_outData$whas =
	     obuffer2_17_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_17_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_17_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_17_serverAdapterB_cnt_1$whas =
	     EN_obuf2_17_portB_request_put &&
	     (!obuf2_17_portB_request_put_BITS_41_TO_40__q146[1] ||
	      obuf2_17_portB_request_put_BITS_41_TO_40__q146[0]) ;
  assign obuffer2_17_serverAdapterB_s1_1$wget =
	     EN_obuf2_17_portBClear ?
	       2'd0 :
	       MUX_obuffer2_17_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_17_serverAdapterB_s1_1$whas =
	     EN_obuf2_17_portBClear || EN_obuf2_17_portB_request_put ;
  assign obuffer2_18_serverAdapterA_outData_enqData$whas =
	     obuffer2_18_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_18_serverAdapterA_s1[1] &&
	     obuffer2_18_serverAdapterA_s1[0] ;
  assign obuffer2_18_serverAdapterA_outData_outData$whas =
	     obuffer2_18_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_18_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_18_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_18_serverAdapterA_cnt_1$whas =
	     EN_obuf2_18_portA_request_put &&
	     (!obuf2_18_portA_request_put_BITS_41_TO_40__q147[1] ||
	      obuf2_18_portA_request_put_BITS_41_TO_40__q147[0]) ;
  assign obuffer2_18_serverAdapterA_s1_1$wget =
	     EN_obuf2_18_portAClear ?
	       2'd0 :
	       MUX_obuffer2_18_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_18_serverAdapterA_s1_1$whas =
	     EN_obuf2_18_portAClear || EN_obuf2_18_portA_request_put ;
  assign obuffer2_18_serverAdapterB_outData_enqData$whas =
	     obuffer2_18_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_18_serverAdapterB_s1[1] &&
	     obuffer2_18_serverAdapterB_s1[0] ;
  assign obuffer2_18_serverAdapterB_outData_outData$whas =
	     obuffer2_18_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_18_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_18_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_18_serverAdapterB_cnt_1$whas =
	     EN_obuf2_18_portB_request_put &&
	     (!obuf2_18_portB_request_put_BITS_41_TO_40__q148[1] ||
	      obuf2_18_portB_request_put_BITS_41_TO_40__q148[0]) ;
  assign obuffer2_18_serverAdapterB_s1_1$wget =
	     EN_obuf2_18_portBClear ?
	       2'd0 :
	       MUX_obuffer2_18_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_18_serverAdapterB_s1_1$whas =
	     EN_obuf2_18_portBClear || EN_obuf2_18_portB_request_put ;
  assign obuffer2_19_serverAdapterA_outData_enqData$whas =
	     obuffer2_19_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_19_serverAdapterA_s1[1] &&
	     obuffer2_19_serverAdapterA_s1[0] ;
  assign obuffer2_19_serverAdapterA_outData_outData$whas =
	     obuffer2_19_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_19_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_19_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_19_serverAdapterA_cnt_1$whas =
	     EN_obuf2_19_portA_request_put &&
	     (!obuf2_19_portA_request_put_BITS_41_TO_40__q149[1] ||
	      obuf2_19_portA_request_put_BITS_41_TO_40__q149[0]) ;
  assign obuffer2_19_serverAdapterA_s1_1$wget =
	     EN_obuf2_19_portAClear ?
	       2'd0 :
	       MUX_obuffer2_19_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_19_serverAdapterA_s1_1$whas =
	     EN_obuf2_19_portAClear || EN_obuf2_19_portA_request_put ;
  assign obuffer2_19_serverAdapterB_outData_enqData$whas =
	     obuffer2_19_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_19_serverAdapterB_s1[1] &&
	     obuffer2_19_serverAdapterB_s1[0] ;
  assign obuffer2_19_serverAdapterB_outData_outData$whas =
	     obuffer2_19_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_19_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_19_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_19_serverAdapterB_cnt_1$whas =
	     EN_obuf2_19_portB_request_put &&
	     (!obuf2_19_portB_request_put_BITS_41_TO_40__q150[1] ||
	      obuf2_19_portB_request_put_BITS_41_TO_40__q150[0]) ;
  assign obuffer2_19_serverAdapterB_s1_1$wget =
	     EN_obuf2_19_portBClear ?
	       2'd0 :
	       MUX_obuffer2_19_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_19_serverAdapterB_s1_1$whas =
	     EN_obuf2_19_portBClear || EN_obuf2_19_portB_request_put ;
  assign obuffer2_20_serverAdapterA_outData_enqData$whas =
	     obuffer2_20_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_20_serverAdapterA_s1[1] &&
	     obuffer2_20_serverAdapterA_s1[0] ;
  assign obuffer2_20_serverAdapterA_outData_outData$whas =
	     obuffer2_20_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_20_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_20_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_20_serverAdapterA_cnt_1$whas =
	     EN_obuf2_20_portA_request_put &&
	     (!obuf2_20_portA_request_put_BITS_41_TO_40__q153[1] ||
	      obuf2_20_portA_request_put_BITS_41_TO_40__q153[0]) ;
  assign obuffer2_20_serverAdapterA_s1_1$wget =
	     EN_obuf2_20_portAClear ?
	       2'd0 :
	       MUX_obuffer2_20_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_20_serverAdapterA_s1_1$whas =
	     EN_obuf2_20_portAClear || EN_obuf2_20_portA_request_put ;
  assign obuffer2_20_serverAdapterB_outData_enqData$whas =
	     obuffer2_20_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_20_serverAdapterB_s1[1] &&
	     obuffer2_20_serverAdapterB_s1[0] ;
  assign obuffer2_20_serverAdapterB_outData_outData$whas =
	     obuffer2_20_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_20_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_20_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_20_serverAdapterB_cnt_1$whas =
	     EN_obuf2_20_portB_request_put &&
	     (!obuf2_20_portB_request_put_BITS_41_TO_40__q154[1] ||
	      obuf2_20_portB_request_put_BITS_41_TO_40__q154[0]) ;
  assign obuffer2_20_serverAdapterB_s1_1$wget =
	     EN_obuf2_20_portBClear ?
	       2'd0 :
	       MUX_obuffer2_20_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_20_serverAdapterB_s1_1$whas =
	     EN_obuf2_20_portBClear || EN_obuf2_20_portB_request_put ;
  assign obuffer2_21_serverAdapterA_outData_enqData$whas =
	     obuffer2_21_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_21_serverAdapterA_s1[1] &&
	     obuffer2_21_serverAdapterA_s1[0] ;
  assign obuffer2_21_serverAdapterA_outData_outData$whas =
	     obuffer2_21_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_21_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_21_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_21_serverAdapterA_cnt_1$whas =
	     EN_obuf2_21_portA_request_put &&
	     (!obuf2_21_portA_request_put_BITS_41_TO_40__q155[1] ||
	      obuf2_21_portA_request_put_BITS_41_TO_40__q155[0]) ;
  assign obuffer2_21_serverAdapterA_s1_1$wget =
	     EN_obuf2_21_portAClear ?
	       2'd0 :
	       MUX_obuffer2_21_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_21_serverAdapterA_s1_1$whas =
	     EN_obuf2_21_portAClear || EN_obuf2_21_portA_request_put ;
  assign obuffer2_21_serverAdapterB_outData_enqData$whas =
	     obuffer2_21_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_21_serverAdapterB_s1[1] &&
	     obuffer2_21_serverAdapterB_s1[0] ;
  assign obuffer2_21_serverAdapterB_outData_outData$whas =
	     obuffer2_21_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_21_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_21_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_21_serverAdapterB_cnt_1$whas =
	     EN_obuf2_21_portB_request_put &&
	     (!obuf2_21_portB_request_put_BITS_41_TO_40__q156[1] ||
	      obuf2_21_portB_request_put_BITS_41_TO_40__q156[0]) ;
  assign obuffer2_21_serverAdapterB_s1_1$wget =
	     EN_obuf2_21_portBClear ?
	       2'd0 :
	       MUX_obuffer2_21_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_21_serverAdapterB_s1_1$whas =
	     EN_obuf2_21_portBClear || EN_obuf2_21_portB_request_put ;
  assign obuffer2_22_serverAdapterA_outData_enqData$whas =
	     obuffer2_22_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_22_serverAdapterA_s1[1] &&
	     obuffer2_22_serverAdapterA_s1[0] ;
  assign obuffer2_22_serverAdapterA_outData_outData$whas =
	     obuffer2_22_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_22_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_22_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_22_serverAdapterA_cnt_1$whas =
	     EN_obuf2_22_portA_request_put &&
	     (!obuf2_22_portA_request_put_BITS_41_TO_40__q157[1] ||
	      obuf2_22_portA_request_put_BITS_41_TO_40__q157[0]) ;
  assign obuffer2_22_serverAdapterA_s1_1$wget =
	     EN_obuf2_22_portAClear ?
	       2'd0 :
	       MUX_obuffer2_22_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_22_serverAdapterA_s1_1$whas =
	     EN_obuf2_22_portAClear || EN_obuf2_22_portA_request_put ;
  assign obuffer2_22_serverAdapterB_outData_enqData$whas =
	     obuffer2_22_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_22_serverAdapterB_s1[1] &&
	     obuffer2_22_serverAdapterB_s1[0] ;
  assign obuffer2_22_serverAdapterB_outData_outData$whas =
	     obuffer2_22_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_22_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_22_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_22_serverAdapterB_cnt_1$whas =
	     EN_obuf2_22_portB_request_put &&
	     (!obuf2_22_portB_request_put_BITS_41_TO_40__q158[1] ||
	      obuf2_22_portB_request_put_BITS_41_TO_40__q158[0]) ;
  assign obuffer2_22_serverAdapterB_s1_1$wget =
	     EN_obuf2_22_portBClear ?
	       2'd0 :
	       MUX_obuffer2_22_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_22_serverAdapterB_s1_1$whas =
	     EN_obuf2_22_portBClear || EN_obuf2_22_portB_request_put ;
  assign obuffer2_23_serverAdapterA_outData_enqData$whas =
	     obuffer2_23_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_23_serverAdapterA_s1[1] &&
	     obuffer2_23_serverAdapterA_s1[0] ;
  assign obuffer2_23_serverAdapterA_outData_outData$whas =
	     obuffer2_23_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_23_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_23_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_23_serverAdapterA_cnt_1$whas =
	     EN_obuf2_23_portA_request_put &&
	     (!obuf2_23_portA_request_put_BITS_41_TO_40__q159[1] ||
	      obuf2_23_portA_request_put_BITS_41_TO_40__q159[0]) ;
  assign obuffer2_23_serverAdapterA_s1_1$wget =
	     EN_obuf2_23_portAClear ?
	       2'd0 :
	       MUX_obuffer2_23_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_23_serverAdapterA_s1_1$whas =
	     EN_obuf2_23_portAClear || EN_obuf2_23_portA_request_put ;
  assign obuffer2_23_serverAdapterB_outData_enqData$whas =
	     obuffer2_23_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_23_serverAdapterB_s1[1] &&
	     obuffer2_23_serverAdapterB_s1[0] ;
  assign obuffer2_23_serverAdapterB_outData_outData$whas =
	     obuffer2_23_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_23_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_23_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_23_serverAdapterB_cnt_1$whas =
	     EN_obuf2_23_portB_request_put &&
	     (!obuf2_23_portB_request_put_BITS_41_TO_40__q160[1] ||
	      obuf2_23_portB_request_put_BITS_41_TO_40__q160[0]) ;
  assign obuffer2_23_serverAdapterB_s1_1$wget =
	     EN_obuf2_23_portBClear ?
	       2'd0 :
	       MUX_obuffer2_23_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_23_serverAdapterB_s1_1$whas =
	     EN_obuf2_23_portBClear || EN_obuf2_23_portB_request_put ;
  assign obuffer2_24_serverAdapterA_outData_enqData$whas =
	     obuffer2_24_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_24_serverAdapterA_s1[1] &&
	     obuffer2_24_serverAdapterA_s1[0] ;
  assign obuffer2_24_serverAdapterA_outData_outData$whas =
	     obuffer2_24_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_24_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_24_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_24_serverAdapterA_cnt_1$whas =
	     EN_obuf2_24_portA_request_put &&
	     (!obuf2_24_portA_request_put_BITS_41_TO_40__q161[1] ||
	      obuf2_24_portA_request_put_BITS_41_TO_40__q161[0]) ;
  assign obuffer2_24_serverAdapterA_s1_1$wget =
	     EN_obuf2_24_portAClear ?
	       2'd0 :
	       MUX_obuffer2_24_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_24_serverAdapterA_s1_1$whas =
	     EN_obuf2_24_portAClear || EN_obuf2_24_portA_request_put ;
  assign obuffer2_24_serverAdapterB_outData_enqData$whas =
	     obuffer2_24_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_24_serverAdapterB_s1[1] &&
	     obuffer2_24_serverAdapterB_s1[0] ;
  assign obuffer2_24_serverAdapterB_outData_outData$whas =
	     obuffer2_24_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_24_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_24_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_24_serverAdapterB_cnt_1$whas =
	     EN_obuf2_24_portB_request_put &&
	     (!obuf2_24_portB_request_put_BITS_41_TO_40__q162[1] ||
	      obuf2_24_portB_request_put_BITS_41_TO_40__q162[0]) ;
  assign obuffer2_24_serverAdapterB_s1_1$wget =
	     EN_obuf2_24_portBClear ?
	       2'd0 :
	       MUX_obuffer2_24_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_24_serverAdapterB_s1_1$whas =
	     EN_obuf2_24_portBClear || EN_obuf2_24_portB_request_put ;
  assign obuffer2_25_serverAdapterA_outData_enqData$whas =
	     obuffer2_25_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_25_serverAdapterA_s1[1] &&
	     obuffer2_25_serverAdapterA_s1[0] ;
  assign obuffer2_25_serverAdapterA_outData_outData$whas =
	     obuffer2_25_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_25_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_25_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_25_serverAdapterA_cnt_1$whas =
	     EN_obuf2_25_portA_request_put &&
	     (!obuf2_25_portA_request_put_BITS_41_TO_40__q163[1] ||
	      obuf2_25_portA_request_put_BITS_41_TO_40__q163[0]) ;
  assign obuffer2_25_serverAdapterA_s1_1$wget =
	     EN_obuf2_25_portAClear ?
	       2'd0 :
	       MUX_obuffer2_25_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_25_serverAdapterA_s1_1$whas =
	     EN_obuf2_25_portAClear || EN_obuf2_25_portA_request_put ;
  assign obuffer2_25_serverAdapterB_outData_enqData$whas =
	     obuffer2_25_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_25_serverAdapterB_s1[1] &&
	     obuffer2_25_serverAdapterB_s1[0] ;
  assign obuffer2_25_serverAdapterB_outData_outData$whas =
	     obuffer2_25_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_25_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_25_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_25_serverAdapterB_cnt_1$whas =
	     EN_obuf2_25_portB_request_put &&
	     (!obuf2_25_portB_request_put_BITS_41_TO_40__q164[1] ||
	      obuf2_25_portB_request_put_BITS_41_TO_40__q164[0]) ;
  assign obuffer2_25_serverAdapterB_s1_1$wget =
	     EN_obuf2_25_portBClear ?
	       2'd0 :
	       MUX_obuffer2_25_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_25_serverAdapterB_s1_1$whas =
	     EN_obuf2_25_portBClear || EN_obuf2_25_portB_request_put ;
  assign obuffer2_26_serverAdapterA_outData_enqData$whas =
	     obuffer2_26_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_26_serverAdapterA_s1[1] &&
	     obuffer2_26_serverAdapterA_s1[0] ;
  assign obuffer2_26_serverAdapterA_outData_outData$whas =
	     obuffer2_26_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_26_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_26_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_26_serverAdapterA_cnt_1$whas =
	     EN_obuf2_26_portA_request_put &&
	     (!obuf2_26_portA_request_put_BITS_41_TO_40__q165[1] ||
	      obuf2_26_portA_request_put_BITS_41_TO_40__q165[0]) ;
  assign obuffer2_26_serverAdapterA_s1_1$wget =
	     EN_obuf2_26_portAClear ?
	       2'd0 :
	       MUX_obuffer2_26_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_26_serverAdapterA_s1_1$whas =
	     EN_obuf2_26_portAClear || EN_obuf2_26_portA_request_put ;
  assign obuffer2_26_serverAdapterB_outData_enqData$whas =
	     obuffer2_26_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_26_serverAdapterB_s1[1] &&
	     obuffer2_26_serverAdapterB_s1[0] ;
  assign obuffer2_26_serverAdapterB_outData_outData$whas =
	     obuffer2_26_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_26_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_26_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_26_serverAdapterB_cnt_1$whas =
	     EN_obuf2_26_portB_request_put &&
	     (!obuf2_26_portB_request_put_BITS_41_TO_40__q166[1] ||
	      obuf2_26_portB_request_put_BITS_41_TO_40__q166[0]) ;
  assign obuffer2_26_serverAdapterB_s1_1$wget =
	     EN_obuf2_26_portBClear ?
	       2'd0 :
	       MUX_obuffer2_26_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_26_serverAdapterB_s1_1$whas =
	     EN_obuf2_26_portBClear || EN_obuf2_26_portB_request_put ;
  assign obuffer2_27_serverAdapterA_outData_enqData$whas =
	     obuffer2_27_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_27_serverAdapterA_s1[1] &&
	     obuffer2_27_serverAdapterA_s1[0] ;
  assign obuffer2_27_serverAdapterA_outData_outData$whas =
	     obuffer2_27_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_27_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_27_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_27_serverAdapterA_cnt_1$whas =
	     EN_obuf2_27_portA_request_put &&
	     (!obuf2_27_portA_request_put_BITS_41_TO_40__q167[1] ||
	      obuf2_27_portA_request_put_BITS_41_TO_40__q167[0]) ;
  assign obuffer2_27_serverAdapterA_s1_1$wget =
	     EN_obuf2_27_portAClear ?
	       2'd0 :
	       MUX_obuffer2_27_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_27_serverAdapterA_s1_1$whas =
	     EN_obuf2_27_portAClear || EN_obuf2_27_portA_request_put ;
  assign obuffer2_27_serverAdapterB_outData_enqData$whas =
	     obuffer2_27_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_27_serverAdapterB_s1[1] &&
	     obuffer2_27_serverAdapterB_s1[0] ;
  assign obuffer2_27_serverAdapterB_outData_outData$whas =
	     obuffer2_27_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_27_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_27_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_27_serverAdapterB_cnt_1$whas =
	     EN_obuf2_27_portB_request_put &&
	     (!obuf2_27_portB_request_put_BITS_41_TO_40__q168[1] ||
	      obuf2_27_portB_request_put_BITS_41_TO_40__q168[0]) ;
  assign obuffer2_27_serverAdapterB_s1_1$wget =
	     EN_obuf2_27_portBClear ?
	       2'd0 :
	       MUX_obuffer2_27_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_27_serverAdapterB_s1_1$whas =
	     EN_obuf2_27_portBClear || EN_obuf2_27_portB_request_put ;
  assign obuffer2_28_serverAdapterA_outData_enqData$whas =
	     obuffer2_28_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_28_serverAdapterA_s1[1] &&
	     obuffer2_28_serverAdapterA_s1[0] ;
  assign obuffer2_28_serverAdapterA_outData_outData$whas =
	     obuffer2_28_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_28_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_28_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_28_serverAdapterA_cnt_1$whas =
	     EN_obuf2_28_portA_request_put &&
	     (!obuf2_28_portA_request_put_BITS_41_TO_40__q169[1] ||
	      obuf2_28_portA_request_put_BITS_41_TO_40__q169[0]) ;
  assign obuffer2_28_serverAdapterA_s1_1$wget =
	     EN_obuf2_28_portAClear ?
	       2'd0 :
	       MUX_obuffer2_28_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_28_serverAdapterA_s1_1$whas =
	     EN_obuf2_28_portAClear || EN_obuf2_28_portA_request_put ;
  assign obuffer2_28_serverAdapterB_outData_enqData$whas =
	     obuffer2_28_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_28_serverAdapterB_s1[1] &&
	     obuffer2_28_serverAdapterB_s1[0] ;
  assign obuffer2_28_serverAdapterB_outData_outData$whas =
	     obuffer2_28_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_28_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_28_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_28_serverAdapterB_cnt_1$whas =
	     EN_obuf2_28_portB_request_put &&
	     (!obuf2_28_portB_request_put_BITS_41_TO_40__q170[1] ||
	      obuf2_28_portB_request_put_BITS_41_TO_40__q170[0]) ;
  assign obuffer2_28_serverAdapterB_s1_1$wget =
	     EN_obuf2_28_portBClear ?
	       2'd0 :
	       MUX_obuffer2_28_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_28_serverAdapterB_s1_1$whas =
	     EN_obuf2_28_portBClear || EN_obuf2_28_portB_request_put ;
  assign obuffer2_29_serverAdapterA_outData_enqData$whas =
	     obuffer2_29_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_29_serverAdapterA_s1[1] &&
	     obuffer2_29_serverAdapterA_s1[0] ;
  assign obuffer2_29_serverAdapterA_outData_outData$whas =
	     obuffer2_29_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_29_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_29_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_29_serverAdapterA_cnt_1$whas =
	     EN_obuf2_29_portA_request_put &&
	     (!obuf2_29_portA_request_put_BITS_41_TO_40__q171[1] ||
	      obuf2_29_portA_request_put_BITS_41_TO_40__q171[0]) ;
  assign obuffer2_29_serverAdapterA_s1_1$wget =
	     EN_obuf2_29_portAClear ?
	       2'd0 :
	       MUX_obuffer2_29_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_29_serverAdapterA_s1_1$whas =
	     EN_obuf2_29_portAClear || EN_obuf2_29_portA_request_put ;
  assign obuffer2_29_serverAdapterB_outData_enqData$whas =
	     obuffer2_29_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_29_serverAdapterB_s1[1] &&
	     obuffer2_29_serverAdapterB_s1[0] ;
  assign obuffer2_29_serverAdapterB_outData_outData$whas =
	     obuffer2_29_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_29_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_29_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_29_serverAdapterB_cnt_1$whas =
	     EN_obuf2_29_portB_request_put &&
	     (!obuf2_29_portB_request_put_BITS_41_TO_40__q172[1] ||
	      obuf2_29_portB_request_put_BITS_41_TO_40__q172[0]) ;
  assign obuffer2_29_serverAdapterB_s1_1$wget =
	     EN_obuf2_29_portBClear ?
	       2'd0 :
	       MUX_obuffer2_29_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_29_serverAdapterB_s1_1$whas =
	     EN_obuf2_29_portBClear || EN_obuf2_29_portB_request_put ;
  assign obuffer2_30_serverAdapterA_outData_enqData$whas =
	     obuffer2_30_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_30_serverAdapterA_s1[1] &&
	     obuffer2_30_serverAdapterA_s1[0] ;
  assign obuffer2_30_serverAdapterA_outData_outData$whas =
	     obuffer2_30_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_30_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_30_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_30_serverAdapterA_cnt_1$whas =
	     EN_obuf2_30_portA_request_put &&
	     (!obuf2_30_portA_request_put_BITS_41_TO_40__q175[1] ||
	      obuf2_30_portA_request_put_BITS_41_TO_40__q175[0]) ;
  assign obuffer2_30_serverAdapterA_s1_1$wget =
	     EN_obuf2_30_portAClear ?
	       2'd0 :
	       MUX_obuffer2_30_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_30_serverAdapterA_s1_1$whas =
	     EN_obuf2_30_portAClear || EN_obuf2_30_portA_request_put ;
  assign obuffer2_30_serverAdapterB_outData_enqData$whas =
	     obuffer2_30_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_30_serverAdapterB_s1[1] &&
	     obuffer2_30_serverAdapterB_s1[0] ;
  assign obuffer2_30_serverAdapterB_outData_outData$whas =
	     obuffer2_30_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_30_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_30_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_30_serverAdapterB_cnt_1$whas =
	     EN_obuf2_30_portB_request_put &&
	     (!obuf2_30_portB_request_put_BITS_41_TO_40__q176[1] ||
	      obuf2_30_portB_request_put_BITS_41_TO_40__q176[0]) ;
  assign obuffer2_30_serverAdapterB_s1_1$wget =
	     EN_obuf2_30_portBClear ?
	       2'd0 :
	       MUX_obuffer2_30_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_30_serverAdapterB_s1_1$whas =
	     EN_obuf2_30_portBClear || EN_obuf2_30_portB_request_put ;
  assign obuffer2_31_serverAdapterA_outData_enqData$whas =
	     obuffer2_31_serverAdapterA_outDataCore$FULL_N &&
	     obuffer2_31_serverAdapterA_s1[1] &&
	     obuffer2_31_serverAdapterA_s1[0] ;
  assign obuffer2_31_serverAdapterA_outData_outData$whas =
	     obuffer2_31_serverAdapterA_outDataCore$EMPTY_N ||
	     !obuffer2_31_serverAdapterA_outDataCore$EMPTY_N &&
	     obuffer2_31_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_31_serverAdapterA_cnt_1$whas =
	     EN_obuf2_31_portA_request_put &&
	     (!obuf2_31_portA_request_put_BITS_41_TO_40__q177[1] ||
	      obuf2_31_portA_request_put_BITS_41_TO_40__q177[0]) ;
  assign obuffer2_31_serverAdapterA_s1_1$wget =
	     EN_obuf2_31_portAClear ?
	       2'd0 :
	       MUX_obuffer2_31_serverAdapterA_s1_1$wset_1__VAL_2 ;
  assign obuffer2_31_serverAdapterA_s1_1$whas =
	     EN_obuf2_31_portAClear || EN_obuf2_31_portA_request_put ;
  assign obuffer2_31_serverAdapterB_outData_enqData$whas =
	     obuffer2_31_serverAdapterB_outDataCore$FULL_N &&
	     obuffer2_31_serverAdapterB_s1[1] &&
	     obuffer2_31_serverAdapterB_s1[0] ;
  assign obuffer2_31_serverAdapterB_outData_outData$whas =
	     obuffer2_31_serverAdapterB_outDataCore$EMPTY_N ||
	     !obuffer2_31_serverAdapterB_outDataCore$EMPTY_N &&
	     obuffer2_31_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_31_serverAdapterB_cnt_1$whas =
	     EN_obuf2_31_portB_request_put &&
	     (!obuf2_31_portB_request_put_BITS_41_TO_40__q178[1] ||
	      obuf2_31_portB_request_put_BITS_41_TO_40__q178[0]) ;
  assign obuffer2_31_serverAdapterB_s1_1$wget =
	     EN_obuf2_31_portBClear ?
	       2'd0 :
	       MUX_obuffer2_31_serverAdapterB_s1_1$wset_1__VAL_2 ;
  assign obuffer2_31_serverAdapterB_s1_1$whas =
	     EN_obuf2_31_portBClear || EN_obuf2_31_portB_request_put ;

  // register ibuffer_0_serverAdapterA_cnt
  assign ibuffer_0_serverAdapterA_cnt$D_IN =
	     EN_ibuf_0_portAClear ?
	       3'd0 :
	       ibuffer_0_serverAdapterA_cnt_7_PLUS_IF_ibuffer_ETC___d33 ;
  assign ibuffer_0_serverAdapterA_cnt$EN =
	     ibuffer_0_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_0_portA_response_get ||
	     EN_ibuf_0_portAClear ;

  // register ibuffer_0_serverAdapterA_s1
  assign ibuffer_0_serverAdapterA_s1$D_IN =
	     ibuffer_0_serverAdapterA_s1_1$whas ?
	       ibuffer_0_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_0_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_0_serverAdapterB_cnt
  assign ibuffer_0_serverAdapterB_cnt$D_IN =
	     EN_ibuf_0_portBClear ?
	       3'd0 :
	       ibuffer_0_serverAdapterB_cnt_0_PLUS_IF_ibuffer_ETC___d86 ;
  assign ibuffer_0_serverAdapterB_cnt$EN =
	     ibuffer_0_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_0_portB_response_get ||
	     EN_ibuf_0_portBClear ;

  // register ibuffer_0_serverAdapterB_s1
  assign ibuffer_0_serverAdapterB_s1$D_IN =
	     ibuffer_0_serverAdapterB_s1_1$whas ?
	       ibuffer_0_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_0_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_10_serverAdapterA_cnt
  assign ibuffer_10_serverAdapterA_cnt$D_IN =
	     EN_ibuf_10_portAClear ?
	       3'd0 :
	       ibuffer_10_serverAdapterA_cnt_068_PLUS_IF_ibuf_ETC___d1074 ;
  assign ibuffer_10_serverAdapterA_cnt$EN =
	     ibuffer_10_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_10_portA_response_get ||
	     EN_ibuf_10_portAClear ;

  // register ibuffer_10_serverAdapterA_s1
  assign ibuffer_10_serverAdapterA_s1$D_IN =
	     ibuffer_10_serverAdapterA_s1_1$whas ?
	       ibuffer_10_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_10_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_10_serverAdapterB_cnt
  assign ibuffer_10_serverAdapterB_cnt$D_IN =
	     EN_ibuf_10_portBClear ?
	       3'd0 :
	       ibuffer_10_serverAdapterB_cnt_120_PLUS_IF_ibuf_ETC___d1126 ;
  assign ibuffer_10_serverAdapterB_cnt$EN =
	     ibuffer_10_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_10_portB_response_get ||
	     EN_ibuf_10_portBClear ;

  // register ibuffer_10_serverAdapterB_s1
  assign ibuffer_10_serverAdapterB_s1$D_IN =
	     ibuffer_10_serverAdapterB_s1_1$whas ?
	       ibuffer_10_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_10_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_11_serverAdapterA_cnt
  assign ibuffer_11_serverAdapterA_cnt$D_IN =
	     EN_ibuf_11_portAClear ?
	       3'd0 :
	       ibuffer_11_serverAdapterA_cnt_172_PLUS_IF_ibuf_ETC___d1178 ;
  assign ibuffer_11_serverAdapterA_cnt$EN =
	     ibuffer_11_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_11_portA_response_get ||
	     EN_ibuf_11_portAClear ;

  // register ibuffer_11_serverAdapterA_s1
  assign ibuffer_11_serverAdapterA_s1$D_IN =
	     ibuffer_11_serverAdapterA_s1_1$whas ?
	       ibuffer_11_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_11_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_11_serverAdapterB_cnt
  assign ibuffer_11_serverAdapterB_cnt$D_IN =
	     EN_ibuf_11_portBClear ?
	       3'd0 :
	       ibuffer_11_serverAdapterB_cnt_224_PLUS_IF_ibuf_ETC___d1230 ;
  assign ibuffer_11_serverAdapterB_cnt$EN =
	     ibuffer_11_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_11_portB_response_get ||
	     EN_ibuf_11_portBClear ;

  // register ibuffer_11_serverAdapterB_s1
  assign ibuffer_11_serverAdapterB_s1$D_IN =
	     ibuffer_11_serverAdapterB_s1_1$whas ?
	       ibuffer_11_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_11_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_12_serverAdapterA_cnt
  assign ibuffer_12_serverAdapterA_cnt$D_IN =
	     EN_ibuf_12_portAClear ?
	       3'd0 :
	       ibuffer_12_serverAdapterA_cnt_276_PLUS_IF_ibuf_ETC___d1282 ;
  assign ibuffer_12_serverAdapterA_cnt$EN =
	     ibuffer_12_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_12_portA_response_get ||
	     EN_ibuf_12_portAClear ;

  // register ibuffer_12_serverAdapterA_s1
  assign ibuffer_12_serverAdapterA_s1$D_IN =
	     ibuffer_12_serverAdapterA_s1_1$whas ?
	       ibuffer_12_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_12_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_12_serverAdapterB_cnt
  assign ibuffer_12_serverAdapterB_cnt$D_IN =
	     EN_ibuf_12_portBClear ?
	       3'd0 :
	       ibuffer_12_serverAdapterB_cnt_328_PLUS_IF_ibuf_ETC___d1334 ;
  assign ibuffer_12_serverAdapterB_cnt$EN =
	     ibuffer_12_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_12_portB_response_get ||
	     EN_ibuf_12_portBClear ;

  // register ibuffer_12_serverAdapterB_s1
  assign ibuffer_12_serverAdapterB_s1$D_IN =
	     ibuffer_12_serverAdapterB_s1_1$whas ?
	       ibuffer_12_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_12_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_13_serverAdapterA_cnt
  assign ibuffer_13_serverAdapterA_cnt$D_IN =
	     EN_ibuf_13_portAClear ?
	       3'd0 :
	       ibuffer_13_serverAdapterA_cnt_380_PLUS_IF_ibuf_ETC___d1386 ;
  assign ibuffer_13_serverAdapterA_cnt$EN =
	     ibuffer_13_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_13_portA_response_get ||
	     EN_ibuf_13_portAClear ;

  // register ibuffer_13_serverAdapterA_s1
  assign ibuffer_13_serverAdapterA_s1$D_IN =
	     ibuffer_13_serverAdapterA_s1_1$whas ?
	       ibuffer_13_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_13_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_13_serverAdapterB_cnt
  assign ibuffer_13_serverAdapterB_cnt$D_IN =
	     EN_ibuf_13_portBClear ?
	       3'd0 :
	       ibuffer_13_serverAdapterB_cnt_432_PLUS_IF_ibuf_ETC___d1438 ;
  assign ibuffer_13_serverAdapterB_cnt$EN =
	     ibuffer_13_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_13_portB_response_get ||
	     EN_ibuf_13_portBClear ;

  // register ibuffer_13_serverAdapterB_s1
  assign ibuffer_13_serverAdapterB_s1$D_IN =
	     ibuffer_13_serverAdapterB_s1_1$whas ?
	       ibuffer_13_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_13_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_14_serverAdapterA_cnt
  assign ibuffer_14_serverAdapterA_cnt$D_IN =
	     EN_ibuf_14_portAClear ?
	       3'd0 :
	       ibuffer_14_serverAdapterA_cnt_484_PLUS_IF_ibuf_ETC___d1490 ;
  assign ibuffer_14_serverAdapterA_cnt$EN =
	     ibuffer_14_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_14_portA_response_get ||
	     EN_ibuf_14_portAClear ;

  // register ibuffer_14_serverAdapterA_s1
  assign ibuffer_14_serverAdapterA_s1$D_IN =
	     ibuffer_14_serverAdapterA_s1_1$whas ?
	       ibuffer_14_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_14_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_14_serverAdapterB_cnt
  assign ibuffer_14_serverAdapterB_cnt$D_IN =
	     EN_ibuf_14_portBClear ?
	       3'd0 :
	       ibuffer_14_serverAdapterB_cnt_536_PLUS_IF_ibuf_ETC___d1542 ;
  assign ibuffer_14_serverAdapterB_cnt$EN =
	     ibuffer_14_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_14_portB_response_get ||
	     EN_ibuf_14_portBClear ;

  // register ibuffer_14_serverAdapterB_s1
  assign ibuffer_14_serverAdapterB_s1$D_IN =
	     ibuffer_14_serverAdapterB_s1_1$whas ?
	       ibuffer_14_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_14_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_15_serverAdapterA_cnt
  assign ibuffer_15_serverAdapterA_cnt$D_IN =
	     EN_ibuf_15_portAClear ?
	       3'd0 :
	       ibuffer_15_serverAdapterA_cnt_588_PLUS_IF_ibuf_ETC___d1594 ;
  assign ibuffer_15_serverAdapterA_cnt$EN =
	     ibuffer_15_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_15_portA_response_get ||
	     EN_ibuf_15_portAClear ;

  // register ibuffer_15_serverAdapterA_s1
  assign ibuffer_15_serverAdapterA_s1$D_IN =
	     ibuffer_15_serverAdapterA_s1_1$whas ?
	       ibuffer_15_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_15_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_15_serverAdapterB_cnt
  assign ibuffer_15_serverAdapterB_cnt$D_IN =
	     EN_ibuf_15_portBClear ?
	       3'd0 :
	       ibuffer_15_serverAdapterB_cnt_640_PLUS_IF_ibuf_ETC___d1646 ;
  assign ibuffer_15_serverAdapterB_cnt$EN =
	     ibuffer_15_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_15_portB_response_get ||
	     EN_ibuf_15_portBClear ;

  // register ibuffer_15_serverAdapterB_s1
  assign ibuffer_15_serverAdapterB_s1$D_IN =
	     ibuffer_15_serverAdapterB_s1_1$whas ?
	       ibuffer_15_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_15_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_16_serverAdapterA_cnt
  assign ibuffer_16_serverAdapterA_cnt$D_IN =
	     EN_ibuf_16_portAClear ?
	       3'd0 :
	       ibuffer_16_serverAdapterA_cnt_692_PLUS_IF_ibuf_ETC___d1698 ;
  assign ibuffer_16_serverAdapterA_cnt$EN =
	     ibuffer_16_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_16_portA_response_get ||
	     EN_ibuf_16_portAClear ;

  // register ibuffer_16_serverAdapterA_s1
  assign ibuffer_16_serverAdapterA_s1$D_IN =
	     ibuffer_16_serverAdapterA_s1_1$whas ?
	       ibuffer_16_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_16_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_16_serverAdapterB_cnt
  assign ibuffer_16_serverAdapterB_cnt$D_IN =
	     EN_ibuf_16_portBClear ?
	       3'd0 :
	       ibuffer_16_serverAdapterB_cnt_744_PLUS_IF_ibuf_ETC___d1750 ;
  assign ibuffer_16_serverAdapterB_cnt$EN =
	     ibuffer_16_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_16_portB_response_get ||
	     EN_ibuf_16_portBClear ;

  // register ibuffer_16_serverAdapterB_s1
  assign ibuffer_16_serverAdapterB_s1$D_IN =
	     ibuffer_16_serverAdapterB_s1_1$whas ?
	       ibuffer_16_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_16_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_17_serverAdapterA_cnt
  assign ibuffer_17_serverAdapterA_cnt$D_IN =
	     EN_ibuf_17_portAClear ?
	       3'd0 :
	       ibuffer_17_serverAdapterA_cnt_796_PLUS_IF_ibuf_ETC___d1802 ;
  assign ibuffer_17_serverAdapterA_cnt$EN =
	     ibuffer_17_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_17_portA_response_get ||
	     EN_ibuf_17_portAClear ;

  // register ibuffer_17_serverAdapterA_s1
  assign ibuffer_17_serverAdapterA_s1$D_IN =
	     ibuffer_17_serverAdapterA_s1_1$whas ?
	       ibuffer_17_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_17_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_17_serverAdapterB_cnt
  assign ibuffer_17_serverAdapterB_cnt$D_IN =
	     EN_ibuf_17_portBClear ?
	       3'd0 :
	       ibuffer_17_serverAdapterB_cnt_848_PLUS_IF_ibuf_ETC___d1854 ;
  assign ibuffer_17_serverAdapterB_cnt$EN =
	     ibuffer_17_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_17_portB_response_get ||
	     EN_ibuf_17_portBClear ;

  // register ibuffer_17_serverAdapterB_s1
  assign ibuffer_17_serverAdapterB_s1$D_IN =
	     ibuffer_17_serverAdapterB_s1_1$whas ?
	       ibuffer_17_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_17_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_18_serverAdapterA_cnt
  assign ibuffer_18_serverAdapterA_cnt$D_IN =
	     EN_ibuf_18_portAClear ?
	       3'd0 :
	       ibuffer_18_serverAdapterA_cnt_900_PLUS_IF_ibuf_ETC___d1906 ;
  assign ibuffer_18_serverAdapterA_cnt$EN =
	     ibuffer_18_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_18_portA_response_get ||
	     EN_ibuf_18_portAClear ;

  // register ibuffer_18_serverAdapterA_s1
  assign ibuffer_18_serverAdapterA_s1$D_IN =
	     ibuffer_18_serverAdapterA_s1_1$whas ?
	       ibuffer_18_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_18_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_18_serverAdapterB_cnt
  assign ibuffer_18_serverAdapterB_cnt$D_IN =
	     EN_ibuf_18_portBClear ?
	       3'd0 :
	       ibuffer_18_serverAdapterB_cnt_952_PLUS_IF_ibuf_ETC___d1958 ;
  assign ibuffer_18_serverAdapterB_cnt$EN =
	     ibuffer_18_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_18_portB_response_get ||
	     EN_ibuf_18_portBClear ;

  // register ibuffer_18_serverAdapterB_s1
  assign ibuffer_18_serverAdapterB_s1$D_IN =
	     ibuffer_18_serverAdapterB_s1_1$whas ?
	       ibuffer_18_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_18_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_19_serverAdapterA_cnt
  assign ibuffer_19_serverAdapterA_cnt$D_IN =
	     EN_ibuf_19_portAClear ?
	       3'd0 :
	       ibuffer_19_serverAdapterA_cnt_004_PLUS_IF_ibuf_ETC___d2010 ;
  assign ibuffer_19_serverAdapterA_cnt$EN =
	     ibuffer_19_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_19_portA_response_get ||
	     EN_ibuf_19_portAClear ;

  // register ibuffer_19_serverAdapterA_s1
  assign ibuffer_19_serverAdapterA_s1$D_IN =
	     ibuffer_19_serverAdapterA_s1_1$whas ?
	       ibuffer_19_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_19_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_19_serverAdapterB_cnt
  assign ibuffer_19_serverAdapterB_cnt$D_IN =
	     EN_ibuf_19_portBClear ?
	       3'd0 :
	       ibuffer_19_serverAdapterB_cnt_056_PLUS_IF_ibuf_ETC___d2062 ;
  assign ibuffer_19_serverAdapterB_cnt$EN =
	     ibuffer_19_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_19_portB_response_get ||
	     EN_ibuf_19_portBClear ;

  // register ibuffer_19_serverAdapterB_s1
  assign ibuffer_19_serverAdapterB_s1$D_IN =
	     ibuffer_19_serverAdapterB_s1_1$whas ?
	       ibuffer_19_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_19_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_1_serverAdapterA_cnt
  assign ibuffer_1_serverAdapterA_cnt$D_IN =
	     EN_ibuf_1_portAClear ?
	       3'd0 :
	       ibuffer_1_serverAdapterA_cnt_32_PLUS_IF_ibuffe_ETC___d138 ;
  assign ibuffer_1_serverAdapterA_cnt$EN =
	     ibuffer_1_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_1_portA_response_get ||
	     EN_ibuf_1_portAClear ;

  // register ibuffer_1_serverAdapterA_s1
  assign ibuffer_1_serverAdapterA_s1$D_IN =
	     ibuffer_1_serverAdapterA_s1_1$whas ?
	       ibuffer_1_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_1_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_1_serverAdapterB_cnt
  assign ibuffer_1_serverAdapterB_cnt$D_IN =
	     EN_ibuf_1_portBClear ?
	       3'd0 :
	       ibuffer_1_serverAdapterB_cnt_84_PLUS_IF_ibuffe_ETC___d190 ;
  assign ibuffer_1_serverAdapterB_cnt$EN =
	     ibuffer_1_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_1_portB_response_get ||
	     EN_ibuf_1_portBClear ;

  // register ibuffer_1_serverAdapterB_s1
  assign ibuffer_1_serverAdapterB_s1$D_IN =
	     ibuffer_1_serverAdapterB_s1_1$whas ?
	       ibuffer_1_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_1_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_20_serverAdapterA_cnt
  assign ibuffer_20_serverAdapterA_cnt$D_IN =
	     EN_ibuf_20_portAClear ?
	       3'd0 :
	       ibuffer_20_serverAdapterA_cnt_108_PLUS_IF_ibuf_ETC___d2114 ;
  assign ibuffer_20_serverAdapterA_cnt$EN =
	     ibuffer_20_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_20_portA_response_get ||
	     EN_ibuf_20_portAClear ;

  // register ibuffer_20_serverAdapterA_s1
  assign ibuffer_20_serverAdapterA_s1$D_IN =
	     ibuffer_20_serverAdapterA_s1_1$whas ?
	       ibuffer_20_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_20_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_20_serverAdapterB_cnt
  assign ibuffer_20_serverAdapterB_cnt$D_IN =
	     EN_ibuf_20_portBClear ?
	       3'd0 :
	       ibuffer_20_serverAdapterB_cnt_160_PLUS_IF_ibuf_ETC___d2166 ;
  assign ibuffer_20_serverAdapterB_cnt$EN =
	     ibuffer_20_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_20_portB_response_get ||
	     EN_ibuf_20_portBClear ;

  // register ibuffer_20_serverAdapterB_s1
  assign ibuffer_20_serverAdapterB_s1$D_IN =
	     ibuffer_20_serverAdapterB_s1_1$whas ?
	       ibuffer_20_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_20_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_21_serverAdapterA_cnt
  assign ibuffer_21_serverAdapterA_cnt$D_IN =
	     EN_ibuf_21_portAClear ?
	       3'd0 :
	       ibuffer_21_serverAdapterA_cnt_212_PLUS_IF_ibuf_ETC___d2218 ;
  assign ibuffer_21_serverAdapterA_cnt$EN =
	     ibuffer_21_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_21_portA_response_get ||
	     EN_ibuf_21_portAClear ;

  // register ibuffer_21_serverAdapterA_s1
  assign ibuffer_21_serverAdapterA_s1$D_IN =
	     ibuffer_21_serverAdapterA_s1_1$whas ?
	       ibuffer_21_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_21_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_21_serverAdapterB_cnt
  assign ibuffer_21_serverAdapterB_cnt$D_IN =
	     EN_ibuf_21_portBClear ?
	       3'd0 :
	       ibuffer_21_serverAdapterB_cnt_264_PLUS_IF_ibuf_ETC___d2270 ;
  assign ibuffer_21_serverAdapterB_cnt$EN =
	     ibuffer_21_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_21_portB_response_get ||
	     EN_ibuf_21_portBClear ;

  // register ibuffer_21_serverAdapterB_s1
  assign ibuffer_21_serverAdapterB_s1$D_IN =
	     ibuffer_21_serverAdapterB_s1_1$whas ?
	       ibuffer_21_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_21_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_22_serverAdapterA_cnt
  assign ibuffer_22_serverAdapterA_cnt$D_IN =
	     EN_ibuf_22_portAClear ?
	       3'd0 :
	       ibuffer_22_serverAdapterA_cnt_316_PLUS_IF_ibuf_ETC___d2322 ;
  assign ibuffer_22_serverAdapterA_cnt$EN =
	     ibuffer_22_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_22_portA_response_get ||
	     EN_ibuf_22_portAClear ;

  // register ibuffer_22_serverAdapterA_s1
  assign ibuffer_22_serverAdapterA_s1$D_IN =
	     ibuffer_22_serverAdapterA_s1_1$whas ?
	       ibuffer_22_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_22_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_22_serverAdapterB_cnt
  assign ibuffer_22_serverAdapterB_cnt$D_IN =
	     EN_ibuf_22_portBClear ?
	       3'd0 :
	       ibuffer_22_serverAdapterB_cnt_368_PLUS_IF_ibuf_ETC___d2374 ;
  assign ibuffer_22_serverAdapterB_cnt$EN =
	     ibuffer_22_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_22_portB_response_get ||
	     EN_ibuf_22_portBClear ;

  // register ibuffer_22_serverAdapterB_s1
  assign ibuffer_22_serverAdapterB_s1$D_IN =
	     ibuffer_22_serverAdapterB_s1_1$whas ?
	       ibuffer_22_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_22_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_23_serverAdapterA_cnt
  assign ibuffer_23_serverAdapterA_cnt$D_IN =
	     EN_ibuf_23_portAClear ?
	       3'd0 :
	       ibuffer_23_serverAdapterA_cnt_420_PLUS_IF_ibuf_ETC___d2426 ;
  assign ibuffer_23_serverAdapterA_cnt$EN =
	     ibuffer_23_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_23_portA_response_get ||
	     EN_ibuf_23_portAClear ;

  // register ibuffer_23_serverAdapterA_s1
  assign ibuffer_23_serverAdapterA_s1$D_IN =
	     ibuffer_23_serverAdapterA_s1_1$whas ?
	       ibuffer_23_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_23_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_23_serverAdapterB_cnt
  assign ibuffer_23_serverAdapterB_cnt$D_IN =
	     EN_ibuf_23_portBClear ?
	       3'd0 :
	       ibuffer_23_serverAdapterB_cnt_472_PLUS_IF_ibuf_ETC___d2478 ;
  assign ibuffer_23_serverAdapterB_cnt$EN =
	     ibuffer_23_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_23_portB_response_get ||
	     EN_ibuf_23_portBClear ;

  // register ibuffer_23_serverAdapterB_s1
  assign ibuffer_23_serverAdapterB_s1$D_IN =
	     ibuffer_23_serverAdapterB_s1_1$whas ?
	       ibuffer_23_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_23_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_24_serverAdapterA_cnt
  assign ibuffer_24_serverAdapterA_cnt$D_IN =
	     EN_ibuf_24_portAClear ?
	       3'd0 :
	       ibuffer_24_serverAdapterA_cnt_524_PLUS_IF_ibuf_ETC___d2530 ;
  assign ibuffer_24_serverAdapterA_cnt$EN =
	     ibuffer_24_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_24_portA_response_get ||
	     EN_ibuf_24_portAClear ;

  // register ibuffer_24_serverAdapterA_s1
  assign ibuffer_24_serverAdapterA_s1$D_IN =
	     ibuffer_24_serverAdapterA_s1_1$whas ?
	       ibuffer_24_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_24_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_24_serverAdapterB_cnt
  assign ibuffer_24_serverAdapterB_cnt$D_IN =
	     EN_ibuf_24_portBClear ?
	       3'd0 :
	       ibuffer_24_serverAdapterB_cnt_576_PLUS_IF_ibuf_ETC___d2582 ;
  assign ibuffer_24_serverAdapterB_cnt$EN =
	     ibuffer_24_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_24_portB_response_get ||
	     EN_ibuf_24_portBClear ;

  // register ibuffer_24_serverAdapterB_s1
  assign ibuffer_24_serverAdapterB_s1$D_IN =
	     ibuffer_24_serverAdapterB_s1_1$whas ?
	       ibuffer_24_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_24_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_25_serverAdapterA_cnt
  assign ibuffer_25_serverAdapterA_cnt$D_IN =
	     EN_ibuf_25_portAClear ?
	       3'd0 :
	       ibuffer_25_serverAdapterA_cnt_628_PLUS_IF_ibuf_ETC___d2634 ;
  assign ibuffer_25_serverAdapterA_cnt$EN =
	     ibuffer_25_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_25_portA_response_get ||
	     EN_ibuf_25_portAClear ;

  // register ibuffer_25_serverAdapterA_s1
  assign ibuffer_25_serverAdapterA_s1$D_IN =
	     ibuffer_25_serverAdapterA_s1_1$whas ?
	       ibuffer_25_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_25_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_25_serverAdapterB_cnt
  assign ibuffer_25_serverAdapterB_cnt$D_IN =
	     EN_ibuf_25_portBClear ?
	       3'd0 :
	       ibuffer_25_serverAdapterB_cnt_680_PLUS_IF_ibuf_ETC___d2686 ;
  assign ibuffer_25_serverAdapterB_cnt$EN =
	     ibuffer_25_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_25_portB_response_get ||
	     EN_ibuf_25_portBClear ;

  // register ibuffer_25_serverAdapterB_s1
  assign ibuffer_25_serverAdapterB_s1$D_IN =
	     ibuffer_25_serverAdapterB_s1_1$whas ?
	       ibuffer_25_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_25_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_26_serverAdapterA_cnt
  assign ibuffer_26_serverAdapterA_cnt$D_IN =
	     EN_ibuf_26_portAClear ?
	       3'd0 :
	       ibuffer_26_serverAdapterA_cnt_732_PLUS_IF_ibuf_ETC___d2738 ;
  assign ibuffer_26_serverAdapterA_cnt$EN =
	     ibuffer_26_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_26_portA_response_get ||
	     EN_ibuf_26_portAClear ;

  // register ibuffer_26_serverAdapterA_s1
  assign ibuffer_26_serverAdapterA_s1$D_IN =
	     ibuffer_26_serverAdapterA_s1_1$whas ?
	       ibuffer_26_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_26_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_26_serverAdapterB_cnt
  assign ibuffer_26_serverAdapterB_cnt$D_IN =
	     EN_ibuf_26_portBClear ?
	       3'd0 :
	       ibuffer_26_serverAdapterB_cnt_784_PLUS_IF_ibuf_ETC___d2790 ;
  assign ibuffer_26_serverAdapterB_cnt$EN =
	     ibuffer_26_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_26_portB_response_get ||
	     EN_ibuf_26_portBClear ;

  // register ibuffer_26_serverAdapterB_s1
  assign ibuffer_26_serverAdapterB_s1$D_IN =
	     ibuffer_26_serverAdapterB_s1_1$whas ?
	       ibuffer_26_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_26_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_27_serverAdapterA_cnt
  assign ibuffer_27_serverAdapterA_cnt$D_IN =
	     EN_ibuf_27_portAClear ?
	       3'd0 :
	       ibuffer_27_serverAdapterA_cnt_836_PLUS_IF_ibuf_ETC___d2842 ;
  assign ibuffer_27_serverAdapterA_cnt$EN =
	     ibuffer_27_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_27_portA_response_get ||
	     EN_ibuf_27_portAClear ;

  // register ibuffer_27_serverAdapterA_s1
  assign ibuffer_27_serverAdapterA_s1$D_IN =
	     ibuffer_27_serverAdapterA_s1_1$whas ?
	       ibuffer_27_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_27_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_27_serverAdapterB_cnt
  assign ibuffer_27_serverAdapterB_cnt$D_IN =
	     EN_ibuf_27_portBClear ?
	       3'd0 :
	       ibuffer_27_serverAdapterB_cnt_888_PLUS_IF_ibuf_ETC___d2894 ;
  assign ibuffer_27_serverAdapterB_cnt$EN =
	     ibuffer_27_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_27_portB_response_get ||
	     EN_ibuf_27_portBClear ;

  // register ibuffer_27_serverAdapterB_s1
  assign ibuffer_27_serverAdapterB_s1$D_IN =
	     ibuffer_27_serverAdapterB_s1_1$whas ?
	       ibuffer_27_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_27_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_28_serverAdapterA_cnt
  assign ibuffer_28_serverAdapterA_cnt$D_IN =
	     EN_ibuf_28_portAClear ?
	       3'd0 :
	       ibuffer_28_serverAdapterA_cnt_940_PLUS_IF_ibuf_ETC___d2946 ;
  assign ibuffer_28_serverAdapterA_cnt$EN =
	     ibuffer_28_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_28_portA_response_get ||
	     EN_ibuf_28_portAClear ;

  // register ibuffer_28_serverAdapterA_s1
  assign ibuffer_28_serverAdapterA_s1$D_IN =
	     ibuffer_28_serverAdapterA_s1_1$whas ?
	       ibuffer_28_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_28_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_28_serverAdapterB_cnt
  assign ibuffer_28_serverAdapterB_cnt$D_IN =
	     EN_ibuf_28_portBClear ?
	       3'd0 :
	       ibuffer_28_serverAdapterB_cnt_992_PLUS_IF_ibuf_ETC___d2998 ;
  assign ibuffer_28_serverAdapterB_cnt$EN =
	     ibuffer_28_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_28_portB_response_get ||
	     EN_ibuf_28_portBClear ;

  // register ibuffer_28_serverAdapterB_s1
  assign ibuffer_28_serverAdapterB_s1$D_IN =
	     ibuffer_28_serverAdapterB_s1_1$whas ?
	       ibuffer_28_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_28_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_29_serverAdapterA_cnt
  assign ibuffer_29_serverAdapterA_cnt$D_IN =
	     EN_ibuf_29_portAClear ?
	       3'd0 :
	       ibuffer_29_serverAdapterA_cnt_044_PLUS_IF_ibuf_ETC___d3050 ;
  assign ibuffer_29_serverAdapterA_cnt$EN =
	     ibuffer_29_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_29_portA_response_get ||
	     EN_ibuf_29_portAClear ;

  // register ibuffer_29_serverAdapterA_s1
  assign ibuffer_29_serverAdapterA_s1$D_IN =
	     ibuffer_29_serverAdapterA_s1_1$whas ?
	       ibuffer_29_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_29_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_29_serverAdapterB_cnt
  assign ibuffer_29_serverAdapterB_cnt$D_IN =
	     EN_ibuf_29_portBClear ?
	       3'd0 :
	       ibuffer_29_serverAdapterB_cnt_096_PLUS_IF_ibuf_ETC___d3102 ;
  assign ibuffer_29_serverAdapterB_cnt$EN =
	     ibuffer_29_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_29_portB_response_get ||
	     EN_ibuf_29_portBClear ;

  // register ibuffer_29_serverAdapterB_s1
  assign ibuffer_29_serverAdapterB_s1$D_IN =
	     ibuffer_29_serverAdapterB_s1_1$whas ?
	       ibuffer_29_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_29_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_2_serverAdapterA_cnt
  assign ibuffer_2_serverAdapterA_cnt$D_IN =
	     EN_ibuf_2_portAClear ?
	       3'd0 :
	       ibuffer_2_serverAdapterA_cnt_36_PLUS_IF_ibuffe_ETC___d242 ;
  assign ibuffer_2_serverAdapterA_cnt$EN =
	     ibuffer_2_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_2_portA_response_get ||
	     EN_ibuf_2_portAClear ;

  // register ibuffer_2_serverAdapterA_s1
  assign ibuffer_2_serverAdapterA_s1$D_IN =
	     ibuffer_2_serverAdapterA_s1_1$whas ?
	       ibuffer_2_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_2_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_2_serverAdapterB_cnt
  assign ibuffer_2_serverAdapterB_cnt$D_IN =
	     EN_ibuf_2_portBClear ?
	       3'd0 :
	       ibuffer_2_serverAdapterB_cnt_88_PLUS_IF_ibuffe_ETC___d294 ;
  assign ibuffer_2_serverAdapterB_cnt$EN =
	     ibuffer_2_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_2_portB_response_get ||
	     EN_ibuf_2_portBClear ;

  // register ibuffer_2_serverAdapterB_s1
  assign ibuffer_2_serverAdapterB_s1$D_IN =
	     ibuffer_2_serverAdapterB_s1_1$whas ?
	       ibuffer_2_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_2_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_30_serverAdapterA_cnt
  assign ibuffer_30_serverAdapterA_cnt$D_IN =
	     EN_ibuf_30_portAClear ?
	       3'd0 :
	       ibuffer_30_serverAdapterA_cnt_148_PLUS_IF_ibuf_ETC___d3154 ;
  assign ibuffer_30_serverAdapterA_cnt$EN =
	     ibuffer_30_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_30_portA_response_get ||
	     EN_ibuf_30_portAClear ;

  // register ibuffer_30_serverAdapterA_s1
  assign ibuffer_30_serverAdapterA_s1$D_IN =
	     ibuffer_30_serverAdapterA_s1_1$whas ?
	       ibuffer_30_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_30_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_30_serverAdapterB_cnt
  assign ibuffer_30_serverAdapterB_cnt$D_IN =
	     EN_ibuf_30_portBClear ?
	       3'd0 :
	       ibuffer_30_serverAdapterB_cnt_200_PLUS_IF_ibuf_ETC___d3206 ;
  assign ibuffer_30_serverAdapterB_cnt$EN =
	     ibuffer_30_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_30_portB_response_get ||
	     EN_ibuf_30_portBClear ;

  // register ibuffer_30_serverAdapterB_s1
  assign ibuffer_30_serverAdapterB_s1$D_IN =
	     ibuffer_30_serverAdapterB_s1_1$whas ?
	       ibuffer_30_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_30_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_31_serverAdapterA_cnt
  assign ibuffer_31_serverAdapterA_cnt$D_IN =
	     EN_ibuf_31_portAClear ?
	       3'd0 :
	       ibuffer_31_serverAdapterA_cnt_252_PLUS_IF_ibuf_ETC___d3258 ;
  assign ibuffer_31_serverAdapterA_cnt$EN =
	     ibuffer_31_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_31_portA_response_get ||
	     EN_ibuf_31_portAClear ;

  // register ibuffer_31_serverAdapterA_s1
  assign ibuffer_31_serverAdapterA_s1$D_IN =
	     ibuffer_31_serverAdapterA_s1_1$whas ?
	       ibuffer_31_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_31_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_31_serverAdapterB_cnt
  assign ibuffer_31_serverAdapterB_cnt$D_IN =
	     EN_ibuf_31_portBClear ?
	       3'd0 :
	       ibuffer_31_serverAdapterB_cnt_304_PLUS_IF_ibuf_ETC___d3310 ;
  assign ibuffer_31_serverAdapterB_cnt$EN =
	     ibuffer_31_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_31_portB_response_get ||
	     EN_ibuf_31_portBClear ;

  // register ibuffer_31_serverAdapterB_s1
  assign ibuffer_31_serverAdapterB_s1$D_IN =
	     ibuffer_31_serverAdapterB_s1_1$whas ?
	       ibuffer_31_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_31_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_3_serverAdapterA_cnt
  assign ibuffer_3_serverAdapterA_cnt$D_IN =
	     EN_ibuf_3_portAClear ?
	       3'd0 :
	       ibuffer_3_serverAdapterA_cnt_40_PLUS_IF_ibuffe_ETC___d346 ;
  assign ibuffer_3_serverAdapterA_cnt$EN =
	     ibuffer_3_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_3_portA_response_get ||
	     EN_ibuf_3_portAClear ;

  // register ibuffer_3_serverAdapterA_s1
  assign ibuffer_3_serverAdapterA_s1$D_IN =
	     ibuffer_3_serverAdapterA_s1_1$whas ?
	       ibuffer_3_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_3_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_3_serverAdapterB_cnt
  assign ibuffer_3_serverAdapterB_cnt$D_IN =
	     EN_ibuf_3_portBClear ?
	       3'd0 :
	       ibuffer_3_serverAdapterB_cnt_92_PLUS_IF_ibuffe_ETC___d398 ;
  assign ibuffer_3_serverAdapterB_cnt$EN =
	     ibuffer_3_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_3_portB_response_get ||
	     EN_ibuf_3_portBClear ;

  // register ibuffer_3_serverAdapterB_s1
  assign ibuffer_3_serverAdapterB_s1$D_IN =
	     ibuffer_3_serverAdapterB_s1_1$whas ?
	       ibuffer_3_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_3_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_4_serverAdapterA_cnt
  assign ibuffer_4_serverAdapterA_cnt$D_IN =
	     EN_ibuf_4_portAClear ?
	       3'd0 :
	       ibuffer_4_serverAdapterA_cnt_44_PLUS_IF_ibuffe_ETC___d450 ;
  assign ibuffer_4_serverAdapterA_cnt$EN =
	     ibuffer_4_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_4_portA_response_get ||
	     EN_ibuf_4_portAClear ;

  // register ibuffer_4_serverAdapterA_s1
  assign ibuffer_4_serverAdapterA_s1$D_IN =
	     ibuffer_4_serverAdapterA_s1_1$whas ?
	       ibuffer_4_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_4_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_4_serverAdapterB_cnt
  assign ibuffer_4_serverAdapterB_cnt$D_IN =
	     EN_ibuf_4_portBClear ?
	       3'd0 :
	       ibuffer_4_serverAdapterB_cnt_96_PLUS_IF_ibuffe_ETC___d502 ;
  assign ibuffer_4_serverAdapterB_cnt$EN =
	     ibuffer_4_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_4_portB_response_get ||
	     EN_ibuf_4_portBClear ;

  // register ibuffer_4_serverAdapterB_s1
  assign ibuffer_4_serverAdapterB_s1$D_IN =
	     ibuffer_4_serverAdapterB_s1_1$whas ?
	       ibuffer_4_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_4_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_5_serverAdapterA_cnt
  assign ibuffer_5_serverAdapterA_cnt$D_IN =
	     EN_ibuf_5_portAClear ?
	       3'd0 :
	       ibuffer_5_serverAdapterA_cnt_48_PLUS_IF_ibuffe_ETC___d554 ;
  assign ibuffer_5_serverAdapterA_cnt$EN =
	     ibuffer_5_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_5_portA_response_get ||
	     EN_ibuf_5_portAClear ;

  // register ibuffer_5_serverAdapterA_s1
  assign ibuffer_5_serverAdapterA_s1$D_IN =
	     ibuffer_5_serverAdapterA_s1_1$whas ?
	       ibuffer_5_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_5_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_5_serverAdapterB_cnt
  assign ibuffer_5_serverAdapterB_cnt$D_IN =
	     EN_ibuf_5_portBClear ?
	       3'd0 :
	       ibuffer_5_serverAdapterB_cnt_00_PLUS_IF_ibuffe_ETC___d606 ;
  assign ibuffer_5_serverAdapterB_cnt$EN =
	     ibuffer_5_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_5_portB_response_get ||
	     EN_ibuf_5_portBClear ;

  // register ibuffer_5_serverAdapterB_s1
  assign ibuffer_5_serverAdapterB_s1$D_IN =
	     ibuffer_5_serverAdapterB_s1_1$whas ?
	       ibuffer_5_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_5_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_6_serverAdapterA_cnt
  assign ibuffer_6_serverAdapterA_cnt$D_IN =
	     EN_ibuf_6_portAClear ?
	       3'd0 :
	       ibuffer_6_serverAdapterA_cnt_52_PLUS_IF_ibuffe_ETC___d658 ;
  assign ibuffer_6_serverAdapterA_cnt$EN =
	     ibuffer_6_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_6_portA_response_get ||
	     EN_ibuf_6_portAClear ;

  // register ibuffer_6_serverAdapterA_s1
  assign ibuffer_6_serverAdapterA_s1$D_IN =
	     ibuffer_6_serverAdapterA_s1_1$whas ?
	       ibuffer_6_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_6_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_6_serverAdapterB_cnt
  assign ibuffer_6_serverAdapterB_cnt$D_IN =
	     EN_ibuf_6_portBClear ?
	       3'd0 :
	       ibuffer_6_serverAdapterB_cnt_04_PLUS_IF_ibuffe_ETC___d710 ;
  assign ibuffer_6_serverAdapterB_cnt$EN =
	     ibuffer_6_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_6_portB_response_get ||
	     EN_ibuf_6_portBClear ;

  // register ibuffer_6_serverAdapterB_s1
  assign ibuffer_6_serverAdapterB_s1$D_IN =
	     ibuffer_6_serverAdapterB_s1_1$whas ?
	       ibuffer_6_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_6_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_7_serverAdapterA_cnt
  assign ibuffer_7_serverAdapterA_cnt$D_IN =
	     EN_ibuf_7_portAClear ?
	       3'd0 :
	       ibuffer_7_serverAdapterA_cnt_56_PLUS_IF_ibuffe_ETC___d762 ;
  assign ibuffer_7_serverAdapterA_cnt$EN =
	     ibuffer_7_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_7_portA_response_get ||
	     EN_ibuf_7_portAClear ;

  // register ibuffer_7_serverAdapterA_s1
  assign ibuffer_7_serverAdapterA_s1$D_IN =
	     ibuffer_7_serverAdapterA_s1_1$whas ?
	       ibuffer_7_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_7_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_7_serverAdapterB_cnt
  assign ibuffer_7_serverAdapterB_cnt$D_IN =
	     EN_ibuf_7_portBClear ?
	       3'd0 :
	       ibuffer_7_serverAdapterB_cnt_08_PLUS_IF_ibuffe_ETC___d814 ;
  assign ibuffer_7_serverAdapterB_cnt$EN =
	     ibuffer_7_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_7_portB_response_get ||
	     EN_ibuf_7_portBClear ;

  // register ibuffer_7_serverAdapterB_s1
  assign ibuffer_7_serverAdapterB_s1$D_IN =
	     ibuffer_7_serverAdapterB_s1_1$whas ?
	       ibuffer_7_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_7_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_8_serverAdapterA_cnt
  assign ibuffer_8_serverAdapterA_cnt$D_IN =
	     EN_ibuf_8_portAClear ?
	       3'd0 :
	       ibuffer_8_serverAdapterA_cnt_60_PLUS_IF_ibuffe_ETC___d866 ;
  assign ibuffer_8_serverAdapterA_cnt$EN =
	     ibuffer_8_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_8_portA_response_get ||
	     EN_ibuf_8_portAClear ;

  // register ibuffer_8_serverAdapterA_s1
  assign ibuffer_8_serverAdapterA_s1$D_IN =
	     ibuffer_8_serverAdapterA_s1_1$whas ?
	       ibuffer_8_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_8_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_8_serverAdapterB_cnt
  assign ibuffer_8_serverAdapterB_cnt$D_IN =
	     EN_ibuf_8_portBClear ?
	       3'd0 :
	       ibuffer_8_serverAdapterB_cnt_12_PLUS_IF_ibuffe_ETC___d918 ;
  assign ibuffer_8_serverAdapterB_cnt$EN =
	     ibuffer_8_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_8_portB_response_get ||
	     EN_ibuf_8_portBClear ;

  // register ibuffer_8_serverAdapterB_s1
  assign ibuffer_8_serverAdapterB_s1$D_IN =
	     ibuffer_8_serverAdapterB_s1_1$whas ?
	       ibuffer_8_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_8_serverAdapterB_s1$EN = 1'd1 ;

  // register ibuffer_9_serverAdapterA_cnt
  assign ibuffer_9_serverAdapterA_cnt$D_IN =
	     EN_ibuf_9_portAClear ?
	       3'd0 :
	       ibuffer_9_serverAdapterA_cnt_64_PLUS_IF_ibuffe_ETC___d970 ;
  assign ibuffer_9_serverAdapterA_cnt$EN =
	     ibuffer_9_serverAdapterA_cnt_1$whas ||
	     EN_ibuf_9_portA_response_get ||
	     EN_ibuf_9_portAClear ;

  // register ibuffer_9_serverAdapterA_s1
  assign ibuffer_9_serverAdapterA_s1$D_IN =
	     ibuffer_9_serverAdapterA_s1_1$whas ?
	       ibuffer_9_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign ibuffer_9_serverAdapterA_s1$EN = 1'd1 ;

  // register ibuffer_9_serverAdapterB_cnt
  assign ibuffer_9_serverAdapterB_cnt$D_IN =
	     EN_ibuf_9_portBClear ?
	       3'd0 :
	       ibuffer_9_serverAdapterB_cnt_016_PLUS_IF_ibuff_ETC___d1022 ;
  assign ibuffer_9_serverAdapterB_cnt$EN =
	     ibuffer_9_serverAdapterB_cnt_1$whas ||
	     EN_ibuf_9_portB_response_get ||
	     EN_ibuf_9_portBClear ;

  // register ibuffer_9_serverAdapterB_s1
  assign ibuffer_9_serverAdapterB_s1$D_IN =
	     ibuffer_9_serverAdapterB_s1_1$whas ?
	       ibuffer_9_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign ibuffer_9_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_0_serverAdapterA_cnt
  assign obuffer1_0_serverAdapterA_cnt$D_IN =
	     EN_obuf1_0_portAClear ?
	       3'd0 :
	       obuffer1_0_serverAdapterA_cnt_684_PLUS_IF_obuf_ETC___d6690 ;
  assign obuffer1_0_serverAdapterA_cnt$EN =
	     obuffer1_0_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_0_portA_response_get ||
	     EN_obuf1_0_portAClear ;

  // register obuffer1_0_serverAdapterA_s1
  assign obuffer1_0_serverAdapterA_s1$D_IN =
	     obuffer1_0_serverAdapterA_s1_1$whas ?
	       obuffer1_0_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_0_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_0_serverAdapterB_cnt
  assign obuffer1_0_serverAdapterB_cnt$D_IN =
	     EN_obuf1_0_portBClear ?
	       3'd0 :
	       obuffer1_0_serverAdapterB_cnt_736_PLUS_IF_obuf_ETC___d6742 ;
  assign obuffer1_0_serverAdapterB_cnt$EN =
	     obuffer1_0_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_0_portB_response_get ||
	     EN_obuf1_0_portBClear ;

  // register obuffer1_0_serverAdapterB_s1
  assign obuffer1_0_serverAdapterB_s1$D_IN =
	     obuffer1_0_serverAdapterB_s1_1$whas ?
	       obuffer1_0_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_0_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_10_serverAdapterA_cnt
  assign obuffer1_10_serverAdapterA_cnt$D_IN =
	     EN_obuf1_10_portAClear ?
	       3'd0 :
	       obuffer1_10_serverAdapterA_cnt_724_PLUS_IF_obu_ETC___d7730 ;
  assign obuffer1_10_serverAdapterA_cnt$EN =
	     obuffer1_10_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_10_portA_response_get ||
	     EN_obuf1_10_portAClear ;

  // register obuffer1_10_serverAdapterA_s1
  assign obuffer1_10_serverAdapterA_s1$D_IN =
	     obuffer1_10_serverAdapterA_s1_1$whas ?
	       obuffer1_10_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_10_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_10_serverAdapterB_cnt
  assign obuffer1_10_serverAdapterB_cnt$D_IN =
	     EN_obuf1_10_portBClear ?
	       3'd0 :
	       obuffer1_10_serverAdapterB_cnt_776_PLUS_IF_obu_ETC___d7782 ;
  assign obuffer1_10_serverAdapterB_cnt$EN =
	     obuffer1_10_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_10_portB_response_get ||
	     EN_obuf1_10_portBClear ;

  // register obuffer1_10_serverAdapterB_s1
  assign obuffer1_10_serverAdapterB_s1$D_IN =
	     obuffer1_10_serverAdapterB_s1_1$whas ?
	       obuffer1_10_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_10_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_11_serverAdapterA_cnt
  assign obuffer1_11_serverAdapterA_cnt$D_IN =
	     EN_obuf1_11_portAClear ?
	       3'd0 :
	       obuffer1_11_serverAdapterA_cnt_828_PLUS_IF_obu_ETC___d7834 ;
  assign obuffer1_11_serverAdapterA_cnt$EN =
	     obuffer1_11_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_11_portA_response_get ||
	     EN_obuf1_11_portAClear ;

  // register obuffer1_11_serverAdapterA_s1
  assign obuffer1_11_serverAdapterA_s1$D_IN =
	     obuffer1_11_serverAdapterA_s1_1$whas ?
	       obuffer1_11_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_11_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_11_serverAdapterB_cnt
  assign obuffer1_11_serverAdapterB_cnt$D_IN =
	     EN_obuf1_11_portBClear ?
	       3'd0 :
	       obuffer1_11_serverAdapterB_cnt_880_PLUS_IF_obu_ETC___d7886 ;
  assign obuffer1_11_serverAdapterB_cnt$EN =
	     obuffer1_11_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_11_portB_response_get ||
	     EN_obuf1_11_portBClear ;

  // register obuffer1_11_serverAdapterB_s1
  assign obuffer1_11_serverAdapterB_s1$D_IN =
	     obuffer1_11_serverAdapterB_s1_1$whas ?
	       obuffer1_11_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_11_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_12_serverAdapterA_cnt
  assign obuffer1_12_serverAdapterA_cnt$D_IN =
	     EN_obuf1_12_portAClear ?
	       3'd0 :
	       obuffer1_12_serverAdapterA_cnt_932_PLUS_IF_obu_ETC___d7938 ;
  assign obuffer1_12_serverAdapterA_cnt$EN =
	     obuffer1_12_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_12_portA_response_get ||
	     EN_obuf1_12_portAClear ;

  // register obuffer1_12_serverAdapterA_s1
  assign obuffer1_12_serverAdapterA_s1$D_IN =
	     obuffer1_12_serverAdapterA_s1_1$whas ?
	       obuffer1_12_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_12_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_12_serverAdapterB_cnt
  assign obuffer1_12_serverAdapterB_cnt$D_IN =
	     EN_obuf1_12_portBClear ?
	       3'd0 :
	       obuffer1_12_serverAdapterB_cnt_984_PLUS_IF_obu_ETC___d7990 ;
  assign obuffer1_12_serverAdapterB_cnt$EN =
	     obuffer1_12_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_12_portB_response_get ||
	     EN_obuf1_12_portBClear ;

  // register obuffer1_12_serverAdapterB_s1
  assign obuffer1_12_serverAdapterB_s1$D_IN =
	     obuffer1_12_serverAdapterB_s1_1$whas ?
	       obuffer1_12_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_12_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_13_serverAdapterA_cnt
  assign obuffer1_13_serverAdapterA_cnt$D_IN =
	     EN_obuf1_13_portAClear ?
	       3'd0 :
	       obuffer1_13_serverAdapterA_cnt_036_PLUS_IF_obu_ETC___d8042 ;
  assign obuffer1_13_serverAdapterA_cnt$EN =
	     obuffer1_13_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_13_portA_response_get ||
	     EN_obuf1_13_portAClear ;

  // register obuffer1_13_serverAdapterA_s1
  assign obuffer1_13_serverAdapterA_s1$D_IN =
	     obuffer1_13_serverAdapterA_s1_1$whas ?
	       obuffer1_13_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_13_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_13_serverAdapterB_cnt
  assign obuffer1_13_serverAdapterB_cnt$D_IN =
	     EN_obuf1_13_portBClear ?
	       3'd0 :
	       obuffer1_13_serverAdapterB_cnt_088_PLUS_IF_obu_ETC___d8094 ;
  assign obuffer1_13_serverAdapterB_cnt$EN =
	     obuffer1_13_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_13_portB_response_get ||
	     EN_obuf1_13_portBClear ;

  // register obuffer1_13_serverAdapterB_s1
  assign obuffer1_13_serverAdapterB_s1$D_IN =
	     obuffer1_13_serverAdapterB_s1_1$whas ?
	       obuffer1_13_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_13_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_14_serverAdapterA_cnt
  assign obuffer1_14_serverAdapterA_cnt$D_IN =
	     EN_obuf1_14_portAClear ?
	       3'd0 :
	       obuffer1_14_serverAdapterA_cnt_140_PLUS_IF_obu_ETC___d8146 ;
  assign obuffer1_14_serverAdapterA_cnt$EN =
	     obuffer1_14_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_14_portA_response_get ||
	     EN_obuf1_14_portAClear ;

  // register obuffer1_14_serverAdapterA_s1
  assign obuffer1_14_serverAdapterA_s1$D_IN =
	     obuffer1_14_serverAdapterA_s1_1$whas ?
	       obuffer1_14_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_14_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_14_serverAdapterB_cnt
  assign obuffer1_14_serverAdapterB_cnt$D_IN =
	     EN_obuf1_14_portBClear ?
	       3'd0 :
	       obuffer1_14_serverAdapterB_cnt_192_PLUS_IF_obu_ETC___d8198 ;
  assign obuffer1_14_serverAdapterB_cnt$EN =
	     obuffer1_14_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_14_portB_response_get ||
	     EN_obuf1_14_portBClear ;

  // register obuffer1_14_serverAdapterB_s1
  assign obuffer1_14_serverAdapterB_s1$D_IN =
	     obuffer1_14_serverAdapterB_s1_1$whas ?
	       obuffer1_14_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_14_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_15_serverAdapterA_cnt
  assign obuffer1_15_serverAdapterA_cnt$D_IN =
	     EN_obuf1_15_portAClear ?
	       3'd0 :
	       obuffer1_15_serverAdapterA_cnt_244_PLUS_IF_obu_ETC___d8250 ;
  assign obuffer1_15_serverAdapterA_cnt$EN =
	     obuffer1_15_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_15_portA_response_get ||
	     EN_obuf1_15_portAClear ;

  // register obuffer1_15_serverAdapterA_s1
  assign obuffer1_15_serverAdapterA_s1$D_IN =
	     obuffer1_15_serverAdapterA_s1_1$whas ?
	       obuffer1_15_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_15_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_15_serverAdapterB_cnt
  assign obuffer1_15_serverAdapterB_cnt$D_IN =
	     EN_obuf1_15_portBClear ?
	       3'd0 :
	       obuffer1_15_serverAdapterB_cnt_296_PLUS_IF_obu_ETC___d8302 ;
  assign obuffer1_15_serverAdapterB_cnt$EN =
	     obuffer1_15_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_15_portB_response_get ||
	     EN_obuf1_15_portBClear ;

  // register obuffer1_15_serverAdapterB_s1
  assign obuffer1_15_serverAdapterB_s1$D_IN =
	     obuffer1_15_serverAdapterB_s1_1$whas ?
	       obuffer1_15_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_15_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_16_serverAdapterA_cnt
  assign obuffer1_16_serverAdapterA_cnt$D_IN =
	     EN_obuf1_16_portAClear ?
	       3'd0 :
	       obuffer1_16_serverAdapterA_cnt_348_PLUS_IF_obu_ETC___d8354 ;
  assign obuffer1_16_serverAdapterA_cnt$EN =
	     obuffer1_16_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_16_portA_response_get ||
	     EN_obuf1_16_portAClear ;

  // register obuffer1_16_serverAdapterA_s1
  assign obuffer1_16_serverAdapterA_s1$D_IN =
	     obuffer1_16_serverAdapterA_s1_1$whas ?
	       obuffer1_16_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_16_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_16_serverAdapterB_cnt
  assign obuffer1_16_serverAdapterB_cnt$D_IN =
	     EN_obuf1_16_portBClear ?
	       3'd0 :
	       obuffer1_16_serverAdapterB_cnt_400_PLUS_IF_obu_ETC___d8406 ;
  assign obuffer1_16_serverAdapterB_cnt$EN =
	     obuffer1_16_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_16_portB_response_get ||
	     EN_obuf1_16_portBClear ;

  // register obuffer1_16_serverAdapterB_s1
  assign obuffer1_16_serverAdapterB_s1$D_IN =
	     obuffer1_16_serverAdapterB_s1_1$whas ?
	       obuffer1_16_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_16_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_17_serverAdapterA_cnt
  assign obuffer1_17_serverAdapterA_cnt$D_IN =
	     EN_obuf1_17_portAClear ?
	       3'd0 :
	       obuffer1_17_serverAdapterA_cnt_452_PLUS_IF_obu_ETC___d8458 ;
  assign obuffer1_17_serverAdapterA_cnt$EN =
	     obuffer1_17_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_17_portA_response_get ||
	     EN_obuf1_17_portAClear ;

  // register obuffer1_17_serverAdapterA_s1
  assign obuffer1_17_serverAdapterA_s1$D_IN =
	     obuffer1_17_serverAdapterA_s1_1$whas ?
	       obuffer1_17_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_17_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_17_serverAdapterB_cnt
  assign obuffer1_17_serverAdapterB_cnt$D_IN =
	     EN_obuf1_17_portBClear ?
	       3'd0 :
	       obuffer1_17_serverAdapterB_cnt_504_PLUS_IF_obu_ETC___d8510 ;
  assign obuffer1_17_serverAdapterB_cnt$EN =
	     obuffer1_17_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_17_portB_response_get ||
	     EN_obuf1_17_portBClear ;

  // register obuffer1_17_serverAdapterB_s1
  assign obuffer1_17_serverAdapterB_s1$D_IN =
	     obuffer1_17_serverAdapterB_s1_1$whas ?
	       obuffer1_17_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_17_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_18_serverAdapterA_cnt
  assign obuffer1_18_serverAdapterA_cnt$D_IN =
	     EN_obuf1_18_portAClear ?
	       3'd0 :
	       obuffer1_18_serverAdapterA_cnt_556_PLUS_IF_obu_ETC___d8562 ;
  assign obuffer1_18_serverAdapterA_cnt$EN =
	     obuffer1_18_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_18_portA_response_get ||
	     EN_obuf1_18_portAClear ;

  // register obuffer1_18_serverAdapterA_s1
  assign obuffer1_18_serverAdapterA_s1$D_IN =
	     obuffer1_18_serverAdapterA_s1_1$whas ?
	       obuffer1_18_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_18_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_18_serverAdapterB_cnt
  assign obuffer1_18_serverAdapterB_cnt$D_IN =
	     EN_obuf1_18_portBClear ?
	       3'd0 :
	       obuffer1_18_serverAdapterB_cnt_608_PLUS_IF_obu_ETC___d8614 ;
  assign obuffer1_18_serverAdapterB_cnt$EN =
	     obuffer1_18_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_18_portB_response_get ||
	     EN_obuf1_18_portBClear ;

  // register obuffer1_18_serverAdapterB_s1
  assign obuffer1_18_serverAdapterB_s1$D_IN =
	     obuffer1_18_serverAdapterB_s1_1$whas ?
	       obuffer1_18_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_18_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_19_serverAdapterA_cnt
  assign obuffer1_19_serverAdapterA_cnt$D_IN =
	     EN_obuf1_19_portAClear ?
	       3'd0 :
	       obuffer1_19_serverAdapterA_cnt_660_PLUS_IF_obu_ETC___d8666 ;
  assign obuffer1_19_serverAdapterA_cnt$EN =
	     obuffer1_19_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_19_portA_response_get ||
	     EN_obuf1_19_portAClear ;

  // register obuffer1_19_serverAdapterA_s1
  assign obuffer1_19_serverAdapterA_s1$D_IN =
	     obuffer1_19_serverAdapterA_s1_1$whas ?
	       obuffer1_19_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_19_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_19_serverAdapterB_cnt
  assign obuffer1_19_serverAdapterB_cnt$D_IN =
	     EN_obuf1_19_portBClear ?
	       3'd0 :
	       obuffer1_19_serverAdapterB_cnt_712_PLUS_IF_obu_ETC___d8718 ;
  assign obuffer1_19_serverAdapterB_cnt$EN =
	     obuffer1_19_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_19_portB_response_get ||
	     EN_obuf1_19_portBClear ;

  // register obuffer1_19_serverAdapterB_s1
  assign obuffer1_19_serverAdapterB_s1$D_IN =
	     obuffer1_19_serverAdapterB_s1_1$whas ?
	       obuffer1_19_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_19_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_1_serverAdapterA_cnt
  assign obuffer1_1_serverAdapterA_cnt$D_IN =
	     EN_obuf1_1_portAClear ?
	       3'd0 :
	       obuffer1_1_serverAdapterA_cnt_788_PLUS_IF_obuf_ETC___d6794 ;
  assign obuffer1_1_serverAdapterA_cnt$EN =
	     obuffer1_1_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_1_portA_response_get ||
	     EN_obuf1_1_portAClear ;

  // register obuffer1_1_serverAdapterA_s1
  assign obuffer1_1_serverAdapterA_s1$D_IN =
	     obuffer1_1_serverAdapterA_s1_1$whas ?
	       obuffer1_1_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_1_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_1_serverAdapterB_cnt
  assign obuffer1_1_serverAdapterB_cnt$D_IN =
	     EN_obuf1_1_portBClear ?
	       3'd0 :
	       obuffer1_1_serverAdapterB_cnt_840_PLUS_IF_obuf_ETC___d6846 ;
  assign obuffer1_1_serverAdapterB_cnt$EN =
	     obuffer1_1_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_1_portB_response_get ||
	     EN_obuf1_1_portBClear ;

  // register obuffer1_1_serverAdapterB_s1
  assign obuffer1_1_serverAdapterB_s1$D_IN =
	     obuffer1_1_serverAdapterB_s1_1$whas ?
	       obuffer1_1_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_1_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_20_serverAdapterA_cnt
  assign obuffer1_20_serverAdapterA_cnt$D_IN =
	     EN_obuf1_20_portAClear ?
	       3'd0 :
	       obuffer1_20_serverAdapterA_cnt_764_PLUS_IF_obu_ETC___d8770 ;
  assign obuffer1_20_serverAdapterA_cnt$EN =
	     obuffer1_20_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_20_portA_response_get ||
	     EN_obuf1_20_portAClear ;

  // register obuffer1_20_serverAdapterA_s1
  assign obuffer1_20_serverAdapterA_s1$D_IN =
	     obuffer1_20_serverAdapterA_s1_1$whas ?
	       obuffer1_20_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_20_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_20_serverAdapterB_cnt
  assign obuffer1_20_serverAdapterB_cnt$D_IN =
	     EN_obuf1_20_portBClear ?
	       3'd0 :
	       obuffer1_20_serverAdapterB_cnt_816_PLUS_IF_obu_ETC___d8822 ;
  assign obuffer1_20_serverAdapterB_cnt$EN =
	     obuffer1_20_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_20_portB_response_get ||
	     EN_obuf1_20_portBClear ;

  // register obuffer1_20_serverAdapterB_s1
  assign obuffer1_20_serverAdapterB_s1$D_IN =
	     obuffer1_20_serverAdapterB_s1_1$whas ?
	       obuffer1_20_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_20_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_21_serverAdapterA_cnt
  assign obuffer1_21_serverAdapterA_cnt$D_IN =
	     EN_obuf1_21_portAClear ?
	       3'd0 :
	       obuffer1_21_serverAdapterA_cnt_868_PLUS_IF_obu_ETC___d8874 ;
  assign obuffer1_21_serverAdapterA_cnt$EN =
	     obuffer1_21_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_21_portA_response_get ||
	     EN_obuf1_21_portAClear ;

  // register obuffer1_21_serverAdapterA_s1
  assign obuffer1_21_serverAdapterA_s1$D_IN =
	     obuffer1_21_serverAdapterA_s1_1$whas ?
	       obuffer1_21_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_21_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_21_serverAdapterB_cnt
  assign obuffer1_21_serverAdapterB_cnt$D_IN =
	     EN_obuf1_21_portBClear ?
	       3'd0 :
	       obuffer1_21_serverAdapterB_cnt_920_PLUS_IF_obu_ETC___d8926 ;
  assign obuffer1_21_serverAdapterB_cnt$EN =
	     obuffer1_21_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_21_portB_response_get ||
	     EN_obuf1_21_portBClear ;

  // register obuffer1_21_serverAdapterB_s1
  assign obuffer1_21_serverAdapterB_s1$D_IN =
	     obuffer1_21_serverAdapterB_s1_1$whas ?
	       obuffer1_21_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_21_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_22_serverAdapterA_cnt
  assign obuffer1_22_serverAdapterA_cnt$D_IN =
	     EN_obuf1_22_portAClear ?
	       3'd0 :
	       obuffer1_22_serverAdapterA_cnt_972_PLUS_IF_obu_ETC___d8978 ;
  assign obuffer1_22_serverAdapterA_cnt$EN =
	     obuffer1_22_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_22_portA_response_get ||
	     EN_obuf1_22_portAClear ;

  // register obuffer1_22_serverAdapterA_s1
  assign obuffer1_22_serverAdapterA_s1$D_IN =
	     obuffer1_22_serverAdapterA_s1_1$whas ?
	       obuffer1_22_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_22_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_22_serverAdapterB_cnt
  assign obuffer1_22_serverAdapterB_cnt$D_IN =
	     EN_obuf1_22_portBClear ?
	       3'd0 :
	       obuffer1_22_serverAdapterB_cnt_024_PLUS_IF_obu_ETC___d9030 ;
  assign obuffer1_22_serverAdapterB_cnt$EN =
	     obuffer1_22_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_22_portB_response_get ||
	     EN_obuf1_22_portBClear ;

  // register obuffer1_22_serverAdapterB_s1
  assign obuffer1_22_serverAdapterB_s1$D_IN =
	     obuffer1_22_serverAdapterB_s1_1$whas ?
	       obuffer1_22_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_22_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_23_serverAdapterA_cnt
  assign obuffer1_23_serverAdapterA_cnt$D_IN =
	     EN_obuf1_23_portAClear ?
	       3'd0 :
	       obuffer1_23_serverAdapterA_cnt_076_PLUS_IF_obu_ETC___d9082 ;
  assign obuffer1_23_serverAdapterA_cnt$EN =
	     obuffer1_23_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_23_portA_response_get ||
	     EN_obuf1_23_portAClear ;

  // register obuffer1_23_serverAdapterA_s1
  assign obuffer1_23_serverAdapterA_s1$D_IN =
	     obuffer1_23_serverAdapterA_s1_1$whas ?
	       obuffer1_23_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_23_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_23_serverAdapterB_cnt
  assign obuffer1_23_serverAdapterB_cnt$D_IN =
	     EN_obuf1_23_portBClear ?
	       3'd0 :
	       obuffer1_23_serverAdapterB_cnt_128_PLUS_IF_obu_ETC___d9134 ;
  assign obuffer1_23_serverAdapterB_cnt$EN =
	     obuffer1_23_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_23_portB_response_get ||
	     EN_obuf1_23_portBClear ;

  // register obuffer1_23_serverAdapterB_s1
  assign obuffer1_23_serverAdapterB_s1$D_IN =
	     obuffer1_23_serverAdapterB_s1_1$whas ?
	       obuffer1_23_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_23_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_24_serverAdapterA_cnt
  assign obuffer1_24_serverAdapterA_cnt$D_IN =
	     EN_obuf1_24_portAClear ?
	       3'd0 :
	       obuffer1_24_serverAdapterA_cnt_180_PLUS_IF_obu_ETC___d9186 ;
  assign obuffer1_24_serverAdapterA_cnt$EN =
	     obuffer1_24_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_24_portA_response_get ||
	     EN_obuf1_24_portAClear ;

  // register obuffer1_24_serverAdapterA_s1
  assign obuffer1_24_serverAdapterA_s1$D_IN =
	     obuffer1_24_serverAdapterA_s1_1$whas ?
	       obuffer1_24_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_24_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_24_serverAdapterB_cnt
  assign obuffer1_24_serverAdapterB_cnt$D_IN =
	     EN_obuf1_24_portBClear ?
	       3'd0 :
	       obuffer1_24_serverAdapterB_cnt_232_PLUS_IF_obu_ETC___d9238 ;
  assign obuffer1_24_serverAdapterB_cnt$EN =
	     obuffer1_24_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_24_portB_response_get ||
	     EN_obuf1_24_portBClear ;

  // register obuffer1_24_serverAdapterB_s1
  assign obuffer1_24_serverAdapterB_s1$D_IN =
	     obuffer1_24_serverAdapterB_s1_1$whas ?
	       obuffer1_24_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_24_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_25_serverAdapterA_cnt
  assign obuffer1_25_serverAdapterA_cnt$D_IN =
	     EN_obuf1_25_portAClear ?
	       3'd0 :
	       obuffer1_25_serverAdapterA_cnt_284_PLUS_IF_obu_ETC___d9290 ;
  assign obuffer1_25_serverAdapterA_cnt$EN =
	     obuffer1_25_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_25_portA_response_get ||
	     EN_obuf1_25_portAClear ;

  // register obuffer1_25_serverAdapterA_s1
  assign obuffer1_25_serverAdapterA_s1$D_IN =
	     obuffer1_25_serverAdapterA_s1_1$whas ?
	       obuffer1_25_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_25_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_25_serverAdapterB_cnt
  assign obuffer1_25_serverAdapterB_cnt$D_IN =
	     EN_obuf1_25_portBClear ?
	       3'd0 :
	       obuffer1_25_serverAdapterB_cnt_336_PLUS_IF_obu_ETC___d9342 ;
  assign obuffer1_25_serverAdapterB_cnt$EN =
	     obuffer1_25_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_25_portB_response_get ||
	     EN_obuf1_25_portBClear ;

  // register obuffer1_25_serverAdapterB_s1
  assign obuffer1_25_serverAdapterB_s1$D_IN =
	     obuffer1_25_serverAdapterB_s1_1$whas ?
	       obuffer1_25_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_25_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_26_serverAdapterA_cnt
  assign obuffer1_26_serverAdapterA_cnt$D_IN =
	     EN_obuf1_26_portAClear ?
	       3'd0 :
	       obuffer1_26_serverAdapterA_cnt_388_PLUS_IF_obu_ETC___d9394 ;
  assign obuffer1_26_serverAdapterA_cnt$EN =
	     obuffer1_26_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_26_portA_response_get ||
	     EN_obuf1_26_portAClear ;

  // register obuffer1_26_serverAdapterA_s1
  assign obuffer1_26_serverAdapterA_s1$D_IN =
	     obuffer1_26_serverAdapterA_s1_1$whas ?
	       obuffer1_26_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_26_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_26_serverAdapterB_cnt
  assign obuffer1_26_serverAdapterB_cnt$D_IN =
	     EN_obuf1_26_portBClear ?
	       3'd0 :
	       obuffer1_26_serverAdapterB_cnt_440_PLUS_IF_obu_ETC___d9446 ;
  assign obuffer1_26_serverAdapterB_cnt$EN =
	     obuffer1_26_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_26_portB_response_get ||
	     EN_obuf1_26_portBClear ;

  // register obuffer1_26_serverAdapterB_s1
  assign obuffer1_26_serverAdapterB_s1$D_IN =
	     obuffer1_26_serverAdapterB_s1_1$whas ?
	       obuffer1_26_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_26_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_27_serverAdapterA_cnt
  assign obuffer1_27_serverAdapterA_cnt$D_IN =
	     EN_obuf1_27_portAClear ?
	       3'd0 :
	       obuffer1_27_serverAdapterA_cnt_492_PLUS_IF_obu_ETC___d9498 ;
  assign obuffer1_27_serverAdapterA_cnt$EN =
	     obuffer1_27_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_27_portA_response_get ||
	     EN_obuf1_27_portAClear ;

  // register obuffer1_27_serverAdapterA_s1
  assign obuffer1_27_serverAdapterA_s1$D_IN =
	     obuffer1_27_serverAdapterA_s1_1$whas ?
	       obuffer1_27_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_27_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_27_serverAdapterB_cnt
  assign obuffer1_27_serverAdapterB_cnt$D_IN =
	     EN_obuf1_27_portBClear ?
	       3'd0 :
	       obuffer1_27_serverAdapterB_cnt_544_PLUS_IF_obu_ETC___d9550 ;
  assign obuffer1_27_serverAdapterB_cnt$EN =
	     obuffer1_27_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_27_portB_response_get ||
	     EN_obuf1_27_portBClear ;

  // register obuffer1_27_serverAdapterB_s1
  assign obuffer1_27_serverAdapterB_s1$D_IN =
	     obuffer1_27_serverAdapterB_s1_1$whas ?
	       obuffer1_27_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_27_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_28_serverAdapterA_cnt
  assign obuffer1_28_serverAdapterA_cnt$D_IN =
	     EN_obuf1_28_portAClear ?
	       3'd0 :
	       obuffer1_28_serverAdapterA_cnt_596_PLUS_IF_obu_ETC___d9602 ;
  assign obuffer1_28_serverAdapterA_cnt$EN =
	     obuffer1_28_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_28_portA_response_get ||
	     EN_obuf1_28_portAClear ;

  // register obuffer1_28_serverAdapterA_s1
  assign obuffer1_28_serverAdapterA_s1$D_IN =
	     obuffer1_28_serverAdapterA_s1_1$whas ?
	       obuffer1_28_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_28_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_28_serverAdapterB_cnt
  assign obuffer1_28_serverAdapterB_cnt$D_IN =
	     EN_obuf1_28_portBClear ?
	       3'd0 :
	       obuffer1_28_serverAdapterB_cnt_648_PLUS_IF_obu_ETC___d9654 ;
  assign obuffer1_28_serverAdapterB_cnt$EN =
	     obuffer1_28_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_28_portB_response_get ||
	     EN_obuf1_28_portBClear ;

  // register obuffer1_28_serverAdapterB_s1
  assign obuffer1_28_serverAdapterB_s1$D_IN =
	     obuffer1_28_serverAdapterB_s1_1$whas ?
	       obuffer1_28_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_28_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_29_serverAdapterA_cnt
  assign obuffer1_29_serverAdapterA_cnt$D_IN =
	     EN_obuf1_29_portAClear ?
	       3'd0 :
	       obuffer1_29_serverAdapterA_cnt_700_PLUS_IF_obu_ETC___d9706 ;
  assign obuffer1_29_serverAdapterA_cnt$EN =
	     obuffer1_29_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_29_portA_response_get ||
	     EN_obuf1_29_portAClear ;

  // register obuffer1_29_serverAdapterA_s1
  assign obuffer1_29_serverAdapterA_s1$D_IN =
	     obuffer1_29_serverAdapterA_s1_1$whas ?
	       obuffer1_29_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_29_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_29_serverAdapterB_cnt
  assign obuffer1_29_serverAdapterB_cnt$D_IN =
	     EN_obuf1_29_portBClear ?
	       3'd0 :
	       obuffer1_29_serverAdapterB_cnt_752_PLUS_IF_obu_ETC___d9758 ;
  assign obuffer1_29_serverAdapterB_cnt$EN =
	     obuffer1_29_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_29_portB_response_get ||
	     EN_obuf1_29_portBClear ;

  // register obuffer1_29_serverAdapterB_s1
  assign obuffer1_29_serverAdapterB_s1$D_IN =
	     obuffer1_29_serverAdapterB_s1_1$whas ?
	       obuffer1_29_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_29_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_2_serverAdapterA_cnt
  assign obuffer1_2_serverAdapterA_cnt$D_IN =
	     EN_obuf1_2_portAClear ?
	       3'd0 :
	       obuffer1_2_serverAdapterA_cnt_892_PLUS_IF_obuf_ETC___d6898 ;
  assign obuffer1_2_serverAdapterA_cnt$EN =
	     obuffer1_2_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_2_portA_response_get ||
	     EN_obuf1_2_portAClear ;

  // register obuffer1_2_serverAdapterA_s1
  assign obuffer1_2_serverAdapterA_s1$D_IN =
	     obuffer1_2_serverAdapterA_s1_1$whas ?
	       obuffer1_2_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_2_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_2_serverAdapterB_cnt
  assign obuffer1_2_serverAdapterB_cnt$D_IN =
	     EN_obuf1_2_portBClear ?
	       3'd0 :
	       obuffer1_2_serverAdapterB_cnt_944_PLUS_IF_obuf_ETC___d6950 ;
  assign obuffer1_2_serverAdapterB_cnt$EN =
	     obuffer1_2_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_2_portB_response_get ||
	     EN_obuf1_2_portBClear ;

  // register obuffer1_2_serverAdapterB_s1
  assign obuffer1_2_serverAdapterB_s1$D_IN =
	     obuffer1_2_serverAdapterB_s1_1$whas ?
	       obuffer1_2_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_2_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_30_serverAdapterA_cnt
  assign obuffer1_30_serverAdapterA_cnt$D_IN =
	     EN_obuf1_30_portAClear ?
	       3'd0 :
	       obuffer1_30_serverAdapterA_cnt_804_PLUS_IF_obu_ETC___d9810 ;
  assign obuffer1_30_serverAdapterA_cnt$EN =
	     obuffer1_30_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_30_portA_response_get ||
	     EN_obuf1_30_portAClear ;

  // register obuffer1_30_serverAdapterA_s1
  assign obuffer1_30_serverAdapterA_s1$D_IN =
	     obuffer1_30_serverAdapterA_s1_1$whas ?
	       obuffer1_30_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_30_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_30_serverAdapterB_cnt
  assign obuffer1_30_serverAdapterB_cnt$D_IN =
	     EN_obuf1_30_portBClear ?
	       3'd0 :
	       obuffer1_30_serverAdapterB_cnt_856_PLUS_IF_obu_ETC___d9862 ;
  assign obuffer1_30_serverAdapterB_cnt$EN =
	     obuffer1_30_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_30_portB_response_get ||
	     EN_obuf1_30_portBClear ;

  // register obuffer1_30_serverAdapterB_s1
  assign obuffer1_30_serverAdapterB_s1$D_IN =
	     obuffer1_30_serverAdapterB_s1_1$whas ?
	       obuffer1_30_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_30_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_31_serverAdapterA_cnt
  assign obuffer1_31_serverAdapterA_cnt$D_IN =
	     EN_obuf1_31_portAClear ?
	       3'd0 :
	       obuffer1_31_serverAdapterA_cnt_908_PLUS_IF_obu_ETC___d9914 ;
  assign obuffer1_31_serverAdapterA_cnt$EN =
	     obuffer1_31_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_31_portA_response_get ||
	     EN_obuf1_31_portAClear ;

  // register obuffer1_31_serverAdapterA_s1
  assign obuffer1_31_serverAdapterA_s1$D_IN =
	     obuffer1_31_serverAdapterA_s1_1$whas ?
	       obuffer1_31_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_31_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_31_serverAdapterB_cnt
  assign obuffer1_31_serverAdapterB_cnt$D_IN =
	     EN_obuf1_31_portBClear ?
	       3'd0 :
	       obuffer1_31_serverAdapterB_cnt_960_PLUS_IF_obu_ETC___d9966 ;
  assign obuffer1_31_serverAdapterB_cnt$EN =
	     obuffer1_31_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_31_portB_response_get ||
	     EN_obuf1_31_portBClear ;

  // register obuffer1_31_serverAdapterB_s1
  assign obuffer1_31_serverAdapterB_s1$D_IN =
	     obuffer1_31_serverAdapterB_s1_1$whas ?
	       obuffer1_31_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_31_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_3_serverAdapterA_cnt
  assign obuffer1_3_serverAdapterA_cnt$D_IN =
	     EN_obuf1_3_portAClear ?
	       3'd0 :
	       obuffer1_3_serverAdapterA_cnt_996_PLUS_IF_obuf_ETC___d7002 ;
  assign obuffer1_3_serverAdapterA_cnt$EN =
	     obuffer1_3_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_3_portA_response_get ||
	     EN_obuf1_3_portAClear ;

  // register obuffer1_3_serverAdapterA_s1
  assign obuffer1_3_serverAdapterA_s1$D_IN =
	     obuffer1_3_serverAdapterA_s1_1$whas ?
	       obuffer1_3_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_3_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_3_serverAdapterB_cnt
  assign obuffer1_3_serverAdapterB_cnt$D_IN =
	     EN_obuf1_3_portBClear ?
	       3'd0 :
	       obuffer1_3_serverAdapterB_cnt_048_PLUS_IF_obuf_ETC___d7054 ;
  assign obuffer1_3_serverAdapterB_cnt$EN =
	     obuffer1_3_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_3_portB_response_get ||
	     EN_obuf1_3_portBClear ;

  // register obuffer1_3_serverAdapterB_s1
  assign obuffer1_3_serverAdapterB_s1$D_IN =
	     obuffer1_3_serverAdapterB_s1_1$whas ?
	       obuffer1_3_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_3_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_4_serverAdapterA_cnt
  assign obuffer1_4_serverAdapterA_cnt$D_IN =
	     EN_obuf1_4_portAClear ?
	       3'd0 :
	       obuffer1_4_serverAdapterA_cnt_100_PLUS_IF_obuf_ETC___d7106 ;
  assign obuffer1_4_serverAdapterA_cnt$EN =
	     obuffer1_4_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_4_portA_response_get ||
	     EN_obuf1_4_portAClear ;

  // register obuffer1_4_serverAdapterA_s1
  assign obuffer1_4_serverAdapterA_s1$D_IN =
	     obuffer1_4_serverAdapterA_s1_1$whas ?
	       obuffer1_4_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_4_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_4_serverAdapterB_cnt
  assign obuffer1_4_serverAdapterB_cnt$D_IN =
	     EN_obuf1_4_portBClear ?
	       3'd0 :
	       obuffer1_4_serverAdapterB_cnt_152_PLUS_IF_obuf_ETC___d7158 ;
  assign obuffer1_4_serverAdapterB_cnt$EN =
	     obuffer1_4_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_4_portB_response_get ||
	     EN_obuf1_4_portBClear ;

  // register obuffer1_4_serverAdapterB_s1
  assign obuffer1_4_serverAdapterB_s1$D_IN =
	     obuffer1_4_serverAdapterB_s1_1$whas ?
	       obuffer1_4_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_4_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_5_serverAdapterA_cnt
  assign obuffer1_5_serverAdapterA_cnt$D_IN =
	     EN_obuf1_5_portAClear ?
	       3'd0 :
	       obuffer1_5_serverAdapterA_cnt_204_PLUS_IF_obuf_ETC___d7210 ;
  assign obuffer1_5_serverAdapterA_cnt$EN =
	     obuffer1_5_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_5_portA_response_get ||
	     EN_obuf1_5_portAClear ;

  // register obuffer1_5_serverAdapterA_s1
  assign obuffer1_5_serverAdapterA_s1$D_IN =
	     obuffer1_5_serverAdapterA_s1_1$whas ?
	       obuffer1_5_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_5_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_5_serverAdapterB_cnt
  assign obuffer1_5_serverAdapterB_cnt$D_IN =
	     EN_obuf1_5_portBClear ?
	       3'd0 :
	       obuffer1_5_serverAdapterB_cnt_256_PLUS_IF_obuf_ETC___d7262 ;
  assign obuffer1_5_serverAdapterB_cnt$EN =
	     obuffer1_5_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_5_portB_response_get ||
	     EN_obuf1_5_portBClear ;

  // register obuffer1_5_serverAdapterB_s1
  assign obuffer1_5_serverAdapterB_s1$D_IN =
	     obuffer1_5_serverAdapterB_s1_1$whas ?
	       obuffer1_5_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_5_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_6_serverAdapterA_cnt
  assign obuffer1_6_serverAdapterA_cnt$D_IN =
	     EN_obuf1_6_portAClear ?
	       3'd0 :
	       obuffer1_6_serverAdapterA_cnt_308_PLUS_IF_obuf_ETC___d7314 ;
  assign obuffer1_6_serverAdapterA_cnt$EN =
	     obuffer1_6_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_6_portA_response_get ||
	     EN_obuf1_6_portAClear ;

  // register obuffer1_6_serverAdapterA_s1
  assign obuffer1_6_serverAdapterA_s1$D_IN =
	     obuffer1_6_serverAdapterA_s1_1$whas ?
	       obuffer1_6_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_6_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_6_serverAdapterB_cnt
  assign obuffer1_6_serverAdapterB_cnt$D_IN =
	     EN_obuf1_6_portBClear ?
	       3'd0 :
	       obuffer1_6_serverAdapterB_cnt_360_PLUS_IF_obuf_ETC___d7366 ;
  assign obuffer1_6_serverAdapterB_cnt$EN =
	     obuffer1_6_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_6_portB_response_get ||
	     EN_obuf1_6_portBClear ;

  // register obuffer1_6_serverAdapterB_s1
  assign obuffer1_6_serverAdapterB_s1$D_IN =
	     obuffer1_6_serverAdapterB_s1_1$whas ?
	       obuffer1_6_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_6_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_7_serverAdapterA_cnt
  assign obuffer1_7_serverAdapterA_cnt$D_IN =
	     EN_obuf1_7_portAClear ?
	       3'd0 :
	       obuffer1_7_serverAdapterA_cnt_412_PLUS_IF_obuf_ETC___d7418 ;
  assign obuffer1_7_serverAdapterA_cnt$EN =
	     obuffer1_7_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_7_portA_response_get ||
	     EN_obuf1_7_portAClear ;

  // register obuffer1_7_serverAdapterA_s1
  assign obuffer1_7_serverAdapterA_s1$D_IN =
	     obuffer1_7_serverAdapterA_s1_1$whas ?
	       obuffer1_7_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_7_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_7_serverAdapterB_cnt
  assign obuffer1_7_serverAdapterB_cnt$D_IN =
	     EN_obuf1_7_portBClear ?
	       3'd0 :
	       obuffer1_7_serverAdapterB_cnt_464_PLUS_IF_obuf_ETC___d7470 ;
  assign obuffer1_7_serverAdapterB_cnt$EN =
	     obuffer1_7_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_7_portB_response_get ||
	     EN_obuf1_7_portBClear ;

  // register obuffer1_7_serverAdapterB_s1
  assign obuffer1_7_serverAdapterB_s1$D_IN =
	     obuffer1_7_serverAdapterB_s1_1$whas ?
	       obuffer1_7_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_7_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_8_serverAdapterA_cnt
  assign obuffer1_8_serverAdapterA_cnt$D_IN =
	     EN_obuf1_8_portAClear ?
	       3'd0 :
	       obuffer1_8_serverAdapterA_cnt_516_PLUS_IF_obuf_ETC___d7522 ;
  assign obuffer1_8_serverAdapterA_cnt$EN =
	     obuffer1_8_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_8_portA_response_get ||
	     EN_obuf1_8_portAClear ;

  // register obuffer1_8_serverAdapterA_s1
  assign obuffer1_8_serverAdapterA_s1$D_IN =
	     obuffer1_8_serverAdapterA_s1_1$whas ?
	       obuffer1_8_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_8_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_8_serverAdapterB_cnt
  assign obuffer1_8_serverAdapterB_cnt$D_IN =
	     EN_obuf1_8_portBClear ?
	       3'd0 :
	       obuffer1_8_serverAdapterB_cnt_568_PLUS_IF_obuf_ETC___d7574 ;
  assign obuffer1_8_serverAdapterB_cnt$EN =
	     obuffer1_8_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_8_portB_response_get ||
	     EN_obuf1_8_portBClear ;

  // register obuffer1_8_serverAdapterB_s1
  assign obuffer1_8_serverAdapterB_s1$D_IN =
	     obuffer1_8_serverAdapterB_s1_1$whas ?
	       obuffer1_8_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_8_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer1_9_serverAdapterA_cnt
  assign obuffer1_9_serverAdapterA_cnt$D_IN =
	     EN_obuf1_9_portAClear ?
	       3'd0 :
	       obuffer1_9_serverAdapterA_cnt_620_PLUS_IF_obuf_ETC___d7626 ;
  assign obuffer1_9_serverAdapterA_cnt$EN =
	     obuffer1_9_serverAdapterA_cnt_1$whas ||
	     EN_obuf1_9_portA_response_get ||
	     EN_obuf1_9_portAClear ;

  // register obuffer1_9_serverAdapterA_s1
  assign obuffer1_9_serverAdapterA_s1$D_IN =
	     obuffer1_9_serverAdapterA_s1_1$whas ?
	       obuffer1_9_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer1_9_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer1_9_serverAdapterB_cnt
  assign obuffer1_9_serverAdapterB_cnt$D_IN =
	     EN_obuf1_9_portBClear ?
	       3'd0 :
	       obuffer1_9_serverAdapterB_cnt_672_PLUS_IF_obuf_ETC___d7678 ;
  assign obuffer1_9_serverAdapterB_cnt$EN =
	     obuffer1_9_serverAdapterB_cnt_1$whas ||
	     EN_obuf1_9_portB_response_get ||
	     EN_obuf1_9_portBClear ;

  // register obuffer1_9_serverAdapterB_s1
  assign obuffer1_9_serverAdapterB_s1$D_IN =
	     obuffer1_9_serverAdapterB_s1_1$whas ?
	       obuffer1_9_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer1_9_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_0_serverAdapterA_cnt
  assign obuffer2_0_serverAdapterA_cnt$D_IN =
	     EN_obuf2_0_portAClear ?
	       3'd0 :
	       obuffer2_0_serverAdapterA_cnt_0012_PLUS_IF_obu_ETC___d10018 ;
  assign obuffer2_0_serverAdapterA_cnt$EN =
	     obuffer2_0_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_0_portA_response_get ||
	     EN_obuf2_0_portAClear ;

  // register obuffer2_0_serverAdapterA_s1
  assign obuffer2_0_serverAdapterA_s1$D_IN =
	     obuffer2_0_serverAdapterA_s1_1$whas ?
	       obuffer2_0_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_0_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_0_serverAdapterB_cnt
  assign obuffer2_0_serverAdapterB_cnt$D_IN =
	     EN_obuf2_0_portBClear ?
	       3'd0 :
	       obuffer2_0_serverAdapterB_cnt_0064_PLUS_IF_obu_ETC___d10070 ;
  assign obuffer2_0_serverAdapterB_cnt$EN =
	     obuffer2_0_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_0_portB_response_get ||
	     EN_obuf2_0_portBClear ;

  // register obuffer2_0_serverAdapterB_s1
  assign obuffer2_0_serverAdapterB_s1$D_IN =
	     obuffer2_0_serverAdapterB_s1_1$whas ?
	       obuffer2_0_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_0_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_10_serverAdapterA_cnt
  assign obuffer2_10_serverAdapterA_cnt$D_IN =
	     EN_obuf2_10_portAClear ?
	       3'd0 :
	       obuffer2_10_serverAdapterA_cnt_1052_PLUS_IF_ob_ETC___d11058 ;
  assign obuffer2_10_serverAdapterA_cnt$EN =
	     obuffer2_10_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_10_portA_response_get ||
	     EN_obuf2_10_portAClear ;

  // register obuffer2_10_serverAdapterA_s1
  assign obuffer2_10_serverAdapterA_s1$D_IN =
	     obuffer2_10_serverAdapterA_s1_1$whas ?
	       obuffer2_10_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_10_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_10_serverAdapterB_cnt
  assign obuffer2_10_serverAdapterB_cnt$D_IN =
	     EN_obuf2_10_portBClear ?
	       3'd0 :
	       obuffer2_10_serverAdapterB_cnt_1104_PLUS_IF_ob_ETC___d11110 ;
  assign obuffer2_10_serverAdapterB_cnt$EN =
	     obuffer2_10_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_10_portB_response_get ||
	     EN_obuf2_10_portBClear ;

  // register obuffer2_10_serverAdapterB_s1
  assign obuffer2_10_serverAdapterB_s1$D_IN =
	     obuffer2_10_serverAdapterB_s1_1$whas ?
	       obuffer2_10_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_10_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_11_serverAdapterA_cnt
  assign obuffer2_11_serverAdapterA_cnt$D_IN =
	     EN_obuf2_11_portAClear ?
	       3'd0 :
	       obuffer2_11_serverAdapterA_cnt_1156_PLUS_IF_ob_ETC___d11162 ;
  assign obuffer2_11_serverAdapterA_cnt$EN =
	     obuffer2_11_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_11_portA_response_get ||
	     EN_obuf2_11_portAClear ;

  // register obuffer2_11_serverAdapterA_s1
  assign obuffer2_11_serverAdapterA_s1$D_IN =
	     obuffer2_11_serverAdapterA_s1_1$whas ?
	       obuffer2_11_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_11_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_11_serverAdapterB_cnt
  assign obuffer2_11_serverAdapterB_cnt$D_IN =
	     EN_obuf2_11_portBClear ?
	       3'd0 :
	       obuffer2_11_serverAdapterB_cnt_1208_PLUS_IF_ob_ETC___d11214 ;
  assign obuffer2_11_serverAdapterB_cnt$EN =
	     obuffer2_11_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_11_portB_response_get ||
	     EN_obuf2_11_portBClear ;

  // register obuffer2_11_serverAdapterB_s1
  assign obuffer2_11_serverAdapterB_s1$D_IN =
	     obuffer2_11_serverAdapterB_s1_1$whas ?
	       obuffer2_11_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_11_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_12_serverAdapterA_cnt
  assign obuffer2_12_serverAdapterA_cnt$D_IN =
	     EN_obuf2_12_portAClear ?
	       3'd0 :
	       obuffer2_12_serverAdapterA_cnt_1260_PLUS_IF_ob_ETC___d11266 ;
  assign obuffer2_12_serverAdapterA_cnt$EN =
	     obuffer2_12_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_12_portA_response_get ||
	     EN_obuf2_12_portAClear ;

  // register obuffer2_12_serverAdapterA_s1
  assign obuffer2_12_serverAdapterA_s1$D_IN =
	     obuffer2_12_serverAdapterA_s1_1$whas ?
	       obuffer2_12_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_12_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_12_serverAdapterB_cnt
  assign obuffer2_12_serverAdapterB_cnt$D_IN =
	     EN_obuf2_12_portBClear ?
	       3'd0 :
	       obuffer2_12_serverAdapterB_cnt_1312_PLUS_IF_ob_ETC___d11318 ;
  assign obuffer2_12_serverAdapterB_cnt$EN =
	     obuffer2_12_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_12_portB_response_get ||
	     EN_obuf2_12_portBClear ;

  // register obuffer2_12_serverAdapterB_s1
  assign obuffer2_12_serverAdapterB_s1$D_IN =
	     obuffer2_12_serverAdapterB_s1_1$whas ?
	       obuffer2_12_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_12_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_13_serverAdapterA_cnt
  assign obuffer2_13_serverAdapterA_cnt$D_IN =
	     EN_obuf2_13_portAClear ?
	       3'd0 :
	       obuffer2_13_serverAdapterA_cnt_1364_PLUS_IF_ob_ETC___d11370 ;
  assign obuffer2_13_serverAdapterA_cnt$EN =
	     obuffer2_13_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_13_portA_response_get ||
	     EN_obuf2_13_portAClear ;

  // register obuffer2_13_serverAdapterA_s1
  assign obuffer2_13_serverAdapterA_s1$D_IN =
	     obuffer2_13_serverAdapterA_s1_1$whas ?
	       obuffer2_13_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_13_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_13_serverAdapterB_cnt
  assign obuffer2_13_serverAdapterB_cnt$D_IN =
	     EN_obuf2_13_portBClear ?
	       3'd0 :
	       obuffer2_13_serverAdapterB_cnt_1416_PLUS_IF_ob_ETC___d11422 ;
  assign obuffer2_13_serverAdapterB_cnt$EN =
	     obuffer2_13_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_13_portB_response_get ||
	     EN_obuf2_13_portBClear ;

  // register obuffer2_13_serverAdapterB_s1
  assign obuffer2_13_serverAdapterB_s1$D_IN =
	     obuffer2_13_serverAdapterB_s1_1$whas ?
	       obuffer2_13_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_13_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_14_serverAdapterA_cnt
  assign obuffer2_14_serverAdapterA_cnt$D_IN =
	     EN_obuf2_14_portAClear ?
	       3'd0 :
	       obuffer2_14_serverAdapterA_cnt_1468_PLUS_IF_ob_ETC___d11474 ;
  assign obuffer2_14_serverAdapterA_cnt$EN =
	     obuffer2_14_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_14_portA_response_get ||
	     EN_obuf2_14_portAClear ;

  // register obuffer2_14_serverAdapterA_s1
  assign obuffer2_14_serverAdapterA_s1$D_IN =
	     obuffer2_14_serverAdapterA_s1_1$whas ?
	       obuffer2_14_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_14_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_14_serverAdapterB_cnt
  assign obuffer2_14_serverAdapterB_cnt$D_IN =
	     EN_obuf2_14_portBClear ?
	       3'd0 :
	       obuffer2_14_serverAdapterB_cnt_1520_PLUS_IF_ob_ETC___d11526 ;
  assign obuffer2_14_serverAdapterB_cnt$EN =
	     obuffer2_14_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_14_portB_response_get ||
	     EN_obuf2_14_portBClear ;

  // register obuffer2_14_serverAdapterB_s1
  assign obuffer2_14_serverAdapterB_s1$D_IN =
	     obuffer2_14_serverAdapterB_s1_1$whas ?
	       obuffer2_14_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_14_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_15_serverAdapterA_cnt
  assign obuffer2_15_serverAdapterA_cnt$D_IN =
	     EN_obuf2_15_portAClear ?
	       3'd0 :
	       obuffer2_15_serverAdapterA_cnt_1572_PLUS_IF_ob_ETC___d11578 ;
  assign obuffer2_15_serverAdapterA_cnt$EN =
	     obuffer2_15_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_15_portA_response_get ||
	     EN_obuf2_15_portAClear ;

  // register obuffer2_15_serverAdapterA_s1
  assign obuffer2_15_serverAdapterA_s1$D_IN =
	     obuffer2_15_serverAdapterA_s1_1$whas ?
	       obuffer2_15_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_15_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_15_serverAdapterB_cnt
  assign obuffer2_15_serverAdapterB_cnt$D_IN =
	     EN_obuf2_15_portBClear ?
	       3'd0 :
	       obuffer2_15_serverAdapterB_cnt_1624_PLUS_IF_ob_ETC___d11630 ;
  assign obuffer2_15_serverAdapterB_cnt$EN =
	     obuffer2_15_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_15_portB_response_get ||
	     EN_obuf2_15_portBClear ;

  // register obuffer2_15_serverAdapterB_s1
  assign obuffer2_15_serverAdapterB_s1$D_IN =
	     obuffer2_15_serverAdapterB_s1_1$whas ?
	       obuffer2_15_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_15_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_16_serverAdapterA_cnt
  assign obuffer2_16_serverAdapterA_cnt$D_IN =
	     EN_obuf2_16_portAClear ?
	       3'd0 :
	       obuffer2_16_serverAdapterA_cnt_1676_PLUS_IF_ob_ETC___d11682 ;
  assign obuffer2_16_serverAdapterA_cnt$EN =
	     obuffer2_16_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_16_portA_response_get ||
	     EN_obuf2_16_portAClear ;

  // register obuffer2_16_serverAdapterA_s1
  assign obuffer2_16_serverAdapterA_s1$D_IN =
	     obuffer2_16_serverAdapterA_s1_1$whas ?
	       obuffer2_16_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_16_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_16_serverAdapterB_cnt
  assign obuffer2_16_serverAdapterB_cnt$D_IN =
	     EN_obuf2_16_portBClear ?
	       3'd0 :
	       obuffer2_16_serverAdapterB_cnt_1728_PLUS_IF_ob_ETC___d11734 ;
  assign obuffer2_16_serverAdapterB_cnt$EN =
	     obuffer2_16_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_16_portB_response_get ||
	     EN_obuf2_16_portBClear ;

  // register obuffer2_16_serverAdapterB_s1
  assign obuffer2_16_serverAdapterB_s1$D_IN =
	     obuffer2_16_serverAdapterB_s1_1$whas ?
	       obuffer2_16_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_16_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_17_serverAdapterA_cnt
  assign obuffer2_17_serverAdapterA_cnt$D_IN =
	     EN_obuf2_17_portAClear ?
	       3'd0 :
	       obuffer2_17_serverAdapterA_cnt_1780_PLUS_IF_ob_ETC___d11786 ;
  assign obuffer2_17_serverAdapterA_cnt$EN =
	     obuffer2_17_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_17_portA_response_get ||
	     EN_obuf2_17_portAClear ;

  // register obuffer2_17_serverAdapterA_s1
  assign obuffer2_17_serverAdapterA_s1$D_IN =
	     obuffer2_17_serverAdapterA_s1_1$whas ?
	       obuffer2_17_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_17_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_17_serverAdapterB_cnt
  assign obuffer2_17_serverAdapterB_cnt$D_IN =
	     EN_obuf2_17_portBClear ?
	       3'd0 :
	       obuffer2_17_serverAdapterB_cnt_1832_PLUS_IF_ob_ETC___d11838 ;
  assign obuffer2_17_serverAdapterB_cnt$EN =
	     obuffer2_17_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_17_portB_response_get ||
	     EN_obuf2_17_portBClear ;

  // register obuffer2_17_serverAdapterB_s1
  assign obuffer2_17_serverAdapterB_s1$D_IN =
	     obuffer2_17_serverAdapterB_s1_1$whas ?
	       obuffer2_17_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_17_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_18_serverAdapterA_cnt
  assign obuffer2_18_serverAdapterA_cnt$D_IN =
	     EN_obuf2_18_portAClear ?
	       3'd0 :
	       obuffer2_18_serverAdapterA_cnt_1884_PLUS_IF_ob_ETC___d11890 ;
  assign obuffer2_18_serverAdapterA_cnt$EN =
	     obuffer2_18_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_18_portA_response_get ||
	     EN_obuf2_18_portAClear ;

  // register obuffer2_18_serverAdapterA_s1
  assign obuffer2_18_serverAdapterA_s1$D_IN =
	     obuffer2_18_serverAdapterA_s1_1$whas ?
	       obuffer2_18_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_18_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_18_serverAdapterB_cnt
  assign obuffer2_18_serverAdapterB_cnt$D_IN =
	     EN_obuf2_18_portBClear ?
	       3'd0 :
	       obuffer2_18_serverAdapterB_cnt_1936_PLUS_IF_ob_ETC___d11942 ;
  assign obuffer2_18_serverAdapterB_cnt$EN =
	     obuffer2_18_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_18_portB_response_get ||
	     EN_obuf2_18_portBClear ;

  // register obuffer2_18_serverAdapterB_s1
  assign obuffer2_18_serverAdapterB_s1$D_IN =
	     obuffer2_18_serverAdapterB_s1_1$whas ?
	       obuffer2_18_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_18_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_19_serverAdapterA_cnt
  assign obuffer2_19_serverAdapterA_cnt$D_IN =
	     EN_obuf2_19_portAClear ?
	       3'd0 :
	       obuffer2_19_serverAdapterA_cnt_1988_PLUS_IF_ob_ETC___d11994 ;
  assign obuffer2_19_serverAdapterA_cnt$EN =
	     obuffer2_19_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_19_portA_response_get ||
	     EN_obuf2_19_portAClear ;

  // register obuffer2_19_serverAdapterA_s1
  assign obuffer2_19_serverAdapterA_s1$D_IN =
	     obuffer2_19_serverAdapterA_s1_1$whas ?
	       obuffer2_19_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_19_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_19_serverAdapterB_cnt
  assign obuffer2_19_serverAdapterB_cnt$D_IN =
	     EN_obuf2_19_portBClear ?
	       3'd0 :
	       obuffer2_19_serverAdapterB_cnt_2040_PLUS_IF_ob_ETC___d12046 ;
  assign obuffer2_19_serverAdapterB_cnt$EN =
	     obuffer2_19_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_19_portB_response_get ||
	     EN_obuf2_19_portBClear ;

  // register obuffer2_19_serverAdapterB_s1
  assign obuffer2_19_serverAdapterB_s1$D_IN =
	     obuffer2_19_serverAdapterB_s1_1$whas ?
	       obuffer2_19_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_19_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_1_serverAdapterA_cnt
  assign obuffer2_1_serverAdapterA_cnt$D_IN =
	     EN_obuf2_1_portAClear ?
	       3'd0 :
	       obuffer2_1_serverAdapterA_cnt_0116_PLUS_IF_obu_ETC___d10122 ;
  assign obuffer2_1_serverAdapterA_cnt$EN =
	     obuffer2_1_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_1_portA_response_get ||
	     EN_obuf2_1_portAClear ;

  // register obuffer2_1_serverAdapterA_s1
  assign obuffer2_1_serverAdapterA_s1$D_IN =
	     obuffer2_1_serverAdapterA_s1_1$whas ?
	       obuffer2_1_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_1_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_1_serverAdapterB_cnt
  assign obuffer2_1_serverAdapterB_cnt$D_IN =
	     EN_obuf2_1_portBClear ?
	       3'd0 :
	       obuffer2_1_serverAdapterB_cnt_0168_PLUS_IF_obu_ETC___d10174 ;
  assign obuffer2_1_serverAdapterB_cnt$EN =
	     obuffer2_1_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_1_portB_response_get ||
	     EN_obuf2_1_portBClear ;

  // register obuffer2_1_serverAdapterB_s1
  assign obuffer2_1_serverAdapterB_s1$D_IN =
	     obuffer2_1_serverAdapterB_s1_1$whas ?
	       obuffer2_1_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_1_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_20_serverAdapterA_cnt
  assign obuffer2_20_serverAdapterA_cnt$D_IN =
	     EN_obuf2_20_portAClear ?
	       3'd0 :
	       obuffer2_20_serverAdapterA_cnt_2092_PLUS_IF_ob_ETC___d12098 ;
  assign obuffer2_20_serverAdapterA_cnt$EN =
	     obuffer2_20_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_20_portA_response_get ||
	     EN_obuf2_20_portAClear ;

  // register obuffer2_20_serverAdapterA_s1
  assign obuffer2_20_serverAdapterA_s1$D_IN =
	     obuffer2_20_serverAdapterA_s1_1$whas ?
	       obuffer2_20_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_20_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_20_serverAdapterB_cnt
  assign obuffer2_20_serverAdapterB_cnt$D_IN =
	     EN_obuf2_20_portBClear ?
	       3'd0 :
	       obuffer2_20_serverAdapterB_cnt_2144_PLUS_IF_ob_ETC___d12150 ;
  assign obuffer2_20_serverAdapterB_cnt$EN =
	     obuffer2_20_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_20_portB_response_get ||
	     EN_obuf2_20_portBClear ;

  // register obuffer2_20_serverAdapterB_s1
  assign obuffer2_20_serverAdapterB_s1$D_IN =
	     obuffer2_20_serverAdapterB_s1_1$whas ?
	       obuffer2_20_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_20_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_21_serverAdapterA_cnt
  assign obuffer2_21_serverAdapterA_cnt$D_IN =
	     EN_obuf2_21_portAClear ?
	       3'd0 :
	       obuffer2_21_serverAdapterA_cnt_2196_PLUS_IF_ob_ETC___d12202 ;
  assign obuffer2_21_serverAdapterA_cnt$EN =
	     obuffer2_21_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_21_portA_response_get ||
	     EN_obuf2_21_portAClear ;

  // register obuffer2_21_serverAdapterA_s1
  assign obuffer2_21_serverAdapterA_s1$D_IN =
	     obuffer2_21_serverAdapterA_s1_1$whas ?
	       obuffer2_21_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_21_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_21_serverAdapterB_cnt
  assign obuffer2_21_serverAdapterB_cnt$D_IN =
	     EN_obuf2_21_portBClear ?
	       3'd0 :
	       obuffer2_21_serverAdapterB_cnt_2248_PLUS_IF_ob_ETC___d12254 ;
  assign obuffer2_21_serverAdapterB_cnt$EN =
	     obuffer2_21_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_21_portB_response_get ||
	     EN_obuf2_21_portBClear ;

  // register obuffer2_21_serverAdapterB_s1
  assign obuffer2_21_serverAdapterB_s1$D_IN =
	     obuffer2_21_serverAdapterB_s1_1$whas ?
	       obuffer2_21_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_21_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_22_serverAdapterA_cnt
  assign obuffer2_22_serverAdapterA_cnt$D_IN =
	     EN_obuf2_22_portAClear ?
	       3'd0 :
	       obuffer2_22_serverAdapterA_cnt_2300_PLUS_IF_ob_ETC___d12306 ;
  assign obuffer2_22_serverAdapterA_cnt$EN =
	     obuffer2_22_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_22_portA_response_get ||
	     EN_obuf2_22_portAClear ;

  // register obuffer2_22_serverAdapterA_s1
  assign obuffer2_22_serverAdapterA_s1$D_IN =
	     obuffer2_22_serverAdapterA_s1_1$whas ?
	       obuffer2_22_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_22_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_22_serverAdapterB_cnt
  assign obuffer2_22_serverAdapterB_cnt$D_IN =
	     EN_obuf2_22_portBClear ?
	       3'd0 :
	       obuffer2_22_serverAdapterB_cnt_2352_PLUS_IF_ob_ETC___d12358 ;
  assign obuffer2_22_serverAdapterB_cnt$EN =
	     obuffer2_22_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_22_portB_response_get ||
	     EN_obuf2_22_portBClear ;

  // register obuffer2_22_serverAdapterB_s1
  assign obuffer2_22_serverAdapterB_s1$D_IN =
	     obuffer2_22_serverAdapterB_s1_1$whas ?
	       obuffer2_22_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_22_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_23_serverAdapterA_cnt
  assign obuffer2_23_serverAdapterA_cnt$D_IN =
	     EN_obuf2_23_portAClear ?
	       3'd0 :
	       obuffer2_23_serverAdapterA_cnt_2404_PLUS_IF_ob_ETC___d12410 ;
  assign obuffer2_23_serverAdapterA_cnt$EN =
	     obuffer2_23_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_23_portA_response_get ||
	     EN_obuf2_23_portAClear ;

  // register obuffer2_23_serverAdapterA_s1
  assign obuffer2_23_serverAdapterA_s1$D_IN =
	     obuffer2_23_serverAdapterA_s1_1$whas ?
	       obuffer2_23_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_23_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_23_serverAdapterB_cnt
  assign obuffer2_23_serverAdapterB_cnt$D_IN =
	     EN_obuf2_23_portBClear ?
	       3'd0 :
	       obuffer2_23_serverAdapterB_cnt_2456_PLUS_IF_ob_ETC___d12462 ;
  assign obuffer2_23_serverAdapterB_cnt$EN =
	     obuffer2_23_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_23_portB_response_get ||
	     EN_obuf2_23_portBClear ;

  // register obuffer2_23_serverAdapterB_s1
  assign obuffer2_23_serverAdapterB_s1$D_IN =
	     obuffer2_23_serverAdapterB_s1_1$whas ?
	       obuffer2_23_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_23_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_24_serverAdapterA_cnt
  assign obuffer2_24_serverAdapterA_cnt$D_IN =
	     EN_obuf2_24_portAClear ?
	       3'd0 :
	       obuffer2_24_serverAdapterA_cnt_2508_PLUS_IF_ob_ETC___d12514 ;
  assign obuffer2_24_serverAdapterA_cnt$EN =
	     obuffer2_24_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_24_portA_response_get ||
	     EN_obuf2_24_portAClear ;

  // register obuffer2_24_serverAdapterA_s1
  assign obuffer2_24_serverAdapterA_s1$D_IN =
	     obuffer2_24_serverAdapterA_s1_1$whas ?
	       obuffer2_24_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_24_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_24_serverAdapterB_cnt
  assign obuffer2_24_serverAdapterB_cnt$D_IN =
	     EN_obuf2_24_portBClear ?
	       3'd0 :
	       obuffer2_24_serverAdapterB_cnt_2560_PLUS_IF_ob_ETC___d12566 ;
  assign obuffer2_24_serverAdapterB_cnt$EN =
	     obuffer2_24_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_24_portB_response_get ||
	     EN_obuf2_24_portBClear ;

  // register obuffer2_24_serverAdapterB_s1
  assign obuffer2_24_serverAdapterB_s1$D_IN =
	     obuffer2_24_serverAdapterB_s1_1$whas ?
	       obuffer2_24_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_24_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_25_serverAdapterA_cnt
  assign obuffer2_25_serverAdapterA_cnt$D_IN =
	     EN_obuf2_25_portAClear ?
	       3'd0 :
	       obuffer2_25_serverAdapterA_cnt_2612_PLUS_IF_ob_ETC___d12618 ;
  assign obuffer2_25_serverAdapterA_cnt$EN =
	     obuffer2_25_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_25_portA_response_get ||
	     EN_obuf2_25_portAClear ;

  // register obuffer2_25_serverAdapterA_s1
  assign obuffer2_25_serverAdapterA_s1$D_IN =
	     obuffer2_25_serverAdapterA_s1_1$whas ?
	       obuffer2_25_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_25_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_25_serverAdapterB_cnt
  assign obuffer2_25_serverAdapterB_cnt$D_IN =
	     EN_obuf2_25_portBClear ?
	       3'd0 :
	       obuffer2_25_serverAdapterB_cnt_2664_PLUS_IF_ob_ETC___d12670 ;
  assign obuffer2_25_serverAdapterB_cnt$EN =
	     obuffer2_25_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_25_portB_response_get ||
	     EN_obuf2_25_portBClear ;

  // register obuffer2_25_serverAdapterB_s1
  assign obuffer2_25_serverAdapterB_s1$D_IN =
	     obuffer2_25_serverAdapterB_s1_1$whas ?
	       obuffer2_25_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_25_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_26_serverAdapterA_cnt
  assign obuffer2_26_serverAdapterA_cnt$D_IN =
	     EN_obuf2_26_portAClear ?
	       3'd0 :
	       obuffer2_26_serverAdapterA_cnt_2716_PLUS_IF_ob_ETC___d12722 ;
  assign obuffer2_26_serverAdapterA_cnt$EN =
	     obuffer2_26_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_26_portA_response_get ||
	     EN_obuf2_26_portAClear ;

  // register obuffer2_26_serverAdapterA_s1
  assign obuffer2_26_serverAdapterA_s1$D_IN =
	     obuffer2_26_serverAdapterA_s1_1$whas ?
	       obuffer2_26_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_26_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_26_serverAdapterB_cnt
  assign obuffer2_26_serverAdapterB_cnt$D_IN =
	     EN_obuf2_26_portBClear ?
	       3'd0 :
	       obuffer2_26_serverAdapterB_cnt_2768_PLUS_IF_ob_ETC___d12774 ;
  assign obuffer2_26_serverAdapterB_cnt$EN =
	     obuffer2_26_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_26_portB_response_get ||
	     EN_obuf2_26_portBClear ;

  // register obuffer2_26_serverAdapterB_s1
  assign obuffer2_26_serverAdapterB_s1$D_IN =
	     obuffer2_26_serverAdapterB_s1_1$whas ?
	       obuffer2_26_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_26_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_27_serverAdapterA_cnt
  assign obuffer2_27_serverAdapterA_cnt$D_IN =
	     EN_obuf2_27_portAClear ?
	       3'd0 :
	       obuffer2_27_serverAdapterA_cnt_2820_PLUS_IF_ob_ETC___d12826 ;
  assign obuffer2_27_serverAdapterA_cnt$EN =
	     obuffer2_27_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_27_portA_response_get ||
	     EN_obuf2_27_portAClear ;

  // register obuffer2_27_serverAdapterA_s1
  assign obuffer2_27_serverAdapterA_s1$D_IN =
	     obuffer2_27_serverAdapterA_s1_1$whas ?
	       obuffer2_27_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_27_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_27_serverAdapterB_cnt
  assign obuffer2_27_serverAdapterB_cnt$D_IN =
	     EN_obuf2_27_portBClear ?
	       3'd0 :
	       obuffer2_27_serverAdapterB_cnt_2872_PLUS_IF_ob_ETC___d12878 ;
  assign obuffer2_27_serverAdapterB_cnt$EN =
	     obuffer2_27_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_27_portB_response_get ||
	     EN_obuf2_27_portBClear ;

  // register obuffer2_27_serverAdapterB_s1
  assign obuffer2_27_serverAdapterB_s1$D_IN =
	     obuffer2_27_serverAdapterB_s1_1$whas ?
	       obuffer2_27_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_27_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_28_serverAdapterA_cnt
  assign obuffer2_28_serverAdapterA_cnt$D_IN =
	     EN_obuf2_28_portAClear ?
	       3'd0 :
	       obuffer2_28_serverAdapterA_cnt_2924_PLUS_IF_ob_ETC___d12930 ;
  assign obuffer2_28_serverAdapterA_cnt$EN =
	     obuffer2_28_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_28_portA_response_get ||
	     EN_obuf2_28_portAClear ;

  // register obuffer2_28_serverAdapterA_s1
  assign obuffer2_28_serverAdapterA_s1$D_IN =
	     obuffer2_28_serverAdapterA_s1_1$whas ?
	       obuffer2_28_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_28_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_28_serverAdapterB_cnt
  assign obuffer2_28_serverAdapterB_cnt$D_IN =
	     EN_obuf2_28_portBClear ?
	       3'd0 :
	       obuffer2_28_serverAdapterB_cnt_2976_PLUS_IF_ob_ETC___d12982 ;
  assign obuffer2_28_serverAdapterB_cnt$EN =
	     obuffer2_28_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_28_portB_response_get ||
	     EN_obuf2_28_portBClear ;

  // register obuffer2_28_serverAdapterB_s1
  assign obuffer2_28_serverAdapterB_s1$D_IN =
	     obuffer2_28_serverAdapterB_s1_1$whas ?
	       obuffer2_28_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_28_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_29_serverAdapterA_cnt
  assign obuffer2_29_serverAdapterA_cnt$D_IN =
	     EN_obuf2_29_portAClear ?
	       3'd0 :
	       obuffer2_29_serverAdapterA_cnt_3028_PLUS_IF_ob_ETC___d13034 ;
  assign obuffer2_29_serverAdapterA_cnt$EN =
	     obuffer2_29_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_29_portA_response_get ||
	     EN_obuf2_29_portAClear ;

  // register obuffer2_29_serverAdapterA_s1
  assign obuffer2_29_serverAdapterA_s1$D_IN =
	     obuffer2_29_serverAdapterA_s1_1$whas ?
	       obuffer2_29_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_29_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_29_serverAdapterB_cnt
  assign obuffer2_29_serverAdapterB_cnt$D_IN =
	     EN_obuf2_29_portBClear ?
	       3'd0 :
	       obuffer2_29_serverAdapterB_cnt_3080_PLUS_IF_ob_ETC___d13086 ;
  assign obuffer2_29_serverAdapterB_cnt$EN =
	     obuffer2_29_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_29_portB_response_get ||
	     EN_obuf2_29_portBClear ;

  // register obuffer2_29_serverAdapterB_s1
  assign obuffer2_29_serverAdapterB_s1$D_IN =
	     obuffer2_29_serverAdapterB_s1_1$whas ?
	       obuffer2_29_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_29_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_2_serverAdapterA_cnt
  assign obuffer2_2_serverAdapterA_cnt$D_IN =
	     EN_obuf2_2_portAClear ?
	       3'd0 :
	       obuffer2_2_serverAdapterA_cnt_0220_PLUS_IF_obu_ETC___d10226 ;
  assign obuffer2_2_serverAdapterA_cnt$EN =
	     obuffer2_2_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_2_portA_response_get ||
	     EN_obuf2_2_portAClear ;

  // register obuffer2_2_serverAdapterA_s1
  assign obuffer2_2_serverAdapterA_s1$D_IN =
	     obuffer2_2_serverAdapterA_s1_1$whas ?
	       obuffer2_2_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_2_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_2_serverAdapterB_cnt
  assign obuffer2_2_serverAdapterB_cnt$D_IN =
	     EN_obuf2_2_portBClear ?
	       3'd0 :
	       obuffer2_2_serverAdapterB_cnt_0272_PLUS_IF_obu_ETC___d10278 ;
  assign obuffer2_2_serverAdapterB_cnt$EN =
	     obuffer2_2_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_2_portB_response_get ||
	     EN_obuf2_2_portBClear ;

  // register obuffer2_2_serverAdapterB_s1
  assign obuffer2_2_serverAdapterB_s1$D_IN =
	     obuffer2_2_serverAdapterB_s1_1$whas ?
	       obuffer2_2_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_2_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_30_serverAdapterA_cnt
  assign obuffer2_30_serverAdapterA_cnt$D_IN =
	     EN_obuf2_30_portAClear ?
	       3'd0 :
	       obuffer2_30_serverAdapterA_cnt_3132_PLUS_IF_ob_ETC___d13138 ;
  assign obuffer2_30_serverAdapterA_cnt$EN =
	     obuffer2_30_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_30_portA_response_get ||
	     EN_obuf2_30_portAClear ;

  // register obuffer2_30_serverAdapterA_s1
  assign obuffer2_30_serverAdapterA_s1$D_IN =
	     obuffer2_30_serverAdapterA_s1_1$whas ?
	       obuffer2_30_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_30_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_30_serverAdapterB_cnt
  assign obuffer2_30_serverAdapterB_cnt$D_IN =
	     EN_obuf2_30_portBClear ?
	       3'd0 :
	       obuffer2_30_serverAdapterB_cnt_3184_PLUS_IF_ob_ETC___d13190 ;
  assign obuffer2_30_serverAdapterB_cnt$EN =
	     obuffer2_30_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_30_portB_response_get ||
	     EN_obuf2_30_portBClear ;

  // register obuffer2_30_serverAdapterB_s1
  assign obuffer2_30_serverAdapterB_s1$D_IN =
	     obuffer2_30_serverAdapterB_s1_1$whas ?
	       obuffer2_30_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_30_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_31_serverAdapterA_cnt
  assign obuffer2_31_serverAdapterA_cnt$D_IN =
	     EN_obuf2_31_portAClear ?
	       3'd0 :
	       obuffer2_31_serverAdapterA_cnt_3236_PLUS_IF_ob_ETC___d13242 ;
  assign obuffer2_31_serverAdapterA_cnt$EN =
	     obuffer2_31_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_31_portA_response_get ||
	     EN_obuf2_31_portAClear ;

  // register obuffer2_31_serverAdapterA_s1
  assign obuffer2_31_serverAdapterA_s1$D_IN =
	     obuffer2_31_serverAdapterA_s1_1$whas ?
	       obuffer2_31_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_31_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_31_serverAdapterB_cnt
  assign obuffer2_31_serverAdapterB_cnt$D_IN =
	     EN_obuf2_31_portBClear ?
	       3'd0 :
	       obuffer2_31_serverAdapterB_cnt_3288_PLUS_IF_ob_ETC___d13294 ;
  assign obuffer2_31_serverAdapterB_cnt$EN =
	     obuffer2_31_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_31_portB_response_get ||
	     EN_obuf2_31_portBClear ;

  // register obuffer2_31_serverAdapterB_s1
  assign obuffer2_31_serverAdapterB_s1$D_IN =
	     obuffer2_31_serverAdapterB_s1_1$whas ?
	       obuffer2_31_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_31_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_3_serverAdapterA_cnt
  assign obuffer2_3_serverAdapterA_cnt$D_IN =
	     EN_obuf2_3_portAClear ?
	       3'd0 :
	       obuffer2_3_serverAdapterA_cnt_0324_PLUS_IF_obu_ETC___d10330 ;
  assign obuffer2_3_serverAdapterA_cnt$EN =
	     obuffer2_3_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_3_portA_response_get ||
	     EN_obuf2_3_portAClear ;

  // register obuffer2_3_serverAdapterA_s1
  assign obuffer2_3_serverAdapterA_s1$D_IN =
	     obuffer2_3_serverAdapterA_s1_1$whas ?
	       obuffer2_3_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_3_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_3_serverAdapterB_cnt
  assign obuffer2_3_serverAdapterB_cnt$D_IN =
	     EN_obuf2_3_portBClear ?
	       3'd0 :
	       obuffer2_3_serverAdapterB_cnt_0376_PLUS_IF_obu_ETC___d10382 ;
  assign obuffer2_3_serverAdapterB_cnt$EN =
	     obuffer2_3_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_3_portB_response_get ||
	     EN_obuf2_3_portBClear ;

  // register obuffer2_3_serverAdapterB_s1
  assign obuffer2_3_serverAdapterB_s1$D_IN =
	     obuffer2_3_serverAdapterB_s1_1$whas ?
	       obuffer2_3_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_3_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_4_serverAdapterA_cnt
  assign obuffer2_4_serverAdapterA_cnt$D_IN =
	     EN_obuf2_4_portAClear ?
	       3'd0 :
	       obuffer2_4_serverAdapterA_cnt_0428_PLUS_IF_obu_ETC___d10434 ;
  assign obuffer2_4_serverAdapterA_cnt$EN =
	     obuffer2_4_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_4_portA_response_get ||
	     EN_obuf2_4_portAClear ;

  // register obuffer2_4_serverAdapterA_s1
  assign obuffer2_4_serverAdapterA_s1$D_IN =
	     obuffer2_4_serverAdapterA_s1_1$whas ?
	       obuffer2_4_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_4_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_4_serverAdapterB_cnt
  assign obuffer2_4_serverAdapterB_cnt$D_IN =
	     EN_obuf2_4_portBClear ?
	       3'd0 :
	       obuffer2_4_serverAdapterB_cnt_0480_PLUS_IF_obu_ETC___d10486 ;
  assign obuffer2_4_serverAdapterB_cnt$EN =
	     obuffer2_4_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_4_portB_response_get ||
	     EN_obuf2_4_portBClear ;

  // register obuffer2_4_serverAdapterB_s1
  assign obuffer2_4_serverAdapterB_s1$D_IN =
	     obuffer2_4_serverAdapterB_s1_1$whas ?
	       obuffer2_4_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_4_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_5_serverAdapterA_cnt
  assign obuffer2_5_serverAdapterA_cnt$D_IN =
	     EN_obuf2_5_portAClear ?
	       3'd0 :
	       obuffer2_5_serverAdapterA_cnt_0532_PLUS_IF_obu_ETC___d10538 ;
  assign obuffer2_5_serverAdapterA_cnt$EN =
	     obuffer2_5_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_5_portA_response_get ||
	     EN_obuf2_5_portAClear ;

  // register obuffer2_5_serverAdapterA_s1
  assign obuffer2_5_serverAdapterA_s1$D_IN =
	     obuffer2_5_serverAdapterA_s1_1$whas ?
	       obuffer2_5_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_5_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_5_serverAdapterB_cnt
  assign obuffer2_5_serverAdapterB_cnt$D_IN =
	     EN_obuf2_5_portBClear ?
	       3'd0 :
	       obuffer2_5_serverAdapterB_cnt_0584_PLUS_IF_obu_ETC___d10590 ;
  assign obuffer2_5_serverAdapterB_cnt$EN =
	     obuffer2_5_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_5_portB_response_get ||
	     EN_obuf2_5_portBClear ;

  // register obuffer2_5_serverAdapterB_s1
  assign obuffer2_5_serverAdapterB_s1$D_IN =
	     obuffer2_5_serverAdapterB_s1_1$whas ?
	       obuffer2_5_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_5_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_6_serverAdapterA_cnt
  assign obuffer2_6_serverAdapterA_cnt$D_IN =
	     EN_obuf2_6_portAClear ?
	       3'd0 :
	       obuffer2_6_serverAdapterA_cnt_0636_PLUS_IF_obu_ETC___d10642 ;
  assign obuffer2_6_serverAdapterA_cnt$EN =
	     obuffer2_6_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_6_portA_response_get ||
	     EN_obuf2_6_portAClear ;

  // register obuffer2_6_serverAdapterA_s1
  assign obuffer2_6_serverAdapterA_s1$D_IN =
	     obuffer2_6_serverAdapterA_s1_1$whas ?
	       obuffer2_6_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_6_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_6_serverAdapterB_cnt
  assign obuffer2_6_serverAdapterB_cnt$D_IN =
	     EN_obuf2_6_portBClear ?
	       3'd0 :
	       obuffer2_6_serverAdapterB_cnt_0688_PLUS_IF_obu_ETC___d10694 ;
  assign obuffer2_6_serverAdapterB_cnt$EN =
	     obuffer2_6_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_6_portB_response_get ||
	     EN_obuf2_6_portBClear ;

  // register obuffer2_6_serverAdapterB_s1
  assign obuffer2_6_serverAdapterB_s1$D_IN =
	     obuffer2_6_serverAdapterB_s1_1$whas ?
	       obuffer2_6_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_6_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_7_serverAdapterA_cnt
  assign obuffer2_7_serverAdapterA_cnt$D_IN =
	     EN_obuf2_7_portAClear ?
	       3'd0 :
	       obuffer2_7_serverAdapterA_cnt_0740_PLUS_IF_obu_ETC___d10746 ;
  assign obuffer2_7_serverAdapterA_cnt$EN =
	     obuffer2_7_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_7_portA_response_get ||
	     EN_obuf2_7_portAClear ;

  // register obuffer2_7_serverAdapterA_s1
  assign obuffer2_7_serverAdapterA_s1$D_IN =
	     obuffer2_7_serverAdapterA_s1_1$whas ?
	       obuffer2_7_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_7_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_7_serverAdapterB_cnt
  assign obuffer2_7_serverAdapterB_cnt$D_IN =
	     EN_obuf2_7_portBClear ?
	       3'd0 :
	       obuffer2_7_serverAdapterB_cnt_0792_PLUS_IF_obu_ETC___d10798 ;
  assign obuffer2_7_serverAdapterB_cnt$EN =
	     obuffer2_7_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_7_portB_response_get ||
	     EN_obuf2_7_portBClear ;

  // register obuffer2_7_serverAdapterB_s1
  assign obuffer2_7_serverAdapterB_s1$D_IN =
	     obuffer2_7_serverAdapterB_s1_1$whas ?
	       obuffer2_7_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_7_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_8_serverAdapterA_cnt
  assign obuffer2_8_serverAdapterA_cnt$D_IN =
	     EN_obuf2_8_portAClear ?
	       3'd0 :
	       obuffer2_8_serverAdapterA_cnt_0844_PLUS_IF_obu_ETC___d10850 ;
  assign obuffer2_8_serverAdapterA_cnt$EN =
	     obuffer2_8_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_8_portA_response_get ||
	     EN_obuf2_8_portAClear ;

  // register obuffer2_8_serverAdapterA_s1
  assign obuffer2_8_serverAdapterA_s1$D_IN =
	     obuffer2_8_serverAdapterA_s1_1$whas ?
	       obuffer2_8_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_8_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_8_serverAdapterB_cnt
  assign obuffer2_8_serverAdapterB_cnt$D_IN =
	     EN_obuf2_8_portBClear ?
	       3'd0 :
	       obuffer2_8_serverAdapterB_cnt_0896_PLUS_IF_obu_ETC___d10902 ;
  assign obuffer2_8_serverAdapterB_cnt$EN =
	     obuffer2_8_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_8_portB_response_get ||
	     EN_obuf2_8_portBClear ;

  // register obuffer2_8_serverAdapterB_s1
  assign obuffer2_8_serverAdapterB_s1$D_IN =
	     obuffer2_8_serverAdapterB_s1_1$whas ?
	       obuffer2_8_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_8_serverAdapterB_s1$EN = 1'd1 ;

  // register obuffer2_9_serverAdapterA_cnt
  assign obuffer2_9_serverAdapterA_cnt$D_IN =
	     EN_obuf2_9_portAClear ?
	       3'd0 :
	       obuffer2_9_serverAdapterA_cnt_0948_PLUS_IF_obu_ETC___d10954 ;
  assign obuffer2_9_serverAdapterA_cnt$EN =
	     obuffer2_9_serverAdapterA_cnt_1$whas ||
	     EN_obuf2_9_portA_response_get ||
	     EN_obuf2_9_portAClear ;

  // register obuffer2_9_serverAdapterA_s1
  assign obuffer2_9_serverAdapterA_s1$D_IN =
	     obuffer2_9_serverAdapterA_s1_1$whas ?
	       obuffer2_9_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign obuffer2_9_serverAdapterA_s1$EN = 1'd1 ;

  // register obuffer2_9_serverAdapterB_cnt
  assign obuffer2_9_serverAdapterB_cnt$D_IN =
	     EN_obuf2_9_portBClear ?
	       3'd0 :
	       obuffer2_9_serverAdapterB_cnt_1000_PLUS_IF_obu_ETC___d11006 ;
  assign obuffer2_9_serverAdapterB_cnt$EN =
	     obuffer2_9_serverAdapterB_cnt_1$whas ||
	     EN_obuf2_9_portB_response_get ||
	     EN_obuf2_9_portBClear ;

  // register obuffer2_9_serverAdapterB_s1
  assign obuffer2_9_serverAdapterB_s1$D_IN =
	     obuffer2_9_serverAdapterB_s1_1$whas ?
	       obuffer2_9_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign obuffer2_9_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_0_serverAdapterA_cnt
  assign wbuffer_0_serverAdapterA_cnt$D_IN =
	     EN_wbuf_0_portAClear ?
	       3'd0 :
	       wbuffer_0_serverAdapterA_cnt_356_PLUS_IF_wbuff_ETC___d3362 ;
  assign wbuffer_0_serverAdapterA_cnt$EN =
	     wbuffer_0_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_0_portA_response_get ||
	     EN_wbuf_0_portAClear ;

  // register wbuffer_0_serverAdapterA_s1
  assign wbuffer_0_serverAdapterA_s1$D_IN =
	     wbuffer_0_serverAdapterA_s1_1$whas ?
	       wbuffer_0_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_0_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_0_serverAdapterB_cnt
  assign wbuffer_0_serverAdapterB_cnt$D_IN =
	     EN_wbuf_0_portBClear ?
	       3'd0 :
	       wbuffer_0_serverAdapterB_cnt_408_PLUS_IF_wbuff_ETC___d3414 ;
  assign wbuffer_0_serverAdapterB_cnt$EN =
	     wbuffer_0_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_0_portB_response_get ||
	     EN_wbuf_0_portBClear ;

  // register wbuffer_0_serverAdapterB_s1
  assign wbuffer_0_serverAdapterB_s1$D_IN =
	     wbuffer_0_serverAdapterB_s1_1$whas ?
	       wbuffer_0_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_0_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_10_serverAdapterA_cnt
  assign wbuffer_10_serverAdapterA_cnt$D_IN =
	     EN_wbuf_10_portAClear ?
	       3'd0 :
	       wbuffer_10_serverAdapterA_cnt_396_PLUS_IF_wbuf_ETC___d4402 ;
  assign wbuffer_10_serverAdapterA_cnt$EN =
	     wbuffer_10_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_10_portA_response_get ||
	     EN_wbuf_10_portAClear ;

  // register wbuffer_10_serverAdapterA_s1
  assign wbuffer_10_serverAdapterA_s1$D_IN =
	     wbuffer_10_serverAdapterA_s1_1$whas ?
	       wbuffer_10_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_10_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_10_serverAdapterB_cnt
  assign wbuffer_10_serverAdapterB_cnt$D_IN =
	     EN_wbuf_10_portBClear ?
	       3'd0 :
	       wbuffer_10_serverAdapterB_cnt_448_PLUS_IF_wbuf_ETC___d4454 ;
  assign wbuffer_10_serverAdapterB_cnt$EN =
	     wbuffer_10_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_10_portB_response_get ||
	     EN_wbuf_10_portBClear ;

  // register wbuffer_10_serverAdapterB_s1
  assign wbuffer_10_serverAdapterB_s1$D_IN =
	     wbuffer_10_serverAdapterB_s1_1$whas ?
	       wbuffer_10_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_10_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_11_serverAdapterA_cnt
  assign wbuffer_11_serverAdapterA_cnt$D_IN =
	     EN_wbuf_11_portAClear ?
	       3'd0 :
	       wbuffer_11_serverAdapterA_cnt_500_PLUS_IF_wbuf_ETC___d4506 ;
  assign wbuffer_11_serverAdapterA_cnt$EN =
	     wbuffer_11_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_11_portA_response_get ||
	     EN_wbuf_11_portAClear ;

  // register wbuffer_11_serverAdapterA_s1
  assign wbuffer_11_serverAdapterA_s1$D_IN =
	     wbuffer_11_serverAdapterA_s1_1$whas ?
	       wbuffer_11_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_11_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_11_serverAdapterB_cnt
  assign wbuffer_11_serverAdapterB_cnt$D_IN =
	     EN_wbuf_11_portBClear ?
	       3'd0 :
	       wbuffer_11_serverAdapterB_cnt_552_PLUS_IF_wbuf_ETC___d4558 ;
  assign wbuffer_11_serverAdapterB_cnt$EN =
	     wbuffer_11_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_11_portB_response_get ||
	     EN_wbuf_11_portBClear ;

  // register wbuffer_11_serverAdapterB_s1
  assign wbuffer_11_serverAdapterB_s1$D_IN =
	     wbuffer_11_serverAdapterB_s1_1$whas ?
	       wbuffer_11_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_11_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_12_serverAdapterA_cnt
  assign wbuffer_12_serverAdapterA_cnt$D_IN =
	     EN_wbuf_12_portAClear ?
	       3'd0 :
	       wbuffer_12_serverAdapterA_cnt_604_PLUS_IF_wbuf_ETC___d4610 ;
  assign wbuffer_12_serverAdapterA_cnt$EN =
	     wbuffer_12_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_12_portA_response_get ||
	     EN_wbuf_12_portAClear ;

  // register wbuffer_12_serverAdapterA_s1
  assign wbuffer_12_serverAdapterA_s1$D_IN =
	     wbuffer_12_serverAdapterA_s1_1$whas ?
	       wbuffer_12_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_12_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_12_serverAdapterB_cnt
  assign wbuffer_12_serverAdapterB_cnt$D_IN =
	     EN_wbuf_12_portBClear ?
	       3'd0 :
	       wbuffer_12_serverAdapterB_cnt_656_PLUS_IF_wbuf_ETC___d4662 ;
  assign wbuffer_12_serverAdapterB_cnt$EN =
	     wbuffer_12_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_12_portB_response_get ||
	     EN_wbuf_12_portBClear ;

  // register wbuffer_12_serverAdapterB_s1
  assign wbuffer_12_serverAdapterB_s1$D_IN =
	     wbuffer_12_serverAdapterB_s1_1$whas ?
	       wbuffer_12_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_12_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_13_serverAdapterA_cnt
  assign wbuffer_13_serverAdapterA_cnt$D_IN =
	     EN_wbuf_13_portAClear ?
	       3'd0 :
	       wbuffer_13_serverAdapterA_cnt_708_PLUS_IF_wbuf_ETC___d4714 ;
  assign wbuffer_13_serverAdapterA_cnt$EN =
	     wbuffer_13_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_13_portA_response_get ||
	     EN_wbuf_13_portAClear ;

  // register wbuffer_13_serverAdapterA_s1
  assign wbuffer_13_serverAdapterA_s1$D_IN =
	     wbuffer_13_serverAdapterA_s1_1$whas ?
	       wbuffer_13_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_13_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_13_serverAdapterB_cnt
  assign wbuffer_13_serverAdapterB_cnt$D_IN =
	     EN_wbuf_13_portBClear ?
	       3'd0 :
	       wbuffer_13_serverAdapterB_cnt_760_PLUS_IF_wbuf_ETC___d4766 ;
  assign wbuffer_13_serverAdapterB_cnt$EN =
	     wbuffer_13_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_13_portB_response_get ||
	     EN_wbuf_13_portBClear ;

  // register wbuffer_13_serverAdapterB_s1
  assign wbuffer_13_serverAdapterB_s1$D_IN =
	     wbuffer_13_serverAdapterB_s1_1$whas ?
	       wbuffer_13_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_13_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_14_serverAdapterA_cnt
  assign wbuffer_14_serverAdapterA_cnt$D_IN =
	     EN_wbuf_14_portAClear ?
	       3'd0 :
	       wbuffer_14_serverAdapterA_cnt_812_PLUS_IF_wbuf_ETC___d4818 ;
  assign wbuffer_14_serverAdapterA_cnt$EN =
	     wbuffer_14_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_14_portA_response_get ||
	     EN_wbuf_14_portAClear ;

  // register wbuffer_14_serverAdapterA_s1
  assign wbuffer_14_serverAdapterA_s1$D_IN =
	     wbuffer_14_serverAdapterA_s1_1$whas ?
	       wbuffer_14_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_14_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_14_serverAdapterB_cnt
  assign wbuffer_14_serverAdapterB_cnt$D_IN =
	     EN_wbuf_14_portBClear ?
	       3'd0 :
	       wbuffer_14_serverAdapterB_cnt_864_PLUS_IF_wbuf_ETC___d4870 ;
  assign wbuffer_14_serverAdapterB_cnt$EN =
	     wbuffer_14_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_14_portB_response_get ||
	     EN_wbuf_14_portBClear ;

  // register wbuffer_14_serverAdapterB_s1
  assign wbuffer_14_serverAdapterB_s1$D_IN =
	     wbuffer_14_serverAdapterB_s1_1$whas ?
	       wbuffer_14_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_14_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_15_serverAdapterA_cnt
  assign wbuffer_15_serverAdapterA_cnt$D_IN =
	     EN_wbuf_15_portAClear ?
	       3'd0 :
	       wbuffer_15_serverAdapterA_cnt_916_PLUS_IF_wbuf_ETC___d4922 ;
  assign wbuffer_15_serverAdapterA_cnt$EN =
	     wbuffer_15_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_15_portA_response_get ||
	     EN_wbuf_15_portAClear ;

  // register wbuffer_15_serverAdapterA_s1
  assign wbuffer_15_serverAdapterA_s1$D_IN =
	     wbuffer_15_serverAdapterA_s1_1$whas ?
	       wbuffer_15_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_15_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_15_serverAdapterB_cnt
  assign wbuffer_15_serverAdapterB_cnt$D_IN =
	     EN_wbuf_15_portBClear ?
	       3'd0 :
	       wbuffer_15_serverAdapterB_cnt_968_PLUS_IF_wbuf_ETC___d4974 ;
  assign wbuffer_15_serverAdapterB_cnt$EN =
	     wbuffer_15_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_15_portB_response_get ||
	     EN_wbuf_15_portBClear ;

  // register wbuffer_15_serverAdapterB_s1
  assign wbuffer_15_serverAdapterB_s1$D_IN =
	     wbuffer_15_serverAdapterB_s1_1$whas ?
	       wbuffer_15_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_15_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_16_serverAdapterA_cnt
  assign wbuffer_16_serverAdapterA_cnt$D_IN =
	     EN_wbuf_16_portAClear ?
	       3'd0 :
	       wbuffer_16_serverAdapterA_cnt_020_PLUS_IF_wbuf_ETC___d5026 ;
  assign wbuffer_16_serverAdapterA_cnt$EN =
	     wbuffer_16_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_16_portA_response_get ||
	     EN_wbuf_16_portAClear ;

  // register wbuffer_16_serverAdapterA_s1
  assign wbuffer_16_serverAdapterA_s1$D_IN =
	     wbuffer_16_serverAdapterA_s1_1$whas ?
	       wbuffer_16_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_16_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_16_serverAdapterB_cnt
  assign wbuffer_16_serverAdapterB_cnt$D_IN =
	     EN_wbuf_16_portBClear ?
	       3'd0 :
	       wbuffer_16_serverAdapterB_cnt_072_PLUS_IF_wbuf_ETC___d5078 ;
  assign wbuffer_16_serverAdapterB_cnt$EN =
	     wbuffer_16_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_16_portB_response_get ||
	     EN_wbuf_16_portBClear ;

  // register wbuffer_16_serverAdapterB_s1
  assign wbuffer_16_serverAdapterB_s1$D_IN =
	     wbuffer_16_serverAdapterB_s1_1$whas ?
	       wbuffer_16_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_16_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_17_serverAdapterA_cnt
  assign wbuffer_17_serverAdapterA_cnt$D_IN =
	     EN_wbuf_17_portAClear ?
	       3'd0 :
	       wbuffer_17_serverAdapterA_cnt_124_PLUS_IF_wbuf_ETC___d5130 ;
  assign wbuffer_17_serverAdapterA_cnt$EN =
	     wbuffer_17_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_17_portA_response_get ||
	     EN_wbuf_17_portAClear ;

  // register wbuffer_17_serverAdapterA_s1
  assign wbuffer_17_serverAdapterA_s1$D_IN =
	     wbuffer_17_serverAdapterA_s1_1$whas ?
	       wbuffer_17_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_17_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_17_serverAdapterB_cnt
  assign wbuffer_17_serverAdapterB_cnt$D_IN =
	     EN_wbuf_17_portBClear ?
	       3'd0 :
	       wbuffer_17_serverAdapterB_cnt_176_PLUS_IF_wbuf_ETC___d5182 ;
  assign wbuffer_17_serverAdapterB_cnt$EN =
	     wbuffer_17_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_17_portB_response_get ||
	     EN_wbuf_17_portBClear ;

  // register wbuffer_17_serverAdapterB_s1
  assign wbuffer_17_serverAdapterB_s1$D_IN =
	     wbuffer_17_serverAdapterB_s1_1$whas ?
	       wbuffer_17_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_17_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_18_serverAdapterA_cnt
  assign wbuffer_18_serverAdapterA_cnt$D_IN =
	     EN_wbuf_18_portAClear ?
	       3'd0 :
	       wbuffer_18_serverAdapterA_cnt_228_PLUS_IF_wbuf_ETC___d5234 ;
  assign wbuffer_18_serverAdapterA_cnt$EN =
	     wbuffer_18_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_18_portA_response_get ||
	     EN_wbuf_18_portAClear ;

  // register wbuffer_18_serverAdapterA_s1
  assign wbuffer_18_serverAdapterA_s1$D_IN =
	     wbuffer_18_serverAdapterA_s1_1$whas ?
	       wbuffer_18_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_18_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_18_serverAdapterB_cnt
  assign wbuffer_18_serverAdapterB_cnt$D_IN =
	     EN_wbuf_18_portBClear ?
	       3'd0 :
	       wbuffer_18_serverAdapterB_cnt_280_PLUS_IF_wbuf_ETC___d5286 ;
  assign wbuffer_18_serverAdapterB_cnt$EN =
	     wbuffer_18_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_18_portB_response_get ||
	     EN_wbuf_18_portBClear ;

  // register wbuffer_18_serverAdapterB_s1
  assign wbuffer_18_serverAdapterB_s1$D_IN =
	     wbuffer_18_serverAdapterB_s1_1$whas ?
	       wbuffer_18_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_18_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_19_serverAdapterA_cnt
  assign wbuffer_19_serverAdapterA_cnt$D_IN =
	     EN_wbuf_19_portAClear ?
	       3'd0 :
	       wbuffer_19_serverAdapterA_cnt_332_PLUS_IF_wbuf_ETC___d5338 ;
  assign wbuffer_19_serverAdapterA_cnt$EN =
	     wbuffer_19_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_19_portA_response_get ||
	     EN_wbuf_19_portAClear ;

  // register wbuffer_19_serverAdapterA_s1
  assign wbuffer_19_serverAdapterA_s1$D_IN =
	     wbuffer_19_serverAdapterA_s1_1$whas ?
	       wbuffer_19_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_19_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_19_serverAdapterB_cnt
  assign wbuffer_19_serverAdapterB_cnt$D_IN =
	     EN_wbuf_19_portBClear ?
	       3'd0 :
	       wbuffer_19_serverAdapterB_cnt_384_PLUS_IF_wbuf_ETC___d5390 ;
  assign wbuffer_19_serverAdapterB_cnt$EN =
	     wbuffer_19_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_19_portB_response_get ||
	     EN_wbuf_19_portBClear ;

  // register wbuffer_19_serverAdapterB_s1
  assign wbuffer_19_serverAdapterB_s1$D_IN =
	     wbuffer_19_serverAdapterB_s1_1$whas ?
	       wbuffer_19_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_19_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_1_serverAdapterA_cnt
  assign wbuffer_1_serverAdapterA_cnt$D_IN =
	     EN_wbuf_1_portAClear ?
	       3'd0 :
	       wbuffer_1_serverAdapterA_cnt_460_PLUS_IF_wbuff_ETC___d3466 ;
  assign wbuffer_1_serverAdapterA_cnt$EN =
	     wbuffer_1_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_1_portA_response_get ||
	     EN_wbuf_1_portAClear ;

  // register wbuffer_1_serverAdapterA_s1
  assign wbuffer_1_serverAdapterA_s1$D_IN =
	     wbuffer_1_serverAdapterA_s1_1$whas ?
	       wbuffer_1_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_1_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_1_serverAdapterB_cnt
  assign wbuffer_1_serverAdapterB_cnt$D_IN =
	     EN_wbuf_1_portBClear ?
	       3'd0 :
	       wbuffer_1_serverAdapterB_cnt_512_PLUS_IF_wbuff_ETC___d3518 ;
  assign wbuffer_1_serverAdapterB_cnt$EN =
	     wbuffer_1_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_1_portB_response_get ||
	     EN_wbuf_1_portBClear ;

  // register wbuffer_1_serverAdapterB_s1
  assign wbuffer_1_serverAdapterB_s1$D_IN =
	     wbuffer_1_serverAdapterB_s1_1$whas ?
	       wbuffer_1_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_1_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_20_serverAdapterA_cnt
  assign wbuffer_20_serverAdapterA_cnt$D_IN =
	     EN_wbuf_20_portAClear ?
	       3'd0 :
	       wbuffer_20_serverAdapterA_cnt_436_PLUS_IF_wbuf_ETC___d5442 ;
  assign wbuffer_20_serverAdapterA_cnt$EN =
	     wbuffer_20_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_20_portA_response_get ||
	     EN_wbuf_20_portAClear ;

  // register wbuffer_20_serverAdapterA_s1
  assign wbuffer_20_serverAdapterA_s1$D_IN =
	     wbuffer_20_serverAdapterA_s1_1$whas ?
	       wbuffer_20_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_20_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_20_serverAdapterB_cnt
  assign wbuffer_20_serverAdapterB_cnt$D_IN =
	     EN_wbuf_20_portBClear ?
	       3'd0 :
	       wbuffer_20_serverAdapterB_cnt_488_PLUS_IF_wbuf_ETC___d5494 ;
  assign wbuffer_20_serverAdapterB_cnt$EN =
	     wbuffer_20_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_20_portB_response_get ||
	     EN_wbuf_20_portBClear ;

  // register wbuffer_20_serverAdapterB_s1
  assign wbuffer_20_serverAdapterB_s1$D_IN =
	     wbuffer_20_serverAdapterB_s1_1$whas ?
	       wbuffer_20_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_20_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_21_serverAdapterA_cnt
  assign wbuffer_21_serverAdapterA_cnt$D_IN =
	     EN_wbuf_21_portAClear ?
	       3'd0 :
	       wbuffer_21_serverAdapterA_cnt_540_PLUS_IF_wbuf_ETC___d5546 ;
  assign wbuffer_21_serverAdapterA_cnt$EN =
	     wbuffer_21_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_21_portA_response_get ||
	     EN_wbuf_21_portAClear ;

  // register wbuffer_21_serverAdapterA_s1
  assign wbuffer_21_serverAdapterA_s1$D_IN =
	     wbuffer_21_serverAdapterA_s1_1$whas ?
	       wbuffer_21_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_21_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_21_serverAdapterB_cnt
  assign wbuffer_21_serverAdapterB_cnt$D_IN =
	     EN_wbuf_21_portBClear ?
	       3'd0 :
	       wbuffer_21_serverAdapterB_cnt_592_PLUS_IF_wbuf_ETC___d5598 ;
  assign wbuffer_21_serverAdapterB_cnt$EN =
	     wbuffer_21_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_21_portB_response_get ||
	     EN_wbuf_21_portBClear ;

  // register wbuffer_21_serverAdapterB_s1
  assign wbuffer_21_serverAdapterB_s1$D_IN =
	     wbuffer_21_serverAdapterB_s1_1$whas ?
	       wbuffer_21_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_21_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_22_serverAdapterA_cnt
  assign wbuffer_22_serverAdapterA_cnt$D_IN =
	     EN_wbuf_22_portAClear ?
	       3'd0 :
	       wbuffer_22_serverAdapterA_cnt_644_PLUS_IF_wbuf_ETC___d5650 ;
  assign wbuffer_22_serverAdapterA_cnt$EN =
	     wbuffer_22_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_22_portA_response_get ||
	     EN_wbuf_22_portAClear ;

  // register wbuffer_22_serverAdapterA_s1
  assign wbuffer_22_serverAdapterA_s1$D_IN =
	     wbuffer_22_serverAdapterA_s1_1$whas ?
	       wbuffer_22_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_22_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_22_serverAdapterB_cnt
  assign wbuffer_22_serverAdapterB_cnt$D_IN =
	     EN_wbuf_22_portBClear ?
	       3'd0 :
	       wbuffer_22_serverAdapterB_cnt_696_PLUS_IF_wbuf_ETC___d5702 ;
  assign wbuffer_22_serverAdapterB_cnt$EN =
	     wbuffer_22_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_22_portB_response_get ||
	     EN_wbuf_22_portBClear ;

  // register wbuffer_22_serverAdapterB_s1
  assign wbuffer_22_serverAdapterB_s1$D_IN =
	     wbuffer_22_serverAdapterB_s1_1$whas ?
	       wbuffer_22_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_22_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_23_serverAdapterA_cnt
  assign wbuffer_23_serverAdapterA_cnt$D_IN =
	     EN_wbuf_23_portAClear ?
	       3'd0 :
	       wbuffer_23_serverAdapterA_cnt_748_PLUS_IF_wbuf_ETC___d5754 ;
  assign wbuffer_23_serverAdapterA_cnt$EN =
	     wbuffer_23_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_23_portA_response_get ||
	     EN_wbuf_23_portAClear ;

  // register wbuffer_23_serverAdapterA_s1
  assign wbuffer_23_serverAdapterA_s1$D_IN =
	     wbuffer_23_serverAdapterA_s1_1$whas ?
	       wbuffer_23_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_23_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_23_serverAdapterB_cnt
  assign wbuffer_23_serverAdapterB_cnt$D_IN =
	     EN_wbuf_23_portBClear ?
	       3'd0 :
	       wbuffer_23_serverAdapterB_cnt_800_PLUS_IF_wbuf_ETC___d5806 ;
  assign wbuffer_23_serverAdapterB_cnt$EN =
	     wbuffer_23_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_23_portB_response_get ||
	     EN_wbuf_23_portBClear ;

  // register wbuffer_23_serverAdapterB_s1
  assign wbuffer_23_serverAdapterB_s1$D_IN =
	     wbuffer_23_serverAdapterB_s1_1$whas ?
	       wbuffer_23_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_23_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_24_serverAdapterA_cnt
  assign wbuffer_24_serverAdapterA_cnt$D_IN =
	     EN_wbuf_24_portAClear ?
	       3'd0 :
	       wbuffer_24_serverAdapterA_cnt_852_PLUS_IF_wbuf_ETC___d5858 ;
  assign wbuffer_24_serverAdapterA_cnt$EN =
	     wbuffer_24_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_24_portA_response_get ||
	     EN_wbuf_24_portAClear ;

  // register wbuffer_24_serverAdapterA_s1
  assign wbuffer_24_serverAdapterA_s1$D_IN =
	     wbuffer_24_serverAdapterA_s1_1$whas ?
	       wbuffer_24_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_24_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_24_serverAdapterB_cnt
  assign wbuffer_24_serverAdapterB_cnt$D_IN =
	     EN_wbuf_24_portBClear ?
	       3'd0 :
	       wbuffer_24_serverAdapterB_cnt_904_PLUS_IF_wbuf_ETC___d5910 ;
  assign wbuffer_24_serverAdapterB_cnt$EN =
	     wbuffer_24_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_24_portB_response_get ||
	     EN_wbuf_24_portBClear ;

  // register wbuffer_24_serverAdapterB_s1
  assign wbuffer_24_serverAdapterB_s1$D_IN =
	     wbuffer_24_serverAdapterB_s1_1$whas ?
	       wbuffer_24_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_24_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_25_serverAdapterA_cnt
  assign wbuffer_25_serverAdapterA_cnt$D_IN =
	     EN_wbuf_25_portAClear ?
	       3'd0 :
	       wbuffer_25_serverAdapterA_cnt_956_PLUS_IF_wbuf_ETC___d5962 ;
  assign wbuffer_25_serverAdapterA_cnt$EN =
	     wbuffer_25_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_25_portA_response_get ||
	     EN_wbuf_25_portAClear ;

  // register wbuffer_25_serverAdapterA_s1
  assign wbuffer_25_serverAdapterA_s1$D_IN =
	     wbuffer_25_serverAdapterA_s1_1$whas ?
	       wbuffer_25_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_25_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_25_serverAdapterB_cnt
  assign wbuffer_25_serverAdapterB_cnt$D_IN =
	     EN_wbuf_25_portBClear ?
	       3'd0 :
	       wbuffer_25_serverAdapterB_cnt_008_PLUS_IF_wbuf_ETC___d6014 ;
  assign wbuffer_25_serverAdapterB_cnt$EN =
	     wbuffer_25_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_25_portB_response_get ||
	     EN_wbuf_25_portBClear ;

  // register wbuffer_25_serverAdapterB_s1
  assign wbuffer_25_serverAdapterB_s1$D_IN =
	     wbuffer_25_serverAdapterB_s1_1$whas ?
	       wbuffer_25_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_25_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_26_serverAdapterA_cnt
  assign wbuffer_26_serverAdapterA_cnt$D_IN =
	     EN_wbuf_26_portAClear ?
	       3'd0 :
	       wbuffer_26_serverAdapterA_cnt_060_PLUS_IF_wbuf_ETC___d6066 ;
  assign wbuffer_26_serverAdapterA_cnt$EN =
	     wbuffer_26_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_26_portA_response_get ||
	     EN_wbuf_26_portAClear ;

  // register wbuffer_26_serverAdapterA_s1
  assign wbuffer_26_serverAdapterA_s1$D_IN =
	     wbuffer_26_serverAdapterA_s1_1$whas ?
	       wbuffer_26_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_26_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_26_serverAdapterB_cnt
  assign wbuffer_26_serverAdapterB_cnt$D_IN =
	     EN_wbuf_26_portBClear ?
	       3'd0 :
	       wbuffer_26_serverAdapterB_cnt_112_PLUS_IF_wbuf_ETC___d6118 ;
  assign wbuffer_26_serverAdapterB_cnt$EN =
	     wbuffer_26_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_26_portB_response_get ||
	     EN_wbuf_26_portBClear ;

  // register wbuffer_26_serverAdapterB_s1
  assign wbuffer_26_serverAdapterB_s1$D_IN =
	     wbuffer_26_serverAdapterB_s1_1$whas ?
	       wbuffer_26_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_26_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_27_serverAdapterA_cnt
  assign wbuffer_27_serverAdapterA_cnt$D_IN =
	     EN_wbuf_27_portAClear ?
	       3'd0 :
	       wbuffer_27_serverAdapterA_cnt_164_PLUS_IF_wbuf_ETC___d6170 ;
  assign wbuffer_27_serverAdapterA_cnt$EN =
	     wbuffer_27_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_27_portA_response_get ||
	     EN_wbuf_27_portAClear ;

  // register wbuffer_27_serverAdapterA_s1
  assign wbuffer_27_serverAdapterA_s1$D_IN =
	     wbuffer_27_serverAdapterA_s1_1$whas ?
	       wbuffer_27_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_27_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_27_serverAdapterB_cnt
  assign wbuffer_27_serverAdapterB_cnt$D_IN =
	     EN_wbuf_27_portBClear ?
	       3'd0 :
	       wbuffer_27_serverAdapterB_cnt_216_PLUS_IF_wbuf_ETC___d6222 ;
  assign wbuffer_27_serverAdapterB_cnt$EN =
	     wbuffer_27_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_27_portB_response_get ||
	     EN_wbuf_27_portBClear ;

  // register wbuffer_27_serverAdapterB_s1
  assign wbuffer_27_serverAdapterB_s1$D_IN =
	     wbuffer_27_serverAdapterB_s1_1$whas ?
	       wbuffer_27_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_27_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_28_serverAdapterA_cnt
  assign wbuffer_28_serverAdapterA_cnt$D_IN =
	     EN_wbuf_28_portAClear ?
	       3'd0 :
	       wbuffer_28_serverAdapterA_cnt_268_PLUS_IF_wbuf_ETC___d6274 ;
  assign wbuffer_28_serverAdapterA_cnt$EN =
	     wbuffer_28_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_28_portA_response_get ||
	     EN_wbuf_28_portAClear ;

  // register wbuffer_28_serverAdapterA_s1
  assign wbuffer_28_serverAdapterA_s1$D_IN =
	     wbuffer_28_serverAdapterA_s1_1$whas ?
	       wbuffer_28_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_28_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_28_serverAdapterB_cnt
  assign wbuffer_28_serverAdapterB_cnt$D_IN =
	     EN_wbuf_28_portBClear ?
	       3'd0 :
	       wbuffer_28_serverAdapterB_cnt_320_PLUS_IF_wbuf_ETC___d6326 ;
  assign wbuffer_28_serverAdapterB_cnt$EN =
	     wbuffer_28_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_28_portB_response_get ||
	     EN_wbuf_28_portBClear ;

  // register wbuffer_28_serverAdapterB_s1
  assign wbuffer_28_serverAdapterB_s1$D_IN =
	     wbuffer_28_serverAdapterB_s1_1$whas ?
	       wbuffer_28_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_28_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_29_serverAdapterA_cnt
  assign wbuffer_29_serverAdapterA_cnt$D_IN =
	     EN_wbuf_29_portAClear ?
	       3'd0 :
	       wbuffer_29_serverAdapterA_cnt_372_PLUS_IF_wbuf_ETC___d6378 ;
  assign wbuffer_29_serverAdapterA_cnt$EN =
	     wbuffer_29_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_29_portA_response_get ||
	     EN_wbuf_29_portAClear ;

  // register wbuffer_29_serverAdapterA_s1
  assign wbuffer_29_serverAdapterA_s1$D_IN =
	     wbuffer_29_serverAdapterA_s1_1$whas ?
	       wbuffer_29_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_29_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_29_serverAdapterB_cnt
  assign wbuffer_29_serverAdapterB_cnt$D_IN =
	     EN_wbuf_29_portBClear ?
	       3'd0 :
	       wbuffer_29_serverAdapterB_cnt_424_PLUS_IF_wbuf_ETC___d6430 ;
  assign wbuffer_29_serverAdapterB_cnt$EN =
	     wbuffer_29_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_29_portB_response_get ||
	     EN_wbuf_29_portBClear ;

  // register wbuffer_29_serverAdapterB_s1
  assign wbuffer_29_serverAdapterB_s1$D_IN =
	     wbuffer_29_serverAdapterB_s1_1$whas ?
	       wbuffer_29_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_29_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_2_serverAdapterA_cnt
  assign wbuffer_2_serverAdapterA_cnt$D_IN =
	     EN_wbuf_2_portAClear ?
	       3'd0 :
	       wbuffer_2_serverAdapterA_cnt_564_PLUS_IF_wbuff_ETC___d3570 ;
  assign wbuffer_2_serverAdapterA_cnt$EN =
	     wbuffer_2_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_2_portA_response_get ||
	     EN_wbuf_2_portAClear ;

  // register wbuffer_2_serverAdapterA_s1
  assign wbuffer_2_serverAdapterA_s1$D_IN =
	     wbuffer_2_serverAdapterA_s1_1$whas ?
	       wbuffer_2_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_2_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_2_serverAdapterB_cnt
  assign wbuffer_2_serverAdapterB_cnt$D_IN =
	     EN_wbuf_2_portBClear ?
	       3'd0 :
	       wbuffer_2_serverAdapterB_cnt_616_PLUS_IF_wbuff_ETC___d3622 ;
  assign wbuffer_2_serverAdapterB_cnt$EN =
	     wbuffer_2_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_2_portB_response_get ||
	     EN_wbuf_2_portBClear ;

  // register wbuffer_2_serverAdapterB_s1
  assign wbuffer_2_serverAdapterB_s1$D_IN =
	     wbuffer_2_serverAdapterB_s1_1$whas ?
	       wbuffer_2_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_2_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_30_serverAdapterA_cnt
  assign wbuffer_30_serverAdapterA_cnt$D_IN =
	     EN_wbuf_30_portAClear ?
	       3'd0 :
	       wbuffer_30_serverAdapterA_cnt_476_PLUS_IF_wbuf_ETC___d6482 ;
  assign wbuffer_30_serverAdapterA_cnt$EN =
	     wbuffer_30_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_30_portA_response_get ||
	     EN_wbuf_30_portAClear ;

  // register wbuffer_30_serverAdapterA_s1
  assign wbuffer_30_serverAdapterA_s1$D_IN =
	     wbuffer_30_serverAdapterA_s1_1$whas ?
	       wbuffer_30_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_30_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_30_serverAdapterB_cnt
  assign wbuffer_30_serverAdapterB_cnt$D_IN =
	     EN_wbuf_30_portBClear ?
	       3'd0 :
	       wbuffer_30_serverAdapterB_cnt_528_PLUS_IF_wbuf_ETC___d6534 ;
  assign wbuffer_30_serverAdapterB_cnt$EN =
	     wbuffer_30_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_30_portB_response_get ||
	     EN_wbuf_30_portBClear ;

  // register wbuffer_30_serverAdapterB_s1
  assign wbuffer_30_serverAdapterB_s1$D_IN =
	     wbuffer_30_serverAdapterB_s1_1$whas ?
	       wbuffer_30_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_30_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_31_serverAdapterA_cnt
  assign wbuffer_31_serverAdapterA_cnt$D_IN =
	     EN_wbuf_31_portAClear ?
	       3'd0 :
	       wbuffer_31_serverAdapterA_cnt_580_PLUS_IF_wbuf_ETC___d6586 ;
  assign wbuffer_31_serverAdapterA_cnt$EN =
	     wbuffer_31_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_31_portA_response_get ||
	     EN_wbuf_31_portAClear ;

  // register wbuffer_31_serverAdapterA_s1
  assign wbuffer_31_serverAdapterA_s1$D_IN =
	     wbuffer_31_serverAdapterA_s1_1$whas ?
	       wbuffer_31_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_31_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_31_serverAdapterB_cnt
  assign wbuffer_31_serverAdapterB_cnt$D_IN =
	     EN_wbuf_31_portBClear ?
	       3'd0 :
	       wbuffer_31_serverAdapterB_cnt_632_PLUS_IF_wbuf_ETC___d6638 ;
  assign wbuffer_31_serverAdapterB_cnt$EN =
	     wbuffer_31_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_31_portB_response_get ||
	     EN_wbuf_31_portBClear ;

  // register wbuffer_31_serverAdapterB_s1
  assign wbuffer_31_serverAdapterB_s1$D_IN =
	     wbuffer_31_serverAdapterB_s1_1$whas ?
	       wbuffer_31_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_31_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_3_serverAdapterA_cnt
  assign wbuffer_3_serverAdapterA_cnt$D_IN =
	     EN_wbuf_3_portAClear ?
	       3'd0 :
	       wbuffer_3_serverAdapterA_cnt_668_PLUS_IF_wbuff_ETC___d3674 ;
  assign wbuffer_3_serverAdapterA_cnt$EN =
	     wbuffer_3_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_3_portA_response_get ||
	     EN_wbuf_3_portAClear ;

  // register wbuffer_3_serverAdapterA_s1
  assign wbuffer_3_serverAdapterA_s1$D_IN =
	     wbuffer_3_serverAdapterA_s1_1$whas ?
	       wbuffer_3_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_3_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_3_serverAdapterB_cnt
  assign wbuffer_3_serverAdapterB_cnt$D_IN =
	     EN_wbuf_3_portBClear ?
	       3'd0 :
	       wbuffer_3_serverAdapterB_cnt_720_PLUS_IF_wbuff_ETC___d3726 ;
  assign wbuffer_3_serverAdapterB_cnt$EN =
	     wbuffer_3_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_3_portB_response_get ||
	     EN_wbuf_3_portBClear ;

  // register wbuffer_3_serverAdapterB_s1
  assign wbuffer_3_serverAdapterB_s1$D_IN =
	     wbuffer_3_serverAdapterB_s1_1$whas ?
	       wbuffer_3_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_3_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_4_serverAdapterA_cnt
  assign wbuffer_4_serverAdapterA_cnt$D_IN =
	     EN_wbuf_4_portAClear ?
	       3'd0 :
	       wbuffer_4_serverAdapterA_cnt_772_PLUS_IF_wbuff_ETC___d3778 ;
  assign wbuffer_4_serverAdapterA_cnt$EN =
	     wbuffer_4_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_4_portA_response_get ||
	     EN_wbuf_4_portAClear ;

  // register wbuffer_4_serverAdapterA_s1
  assign wbuffer_4_serverAdapterA_s1$D_IN =
	     wbuffer_4_serverAdapterA_s1_1$whas ?
	       wbuffer_4_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_4_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_4_serverAdapterB_cnt
  assign wbuffer_4_serverAdapterB_cnt$D_IN =
	     EN_wbuf_4_portBClear ?
	       3'd0 :
	       wbuffer_4_serverAdapterB_cnt_824_PLUS_IF_wbuff_ETC___d3830 ;
  assign wbuffer_4_serverAdapterB_cnt$EN =
	     wbuffer_4_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_4_portB_response_get ||
	     EN_wbuf_4_portBClear ;

  // register wbuffer_4_serverAdapterB_s1
  assign wbuffer_4_serverAdapterB_s1$D_IN =
	     wbuffer_4_serverAdapterB_s1_1$whas ?
	       wbuffer_4_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_4_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_5_serverAdapterA_cnt
  assign wbuffer_5_serverAdapterA_cnt$D_IN =
	     EN_wbuf_5_portAClear ?
	       3'd0 :
	       wbuffer_5_serverAdapterA_cnt_876_PLUS_IF_wbuff_ETC___d3882 ;
  assign wbuffer_5_serverAdapterA_cnt$EN =
	     wbuffer_5_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_5_portA_response_get ||
	     EN_wbuf_5_portAClear ;

  // register wbuffer_5_serverAdapterA_s1
  assign wbuffer_5_serverAdapterA_s1$D_IN =
	     wbuffer_5_serverAdapterA_s1_1$whas ?
	       wbuffer_5_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_5_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_5_serverAdapterB_cnt
  assign wbuffer_5_serverAdapterB_cnt$D_IN =
	     EN_wbuf_5_portBClear ?
	       3'd0 :
	       wbuffer_5_serverAdapterB_cnt_928_PLUS_IF_wbuff_ETC___d3934 ;
  assign wbuffer_5_serverAdapterB_cnt$EN =
	     wbuffer_5_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_5_portB_response_get ||
	     EN_wbuf_5_portBClear ;

  // register wbuffer_5_serverAdapterB_s1
  assign wbuffer_5_serverAdapterB_s1$D_IN =
	     wbuffer_5_serverAdapterB_s1_1$whas ?
	       wbuffer_5_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_5_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_6_serverAdapterA_cnt
  assign wbuffer_6_serverAdapterA_cnt$D_IN =
	     EN_wbuf_6_portAClear ?
	       3'd0 :
	       wbuffer_6_serverAdapterA_cnt_980_PLUS_IF_wbuff_ETC___d3986 ;
  assign wbuffer_6_serverAdapterA_cnt$EN =
	     wbuffer_6_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_6_portA_response_get ||
	     EN_wbuf_6_portAClear ;

  // register wbuffer_6_serverAdapterA_s1
  assign wbuffer_6_serverAdapterA_s1$D_IN =
	     wbuffer_6_serverAdapterA_s1_1$whas ?
	       wbuffer_6_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_6_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_6_serverAdapterB_cnt
  assign wbuffer_6_serverAdapterB_cnt$D_IN =
	     EN_wbuf_6_portBClear ?
	       3'd0 :
	       wbuffer_6_serverAdapterB_cnt_032_PLUS_IF_wbuff_ETC___d4038 ;
  assign wbuffer_6_serverAdapterB_cnt$EN =
	     wbuffer_6_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_6_portB_response_get ||
	     EN_wbuf_6_portBClear ;

  // register wbuffer_6_serverAdapterB_s1
  assign wbuffer_6_serverAdapterB_s1$D_IN =
	     wbuffer_6_serverAdapterB_s1_1$whas ?
	       wbuffer_6_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_6_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_7_serverAdapterA_cnt
  assign wbuffer_7_serverAdapterA_cnt$D_IN =
	     EN_wbuf_7_portAClear ?
	       3'd0 :
	       wbuffer_7_serverAdapterA_cnt_084_PLUS_IF_wbuff_ETC___d4090 ;
  assign wbuffer_7_serverAdapterA_cnt$EN =
	     wbuffer_7_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_7_portA_response_get ||
	     EN_wbuf_7_portAClear ;

  // register wbuffer_7_serverAdapterA_s1
  assign wbuffer_7_serverAdapterA_s1$D_IN =
	     wbuffer_7_serverAdapterA_s1_1$whas ?
	       wbuffer_7_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_7_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_7_serverAdapterB_cnt
  assign wbuffer_7_serverAdapterB_cnt$D_IN =
	     EN_wbuf_7_portBClear ?
	       3'd0 :
	       wbuffer_7_serverAdapterB_cnt_136_PLUS_IF_wbuff_ETC___d4142 ;
  assign wbuffer_7_serverAdapterB_cnt$EN =
	     wbuffer_7_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_7_portB_response_get ||
	     EN_wbuf_7_portBClear ;

  // register wbuffer_7_serverAdapterB_s1
  assign wbuffer_7_serverAdapterB_s1$D_IN =
	     wbuffer_7_serverAdapterB_s1_1$whas ?
	       wbuffer_7_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_7_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_8_serverAdapterA_cnt
  assign wbuffer_8_serverAdapterA_cnt$D_IN =
	     EN_wbuf_8_portAClear ?
	       3'd0 :
	       wbuffer_8_serverAdapterA_cnt_188_PLUS_IF_wbuff_ETC___d4194 ;
  assign wbuffer_8_serverAdapterA_cnt$EN =
	     wbuffer_8_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_8_portA_response_get ||
	     EN_wbuf_8_portAClear ;

  // register wbuffer_8_serverAdapterA_s1
  assign wbuffer_8_serverAdapterA_s1$D_IN =
	     wbuffer_8_serverAdapterA_s1_1$whas ?
	       wbuffer_8_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_8_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_8_serverAdapterB_cnt
  assign wbuffer_8_serverAdapterB_cnt$D_IN =
	     EN_wbuf_8_portBClear ?
	       3'd0 :
	       wbuffer_8_serverAdapterB_cnt_240_PLUS_IF_wbuff_ETC___d4246 ;
  assign wbuffer_8_serverAdapterB_cnt$EN =
	     wbuffer_8_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_8_portB_response_get ||
	     EN_wbuf_8_portBClear ;

  // register wbuffer_8_serverAdapterB_s1
  assign wbuffer_8_serverAdapterB_s1$D_IN =
	     wbuffer_8_serverAdapterB_s1_1$whas ?
	       wbuffer_8_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_8_serverAdapterB_s1$EN = 1'd1 ;

  // register wbuffer_9_serverAdapterA_cnt
  assign wbuffer_9_serverAdapterA_cnt$D_IN =
	     EN_wbuf_9_portAClear ?
	       3'd0 :
	       wbuffer_9_serverAdapterA_cnt_292_PLUS_IF_wbuff_ETC___d4298 ;
  assign wbuffer_9_serverAdapterA_cnt$EN =
	     wbuffer_9_serverAdapterA_cnt_1$whas ||
	     EN_wbuf_9_portA_response_get ||
	     EN_wbuf_9_portAClear ;

  // register wbuffer_9_serverAdapterA_s1
  assign wbuffer_9_serverAdapterA_s1$D_IN =
	     wbuffer_9_serverAdapterA_s1_1$whas ?
	       wbuffer_9_serverAdapterA_s1_1$wget :
	       2'd0 ;
  assign wbuffer_9_serverAdapterA_s1$EN = 1'd1 ;

  // register wbuffer_9_serverAdapterB_cnt
  assign wbuffer_9_serverAdapterB_cnt$D_IN =
	     EN_wbuf_9_portBClear ?
	       3'd0 :
	       wbuffer_9_serverAdapterB_cnt_344_PLUS_IF_wbuff_ETC___d4350 ;
  assign wbuffer_9_serverAdapterB_cnt$EN =
	     wbuffer_9_serverAdapterB_cnt_1$whas ||
	     EN_wbuf_9_portB_response_get ||
	     EN_wbuf_9_portBClear ;

  // register wbuffer_9_serverAdapterB_s1
  assign wbuffer_9_serverAdapterB_s1$D_IN =
	     wbuffer_9_serverAdapterB_s1_1$whas ?
	       wbuffer_9_serverAdapterB_s1_1$wget :
	       2'd0 ;
  assign wbuffer_9_serverAdapterB_s1$EN = 1'd1 ;

  // submodule ibuffer_0_memory
  assign ibuffer_0_memory$ADDRA = ibuf_0_portA_request_put[15:8] ;
  assign ibuffer_0_memory$ADDRB = ibuf_0_portB_request_put[15:8] ;
  assign ibuffer_0_memory$DIA = ibuf_0_portA_request_put[7:0] ;
  assign ibuffer_0_memory$DIB = ibuf_0_portB_request_put[7:0] ;
  assign ibuffer_0_memory$WEA = ibuf_0_portA_request_put[17] ;
  assign ibuffer_0_memory$WEB = ibuf_0_portB_request_put[17] ;
  assign ibuffer_0_memory$ENA = EN_ibuf_0_portA_request_put ;
  assign ibuffer_0_memory$ENB = EN_ibuf_0_portB_request_put ;

  // submodule ibuffer_0_serverAdapterA_outDataCore
  assign ibuffer_0_serverAdapterA_outDataCore$D_IN = ibuffer_0_memory$DOA ;
  assign ibuffer_0_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_0_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_0_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_0_portA_response_get &&
	     ibuffer_0_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_0_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_0_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_0_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_0_portA_response_get &&
	     !ibuffer_0_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_0_serverAdapterA_outDataCore$CLR = EN_ibuf_0_portAClear ;

  // submodule ibuffer_0_serverAdapterB_outDataCore
  assign ibuffer_0_serverAdapterB_outDataCore$D_IN = ibuffer_0_memory$DOB ;
  assign ibuffer_0_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_0_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_0_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_0_portB_response_get &&
	     ibuffer_0_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_0_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_0_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_0_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_0_portB_response_get &&
	     !ibuffer_0_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_0_serverAdapterB_outDataCore$CLR = EN_ibuf_0_portBClear ;

  // submodule ibuffer_10_memory
  assign ibuffer_10_memory$ADDRA = ibuf_10_portA_request_put[15:8] ;
  assign ibuffer_10_memory$ADDRB = ibuf_10_portB_request_put[15:8] ;
  assign ibuffer_10_memory$DIA = ibuf_10_portA_request_put[7:0] ;
  assign ibuffer_10_memory$DIB = ibuf_10_portB_request_put[7:0] ;
  assign ibuffer_10_memory$WEA = ibuf_10_portA_request_put[17] ;
  assign ibuffer_10_memory$WEB = ibuf_10_portB_request_put[17] ;
  assign ibuffer_10_memory$ENA = EN_ibuf_10_portA_request_put ;
  assign ibuffer_10_memory$ENB = EN_ibuf_10_portB_request_put ;

  // submodule ibuffer_10_serverAdapterA_outDataCore
  assign ibuffer_10_serverAdapterA_outDataCore$D_IN = ibuffer_10_memory$DOA ;
  assign ibuffer_10_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_10_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_10_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_10_portA_response_get &&
	     ibuffer_10_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_10_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_10_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_10_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_10_portA_response_get &&
	     !ibuffer_10_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_10_serverAdapterA_outDataCore$CLR = EN_ibuf_10_portAClear ;

  // submodule ibuffer_10_serverAdapterB_outDataCore
  assign ibuffer_10_serverAdapterB_outDataCore$D_IN = ibuffer_10_memory$DOB ;
  assign ibuffer_10_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_10_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_10_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_10_portB_response_get &&
	     ibuffer_10_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_10_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_10_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_10_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_10_portB_response_get &&
	     !ibuffer_10_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_10_serverAdapterB_outDataCore$CLR = EN_ibuf_10_portBClear ;

  // submodule ibuffer_11_memory
  assign ibuffer_11_memory$ADDRA = ibuf_11_portA_request_put[15:8] ;
  assign ibuffer_11_memory$ADDRB = ibuf_11_portB_request_put[15:8] ;
  assign ibuffer_11_memory$DIA = ibuf_11_portA_request_put[7:0] ;
  assign ibuffer_11_memory$DIB = ibuf_11_portB_request_put[7:0] ;
  assign ibuffer_11_memory$WEA = ibuf_11_portA_request_put[17] ;
  assign ibuffer_11_memory$WEB = ibuf_11_portB_request_put[17] ;
  assign ibuffer_11_memory$ENA = EN_ibuf_11_portA_request_put ;
  assign ibuffer_11_memory$ENB = EN_ibuf_11_portB_request_put ;

  // submodule ibuffer_11_serverAdapterA_outDataCore
  assign ibuffer_11_serverAdapterA_outDataCore$D_IN = ibuffer_11_memory$DOA ;
  assign ibuffer_11_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_11_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_11_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_11_portA_response_get &&
	     ibuffer_11_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_11_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_11_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_11_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_11_portA_response_get &&
	     !ibuffer_11_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_11_serverAdapterA_outDataCore$CLR = EN_ibuf_11_portAClear ;

  // submodule ibuffer_11_serverAdapterB_outDataCore
  assign ibuffer_11_serverAdapterB_outDataCore$D_IN = ibuffer_11_memory$DOB ;
  assign ibuffer_11_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_11_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_11_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_11_portB_response_get &&
	     ibuffer_11_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_11_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_11_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_11_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_11_portB_response_get &&
	     !ibuffer_11_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_11_serverAdapterB_outDataCore$CLR = EN_ibuf_11_portBClear ;

  // submodule ibuffer_12_memory
  assign ibuffer_12_memory$ADDRA = ibuf_12_portA_request_put[15:8] ;
  assign ibuffer_12_memory$ADDRB = ibuf_12_portB_request_put[15:8] ;
  assign ibuffer_12_memory$DIA = ibuf_12_portA_request_put[7:0] ;
  assign ibuffer_12_memory$DIB = ibuf_12_portB_request_put[7:0] ;
  assign ibuffer_12_memory$WEA = ibuf_12_portA_request_put[17] ;
  assign ibuffer_12_memory$WEB = ibuf_12_portB_request_put[17] ;
  assign ibuffer_12_memory$ENA = EN_ibuf_12_portA_request_put ;
  assign ibuffer_12_memory$ENB = EN_ibuf_12_portB_request_put ;

  // submodule ibuffer_12_serverAdapterA_outDataCore
  assign ibuffer_12_serverAdapterA_outDataCore$D_IN = ibuffer_12_memory$DOA ;
  assign ibuffer_12_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_12_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_12_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_12_portA_response_get &&
	     ibuffer_12_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_12_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_12_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_12_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_12_portA_response_get &&
	     !ibuffer_12_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_12_serverAdapterA_outDataCore$CLR = EN_ibuf_12_portAClear ;

  // submodule ibuffer_12_serverAdapterB_outDataCore
  assign ibuffer_12_serverAdapterB_outDataCore$D_IN = ibuffer_12_memory$DOB ;
  assign ibuffer_12_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_12_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_12_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_12_portB_response_get &&
	     ibuffer_12_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_12_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_12_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_12_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_12_portB_response_get &&
	     !ibuffer_12_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_12_serverAdapterB_outDataCore$CLR = EN_ibuf_12_portBClear ;

  // submodule ibuffer_13_memory
  assign ibuffer_13_memory$ADDRA = ibuf_13_portA_request_put[15:8] ;
  assign ibuffer_13_memory$ADDRB = ibuf_13_portB_request_put[15:8] ;
  assign ibuffer_13_memory$DIA = ibuf_13_portA_request_put[7:0] ;
  assign ibuffer_13_memory$DIB = ibuf_13_portB_request_put[7:0] ;
  assign ibuffer_13_memory$WEA = ibuf_13_portA_request_put[17] ;
  assign ibuffer_13_memory$WEB = ibuf_13_portB_request_put[17] ;
  assign ibuffer_13_memory$ENA = EN_ibuf_13_portA_request_put ;
  assign ibuffer_13_memory$ENB = EN_ibuf_13_portB_request_put ;

  // submodule ibuffer_13_serverAdapterA_outDataCore
  assign ibuffer_13_serverAdapterA_outDataCore$D_IN = ibuffer_13_memory$DOA ;
  assign ibuffer_13_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_13_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_13_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_13_portA_response_get &&
	     ibuffer_13_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_13_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_13_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_13_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_13_portA_response_get &&
	     !ibuffer_13_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_13_serverAdapterA_outDataCore$CLR = EN_ibuf_13_portAClear ;

  // submodule ibuffer_13_serverAdapterB_outDataCore
  assign ibuffer_13_serverAdapterB_outDataCore$D_IN = ibuffer_13_memory$DOB ;
  assign ibuffer_13_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_13_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_13_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_13_portB_response_get &&
	     ibuffer_13_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_13_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_13_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_13_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_13_portB_response_get &&
	     !ibuffer_13_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_13_serverAdapterB_outDataCore$CLR = EN_ibuf_13_portBClear ;

  // submodule ibuffer_14_memory
  assign ibuffer_14_memory$ADDRA = ibuf_14_portA_request_put[15:8] ;
  assign ibuffer_14_memory$ADDRB = ibuf_14_portB_request_put[15:8] ;
  assign ibuffer_14_memory$DIA = ibuf_14_portA_request_put[7:0] ;
  assign ibuffer_14_memory$DIB = ibuf_14_portB_request_put[7:0] ;
  assign ibuffer_14_memory$WEA = ibuf_14_portA_request_put[17] ;
  assign ibuffer_14_memory$WEB = ibuf_14_portB_request_put[17] ;
  assign ibuffer_14_memory$ENA = EN_ibuf_14_portA_request_put ;
  assign ibuffer_14_memory$ENB = EN_ibuf_14_portB_request_put ;

  // submodule ibuffer_14_serverAdapterA_outDataCore
  assign ibuffer_14_serverAdapterA_outDataCore$D_IN = ibuffer_14_memory$DOA ;
  assign ibuffer_14_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_14_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_14_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_14_portA_response_get &&
	     ibuffer_14_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_14_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_14_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_14_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_14_portA_response_get &&
	     !ibuffer_14_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_14_serverAdapterA_outDataCore$CLR = EN_ibuf_14_portAClear ;

  // submodule ibuffer_14_serverAdapterB_outDataCore
  assign ibuffer_14_serverAdapterB_outDataCore$D_IN = ibuffer_14_memory$DOB ;
  assign ibuffer_14_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_14_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_14_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_14_portB_response_get &&
	     ibuffer_14_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_14_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_14_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_14_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_14_portB_response_get &&
	     !ibuffer_14_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_14_serverAdapterB_outDataCore$CLR = EN_ibuf_14_portBClear ;

  // submodule ibuffer_15_memory
  assign ibuffer_15_memory$ADDRA = ibuf_15_portA_request_put[15:8] ;
  assign ibuffer_15_memory$ADDRB = ibuf_15_portB_request_put[15:8] ;
  assign ibuffer_15_memory$DIA = ibuf_15_portA_request_put[7:0] ;
  assign ibuffer_15_memory$DIB = ibuf_15_portB_request_put[7:0] ;
  assign ibuffer_15_memory$WEA = ibuf_15_portA_request_put[17] ;
  assign ibuffer_15_memory$WEB = ibuf_15_portB_request_put[17] ;
  assign ibuffer_15_memory$ENA = EN_ibuf_15_portA_request_put ;
  assign ibuffer_15_memory$ENB = EN_ibuf_15_portB_request_put ;

  // submodule ibuffer_15_serverAdapterA_outDataCore
  assign ibuffer_15_serverAdapterA_outDataCore$D_IN = ibuffer_15_memory$DOA ;
  assign ibuffer_15_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_15_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_15_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_15_portA_response_get &&
	     ibuffer_15_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_15_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_15_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_15_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_15_portA_response_get &&
	     !ibuffer_15_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_15_serverAdapterA_outDataCore$CLR = EN_ibuf_15_portAClear ;

  // submodule ibuffer_15_serverAdapterB_outDataCore
  assign ibuffer_15_serverAdapterB_outDataCore$D_IN = ibuffer_15_memory$DOB ;
  assign ibuffer_15_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_15_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_15_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_15_portB_response_get &&
	     ibuffer_15_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_15_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_15_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_15_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_15_portB_response_get &&
	     !ibuffer_15_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_15_serverAdapterB_outDataCore$CLR = EN_ibuf_15_portBClear ;

  // submodule ibuffer_16_memory
  assign ibuffer_16_memory$ADDRA = ibuf_16_portA_request_put[15:8] ;
  assign ibuffer_16_memory$ADDRB = ibuf_16_portB_request_put[15:8] ;
  assign ibuffer_16_memory$DIA = ibuf_16_portA_request_put[7:0] ;
  assign ibuffer_16_memory$DIB = ibuf_16_portB_request_put[7:0] ;
  assign ibuffer_16_memory$WEA = ibuf_16_portA_request_put[17] ;
  assign ibuffer_16_memory$WEB = ibuf_16_portB_request_put[17] ;
  assign ibuffer_16_memory$ENA = EN_ibuf_16_portA_request_put ;
  assign ibuffer_16_memory$ENB = EN_ibuf_16_portB_request_put ;

  // submodule ibuffer_16_serverAdapterA_outDataCore
  assign ibuffer_16_serverAdapterA_outDataCore$D_IN = ibuffer_16_memory$DOA ;
  assign ibuffer_16_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_16_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_16_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_16_portA_response_get &&
	     ibuffer_16_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_16_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_16_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_16_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_16_portA_response_get &&
	     !ibuffer_16_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_16_serverAdapterA_outDataCore$CLR = EN_ibuf_16_portAClear ;

  // submodule ibuffer_16_serverAdapterB_outDataCore
  assign ibuffer_16_serverAdapterB_outDataCore$D_IN = ibuffer_16_memory$DOB ;
  assign ibuffer_16_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_16_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_16_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_16_portB_response_get &&
	     ibuffer_16_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_16_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_16_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_16_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_16_portB_response_get &&
	     !ibuffer_16_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_16_serverAdapterB_outDataCore$CLR = EN_ibuf_16_portBClear ;

  // submodule ibuffer_17_memory
  assign ibuffer_17_memory$ADDRA = ibuf_17_portA_request_put[15:8] ;
  assign ibuffer_17_memory$ADDRB = ibuf_17_portB_request_put[15:8] ;
  assign ibuffer_17_memory$DIA = ibuf_17_portA_request_put[7:0] ;
  assign ibuffer_17_memory$DIB = ibuf_17_portB_request_put[7:0] ;
  assign ibuffer_17_memory$WEA = ibuf_17_portA_request_put[17] ;
  assign ibuffer_17_memory$WEB = ibuf_17_portB_request_put[17] ;
  assign ibuffer_17_memory$ENA = EN_ibuf_17_portA_request_put ;
  assign ibuffer_17_memory$ENB = EN_ibuf_17_portB_request_put ;

  // submodule ibuffer_17_serverAdapterA_outDataCore
  assign ibuffer_17_serverAdapterA_outDataCore$D_IN = ibuffer_17_memory$DOA ;
  assign ibuffer_17_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_17_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_17_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_17_portA_response_get &&
	     ibuffer_17_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_17_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_17_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_17_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_17_portA_response_get &&
	     !ibuffer_17_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_17_serverAdapterA_outDataCore$CLR = EN_ibuf_17_portAClear ;

  // submodule ibuffer_17_serverAdapterB_outDataCore
  assign ibuffer_17_serverAdapterB_outDataCore$D_IN = ibuffer_17_memory$DOB ;
  assign ibuffer_17_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_17_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_17_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_17_portB_response_get &&
	     ibuffer_17_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_17_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_17_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_17_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_17_portB_response_get &&
	     !ibuffer_17_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_17_serverAdapterB_outDataCore$CLR = EN_ibuf_17_portBClear ;

  // submodule ibuffer_18_memory
  assign ibuffer_18_memory$ADDRA = ibuf_18_portA_request_put[15:8] ;
  assign ibuffer_18_memory$ADDRB = ibuf_18_portB_request_put[15:8] ;
  assign ibuffer_18_memory$DIA = ibuf_18_portA_request_put[7:0] ;
  assign ibuffer_18_memory$DIB = ibuf_18_portB_request_put[7:0] ;
  assign ibuffer_18_memory$WEA = ibuf_18_portA_request_put[17] ;
  assign ibuffer_18_memory$WEB = ibuf_18_portB_request_put[17] ;
  assign ibuffer_18_memory$ENA = EN_ibuf_18_portA_request_put ;
  assign ibuffer_18_memory$ENB = EN_ibuf_18_portB_request_put ;

  // submodule ibuffer_18_serverAdapterA_outDataCore
  assign ibuffer_18_serverAdapterA_outDataCore$D_IN = ibuffer_18_memory$DOA ;
  assign ibuffer_18_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_18_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_18_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_18_portA_response_get &&
	     ibuffer_18_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_18_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_18_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_18_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_18_portA_response_get &&
	     !ibuffer_18_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_18_serverAdapterA_outDataCore$CLR = EN_ibuf_18_portAClear ;

  // submodule ibuffer_18_serverAdapterB_outDataCore
  assign ibuffer_18_serverAdapterB_outDataCore$D_IN = ibuffer_18_memory$DOB ;
  assign ibuffer_18_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_18_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_18_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_18_portB_response_get &&
	     ibuffer_18_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_18_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_18_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_18_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_18_portB_response_get &&
	     !ibuffer_18_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_18_serverAdapterB_outDataCore$CLR = EN_ibuf_18_portBClear ;

  // submodule ibuffer_19_memory
  assign ibuffer_19_memory$ADDRA = ibuf_19_portA_request_put[15:8] ;
  assign ibuffer_19_memory$ADDRB = ibuf_19_portB_request_put[15:8] ;
  assign ibuffer_19_memory$DIA = ibuf_19_portA_request_put[7:0] ;
  assign ibuffer_19_memory$DIB = ibuf_19_portB_request_put[7:0] ;
  assign ibuffer_19_memory$WEA = ibuf_19_portA_request_put[17] ;
  assign ibuffer_19_memory$WEB = ibuf_19_portB_request_put[17] ;
  assign ibuffer_19_memory$ENA = EN_ibuf_19_portA_request_put ;
  assign ibuffer_19_memory$ENB = EN_ibuf_19_portB_request_put ;

  // submodule ibuffer_19_serverAdapterA_outDataCore
  assign ibuffer_19_serverAdapterA_outDataCore$D_IN = ibuffer_19_memory$DOA ;
  assign ibuffer_19_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_19_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_19_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_19_portA_response_get &&
	     ibuffer_19_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_19_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_19_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_19_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_19_portA_response_get &&
	     !ibuffer_19_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_19_serverAdapterA_outDataCore$CLR = EN_ibuf_19_portAClear ;

  // submodule ibuffer_19_serverAdapterB_outDataCore
  assign ibuffer_19_serverAdapterB_outDataCore$D_IN = ibuffer_19_memory$DOB ;
  assign ibuffer_19_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_19_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_19_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_19_portB_response_get &&
	     ibuffer_19_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_19_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_19_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_19_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_19_portB_response_get &&
	     !ibuffer_19_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_19_serverAdapterB_outDataCore$CLR = EN_ibuf_19_portBClear ;

  // submodule ibuffer_1_memory
  assign ibuffer_1_memory$ADDRA = ibuf_1_portA_request_put[15:8] ;
  assign ibuffer_1_memory$ADDRB = ibuf_1_portB_request_put[15:8] ;
  assign ibuffer_1_memory$DIA = ibuf_1_portA_request_put[7:0] ;
  assign ibuffer_1_memory$DIB = ibuf_1_portB_request_put[7:0] ;
  assign ibuffer_1_memory$WEA = ibuf_1_portA_request_put[17] ;
  assign ibuffer_1_memory$WEB = ibuf_1_portB_request_put[17] ;
  assign ibuffer_1_memory$ENA = EN_ibuf_1_portA_request_put ;
  assign ibuffer_1_memory$ENB = EN_ibuf_1_portB_request_put ;

  // submodule ibuffer_1_serverAdapterA_outDataCore
  assign ibuffer_1_serverAdapterA_outDataCore$D_IN = ibuffer_1_memory$DOA ;
  assign ibuffer_1_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_1_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_1_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_1_portA_response_get &&
	     ibuffer_1_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_1_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_1_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_1_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_1_portA_response_get &&
	     !ibuffer_1_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_1_serverAdapterA_outDataCore$CLR = EN_ibuf_1_portAClear ;

  // submodule ibuffer_1_serverAdapterB_outDataCore
  assign ibuffer_1_serverAdapterB_outDataCore$D_IN = ibuffer_1_memory$DOB ;
  assign ibuffer_1_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_1_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_1_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_1_portB_response_get &&
	     ibuffer_1_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_1_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_1_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_1_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_1_portB_response_get &&
	     !ibuffer_1_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_1_serverAdapterB_outDataCore$CLR = EN_ibuf_1_portBClear ;

  // submodule ibuffer_20_memory
  assign ibuffer_20_memory$ADDRA = ibuf_20_portA_request_put[15:8] ;
  assign ibuffer_20_memory$ADDRB = ibuf_20_portB_request_put[15:8] ;
  assign ibuffer_20_memory$DIA = ibuf_20_portA_request_put[7:0] ;
  assign ibuffer_20_memory$DIB = ibuf_20_portB_request_put[7:0] ;
  assign ibuffer_20_memory$WEA = ibuf_20_portA_request_put[17] ;
  assign ibuffer_20_memory$WEB = ibuf_20_portB_request_put[17] ;
  assign ibuffer_20_memory$ENA = EN_ibuf_20_portA_request_put ;
  assign ibuffer_20_memory$ENB = EN_ibuf_20_portB_request_put ;

  // submodule ibuffer_20_serverAdapterA_outDataCore
  assign ibuffer_20_serverAdapterA_outDataCore$D_IN = ibuffer_20_memory$DOA ;
  assign ibuffer_20_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_20_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_20_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_20_portA_response_get &&
	     ibuffer_20_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_20_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_20_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_20_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_20_portA_response_get &&
	     !ibuffer_20_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_20_serverAdapterA_outDataCore$CLR = EN_ibuf_20_portAClear ;

  // submodule ibuffer_20_serverAdapterB_outDataCore
  assign ibuffer_20_serverAdapterB_outDataCore$D_IN = ibuffer_20_memory$DOB ;
  assign ibuffer_20_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_20_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_20_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_20_portB_response_get &&
	     ibuffer_20_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_20_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_20_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_20_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_20_portB_response_get &&
	     !ibuffer_20_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_20_serverAdapterB_outDataCore$CLR = EN_ibuf_20_portBClear ;

  // submodule ibuffer_21_memory
  assign ibuffer_21_memory$ADDRA = ibuf_21_portA_request_put[15:8] ;
  assign ibuffer_21_memory$ADDRB = ibuf_21_portB_request_put[15:8] ;
  assign ibuffer_21_memory$DIA = ibuf_21_portA_request_put[7:0] ;
  assign ibuffer_21_memory$DIB = ibuf_21_portB_request_put[7:0] ;
  assign ibuffer_21_memory$WEA = ibuf_21_portA_request_put[17] ;
  assign ibuffer_21_memory$WEB = ibuf_21_portB_request_put[17] ;
  assign ibuffer_21_memory$ENA = EN_ibuf_21_portA_request_put ;
  assign ibuffer_21_memory$ENB = EN_ibuf_21_portB_request_put ;

  // submodule ibuffer_21_serverAdapterA_outDataCore
  assign ibuffer_21_serverAdapterA_outDataCore$D_IN = ibuffer_21_memory$DOA ;
  assign ibuffer_21_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_21_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_21_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_21_portA_response_get &&
	     ibuffer_21_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_21_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_21_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_21_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_21_portA_response_get &&
	     !ibuffer_21_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_21_serverAdapterA_outDataCore$CLR = EN_ibuf_21_portAClear ;

  // submodule ibuffer_21_serverAdapterB_outDataCore
  assign ibuffer_21_serverAdapterB_outDataCore$D_IN = ibuffer_21_memory$DOB ;
  assign ibuffer_21_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_21_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_21_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_21_portB_response_get &&
	     ibuffer_21_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_21_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_21_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_21_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_21_portB_response_get &&
	     !ibuffer_21_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_21_serverAdapterB_outDataCore$CLR = EN_ibuf_21_portBClear ;

  // submodule ibuffer_22_memory
  assign ibuffer_22_memory$ADDRA = ibuf_22_portA_request_put[15:8] ;
  assign ibuffer_22_memory$ADDRB = ibuf_22_portB_request_put[15:8] ;
  assign ibuffer_22_memory$DIA = ibuf_22_portA_request_put[7:0] ;
  assign ibuffer_22_memory$DIB = ibuf_22_portB_request_put[7:0] ;
  assign ibuffer_22_memory$WEA = ibuf_22_portA_request_put[17] ;
  assign ibuffer_22_memory$WEB = ibuf_22_portB_request_put[17] ;
  assign ibuffer_22_memory$ENA = EN_ibuf_22_portA_request_put ;
  assign ibuffer_22_memory$ENB = EN_ibuf_22_portB_request_put ;

  // submodule ibuffer_22_serverAdapterA_outDataCore
  assign ibuffer_22_serverAdapterA_outDataCore$D_IN = ibuffer_22_memory$DOA ;
  assign ibuffer_22_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_22_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_22_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_22_portA_response_get &&
	     ibuffer_22_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_22_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_22_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_22_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_22_portA_response_get &&
	     !ibuffer_22_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_22_serverAdapterA_outDataCore$CLR = EN_ibuf_22_portAClear ;

  // submodule ibuffer_22_serverAdapterB_outDataCore
  assign ibuffer_22_serverAdapterB_outDataCore$D_IN = ibuffer_22_memory$DOB ;
  assign ibuffer_22_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_22_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_22_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_22_portB_response_get &&
	     ibuffer_22_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_22_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_22_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_22_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_22_portB_response_get &&
	     !ibuffer_22_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_22_serverAdapterB_outDataCore$CLR = EN_ibuf_22_portBClear ;

  // submodule ibuffer_23_memory
  assign ibuffer_23_memory$ADDRA = ibuf_23_portA_request_put[15:8] ;
  assign ibuffer_23_memory$ADDRB = ibuf_23_portB_request_put[15:8] ;
  assign ibuffer_23_memory$DIA = ibuf_23_portA_request_put[7:0] ;
  assign ibuffer_23_memory$DIB = ibuf_23_portB_request_put[7:0] ;
  assign ibuffer_23_memory$WEA = ibuf_23_portA_request_put[17] ;
  assign ibuffer_23_memory$WEB = ibuf_23_portB_request_put[17] ;
  assign ibuffer_23_memory$ENA = EN_ibuf_23_portA_request_put ;
  assign ibuffer_23_memory$ENB = EN_ibuf_23_portB_request_put ;

  // submodule ibuffer_23_serverAdapterA_outDataCore
  assign ibuffer_23_serverAdapterA_outDataCore$D_IN = ibuffer_23_memory$DOA ;
  assign ibuffer_23_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_23_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_23_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_23_portA_response_get &&
	     ibuffer_23_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_23_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_23_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_23_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_23_portA_response_get &&
	     !ibuffer_23_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_23_serverAdapterA_outDataCore$CLR = EN_ibuf_23_portAClear ;

  // submodule ibuffer_23_serverAdapterB_outDataCore
  assign ibuffer_23_serverAdapterB_outDataCore$D_IN = ibuffer_23_memory$DOB ;
  assign ibuffer_23_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_23_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_23_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_23_portB_response_get &&
	     ibuffer_23_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_23_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_23_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_23_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_23_portB_response_get &&
	     !ibuffer_23_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_23_serverAdapterB_outDataCore$CLR = EN_ibuf_23_portBClear ;

  // submodule ibuffer_24_memory
  assign ibuffer_24_memory$ADDRA = ibuf_24_portA_request_put[15:8] ;
  assign ibuffer_24_memory$ADDRB = ibuf_24_portB_request_put[15:8] ;
  assign ibuffer_24_memory$DIA = ibuf_24_portA_request_put[7:0] ;
  assign ibuffer_24_memory$DIB = ibuf_24_portB_request_put[7:0] ;
  assign ibuffer_24_memory$WEA = ibuf_24_portA_request_put[17] ;
  assign ibuffer_24_memory$WEB = ibuf_24_portB_request_put[17] ;
  assign ibuffer_24_memory$ENA = EN_ibuf_24_portA_request_put ;
  assign ibuffer_24_memory$ENB = EN_ibuf_24_portB_request_put ;

  // submodule ibuffer_24_serverAdapterA_outDataCore
  assign ibuffer_24_serverAdapterA_outDataCore$D_IN = ibuffer_24_memory$DOA ;
  assign ibuffer_24_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_24_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_24_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_24_portA_response_get &&
	     ibuffer_24_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_24_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_24_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_24_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_24_portA_response_get &&
	     !ibuffer_24_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_24_serverAdapterA_outDataCore$CLR = EN_ibuf_24_portAClear ;

  // submodule ibuffer_24_serverAdapterB_outDataCore
  assign ibuffer_24_serverAdapterB_outDataCore$D_IN = ibuffer_24_memory$DOB ;
  assign ibuffer_24_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_24_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_24_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_24_portB_response_get &&
	     ibuffer_24_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_24_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_24_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_24_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_24_portB_response_get &&
	     !ibuffer_24_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_24_serverAdapterB_outDataCore$CLR = EN_ibuf_24_portBClear ;

  // submodule ibuffer_25_memory
  assign ibuffer_25_memory$ADDRA = ibuf_25_portA_request_put[15:8] ;
  assign ibuffer_25_memory$ADDRB = ibuf_25_portB_request_put[15:8] ;
  assign ibuffer_25_memory$DIA = ibuf_25_portA_request_put[7:0] ;
  assign ibuffer_25_memory$DIB = ibuf_25_portB_request_put[7:0] ;
  assign ibuffer_25_memory$WEA = ibuf_25_portA_request_put[17] ;
  assign ibuffer_25_memory$WEB = ibuf_25_portB_request_put[17] ;
  assign ibuffer_25_memory$ENA = EN_ibuf_25_portA_request_put ;
  assign ibuffer_25_memory$ENB = EN_ibuf_25_portB_request_put ;

  // submodule ibuffer_25_serverAdapterA_outDataCore
  assign ibuffer_25_serverAdapterA_outDataCore$D_IN = ibuffer_25_memory$DOA ;
  assign ibuffer_25_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_25_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_25_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_25_portA_response_get &&
	     ibuffer_25_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_25_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_25_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_25_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_25_portA_response_get &&
	     !ibuffer_25_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_25_serverAdapterA_outDataCore$CLR = EN_ibuf_25_portAClear ;

  // submodule ibuffer_25_serverAdapterB_outDataCore
  assign ibuffer_25_serverAdapterB_outDataCore$D_IN = ibuffer_25_memory$DOB ;
  assign ibuffer_25_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_25_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_25_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_25_portB_response_get &&
	     ibuffer_25_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_25_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_25_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_25_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_25_portB_response_get &&
	     !ibuffer_25_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_25_serverAdapterB_outDataCore$CLR = EN_ibuf_25_portBClear ;

  // submodule ibuffer_26_memory
  assign ibuffer_26_memory$ADDRA = ibuf_26_portA_request_put[15:8] ;
  assign ibuffer_26_memory$ADDRB = ibuf_26_portB_request_put[15:8] ;
  assign ibuffer_26_memory$DIA = ibuf_26_portA_request_put[7:0] ;
  assign ibuffer_26_memory$DIB = ibuf_26_portB_request_put[7:0] ;
  assign ibuffer_26_memory$WEA = ibuf_26_portA_request_put[17] ;
  assign ibuffer_26_memory$WEB = ibuf_26_portB_request_put[17] ;
  assign ibuffer_26_memory$ENA = EN_ibuf_26_portA_request_put ;
  assign ibuffer_26_memory$ENB = EN_ibuf_26_portB_request_put ;

  // submodule ibuffer_26_serverAdapterA_outDataCore
  assign ibuffer_26_serverAdapterA_outDataCore$D_IN = ibuffer_26_memory$DOA ;
  assign ibuffer_26_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_26_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_26_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_26_portA_response_get &&
	     ibuffer_26_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_26_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_26_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_26_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_26_portA_response_get &&
	     !ibuffer_26_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_26_serverAdapterA_outDataCore$CLR = EN_ibuf_26_portAClear ;

  // submodule ibuffer_26_serverAdapterB_outDataCore
  assign ibuffer_26_serverAdapterB_outDataCore$D_IN = ibuffer_26_memory$DOB ;
  assign ibuffer_26_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_26_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_26_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_26_portB_response_get &&
	     ibuffer_26_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_26_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_26_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_26_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_26_portB_response_get &&
	     !ibuffer_26_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_26_serverAdapterB_outDataCore$CLR = EN_ibuf_26_portBClear ;

  // submodule ibuffer_27_memory
  assign ibuffer_27_memory$ADDRA = ibuf_27_portA_request_put[15:8] ;
  assign ibuffer_27_memory$ADDRB = ibuf_27_portB_request_put[15:8] ;
  assign ibuffer_27_memory$DIA = ibuf_27_portA_request_put[7:0] ;
  assign ibuffer_27_memory$DIB = ibuf_27_portB_request_put[7:0] ;
  assign ibuffer_27_memory$WEA = ibuf_27_portA_request_put[17] ;
  assign ibuffer_27_memory$WEB = ibuf_27_portB_request_put[17] ;
  assign ibuffer_27_memory$ENA = EN_ibuf_27_portA_request_put ;
  assign ibuffer_27_memory$ENB = EN_ibuf_27_portB_request_put ;

  // submodule ibuffer_27_serverAdapterA_outDataCore
  assign ibuffer_27_serverAdapterA_outDataCore$D_IN = ibuffer_27_memory$DOA ;
  assign ibuffer_27_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_27_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_27_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_27_portA_response_get &&
	     ibuffer_27_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_27_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_27_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_27_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_27_portA_response_get &&
	     !ibuffer_27_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_27_serverAdapterA_outDataCore$CLR = EN_ibuf_27_portAClear ;

  // submodule ibuffer_27_serverAdapterB_outDataCore
  assign ibuffer_27_serverAdapterB_outDataCore$D_IN = ibuffer_27_memory$DOB ;
  assign ibuffer_27_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_27_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_27_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_27_portB_response_get &&
	     ibuffer_27_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_27_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_27_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_27_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_27_portB_response_get &&
	     !ibuffer_27_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_27_serverAdapterB_outDataCore$CLR = EN_ibuf_27_portBClear ;

  // submodule ibuffer_28_memory
  assign ibuffer_28_memory$ADDRA = ibuf_28_portA_request_put[15:8] ;
  assign ibuffer_28_memory$ADDRB = ibuf_28_portB_request_put[15:8] ;
  assign ibuffer_28_memory$DIA = ibuf_28_portA_request_put[7:0] ;
  assign ibuffer_28_memory$DIB = ibuf_28_portB_request_put[7:0] ;
  assign ibuffer_28_memory$WEA = ibuf_28_portA_request_put[17] ;
  assign ibuffer_28_memory$WEB = ibuf_28_portB_request_put[17] ;
  assign ibuffer_28_memory$ENA = EN_ibuf_28_portA_request_put ;
  assign ibuffer_28_memory$ENB = EN_ibuf_28_portB_request_put ;

  // submodule ibuffer_28_serverAdapterA_outDataCore
  assign ibuffer_28_serverAdapterA_outDataCore$D_IN = ibuffer_28_memory$DOA ;
  assign ibuffer_28_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_28_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_28_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_28_portA_response_get &&
	     ibuffer_28_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_28_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_28_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_28_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_28_portA_response_get &&
	     !ibuffer_28_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_28_serverAdapterA_outDataCore$CLR = EN_ibuf_28_portAClear ;

  // submodule ibuffer_28_serverAdapterB_outDataCore
  assign ibuffer_28_serverAdapterB_outDataCore$D_IN = ibuffer_28_memory$DOB ;
  assign ibuffer_28_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_28_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_28_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_28_portB_response_get &&
	     ibuffer_28_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_28_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_28_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_28_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_28_portB_response_get &&
	     !ibuffer_28_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_28_serverAdapterB_outDataCore$CLR = EN_ibuf_28_portBClear ;

  // submodule ibuffer_29_memory
  assign ibuffer_29_memory$ADDRA = ibuf_29_portA_request_put[15:8] ;
  assign ibuffer_29_memory$ADDRB = ibuf_29_portB_request_put[15:8] ;
  assign ibuffer_29_memory$DIA = ibuf_29_portA_request_put[7:0] ;
  assign ibuffer_29_memory$DIB = ibuf_29_portB_request_put[7:0] ;
  assign ibuffer_29_memory$WEA = ibuf_29_portA_request_put[17] ;
  assign ibuffer_29_memory$WEB = ibuf_29_portB_request_put[17] ;
  assign ibuffer_29_memory$ENA = EN_ibuf_29_portA_request_put ;
  assign ibuffer_29_memory$ENB = EN_ibuf_29_portB_request_put ;

  // submodule ibuffer_29_serverAdapterA_outDataCore
  assign ibuffer_29_serverAdapterA_outDataCore$D_IN = ibuffer_29_memory$DOA ;
  assign ibuffer_29_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_29_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_29_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_29_portA_response_get &&
	     ibuffer_29_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_29_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_29_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_29_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_29_portA_response_get &&
	     !ibuffer_29_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_29_serverAdapterA_outDataCore$CLR = EN_ibuf_29_portAClear ;

  // submodule ibuffer_29_serverAdapterB_outDataCore
  assign ibuffer_29_serverAdapterB_outDataCore$D_IN = ibuffer_29_memory$DOB ;
  assign ibuffer_29_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_29_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_29_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_29_portB_response_get &&
	     ibuffer_29_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_29_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_29_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_29_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_29_portB_response_get &&
	     !ibuffer_29_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_29_serverAdapterB_outDataCore$CLR = EN_ibuf_29_portBClear ;

  // submodule ibuffer_2_memory
  assign ibuffer_2_memory$ADDRA = ibuf_2_portA_request_put[15:8] ;
  assign ibuffer_2_memory$ADDRB = ibuf_2_portB_request_put[15:8] ;
  assign ibuffer_2_memory$DIA = ibuf_2_portA_request_put[7:0] ;
  assign ibuffer_2_memory$DIB = ibuf_2_portB_request_put[7:0] ;
  assign ibuffer_2_memory$WEA = ibuf_2_portA_request_put[17] ;
  assign ibuffer_2_memory$WEB = ibuf_2_portB_request_put[17] ;
  assign ibuffer_2_memory$ENA = EN_ibuf_2_portA_request_put ;
  assign ibuffer_2_memory$ENB = EN_ibuf_2_portB_request_put ;

  // submodule ibuffer_2_serverAdapterA_outDataCore
  assign ibuffer_2_serverAdapterA_outDataCore$D_IN = ibuffer_2_memory$DOA ;
  assign ibuffer_2_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_2_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_2_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_2_portA_response_get &&
	     ibuffer_2_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_2_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_2_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_2_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_2_portA_response_get &&
	     !ibuffer_2_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_2_serverAdapterA_outDataCore$CLR = EN_ibuf_2_portAClear ;

  // submodule ibuffer_2_serverAdapterB_outDataCore
  assign ibuffer_2_serverAdapterB_outDataCore$D_IN = ibuffer_2_memory$DOB ;
  assign ibuffer_2_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_2_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_2_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_2_portB_response_get &&
	     ibuffer_2_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_2_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_2_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_2_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_2_portB_response_get &&
	     !ibuffer_2_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_2_serverAdapterB_outDataCore$CLR = EN_ibuf_2_portBClear ;

  // submodule ibuffer_30_memory
  assign ibuffer_30_memory$ADDRA = ibuf_30_portA_request_put[15:8] ;
  assign ibuffer_30_memory$ADDRB = ibuf_30_portB_request_put[15:8] ;
  assign ibuffer_30_memory$DIA = ibuf_30_portA_request_put[7:0] ;
  assign ibuffer_30_memory$DIB = ibuf_30_portB_request_put[7:0] ;
  assign ibuffer_30_memory$WEA = ibuf_30_portA_request_put[17] ;
  assign ibuffer_30_memory$WEB = ibuf_30_portB_request_put[17] ;
  assign ibuffer_30_memory$ENA = EN_ibuf_30_portA_request_put ;
  assign ibuffer_30_memory$ENB = EN_ibuf_30_portB_request_put ;

  // submodule ibuffer_30_serverAdapterA_outDataCore
  assign ibuffer_30_serverAdapterA_outDataCore$D_IN = ibuffer_30_memory$DOA ;
  assign ibuffer_30_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_30_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_30_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_30_portA_response_get &&
	     ibuffer_30_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_30_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_30_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_30_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_30_portA_response_get &&
	     !ibuffer_30_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_30_serverAdapterA_outDataCore$CLR = EN_ibuf_30_portAClear ;

  // submodule ibuffer_30_serverAdapterB_outDataCore
  assign ibuffer_30_serverAdapterB_outDataCore$D_IN = ibuffer_30_memory$DOB ;
  assign ibuffer_30_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_30_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_30_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_30_portB_response_get &&
	     ibuffer_30_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_30_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_30_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_30_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_30_portB_response_get &&
	     !ibuffer_30_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_30_serverAdapterB_outDataCore$CLR = EN_ibuf_30_portBClear ;

  // submodule ibuffer_31_memory
  assign ibuffer_31_memory$ADDRA = ibuf_31_portA_request_put[15:8] ;
  assign ibuffer_31_memory$ADDRB = ibuf_31_portB_request_put[15:8] ;
  assign ibuffer_31_memory$DIA = ibuf_31_portA_request_put[7:0] ;
  assign ibuffer_31_memory$DIB = ibuf_31_portB_request_put[7:0] ;
  assign ibuffer_31_memory$WEA = ibuf_31_portA_request_put[17] ;
  assign ibuffer_31_memory$WEB = ibuf_31_portB_request_put[17] ;
  assign ibuffer_31_memory$ENA = EN_ibuf_31_portA_request_put ;
  assign ibuffer_31_memory$ENB = EN_ibuf_31_portB_request_put ;

  // submodule ibuffer_31_serverAdapterA_outDataCore
  assign ibuffer_31_serverAdapterA_outDataCore$D_IN = ibuffer_31_memory$DOA ;
  assign ibuffer_31_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_31_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_31_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_31_portA_response_get &&
	     ibuffer_31_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_31_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_31_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_31_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_31_portA_response_get &&
	     !ibuffer_31_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_31_serverAdapterA_outDataCore$CLR = EN_ibuf_31_portAClear ;

  // submodule ibuffer_31_serverAdapterB_outDataCore
  assign ibuffer_31_serverAdapterB_outDataCore$D_IN = ibuffer_31_memory$DOB ;
  assign ibuffer_31_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_31_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_31_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_31_portB_response_get &&
	     ibuffer_31_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_31_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_31_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_31_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_31_portB_response_get &&
	     !ibuffer_31_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_31_serverAdapterB_outDataCore$CLR = EN_ibuf_31_portBClear ;

  // submodule ibuffer_3_memory
  assign ibuffer_3_memory$ADDRA = ibuf_3_portA_request_put[15:8] ;
  assign ibuffer_3_memory$ADDRB = ibuf_3_portB_request_put[15:8] ;
  assign ibuffer_3_memory$DIA = ibuf_3_portA_request_put[7:0] ;
  assign ibuffer_3_memory$DIB = ibuf_3_portB_request_put[7:0] ;
  assign ibuffer_3_memory$WEA = ibuf_3_portA_request_put[17] ;
  assign ibuffer_3_memory$WEB = ibuf_3_portB_request_put[17] ;
  assign ibuffer_3_memory$ENA = EN_ibuf_3_portA_request_put ;
  assign ibuffer_3_memory$ENB = EN_ibuf_3_portB_request_put ;

  // submodule ibuffer_3_serverAdapterA_outDataCore
  assign ibuffer_3_serverAdapterA_outDataCore$D_IN = ibuffer_3_memory$DOA ;
  assign ibuffer_3_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_3_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_3_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_3_portA_response_get &&
	     ibuffer_3_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_3_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_3_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_3_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_3_portA_response_get &&
	     !ibuffer_3_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_3_serverAdapterA_outDataCore$CLR = EN_ibuf_3_portAClear ;

  // submodule ibuffer_3_serverAdapterB_outDataCore
  assign ibuffer_3_serverAdapterB_outDataCore$D_IN = ibuffer_3_memory$DOB ;
  assign ibuffer_3_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_3_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_3_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_3_portB_response_get &&
	     ibuffer_3_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_3_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_3_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_3_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_3_portB_response_get &&
	     !ibuffer_3_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_3_serverAdapterB_outDataCore$CLR = EN_ibuf_3_portBClear ;

  // submodule ibuffer_4_memory
  assign ibuffer_4_memory$ADDRA = ibuf_4_portA_request_put[15:8] ;
  assign ibuffer_4_memory$ADDRB = ibuf_4_portB_request_put[15:8] ;
  assign ibuffer_4_memory$DIA = ibuf_4_portA_request_put[7:0] ;
  assign ibuffer_4_memory$DIB = ibuf_4_portB_request_put[7:0] ;
  assign ibuffer_4_memory$WEA = ibuf_4_portA_request_put[17] ;
  assign ibuffer_4_memory$WEB = ibuf_4_portB_request_put[17] ;
  assign ibuffer_4_memory$ENA = EN_ibuf_4_portA_request_put ;
  assign ibuffer_4_memory$ENB = EN_ibuf_4_portB_request_put ;

  // submodule ibuffer_4_serverAdapterA_outDataCore
  assign ibuffer_4_serverAdapterA_outDataCore$D_IN = ibuffer_4_memory$DOA ;
  assign ibuffer_4_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_4_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_4_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_4_portA_response_get &&
	     ibuffer_4_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_4_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_4_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_4_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_4_portA_response_get &&
	     !ibuffer_4_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_4_serverAdapterA_outDataCore$CLR = EN_ibuf_4_portAClear ;

  // submodule ibuffer_4_serverAdapterB_outDataCore
  assign ibuffer_4_serverAdapterB_outDataCore$D_IN = ibuffer_4_memory$DOB ;
  assign ibuffer_4_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_4_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_4_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_4_portB_response_get &&
	     ibuffer_4_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_4_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_4_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_4_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_4_portB_response_get &&
	     !ibuffer_4_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_4_serverAdapterB_outDataCore$CLR = EN_ibuf_4_portBClear ;

  // submodule ibuffer_5_memory
  assign ibuffer_5_memory$ADDRA = ibuf_5_portA_request_put[15:8] ;
  assign ibuffer_5_memory$ADDRB = ibuf_5_portB_request_put[15:8] ;
  assign ibuffer_5_memory$DIA = ibuf_5_portA_request_put[7:0] ;
  assign ibuffer_5_memory$DIB = ibuf_5_portB_request_put[7:0] ;
  assign ibuffer_5_memory$WEA = ibuf_5_portA_request_put[17] ;
  assign ibuffer_5_memory$WEB = ibuf_5_portB_request_put[17] ;
  assign ibuffer_5_memory$ENA = EN_ibuf_5_portA_request_put ;
  assign ibuffer_5_memory$ENB = EN_ibuf_5_portB_request_put ;

  // submodule ibuffer_5_serverAdapterA_outDataCore
  assign ibuffer_5_serverAdapterA_outDataCore$D_IN = ibuffer_5_memory$DOA ;
  assign ibuffer_5_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_5_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_5_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_5_portA_response_get &&
	     ibuffer_5_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_5_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_5_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_5_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_5_portA_response_get &&
	     !ibuffer_5_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_5_serverAdapterA_outDataCore$CLR = EN_ibuf_5_portAClear ;

  // submodule ibuffer_5_serverAdapterB_outDataCore
  assign ibuffer_5_serverAdapterB_outDataCore$D_IN = ibuffer_5_memory$DOB ;
  assign ibuffer_5_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_5_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_5_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_5_portB_response_get &&
	     ibuffer_5_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_5_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_5_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_5_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_5_portB_response_get &&
	     !ibuffer_5_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_5_serverAdapterB_outDataCore$CLR = EN_ibuf_5_portBClear ;

  // submodule ibuffer_6_memory
  assign ibuffer_6_memory$ADDRA = ibuf_6_portA_request_put[15:8] ;
  assign ibuffer_6_memory$ADDRB = ibuf_6_portB_request_put[15:8] ;
  assign ibuffer_6_memory$DIA = ibuf_6_portA_request_put[7:0] ;
  assign ibuffer_6_memory$DIB = ibuf_6_portB_request_put[7:0] ;
  assign ibuffer_6_memory$WEA = ibuf_6_portA_request_put[17] ;
  assign ibuffer_6_memory$WEB = ibuf_6_portB_request_put[17] ;
  assign ibuffer_6_memory$ENA = EN_ibuf_6_portA_request_put ;
  assign ibuffer_6_memory$ENB = EN_ibuf_6_portB_request_put ;

  // submodule ibuffer_6_serverAdapterA_outDataCore
  assign ibuffer_6_serverAdapterA_outDataCore$D_IN = ibuffer_6_memory$DOA ;
  assign ibuffer_6_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_6_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_6_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_6_portA_response_get &&
	     ibuffer_6_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_6_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_6_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_6_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_6_portA_response_get &&
	     !ibuffer_6_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_6_serverAdapterA_outDataCore$CLR = EN_ibuf_6_portAClear ;

  // submodule ibuffer_6_serverAdapterB_outDataCore
  assign ibuffer_6_serverAdapterB_outDataCore$D_IN = ibuffer_6_memory$DOB ;
  assign ibuffer_6_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_6_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_6_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_6_portB_response_get &&
	     ibuffer_6_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_6_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_6_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_6_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_6_portB_response_get &&
	     !ibuffer_6_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_6_serverAdapterB_outDataCore$CLR = EN_ibuf_6_portBClear ;

  // submodule ibuffer_7_memory
  assign ibuffer_7_memory$ADDRA = ibuf_7_portA_request_put[15:8] ;
  assign ibuffer_7_memory$ADDRB = ibuf_7_portB_request_put[15:8] ;
  assign ibuffer_7_memory$DIA = ibuf_7_portA_request_put[7:0] ;
  assign ibuffer_7_memory$DIB = ibuf_7_portB_request_put[7:0] ;
  assign ibuffer_7_memory$WEA = ibuf_7_portA_request_put[17] ;
  assign ibuffer_7_memory$WEB = ibuf_7_portB_request_put[17] ;
  assign ibuffer_7_memory$ENA = EN_ibuf_7_portA_request_put ;
  assign ibuffer_7_memory$ENB = EN_ibuf_7_portB_request_put ;

  // submodule ibuffer_7_serverAdapterA_outDataCore
  assign ibuffer_7_serverAdapterA_outDataCore$D_IN = ibuffer_7_memory$DOA ;
  assign ibuffer_7_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_7_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_7_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_7_portA_response_get &&
	     ibuffer_7_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_7_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_7_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_7_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_7_portA_response_get &&
	     !ibuffer_7_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_7_serverAdapterA_outDataCore$CLR = EN_ibuf_7_portAClear ;

  // submodule ibuffer_7_serverAdapterB_outDataCore
  assign ibuffer_7_serverAdapterB_outDataCore$D_IN = ibuffer_7_memory$DOB ;
  assign ibuffer_7_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_7_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_7_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_7_portB_response_get &&
	     ibuffer_7_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_7_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_7_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_7_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_7_portB_response_get &&
	     !ibuffer_7_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_7_serverAdapterB_outDataCore$CLR = EN_ibuf_7_portBClear ;

  // submodule ibuffer_8_memory
  assign ibuffer_8_memory$ADDRA = ibuf_8_portA_request_put[15:8] ;
  assign ibuffer_8_memory$ADDRB = ibuf_8_portB_request_put[15:8] ;
  assign ibuffer_8_memory$DIA = ibuf_8_portA_request_put[7:0] ;
  assign ibuffer_8_memory$DIB = ibuf_8_portB_request_put[7:0] ;
  assign ibuffer_8_memory$WEA = ibuf_8_portA_request_put[17] ;
  assign ibuffer_8_memory$WEB = ibuf_8_portB_request_put[17] ;
  assign ibuffer_8_memory$ENA = EN_ibuf_8_portA_request_put ;
  assign ibuffer_8_memory$ENB = EN_ibuf_8_portB_request_put ;

  // submodule ibuffer_8_serverAdapterA_outDataCore
  assign ibuffer_8_serverAdapterA_outDataCore$D_IN = ibuffer_8_memory$DOA ;
  assign ibuffer_8_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_8_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_8_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_8_portA_response_get &&
	     ibuffer_8_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_8_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_8_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_8_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_8_portA_response_get &&
	     !ibuffer_8_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_8_serverAdapterA_outDataCore$CLR = EN_ibuf_8_portAClear ;

  // submodule ibuffer_8_serverAdapterB_outDataCore
  assign ibuffer_8_serverAdapterB_outDataCore$D_IN = ibuffer_8_memory$DOB ;
  assign ibuffer_8_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_8_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_8_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_8_portB_response_get &&
	     ibuffer_8_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_8_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_8_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_8_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_8_portB_response_get &&
	     !ibuffer_8_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_8_serverAdapterB_outDataCore$CLR = EN_ibuf_8_portBClear ;

  // submodule ibuffer_9_memory
  assign ibuffer_9_memory$ADDRA = ibuf_9_portA_request_put[15:8] ;
  assign ibuffer_9_memory$ADDRB = ibuf_9_portB_request_put[15:8] ;
  assign ibuffer_9_memory$DIA = ibuf_9_portA_request_put[7:0] ;
  assign ibuffer_9_memory$DIB = ibuf_9_portB_request_put[7:0] ;
  assign ibuffer_9_memory$WEA = ibuf_9_portA_request_put[17] ;
  assign ibuffer_9_memory$WEB = ibuf_9_portB_request_put[17] ;
  assign ibuffer_9_memory$ENA = EN_ibuf_9_portA_request_put ;
  assign ibuffer_9_memory$ENB = EN_ibuf_9_portB_request_put ;

  // submodule ibuffer_9_serverAdapterA_outDataCore
  assign ibuffer_9_serverAdapterA_outDataCore$D_IN = ibuffer_9_memory$DOA ;
  assign ibuffer_9_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_9_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_9_serverAdapterA_outDataCore$FULL_N &&
	     !EN_ibuf_9_portA_response_get &&
	     ibuffer_9_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_9_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_9_serverAdapterA_outData_enqAndDeq ||
	     ibuffer_9_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_ibuf_9_portA_response_get &&
	     !ibuffer_9_serverAdapterA_outData_enqData$whas ;
  assign ibuffer_9_serverAdapterA_outDataCore$CLR = EN_ibuf_9_portAClear ;

  // submodule ibuffer_9_serverAdapterB_outDataCore
  assign ibuffer_9_serverAdapterB_outDataCore$D_IN = ibuffer_9_memory$DOB ;
  assign ibuffer_9_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_ibuffer_9_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_9_serverAdapterB_outDataCore$FULL_N &&
	     !EN_ibuf_9_portB_response_get &&
	     ibuffer_9_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_9_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_ibuffer_9_serverAdapterB_outData_enqAndDeq ||
	     ibuffer_9_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_ibuf_9_portB_response_get &&
	     !ibuffer_9_serverAdapterB_outData_enqData$whas ;
  assign ibuffer_9_serverAdapterB_outDataCore$CLR = EN_ibuf_9_portBClear ;

  // submodule obuffer1_0_memory
  assign obuffer1_0_memory$ADDRA = obuf1_0_portA_request_put[39:32] ;
  assign obuffer1_0_memory$ADDRB = obuf1_0_portB_request_put[39:32] ;
  assign obuffer1_0_memory$DIA = obuf1_0_portA_request_put[31:0] ;
  assign obuffer1_0_memory$DIB = obuf1_0_portB_request_put[31:0] ;
  assign obuffer1_0_memory$WEA = obuf1_0_portA_request_put[41] ;
  assign obuffer1_0_memory$WEB = obuf1_0_portB_request_put[41] ;
  assign obuffer1_0_memory$ENA = EN_obuf1_0_portA_request_put ;
  assign obuffer1_0_memory$ENB = EN_obuf1_0_portB_request_put ;

  // submodule obuffer1_0_serverAdapterA_outDataCore
  assign obuffer1_0_serverAdapterA_outDataCore$D_IN = obuffer1_0_memory$DOA ;
  assign obuffer1_0_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_0_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_0_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_0_portA_response_get &&
	     obuffer1_0_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_0_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_0_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_0_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_0_portA_response_get &&
	     !obuffer1_0_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_0_serverAdapterA_outDataCore$CLR = EN_obuf1_0_portAClear ;

  // submodule obuffer1_0_serverAdapterB_outDataCore
  assign obuffer1_0_serverAdapterB_outDataCore$D_IN = obuffer1_0_memory$DOB ;
  assign obuffer1_0_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_0_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_0_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_0_portB_response_get &&
	     obuffer1_0_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_0_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_0_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_0_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_0_portB_response_get &&
	     !obuffer1_0_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_0_serverAdapterB_outDataCore$CLR = EN_obuf1_0_portBClear ;

  // submodule obuffer1_10_memory
  assign obuffer1_10_memory$ADDRA = obuf1_10_portA_request_put[39:32] ;
  assign obuffer1_10_memory$ADDRB = obuf1_10_portB_request_put[39:32] ;
  assign obuffer1_10_memory$DIA = obuf1_10_portA_request_put[31:0] ;
  assign obuffer1_10_memory$DIB = obuf1_10_portB_request_put[31:0] ;
  assign obuffer1_10_memory$WEA = obuf1_10_portA_request_put[41] ;
  assign obuffer1_10_memory$WEB = obuf1_10_portB_request_put[41] ;
  assign obuffer1_10_memory$ENA = EN_obuf1_10_portA_request_put ;
  assign obuffer1_10_memory$ENB = EN_obuf1_10_portB_request_put ;

  // submodule obuffer1_10_serverAdapterA_outDataCore
  assign obuffer1_10_serverAdapterA_outDataCore$D_IN =
	     obuffer1_10_memory$DOA ;
  assign obuffer1_10_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_10_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_10_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_10_portA_response_get &&
	     obuffer1_10_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_10_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_10_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_10_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_10_portA_response_get &&
	     !obuffer1_10_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_10_serverAdapterA_outDataCore$CLR = EN_obuf1_10_portAClear ;

  // submodule obuffer1_10_serverAdapterB_outDataCore
  assign obuffer1_10_serverAdapterB_outDataCore$D_IN =
	     obuffer1_10_memory$DOB ;
  assign obuffer1_10_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_10_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_10_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_10_portB_response_get &&
	     obuffer1_10_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_10_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_10_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_10_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_10_portB_response_get &&
	     !obuffer1_10_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_10_serverAdapterB_outDataCore$CLR = EN_obuf1_10_portBClear ;

  // submodule obuffer1_11_memory
  assign obuffer1_11_memory$ADDRA = obuf1_11_portA_request_put[39:32] ;
  assign obuffer1_11_memory$ADDRB = obuf1_11_portB_request_put[39:32] ;
  assign obuffer1_11_memory$DIA = obuf1_11_portA_request_put[31:0] ;
  assign obuffer1_11_memory$DIB = obuf1_11_portB_request_put[31:0] ;
  assign obuffer1_11_memory$WEA = obuf1_11_portA_request_put[41] ;
  assign obuffer1_11_memory$WEB = obuf1_11_portB_request_put[41] ;
  assign obuffer1_11_memory$ENA = EN_obuf1_11_portA_request_put ;
  assign obuffer1_11_memory$ENB = EN_obuf1_11_portB_request_put ;

  // submodule obuffer1_11_serverAdapterA_outDataCore
  assign obuffer1_11_serverAdapterA_outDataCore$D_IN =
	     obuffer1_11_memory$DOA ;
  assign obuffer1_11_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_11_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_11_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_11_portA_response_get &&
	     obuffer1_11_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_11_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_11_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_11_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_11_portA_response_get &&
	     !obuffer1_11_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_11_serverAdapterA_outDataCore$CLR = EN_obuf1_11_portAClear ;

  // submodule obuffer1_11_serverAdapterB_outDataCore
  assign obuffer1_11_serverAdapterB_outDataCore$D_IN =
	     obuffer1_11_memory$DOB ;
  assign obuffer1_11_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_11_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_11_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_11_portB_response_get &&
	     obuffer1_11_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_11_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_11_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_11_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_11_portB_response_get &&
	     !obuffer1_11_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_11_serverAdapterB_outDataCore$CLR = EN_obuf1_11_portBClear ;

  // submodule obuffer1_12_memory
  assign obuffer1_12_memory$ADDRA = obuf1_12_portA_request_put[39:32] ;
  assign obuffer1_12_memory$ADDRB = obuf1_12_portB_request_put[39:32] ;
  assign obuffer1_12_memory$DIA = obuf1_12_portA_request_put[31:0] ;
  assign obuffer1_12_memory$DIB = obuf1_12_portB_request_put[31:0] ;
  assign obuffer1_12_memory$WEA = obuf1_12_portA_request_put[41] ;
  assign obuffer1_12_memory$WEB = obuf1_12_portB_request_put[41] ;
  assign obuffer1_12_memory$ENA = EN_obuf1_12_portA_request_put ;
  assign obuffer1_12_memory$ENB = EN_obuf1_12_portB_request_put ;

  // submodule obuffer1_12_serverAdapterA_outDataCore
  assign obuffer1_12_serverAdapterA_outDataCore$D_IN =
	     obuffer1_12_memory$DOA ;
  assign obuffer1_12_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_12_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_12_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_12_portA_response_get &&
	     obuffer1_12_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_12_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_12_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_12_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_12_portA_response_get &&
	     !obuffer1_12_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_12_serverAdapterA_outDataCore$CLR = EN_obuf1_12_portAClear ;

  // submodule obuffer1_12_serverAdapterB_outDataCore
  assign obuffer1_12_serverAdapterB_outDataCore$D_IN =
	     obuffer1_12_memory$DOB ;
  assign obuffer1_12_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_12_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_12_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_12_portB_response_get &&
	     obuffer1_12_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_12_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_12_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_12_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_12_portB_response_get &&
	     !obuffer1_12_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_12_serverAdapterB_outDataCore$CLR = EN_obuf1_12_portBClear ;

  // submodule obuffer1_13_memory
  assign obuffer1_13_memory$ADDRA = obuf1_13_portA_request_put[39:32] ;
  assign obuffer1_13_memory$ADDRB = obuf1_13_portB_request_put[39:32] ;
  assign obuffer1_13_memory$DIA = obuf1_13_portA_request_put[31:0] ;
  assign obuffer1_13_memory$DIB = obuf1_13_portB_request_put[31:0] ;
  assign obuffer1_13_memory$WEA = obuf1_13_portA_request_put[41] ;
  assign obuffer1_13_memory$WEB = obuf1_13_portB_request_put[41] ;
  assign obuffer1_13_memory$ENA = EN_obuf1_13_portA_request_put ;
  assign obuffer1_13_memory$ENB = EN_obuf1_13_portB_request_put ;

  // submodule obuffer1_13_serverAdapterA_outDataCore
  assign obuffer1_13_serverAdapterA_outDataCore$D_IN =
	     obuffer1_13_memory$DOA ;
  assign obuffer1_13_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_13_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_13_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_13_portA_response_get &&
	     obuffer1_13_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_13_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_13_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_13_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_13_portA_response_get &&
	     !obuffer1_13_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_13_serverAdapterA_outDataCore$CLR = EN_obuf1_13_portAClear ;

  // submodule obuffer1_13_serverAdapterB_outDataCore
  assign obuffer1_13_serverAdapterB_outDataCore$D_IN =
	     obuffer1_13_memory$DOB ;
  assign obuffer1_13_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_13_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_13_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_13_portB_response_get &&
	     obuffer1_13_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_13_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_13_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_13_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_13_portB_response_get &&
	     !obuffer1_13_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_13_serverAdapterB_outDataCore$CLR = EN_obuf1_13_portBClear ;

  // submodule obuffer1_14_memory
  assign obuffer1_14_memory$ADDRA = obuf1_14_portA_request_put[39:32] ;
  assign obuffer1_14_memory$ADDRB = obuf1_14_portB_request_put[39:32] ;
  assign obuffer1_14_memory$DIA = obuf1_14_portA_request_put[31:0] ;
  assign obuffer1_14_memory$DIB = obuf1_14_portB_request_put[31:0] ;
  assign obuffer1_14_memory$WEA = obuf1_14_portA_request_put[41] ;
  assign obuffer1_14_memory$WEB = obuf1_14_portB_request_put[41] ;
  assign obuffer1_14_memory$ENA = EN_obuf1_14_portA_request_put ;
  assign obuffer1_14_memory$ENB = EN_obuf1_14_portB_request_put ;

  // submodule obuffer1_14_serverAdapterA_outDataCore
  assign obuffer1_14_serverAdapterA_outDataCore$D_IN =
	     obuffer1_14_memory$DOA ;
  assign obuffer1_14_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_14_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_14_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_14_portA_response_get &&
	     obuffer1_14_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_14_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_14_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_14_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_14_portA_response_get &&
	     !obuffer1_14_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_14_serverAdapterA_outDataCore$CLR = EN_obuf1_14_portAClear ;

  // submodule obuffer1_14_serverAdapterB_outDataCore
  assign obuffer1_14_serverAdapterB_outDataCore$D_IN =
	     obuffer1_14_memory$DOB ;
  assign obuffer1_14_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_14_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_14_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_14_portB_response_get &&
	     obuffer1_14_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_14_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_14_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_14_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_14_portB_response_get &&
	     !obuffer1_14_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_14_serverAdapterB_outDataCore$CLR = EN_obuf1_14_portBClear ;

  // submodule obuffer1_15_memory
  assign obuffer1_15_memory$ADDRA = obuf1_15_portA_request_put[39:32] ;
  assign obuffer1_15_memory$ADDRB = obuf1_15_portB_request_put[39:32] ;
  assign obuffer1_15_memory$DIA = obuf1_15_portA_request_put[31:0] ;
  assign obuffer1_15_memory$DIB = obuf1_15_portB_request_put[31:0] ;
  assign obuffer1_15_memory$WEA = obuf1_15_portA_request_put[41] ;
  assign obuffer1_15_memory$WEB = obuf1_15_portB_request_put[41] ;
  assign obuffer1_15_memory$ENA = EN_obuf1_15_portA_request_put ;
  assign obuffer1_15_memory$ENB = EN_obuf1_15_portB_request_put ;

  // submodule obuffer1_15_serverAdapterA_outDataCore
  assign obuffer1_15_serverAdapterA_outDataCore$D_IN =
	     obuffer1_15_memory$DOA ;
  assign obuffer1_15_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_15_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_15_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_15_portA_response_get &&
	     obuffer1_15_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_15_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_15_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_15_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_15_portA_response_get &&
	     !obuffer1_15_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_15_serverAdapterA_outDataCore$CLR = EN_obuf1_15_portAClear ;

  // submodule obuffer1_15_serverAdapterB_outDataCore
  assign obuffer1_15_serverAdapterB_outDataCore$D_IN =
	     obuffer1_15_memory$DOB ;
  assign obuffer1_15_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_15_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_15_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_15_portB_response_get &&
	     obuffer1_15_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_15_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_15_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_15_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_15_portB_response_get &&
	     !obuffer1_15_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_15_serverAdapterB_outDataCore$CLR = EN_obuf1_15_portBClear ;

  // submodule obuffer1_16_memory
  assign obuffer1_16_memory$ADDRA = obuf1_16_portA_request_put[39:32] ;
  assign obuffer1_16_memory$ADDRB = obuf1_16_portB_request_put[39:32] ;
  assign obuffer1_16_memory$DIA = obuf1_16_portA_request_put[31:0] ;
  assign obuffer1_16_memory$DIB = obuf1_16_portB_request_put[31:0] ;
  assign obuffer1_16_memory$WEA = obuf1_16_portA_request_put[41] ;
  assign obuffer1_16_memory$WEB = obuf1_16_portB_request_put[41] ;
  assign obuffer1_16_memory$ENA = EN_obuf1_16_portA_request_put ;
  assign obuffer1_16_memory$ENB = EN_obuf1_16_portB_request_put ;

  // submodule obuffer1_16_serverAdapterA_outDataCore
  assign obuffer1_16_serverAdapterA_outDataCore$D_IN =
	     obuffer1_16_memory$DOA ;
  assign obuffer1_16_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_16_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_16_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_16_portA_response_get &&
	     obuffer1_16_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_16_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_16_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_16_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_16_portA_response_get &&
	     !obuffer1_16_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_16_serverAdapterA_outDataCore$CLR = EN_obuf1_16_portAClear ;

  // submodule obuffer1_16_serverAdapterB_outDataCore
  assign obuffer1_16_serverAdapterB_outDataCore$D_IN =
	     obuffer1_16_memory$DOB ;
  assign obuffer1_16_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_16_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_16_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_16_portB_response_get &&
	     obuffer1_16_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_16_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_16_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_16_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_16_portB_response_get &&
	     !obuffer1_16_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_16_serverAdapterB_outDataCore$CLR = EN_obuf1_16_portBClear ;

  // submodule obuffer1_17_memory
  assign obuffer1_17_memory$ADDRA = obuf1_17_portA_request_put[39:32] ;
  assign obuffer1_17_memory$ADDRB = obuf1_17_portB_request_put[39:32] ;
  assign obuffer1_17_memory$DIA = obuf1_17_portA_request_put[31:0] ;
  assign obuffer1_17_memory$DIB = obuf1_17_portB_request_put[31:0] ;
  assign obuffer1_17_memory$WEA = obuf1_17_portA_request_put[41] ;
  assign obuffer1_17_memory$WEB = obuf1_17_portB_request_put[41] ;
  assign obuffer1_17_memory$ENA = EN_obuf1_17_portA_request_put ;
  assign obuffer1_17_memory$ENB = EN_obuf1_17_portB_request_put ;

  // submodule obuffer1_17_serverAdapterA_outDataCore
  assign obuffer1_17_serverAdapterA_outDataCore$D_IN =
	     obuffer1_17_memory$DOA ;
  assign obuffer1_17_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_17_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_17_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_17_portA_response_get &&
	     obuffer1_17_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_17_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_17_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_17_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_17_portA_response_get &&
	     !obuffer1_17_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_17_serverAdapterA_outDataCore$CLR = EN_obuf1_17_portAClear ;

  // submodule obuffer1_17_serverAdapterB_outDataCore
  assign obuffer1_17_serverAdapterB_outDataCore$D_IN =
	     obuffer1_17_memory$DOB ;
  assign obuffer1_17_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_17_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_17_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_17_portB_response_get &&
	     obuffer1_17_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_17_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_17_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_17_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_17_portB_response_get &&
	     !obuffer1_17_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_17_serverAdapterB_outDataCore$CLR = EN_obuf1_17_portBClear ;

  // submodule obuffer1_18_memory
  assign obuffer1_18_memory$ADDRA = obuf1_18_portA_request_put[39:32] ;
  assign obuffer1_18_memory$ADDRB = obuf1_18_portB_request_put[39:32] ;
  assign obuffer1_18_memory$DIA = obuf1_18_portA_request_put[31:0] ;
  assign obuffer1_18_memory$DIB = obuf1_18_portB_request_put[31:0] ;
  assign obuffer1_18_memory$WEA = obuf1_18_portA_request_put[41] ;
  assign obuffer1_18_memory$WEB = obuf1_18_portB_request_put[41] ;
  assign obuffer1_18_memory$ENA = EN_obuf1_18_portA_request_put ;
  assign obuffer1_18_memory$ENB = EN_obuf1_18_portB_request_put ;

  // submodule obuffer1_18_serverAdapterA_outDataCore
  assign obuffer1_18_serverAdapterA_outDataCore$D_IN =
	     obuffer1_18_memory$DOA ;
  assign obuffer1_18_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_18_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_18_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_18_portA_response_get &&
	     obuffer1_18_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_18_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_18_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_18_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_18_portA_response_get &&
	     !obuffer1_18_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_18_serverAdapterA_outDataCore$CLR = EN_obuf1_18_portAClear ;

  // submodule obuffer1_18_serverAdapterB_outDataCore
  assign obuffer1_18_serverAdapterB_outDataCore$D_IN =
	     obuffer1_18_memory$DOB ;
  assign obuffer1_18_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_18_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_18_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_18_portB_response_get &&
	     obuffer1_18_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_18_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_18_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_18_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_18_portB_response_get &&
	     !obuffer1_18_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_18_serverAdapterB_outDataCore$CLR = EN_obuf1_18_portBClear ;

  // submodule obuffer1_19_memory
  assign obuffer1_19_memory$ADDRA = obuf1_19_portA_request_put[39:32] ;
  assign obuffer1_19_memory$ADDRB = obuf1_19_portB_request_put[39:32] ;
  assign obuffer1_19_memory$DIA = obuf1_19_portA_request_put[31:0] ;
  assign obuffer1_19_memory$DIB = obuf1_19_portB_request_put[31:0] ;
  assign obuffer1_19_memory$WEA = obuf1_19_portA_request_put[41] ;
  assign obuffer1_19_memory$WEB = obuf1_19_portB_request_put[41] ;
  assign obuffer1_19_memory$ENA = EN_obuf1_19_portA_request_put ;
  assign obuffer1_19_memory$ENB = EN_obuf1_19_portB_request_put ;

  // submodule obuffer1_19_serverAdapterA_outDataCore
  assign obuffer1_19_serverAdapterA_outDataCore$D_IN =
	     obuffer1_19_memory$DOA ;
  assign obuffer1_19_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_19_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_19_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_19_portA_response_get &&
	     obuffer1_19_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_19_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_19_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_19_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_19_portA_response_get &&
	     !obuffer1_19_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_19_serverAdapterA_outDataCore$CLR = EN_obuf1_19_portAClear ;

  // submodule obuffer1_19_serverAdapterB_outDataCore
  assign obuffer1_19_serverAdapterB_outDataCore$D_IN =
	     obuffer1_19_memory$DOB ;
  assign obuffer1_19_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_19_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_19_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_19_portB_response_get &&
	     obuffer1_19_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_19_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_19_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_19_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_19_portB_response_get &&
	     !obuffer1_19_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_19_serverAdapterB_outDataCore$CLR = EN_obuf1_19_portBClear ;

  // submodule obuffer1_1_memory
  assign obuffer1_1_memory$ADDRA = obuf1_1_portA_request_put[39:32] ;
  assign obuffer1_1_memory$ADDRB = obuf1_1_portB_request_put[39:32] ;
  assign obuffer1_1_memory$DIA = obuf1_1_portA_request_put[31:0] ;
  assign obuffer1_1_memory$DIB = obuf1_1_portB_request_put[31:0] ;
  assign obuffer1_1_memory$WEA = obuf1_1_portA_request_put[41] ;
  assign obuffer1_1_memory$WEB = obuf1_1_portB_request_put[41] ;
  assign obuffer1_1_memory$ENA = EN_obuf1_1_portA_request_put ;
  assign obuffer1_1_memory$ENB = EN_obuf1_1_portB_request_put ;

  // submodule obuffer1_1_serverAdapterA_outDataCore
  assign obuffer1_1_serverAdapterA_outDataCore$D_IN = obuffer1_1_memory$DOA ;
  assign obuffer1_1_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_1_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_1_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_1_portA_response_get &&
	     obuffer1_1_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_1_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_1_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_1_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_1_portA_response_get &&
	     !obuffer1_1_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_1_serverAdapterA_outDataCore$CLR = EN_obuf1_1_portAClear ;

  // submodule obuffer1_1_serverAdapterB_outDataCore
  assign obuffer1_1_serverAdapterB_outDataCore$D_IN = obuffer1_1_memory$DOB ;
  assign obuffer1_1_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_1_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_1_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_1_portB_response_get &&
	     obuffer1_1_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_1_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_1_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_1_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_1_portB_response_get &&
	     !obuffer1_1_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_1_serverAdapterB_outDataCore$CLR = EN_obuf1_1_portBClear ;

  // submodule obuffer1_20_memory
  assign obuffer1_20_memory$ADDRA = obuf1_20_portA_request_put[39:32] ;
  assign obuffer1_20_memory$ADDRB = obuf1_20_portB_request_put[39:32] ;
  assign obuffer1_20_memory$DIA = obuf1_20_portA_request_put[31:0] ;
  assign obuffer1_20_memory$DIB = obuf1_20_portB_request_put[31:0] ;
  assign obuffer1_20_memory$WEA = obuf1_20_portA_request_put[41] ;
  assign obuffer1_20_memory$WEB = obuf1_20_portB_request_put[41] ;
  assign obuffer1_20_memory$ENA = EN_obuf1_20_portA_request_put ;
  assign obuffer1_20_memory$ENB = EN_obuf1_20_portB_request_put ;

  // submodule obuffer1_20_serverAdapterA_outDataCore
  assign obuffer1_20_serverAdapterA_outDataCore$D_IN =
	     obuffer1_20_memory$DOA ;
  assign obuffer1_20_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_20_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_20_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_20_portA_response_get &&
	     obuffer1_20_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_20_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_20_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_20_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_20_portA_response_get &&
	     !obuffer1_20_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_20_serverAdapterA_outDataCore$CLR = EN_obuf1_20_portAClear ;

  // submodule obuffer1_20_serverAdapterB_outDataCore
  assign obuffer1_20_serverAdapterB_outDataCore$D_IN =
	     obuffer1_20_memory$DOB ;
  assign obuffer1_20_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_20_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_20_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_20_portB_response_get &&
	     obuffer1_20_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_20_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_20_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_20_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_20_portB_response_get &&
	     !obuffer1_20_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_20_serverAdapterB_outDataCore$CLR = EN_obuf1_20_portBClear ;

  // submodule obuffer1_21_memory
  assign obuffer1_21_memory$ADDRA = obuf1_21_portA_request_put[39:32] ;
  assign obuffer1_21_memory$ADDRB = obuf1_21_portB_request_put[39:32] ;
  assign obuffer1_21_memory$DIA = obuf1_21_portA_request_put[31:0] ;
  assign obuffer1_21_memory$DIB = obuf1_21_portB_request_put[31:0] ;
  assign obuffer1_21_memory$WEA = obuf1_21_portA_request_put[41] ;
  assign obuffer1_21_memory$WEB = obuf1_21_portB_request_put[41] ;
  assign obuffer1_21_memory$ENA = EN_obuf1_21_portA_request_put ;
  assign obuffer1_21_memory$ENB = EN_obuf1_21_portB_request_put ;

  // submodule obuffer1_21_serverAdapterA_outDataCore
  assign obuffer1_21_serverAdapterA_outDataCore$D_IN =
	     obuffer1_21_memory$DOA ;
  assign obuffer1_21_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_21_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_21_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_21_portA_response_get &&
	     obuffer1_21_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_21_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_21_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_21_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_21_portA_response_get &&
	     !obuffer1_21_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_21_serverAdapterA_outDataCore$CLR = EN_obuf1_21_portAClear ;

  // submodule obuffer1_21_serverAdapterB_outDataCore
  assign obuffer1_21_serverAdapterB_outDataCore$D_IN =
	     obuffer1_21_memory$DOB ;
  assign obuffer1_21_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_21_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_21_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_21_portB_response_get &&
	     obuffer1_21_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_21_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_21_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_21_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_21_portB_response_get &&
	     !obuffer1_21_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_21_serverAdapterB_outDataCore$CLR = EN_obuf1_21_portBClear ;

  // submodule obuffer1_22_memory
  assign obuffer1_22_memory$ADDRA = obuf1_22_portA_request_put[39:32] ;
  assign obuffer1_22_memory$ADDRB = obuf1_22_portB_request_put[39:32] ;
  assign obuffer1_22_memory$DIA = obuf1_22_portA_request_put[31:0] ;
  assign obuffer1_22_memory$DIB = obuf1_22_portB_request_put[31:0] ;
  assign obuffer1_22_memory$WEA = obuf1_22_portA_request_put[41] ;
  assign obuffer1_22_memory$WEB = obuf1_22_portB_request_put[41] ;
  assign obuffer1_22_memory$ENA = EN_obuf1_22_portA_request_put ;
  assign obuffer1_22_memory$ENB = EN_obuf1_22_portB_request_put ;

  // submodule obuffer1_22_serverAdapterA_outDataCore
  assign obuffer1_22_serverAdapterA_outDataCore$D_IN =
	     obuffer1_22_memory$DOA ;
  assign obuffer1_22_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_22_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_22_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_22_portA_response_get &&
	     obuffer1_22_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_22_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_22_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_22_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_22_portA_response_get &&
	     !obuffer1_22_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_22_serverAdapterA_outDataCore$CLR = EN_obuf1_22_portAClear ;

  // submodule obuffer1_22_serverAdapterB_outDataCore
  assign obuffer1_22_serverAdapterB_outDataCore$D_IN =
	     obuffer1_22_memory$DOB ;
  assign obuffer1_22_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_22_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_22_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_22_portB_response_get &&
	     obuffer1_22_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_22_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_22_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_22_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_22_portB_response_get &&
	     !obuffer1_22_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_22_serverAdapterB_outDataCore$CLR = EN_obuf1_22_portBClear ;

  // submodule obuffer1_23_memory
  assign obuffer1_23_memory$ADDRA = obuf1_23_portA_request_put[39:32] ;
  assign obuffer1_23_memory$ADDRB = obuf1_23_portB_request_put[39:32] ;
  assign obuffer1_23_memory$DIA = obuf1_23_portA_request_put[31:0] ;
  assign obuffer1_23_memory$DIB = obuf1_23_portB_request_put[31:0] ;
  assign obuffer1_23_memory$WEA = obuf1_23_portA_request_put[41] ;
  assign obuffer1_23_memory$WEB = obuf1_23_portB_request_put[41] ;
  assign obuffer1_23_memory$ENA = EN_obuf1_23_portA_request_put ;
  assign obuffer1_23_memory$ENB = EN_obuf1_23_portB_request_put ;

  // submodule obuffer1_23_serverAdapterA_outDataCore
  assign obuffer1_23_serverAdapterA_outDataCore$D_IN =
	     obuffer1_23_memory$DOA ;
  assign obuffer1_23_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_23_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_23_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_23_portA_response_get &&
	     obuffer1_23_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_23_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_23_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_23_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_23_portA_response_get &&
	     !obuffer1_23_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_23_serverAdapterA_outDataCore$CLR = EN_obuf1_23_portAClear ;

  // submodule obuffer1_23_serverAdapterB_outDataCore
  assign obuffer1_23_serverAdapterB_outDataCore$D_IN =
	     obuffer1_23_memory$DOB ;
  assign obuffer1_23_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_23_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_23_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_23_portB_response_get &&
	     obuffer1_23_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_23_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_23_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_23_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_23_portB_response_get &&
	     !obuffer1_23_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_23_serverAdapterB_outDataCore$CLR = EN_obuf1_23_portBClear ;

  // submodule obuffer1_24_memory
  assign obuffer1_24_memory$ADDRA = obuf1_24_portA_request_put[39:32] ;
  assign obuffer1_24_memory$ADDRB = obuf1_24_portB_request_put[39:32] ;
  assign obuffer1_24_memory$DIA = obuf1_24_portA_request_put[31:0] ;
  assign obuffer1_24_memory$DIB = obuf1_24_portB_request_put[31:0] ;
  assign obuffer1_24_memory$WEA = obuf1_24_portA_request_put[41] ;
  assign obuffer1_24_memory$WEB = obuf1_24_portB_request_put[41] ;
  assign obuffer1_24_memory$ENA = EN_obuf1_24_portA_request_put ;
  assign obuffer1_24_memory$ENB = EN_obuf1_24_portB_request_put ;

  // submodule obuffer1_24_serverAdapterA_outDataCore
  assign obuffer1_24_serverAdapterA_outDataCore$D_IN =
	     obuffer1_24_memory$DOA ;
  assign obuffer1_24_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_24_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_24_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_24_portA_response_get &&
	     obuffer1_24_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_24_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_24_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_24_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_24_portA_response_get &&
	     !obuffer1_24_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_24_serverAdapterA_outDataCore$CLR = EN_obuf1_24_portAClear ;

  // submodule obuffer1_24_serverAdapterB_outDataCore
  assign obuffer1_24_serverAdapterB_outDataCore$D_IN =
	     obuffer1_24_memory$DOB ;
  assign obuffer1_24_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_24_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_24_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_24_portB_response_get &&
	     obuffer1_24_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_24_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_24_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_24_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_24_portB_response_get &&
	     !obuffer1_24_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_24_serverAdapterB_outDataCore$CLR = EN_obuf1_24_portBClear ;

  // submodule obuffer1_25_memory
  assign obuffer1_25_memory$ADDRA = obuf1_25_portA_request_put[39:32] ;
  assign obuffer1_25_memory$ADDRB = obuf1_25_portB_request_put[39:32] ;
  assign obuffer1_25_memory$DIA = obuf1_25_portA_request_put[31:0] ;
  assign obuffer1_25_memory$DIB = obuf1_25_portB_request_put[31:0] ;
  assign obuffer1_25_memory$WEA = obuf1_25_portA_request_put[41] ;
  assign obuffer1_25_memory$WEB = obuf1_25_portB_request_put[41] ;
  assign obuffer1_25_memory$ENA = EN_obuf1_25_portA_request_put ;
  assign obuffer1_25_memory$ENB = EN_obuf1_25_portB_request_put ;

  // submodule obuffer1_25_serverAdapterA_outDataCore
  assign obuffer1_25_serverAdapterA_outDataCore$D_IN =
	     obuffer1_25_memory$DOA ;
  assign obuffer1_25_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_25_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_25_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_25_portA_response_get &&
	     obuffer1_25_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_25_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_25_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_25_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_25_portA_response_get &&
	     !obuffer1_25_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_25_serverAdapterA_outDataCore$CLR = EN_obuf1_25_portAClear ;

  // submodule obuffer1_25_serverAdapterB_outDataCore
  assign obuffer1_25_serverAdapterB_outDataCore$D_IN =
	     obuffer1_25_memory$DOB ;
  assign obuffer1_25_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_25_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_25_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_25_portB_response_get &&
	     obuffer1_25_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_25_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_25_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_25_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_25_portB_response_get &&
	     !obuffer1_25_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_25_serverAdapterB_outDataCore$CLR = EN_obuf1_25_portBClear ;

  // submodule obuffer1_26_memory
  assign obuffer1_26_memory$ADDRA = obuf1_26_portA_request_put[39:32] ;
  assign obuffer1_26_memory$ADDRB = obuf1_26_portB_request_put[39:32] ;
  assign obuffer1_26_memory$DIA = obuf1_26_portA_request_put[31:0] ;
  assign obuffer1_26_memory$DIB = obuf1_26_portB_request_put[31:0] ;
  assign obuffer1_26_memory$WEA = obuf1_26_portA_request_put[41] ;
  assign obuffer1_26_memory$WEB = obuf1_26_portB_request_put[41] ;
  assign obuffer1_26_memory$ENA = EN_obuf1_26_portA_request_put ;
  assign obuffer1_26_memory$ENB = EN_obuf1_26_portB_request_put ;

  // submodule obuffer1_26_serverAdapterA_outDataCore
  assign obuffer1_26_serverAdapterA_outDataCore$D_IN =
	     obuffer1_26_memory$DOA ;
  assign obuffer1_26_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_26_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_26_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_26_portA_response_get &&
	     obuffer1_26_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_26_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_26_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_26_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_26_portA_response_get &&
	     !obuffer1_26_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_26_serverAdapterA_outDataCore$CLR = EN_obuf1_26_portAClear ;

  // submodule obuffer1_26_serverAdapterB_outDataCore
  assign obuffer1_26_serverAdapterB_outDataCore$D_IN =
	     obuffer1_26_memory$DOB ;
  assign obuffer1_26_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_26_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_26_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_26_portB_response_get &&
	     obuffer1_26_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_26_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_26_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_26_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_26_portB_response_get &&
	     !obuffer1_26_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_26_serverAdapterB_outDataCore$CLR = EN_obuf1_26_portBClear ;

  // submodule obuffer1_27_memory
  assign obuffer1_27_memory$ADDRA = obuf1_27_portA_request_put[39:32] ;
  assign obuffer1_27_memory$ADDRB = obuf1_27_portB_request_put[39:32] ;
  assign obuffer1_27_memory$DIA = obuf1_27_portA_request_put[31:0] ;
  assign obuffer1_27_memory$DIB = obuf1_27_portB_request_put[31:0] ;
  assign obuffer1_27_memory$WEA = obuf1_27_portA_request_put[41] ;
  assign obuffer1_27_memory$WEB = obuf1_27_portB_request_put[41] ;
  assign obuffer1_27_memory$ENA = EN_obuf1_27_portA_request_put ;
  assign obuffer1_27_memory$ENB = EN_obuf1_27_portB_request_put ;

  // submodule obuffer1_27_serverAdapterA_outDataCore
  assign obuffer1_27_serverAdapterA_outDataCore$D_IN =
	     obuffer1_27_memory$DOA ;
  assign obuffer1_27_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_27_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_27_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_27_portA_response_get &&
	     obuffer1_27_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_27_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_27_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_27_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_27_portA_response_get &&
	     !obuffer1_27_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_27_serverAdapterA_outDataCore$CLR = EN_obuf1_27_portAClear ;

  // submodule obuffer1_27_serverAdapterB_outDataCore
  assign obuffer1_27_serverAdapterB_outDataCore$D_IN =
	     obuffer1_27_memory$DOB ;
  assign obuffer1_27_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_27_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_27_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_27_portB_response_get &&
	     obuffer1_27_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_27_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_27_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_27_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_27_portB_response_get &&
	     !obuffer1_27_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_27_serverAdapterB_outDataCore$CLR = EN_obuf1_27_portBClear ;

  // submodule obuffer1_28_memory
  assign obuffer1_28_memory$ADDRA = obuf1_28_portA_request_put[39:32] ;
  assign obuffer1_28_memory$ADDRB = obuf1_28_portB_request_put[39:32] ;
  assign obuffer1_28_memory$DIA = obuf1_28_portA_request_put[31:0] ;
  assign obuffer1_28_memory$DIB = obuf1_28_portB_request_put[31:0] ;
  assign obuffer1_28_memory$WEA = obuf1_28_portA_request_put[41] ;
  assign obuffer1_28_memory$WEB = obuf1_28_portB_request_put[41] ;
  assign obuffer1_28_memory$ENA = EN_obuf1_28_portA_request_put ;
  assign obuffer1_28_memory$ENB = EN_obuf1_28_portB_request_put ;

  // submodule obuffer1_28_serverAdapterA_outDataCore
  assign obuffer1_28_serverAdapterA_outDataCore$D_IN =
	     obuffer1_28_memory$DOA ;
  assign obuffer1_28_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_28_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_28_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_28_portA_response_get &&
	     obuffer1_28_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_28_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_28_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_28_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_28_portA_response_get &&
	     !obuffer1_28_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_28_serverAdapterA_outDataCore$CLR = EN_obuf1_28_portAClear ;

  // submodule obuffer1_28_serverAdapterB_outDataCore
  assign obuffer1_28_serverAdapterB_outDataCore$D_IN =
	     obuffer1_28_memory$DOB ;
  assign obuffer1_28_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_28_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_28_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_28_portB_response_get &&
	     obuffer1_28_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_28_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_28_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_28_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_28_portB_response_get &&
	     !obuffer1_28_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_28_serverAdapterB_outDataCore$CLR = EN_obuf1_28_portBClear ;

  // submodule obuffer1_29_memory
  assign obuffer1_29_memory$ADDRA = obuf1_29_portA_request_put[39:32] ;
  assign obuffer1_29_memory$ADDRB = obuf1_29_portB_request_put[39:32] ;
  assign obuffer1_29_memory$DIA = obuf1_29_portA_request_put[31:0] ;
  assign obuffer1_29_memory$DIB = obuf1_29_portB_request_put[31:0] ;
  assign obuffer1_29_memory$WEA = obuf1_29_portA_request_put[41] ;
  assign obuffer1_29_memory$WEB = obuf1_29_portB_request_put[41] ;
  assign obuffer1_29_memory$ENA = EN_obuf1_29_portA_request_put ;
  assign obuffer1_29_memory$ENB = EN_obuf1_29_portB_request_put ;

  // submodule obuffer1_29_serverAdapterA_outDataCore
  assign obuffer1_29_serverAdapterA_outDataCore$D_IN =
	     obuffer1_29_memory$DOA ;
  assign obuffer1_29_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_29_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_29_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_29_portA_response_get &&
	     obuffer1_29_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_29_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_29_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_29_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_29_portA_response_get &&
	     !obuffer1_29_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_29_serverAdapterA_outDataCore$CLR = EN_obuf1_29_portAClear ;

  // submodule obuffer1_29_serverAdapterB_outDataCore
  assign obuffer1_29_serverAdapterB_outDataCore$D_IN =
	     obuffer1_29_memory$DOB ;
  assign obuffer1_29_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_29_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_29_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_29_portB_response_get &&
	     obuffer1_29_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_29_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_29_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_29_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_29_portB_response_get &&
	     !obuffer1_29_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_29_serverAdapterB_outDataCore$CLR = EN_obuf1_29_portBClear ;

  // submodule obuffer1_2_memory
  assign obuffer1_2_memory$ADDRA = obuf1_2_portA_request_put[39:32] ;
  assign obuffer1_2_memory$ADDRB = obuf1_2_portB_request_put[39:32] ;
  assign obuffer1_2_memory$DIA = obuf1_2_portA_request_put[31:0] ;
  assign obuffer1_2_memory$DIB = obuf1_2_portB_request_put[31:0] ;
  assign obuffer1_2_memory$WEA = obuf1_2_portA_request_put[41] ;
  assign obuffer1_2_memory$WEB = obuf1_2_portB_request_put[41] ;
  assign obuffer1_2_memory$ENA = EN_obuf1_2_portA_request_put ;
  assign obuffer1_2_memory$ENB = EN_obuf1_2_portB_request_put ;

  // submodule obuffer1_2_serverAdapterA_outDataCore
  assign obuffer1_2_serverAdapterA_outDataCore$D_IN = obuffer1_2_memory$DOA ;
  assign obuffer1_2_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_2_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_2_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_2_portA_response_get &&
	     obuffer1_2_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_2_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_2_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_2_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_2_portA_response_get &&
	     !obuffer1_2_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_2_serverAdapterA_outDataCore$CLR = EN_obuf1_2_portAClear ;

  // submodule obuffer1_2_serverAdapterB_outDataCore
  assign obuffer1_2_serverAdapterB_outDataCore$D_IN = obuffer1_2_memory$DOB ;
  assign obuffer1_2_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_2_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_2_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_2_portB_response_get &&
	     obuffer1_2_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_2_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_2_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_2_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_2_portB_response_get &&
	     !obuffer1_2_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_2_serverAdapterB_outDataCore$CLR = EN_obuf1_2_portBClear ;

  // submodule obuffer1_30_memory
  assign obuffer1_30_memory$ADDRA = obuf1_30_portA_request_put[39:32] ;
  assign obuffer1_30_memory$ADDRB = obuf1_30_portB_request_put[39:32] ;
  assign obuffer1_30_memory$DIA = obuf1_30_portA_request_put[31:0] ;
  assign obuffer1_30_memory$DIB = obuf1_30_portB_request_put[31:0] ;
  assign obuffer1_30_memory$WEA = obuf1_30_portA_request_put[41] ;
  assign obuffer1_30_memory$WEB = obuf1_30_portB_request_put[41] ;
  assign obuffer1_30_memory$ENA = EN_obuf1_30_portA_request_put ;
  assign obuffer1_30_memory$ENB = EN_obuf1_30_portB_request_put ;

  // submodule obuffer1_30_serverAdapterA_outDataCore
  assign obuffer1_30_serverAdapterA_outDataCore$D_IN =
	     obuffer1_30_memory$DOA ;
  assign obuffer1_30_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_30_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_30_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_30_portA_response_get &&
	     obuffer1_30_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_30_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_30_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_30_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_30_portA_response_get &&
	     !obuffer1_30_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_30_serverAdapterA_outDataCore$CLR = EN_obuf1_30_portAClear ;

  // submodule obuffer1_30_serverAdapterB_outDataCore
  assign obuffer1_30_serverAdapterB_outDataCore$D_IN =
	     obuffer1_30_memory$DOB ;
  assign obuffer1_30_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_30_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_30_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_30_portB_response_get &&
	     obuffer1_30_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_30_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_30_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_30_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_30_portB_response_get &&
	     !obuffer1_30_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_30_serverAdapterB_outDataCore$CLR = EN_obuf1_30_portBClear ;

  // submodule obuffer1_31_memory
  assign obuffer1_31_memory$ADDRA = obuf1_31_portA_request_put[39:32] ;
  assign obuffer1_31_memory$ADDRB = obuf1_31_portB_request_put[39:32] ;
  assign obuffer1_31_memory$DIA = obuf1_31_portA_request_put[31:0] ;
  assign obuffer1_31_memory$DIB = obuf1_31_portB_request_put[31:0] ;
  assign obuffer1_31_memory$WEA = obuf1_31_portA_request_put[41] ;
  assign obuffer1_31_memory$WEB = obuf1_31_portB_request_put[41] ;
  assign obuffer1_31_memory$ENA = EN_obuf1_31_portA_request_put ;
  assign obuffer1_31_memory$ENB = EN_obuf1_31_portB_request_put ;

  // submodule obuffer1_31_serverAdapterA_outDataCore
  assign obuffer1_31_serverAdapterA_outDataCore$D_IN =
	     obuffer1_31_memory$DOA ;
  assign obuffer1_31_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_31_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_31_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_31_portA_response_get &&
	     obuffer1_31_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_31_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_31_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_31_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_31_portA_response_get &&
	     !obuffer1_31_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_31_serverAdapterA_outDataCore$CLR = EN_obuf1_31_portAClear ;

  // submodule obuffer1_31_serverAdapterB_outDataCore
  assign obuffer1_31_serverAdapterB_outDataCore$D_IN =
	     obuffer1_31_memory$DOB ;
  assign obuffer1_31_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_31_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_31_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_31_portB_response_get &&
	     obuffer1_31_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_31_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_31_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_31_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_31_portB_response_get &&
	     !obuffer1_31_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_31_serverAdapterB_outDataCore$CLR = EN_obuf1_31_portBClear ;

  // submodule obuffer1_3_memory
  assign obuffer1_3_memory$ADDRA = obuf1_3_portA_request_put[39:32] ;
  assign obuffer1_3_memory$ADDRB = obuf1_3_portB_request_put[39:32] ;
  assign obuffer1_3_memory$DIA = obuf1_3_portA_request_put[31:0] ;
  assign obuffer1_3_memory$DIB = obuf1_3_portB_request_put[31:0] ;
  assign obuffer1_3_memory$WEA = obuf1_3_portA_request_put[41] ;
  assign obuffer1_3_memory$WEB = obuf1_3_portB_request_put[41] ;
  assign obuffer1_3_memory$ENA = EN_obuf1_3_portA_request_put ;
  assign obuffer1_3_memory$ENB = EN_obuf1_3_portB_request_put ;

  // submodule obuffer1_3_serverAdapterA_outDataCore
  assign obuffer1_3_serverAdapterA_outDataCore$D_IN = obuffer1_3_memory$DOA ;
  assign obuffer1_3_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_3_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_3_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_3_portA_response_get &&
	     obuffer1_3_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_3_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_3_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_3_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_3_portA_response_get &&
	     !obuffer1_3_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_3_serverAdapterA_outDataCore$CLR = EN_obuf1_3_portAClear ;

  // submodule obuffer1_3_serverAdapterB_outDataCore
  assign obuffer1_3_serverAdapterB_outDataCore$D_IN = obuffer1_3_memory$DOB ;
  assign obuffer1_3_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_3_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_3_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_3_portB_response_get &&
	     obuffer1_3_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_3_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_3_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_3_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_3_portB_response_get &&
	     !obuffer1_3_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_3_serverAdapterB_outDataCore$CLR = EN_obuf1_3_portBClear ;

  // submodule obuffer1_4_memory
  assign obuffer1_4_memory$ADDRA = obuf1_4_portA_request_put[39:32] ;
  assign obuffer1_4_memory$ADDRB = obuf1_4_portB_request_put[39:32] ;
  assign obuffer1_4_memory$DIA = obuf1_4_portA_request_put[31:0] ;
  assign obuffer1_4_memory$DIB = obuf1_4_portB_request_put[31:0] ;
  assign obuffer1_4_memory$WEA = obuf1_4_portA_request_put[41] ;
  assign obuffer1_4_memory$WEB = obuf1_4_portB_request_put[41] ;
  assign obuffer1_4_memory$ENA = EN_obuf1_4_portA_request_put ;
  assign obuffer1_4_memory$ENB = EN_obuf1_4_portB_request_put ;

  // submodule obuffer1_4_serverAdapterA_outDataCore
  assign obuffer1_4_serverAdapterA_outDataCore$D_IN = obuffer1_4_memory$DOA ;
  assign obuffer1_4_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_4_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_4_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_4_portA_response_get &&
	     obuffer1_4_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_4_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_4_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_4_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_4_portA_response_get &&
	     !obuffer1_4_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_4_serverAdapterA_outDataCore$CLR = EN_obuf1_4_portAClear ;

  // submodule obuffer1_4_serverAdapterB_outDataCore
  assign obuffer1_4_serverAdapterB_outDataCore$D_IN = obuffer1_4_memory$DOB ;
  assign obuffer1_4_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_4_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_4_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_4_portB_response_get &&
	     obuffer1_4_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_4_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_4_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_4_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_4_portB_response_get &&
	     !obuffer1_4_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_4_serverAdapterB_outDataCore$CLR = EN_obuf1_4_portBClear ;

  // submodule obuffer1_5_memory
  assign obuffer1_5_memory$ADDRA = obuf1_5_portA_request_put[39:32] ;
  assign obuffer1_5_memory$ADDRB = obuf1_5_portB_request_put[39:32] ;
  assign obuffer1_5_memory$DIA = obuf1_5_portA_request_put[31:0] ;
  assign obuffer1_5_memory$DIB = obuf1_5_portB_request_put[31:0] ;
  assign obuffer1_5_memory$WEA = obuf1_5_portA_request_put[41] ;
  assign obuffer1_5_memory$WEB = obuf1_5_portB_request_put[41] ;
  assign obuffer1_5_memory$ENA = EN_obuf1_5_portA_request_put ;
  assign obuffer1_5_memory$ENB = EN_obuf1_5_portB_request_put ;

  // submodule obuffer1_5_serverAdapterA_outDataCore
  assign obuffer1_5_serverAdapterA_outDataCore$D_IN = obuffer1_5_memory$DOA ;
  assign obuffer1_5_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_5_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_5_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_5_portA_response_get &&
	     obuffer1_5_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_5_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_5_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_5_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_5_portA_response_get &&
	     !obuffer1_5_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_5_serverAdapterA_outDataCore$CLR = EN_obuf1_5_portAClear ;

  // submodule obuffer1_5_serverAdapterB_outDataCore
  assign obuffer1_5_serverAdapterB_outDataCore$D_IN = obuffer1_5_memory$DOB ;
  assign obuffer1_5_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_5_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_5_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_5_portB_response_get &&
	     obuffer1_5_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_5_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_5_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_5_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_5_portB_response_get &&
	     !obuffer1_5_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_5_serverAdapterB_outDataCore$CLR = EN_obuf1_5_portBClear ;

  // submodule obuffer1_6_memory
  assign obuffer1_6_memory$ADDRA = obuf1_6_portA_request_put[39:32] ;
  assign obuffer1_6_memory$ADDRB = obuf1_6_portB_request_put[39:32] ;
  assign obuffer1_6_memory$DIA = obuf1_6_portA_request_put[31:0] ;
  assign obuffer1_6_memory$DIB = obuf1_6_portB_request_put[31:0] ;
  assign obuffer1_6_memory$WEA = obuf1_6_portA_request_put[41] ;
  assign obuffer1_6_memory$WEB = obuf1_6_portB_request_put[41] ;
  assign obuffer1_6_memory$ENA = EN_obuf1_6_portA_request_put ;
  assign obuffer1_6_memory$ENB = EN_obuf1_6_portB_request_put ;

  // submodule obuffer1_6_serverAdapterA_outDataCore
  assign obuffer1_6_serverAdapterA_outDataCore$D_IN = obuffer1_6_memory$DOA ;
  assign obuffer1_6_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_6_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_6_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_6_portA_response_get &&
	     obuffer1_6_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_6_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_6_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_6_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_6_portA_response_get &&
	     !obuffer1_6_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_6_serverAdapterA_outDataCore$CLR = EN_obuf1_6_portAClear ;

  // submodule obuffer1_6_serverAdapterB_outDataCore
  assign obuffer1_6_serverAdapterB_outDataCore$D_IN = obuffer1_6_memory$DOB ;
  assign obuffer1_6_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_6_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_6_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_6_portB_response_get &&
	     obuffer1_6_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_6_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_6_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_6_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_6_portB_response_get &&
	     !obuffer1_6_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_6_serverAdapterB_outDataCore$CLR = EN_obuf1_6_portBClear ;

  // submodule obuffer1_7_memory
  assign obuffer1_7_memory$ADDRA = obuf1_7_portA_request_put[39:32] ;
  assign obuffer1_7_memory$ADDRB = obuf1_7_portB_request_put[39:32] ;
  assign obuffer1_7_memory$DIA = obuf1_7_portA_request_put[31:0] ;
  assign obuffer1_7_memory$DIB = obuf1_7_portB_request_put[31:0] ;
  assign obuffer1_7_memory$WEA = obuf1_7_portA_request_put[41] ;
  assign obuffer1_7_memory$WEB = obuf1_7_portB_request_put[41] ;
  assign obuffer1_7_memory$ENA = EN_obuf1_7_portA_request_put ;
  assign obuffer1_7_memory$ENB = EN_obuf1_7_portB_request_put ;

  // submodule obuffer1_7_serverAdapterA_outDataCore
  assign obuffer1_7_serverAdapterA_outDataCore$D_IN = obuffer1_7_memory$DOA ;
  assign obuffer1_7_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_7_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_7_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_7_portA_response_get &&
	     obuffer1_7_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_7_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_7_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_7_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_7_portA_response_get &&
	     !obuffer1_7_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_7_serverAdapterA_outDataCore$CLR = EN_obuf1_7_portAClear ;

  // submodule obuffer1_7_serverAdapterB_outDataCore
  assign obuffer1_7_serverAdapterB_outDataCore$D_IN = obuffer1_7_memory$DOB ;
  assign obuffer1_7_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_7_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_7_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_7_portB_response_get &&
	     obuffer1_7_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_7_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_7_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_7_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_7_portB_response_get &&
	     !obuffer1_7_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_7_serverAdapterB_outDataCore$CLR = EN_obuf1_7_portBClear ;

  // submodule obuffer1_8_memory
  assign obuffer1_8_memory$ADDRA = obuf1_8_portA_request_put[39:32] ;
  assign obuffer1_8_memory$ADDRB = obuf1_8_portB_request_put[39:32] ;
  assign obuffer1_8_memory$DIA = obuf1_8_portA_request_put[31:0] ;
  assign obuffer1_8_memory$DIB = obuf1_8_portB_request_put[31:0] ;
  assign obuffer1_8_memory$WEA = obuf1_8_portA_request_put[41] ;
  assign obuffer1_8_memory$WEB = obuf1_8_portB_request_put[41] ;
  assign obuffer1_8_memory$ENA = EN_obuf1_8_portA_request_put ;
  assign obuffer1_8_memory$ENB = EN_obuf1_8_portB_request_put ;

  // submodule obuffer1_8_serverAdapterA_outDataCore
  assign obuffer1_8_serverAdapterA_outDataCore$D_IN = obuffer1_8_memory$DOA ;
  assign obuffer1_8_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_8_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_8_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_8_portA_response_get &&
	     obuffer1_8_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_8_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_8_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_8_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_8_portA_response_get &&
	     !obuffer1_8_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_8_serverAdapterA_outDataCore$CLR = EN_obuf1_8_portAClear ;

  // submodule obuffer1_8_serverAdapterB_outDataCore
  assign obuffer1_8_serverAdapterB_outDataCore$D_IN = obuffer1_8_memory$DOB ;
  assign obuffer1_8_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_8_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_8_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_8_portB_response_get &&
	     obuffer1_8_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_8_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_8_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_8_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_8_portB_response_get &&
	     !obuffer1_8_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_8_serverAdapterB_outDataCore$CLR = EN_obuf1_8_portBClear ;

  // submodule obuffer1_9_memory
  assign obuffer1_9_memory$ADDRA = obuf1_9_portA_request_put[39:32] ;
  assign obuffer1_9_memory$ADDRB = obuf1_9_portB_request_put[39:32] ;
  assign obuffer1_9_memory$DIA = obuf1_9_portA_request_put[31:0] ;
  assign obuffer1_9_memory$DIB = obuf1_9_portB_request_put[31:0] ;
  assign obuffer1_9_memory$WEA = obuf1_9_portA_request_put[41] ;
  assign obuffer1_9_memory$WEB = obuf1_9_portB_request_put[41] ;
  assign obuffer1_9_memory$ENA = EN_obuf1_9_portA_request_put ;
  assign obuffer1_9_memory$ENB = EN_obuf1_9_portB_request_put ;

  // submodule obuffer1_9_serverAdapterA_outDataCore
  assign obuffer1_9_serverAdapterA_outDataCore$D_IN = obuffer1_9_memory$DOA ;
  assign obuffer1_9_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_9_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_9_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf1_9_portA_response_get &&
	     obuffer1_9_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_9_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_9_serverAdapterA_outData_enqAndDeq ||
	     obuffer1_9_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf1_9_portA_response_get &&
	     !obuffer1_9_serverAdapterA_outData_enqData$whas ;
  assign obuffer1_9_serverAdapterA_outDataCore$CLR = EN_obuf1_9_portAClear ;

  // submodule obuffer1_9_serverAdapterB_outDataCore
  assign obuffer1_9_serverAdapterB_outDataCore$D_IN = obuffer1_9_memory$DOB ;
  assign obuffer1_9_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer1_9_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_9_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf1_9_portB_response_get &&
	     obuffer1_9_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_9_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer1_9_serverAdapterB_outData_enqAndDeq ||
	     obuffer1_9_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf1_9_portB_response_get &&
	     !obuffer1_9_serverAdapterB_outData_enqData$whas ;
  assign obuffer1_9_serverAdapterB_outDataCore$CLR = EN_obuf1_9_portBClear ;

  // submodule obuffer2_0_memory
  assign obuffer2_0_memory$ADDRA = obuf2_0_portA_request_put[39:32] ;
  assign obuffer2_0_memory$ADDRB = obuf2_0_portB_request_put[39:32] ;
  assign obuffer2_0_memory$DIA = obuf2_0_portA_request_put[31:0] ;
  assign obuffer2_0_memory$DIB = obuf2_0_portB_request_put[31:0] ;
  assign obuffer2_0_memory$WEA = obuf2_0_portA_request_put[41] ;
  assign obuffer2_0_memory$WEB = obuf2_0_portB_request_put[41] ;
  assign obuffer2_0_memory$ENA = EN_obuf2_0_portA_request_put ;
  assign obuffer2_0_memory$ENB = EN_obuf2_0_portB_request_put ;

  // submodule obuffer2_0_serverAdapterA_outDataCore
  assign obuffer2_0_serverAdapterA_outDataCore$D_IN = obuffer2_0_memory$DOA ;
  assign obuffer2_0_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_0_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_0_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_0_portA_response_get &&
	     obuffer2_0_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_0_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_0_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_0_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_0_portA_response_get &&
	     !obuffer2_0_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_0_serverAdapterA_outDataCore$CLR = EN_obuf2_0_portAClear ;

  // submodule obuffer2_0_serverAdapterB_outDataCore
  assign obuffer2_0_serverAdapterB_outDataCore$D_IN = obuffer2_0_memory$DOB ;
  assign obuffer2_0_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_0_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_0_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_0_portB_response_get &&
	     obuffer2_0_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_0_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_0_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_0_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_0_portB_response_get &&
	     !obuffer2_0_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_0_serverAdapterB_outDataCore$CLR = EN_obuf2_0_portBClear ;

  // submodule obuffer2_10_memory
  assign obuffer2_10_memory$ADDRA = obuf2_10_portA_request_put[39:32] ;
  assign obuffer2_10_memory$ADDRB = obuf2_10_portB_request_put[39:32] ;
  assign obuffer2_10_memory$DIA = obuf2_10_portA_request_put[31:0] ;
  assign obuffer2_10_memory$DIB = obuf2_10_portB_request_put[31:0] ;
  assign obuffer2_10_memory$WEA = obuf2_10_portA_request_put[41] ;
  assign obuffer2_10_memory$WEB = obuf2_10_portB_request_put[41] ;
  assign obuffer2_10_memory$ENA = EN_obuf2_10_portA_request_put ;
  assign obuffer2_10_memory$ENB = EN_obuf2_10_portB_request_put ;

  // submodule obuffer2_10_serverAdapterA_outDataCore
  assign obuffer2_10_serverAdapterA_outDataCore$D_IN =
	     obuffer2_10_memory$DOA ;
  assign obuffer2_10_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_10_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_10_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_10_portA_response_get &&
	     obuffer2_10_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_10_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_10_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_10_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_10_portA_response_get &&
	     !obuffer2_10_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_10_serverAdapterA_outDataCore$CLR = EN_obuf2_10_portAClear ;

  // submodule obuffer2_10_serverAdapterB_outDataCore
  assign obuffer2_10_serverAdapterB_outDataCore$D_IN =
	     obuffer2_10_memory$DOB ;
  assign obuffer2_10_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_10_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_10_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_10_portB_response_get &&
	     obuffer2_10_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_10_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_10_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_10_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_10_portB_response_get &&
	     !obuffer2_10_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_10_serverAdapterB_outDataCore$CLR = EN_obuf2_10_portBClear ;

  // submodule obuffer2_11_memory
  assign obuffer2_11_memory$ADDRA = obuf2_11_portA_request_put[39:32] ;
  assign obuffer2_11_memory$ADDRB = obuf2_11_portB_request_put[39:32] ;
  assign obuffer2_11_memory$DIA = obuf2_11_portA_request_put[31:0] ;
  assign obuffer2_11_memory$DIB = obuf2_11_portB_request_put[31:0] ;
  assign obuffer2_11_memory$WEA = obuf2_11_portA_request_put[41] ;
  assign obuffer2_11_memory$WEB = obuf2_11_portB_request_put[41] ;
  assign obuffer2_11_memory$ENA = EN_obuf2_11_portA_request_put ;
  assign obuffer2_11_memory$ENB = EN_obuf2_11_portB_request_put ;

  // submodule obuffer2_11_serverAdapterA_outDataCore
  assign obuffer2_11_serverAdapterA_outDataCore$D_IN =
	     obuffer2_11_memory$DOA ;
  assign obuffer2_11_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_11_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_11_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_11_portA_response_get &&
	     obuffer2_11_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_11_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_11_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_11_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_11_portA_response_get &&
	     !obuffer2_11_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_11_serverAdapterA_outDataCore$CLR = EN_obuf2_11_portAClear ;

  // submodule obuffer2_11_serverAdapterB_outDataCore
  assign obuffer2_11_serverAdapterB_outDataCore$D_IN =
	     obuffer2_11_memory$DOB ;
  assign obuffer2_11_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_11_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_11_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_11_portB_response_get &&
	     obuffer2_11_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_11_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_11_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_11_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_11_portB_response_get &&
	     !obuffer2_11_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_11_serverAdapterB_outDataCore$CLR = EN_obuf2_11_portBClear ;

  // submodule obuffer2_12_memory
  assign obuffer2_12_memory$ADDRA = obuf2_12_portA_request_put[39:32] ;
  assign obuffer2_12_memory$ADDRB = obuf2_12_portB_request_put[39:32] ;
  assign obuffer2_12_memory$DIA = obuf2_12_portA_request_put[31:0] ;
  assign obuffer2_12_memory$DIB = obuf2_12_portB_request_put[31:0] ;
  assign obuffer2_12_memory$WEA = obuf2_12_portA_request_put[41] ;
  assign obuffer2_12_memory$WEB = obuf2_12_portB_request_put[41] ;
  assign obuffer2_12_memory$ENA = EN_obuf2_12_portA_request_put ;
  assign obuffer2_12_memory$ENB = EN_obuf2_12_portB_request_put ;

  // submodule obuffer2_12_serverAdapterA_outDataCore
  assign obuffer2_12_serverAdapterA_outDataCore$D_IN =
	     obuffer2_12_memory$DOA ;
  assign obuffer2_12_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_12_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_12_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_12_portA_response_get &&
	     obuffer2_12_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_12_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_12_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_12_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_12_portA_response_get &&
	     !obuffer2_12_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_12_serverAdapterA_outDataCore$CLR = EN_obuf2_12_portAClear ;

  // submodule obuffer2_12_serverAdapterB_outDataCore
  assign obuffer2_12_serverAdapterB_outDataCore$D_IN =
	     obuffer2_12_memory$DOB ;
  assign obuffer2_12_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_12_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_12_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_12_portB_response_get &&
	     obuffer2_12_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_12_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_12_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_12_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_12_portB_response_get &&
	     !obuffer2_12_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_12_serverAdapterB_outDataCore$CLR = EN_obuf2_12_portBClear ;

  // submodule obuffer2_13_memory
  assign obuffer2_13_memory$ADDRA = obuf2_13_portA_request_put[39:32] ;
  assign obuffer2_13_memory$ADDRB = obuf2_13_portB_request_put[39:32] ;
  assign obuffer2_13_memory$DIA = obuf2_13_portA_request_put[31:0] ;
  assign obuffer2_13_memory$DIB = obuf2_13_portB_request_put[31:0] ;
  assign obuffer2_13_memory$WEA = obuf2_13_portA_request_put[41] ;
  assign obuffer2_13_memory$WEB = obuf2_13_portB_request_put[41] ;
  assign obuffer2_13_memory$ENA = EN_obuf2_13_portA_request_put ;
  assign obuffer2_13_memory$ENB = EN_obuf2_13_portB_request_put ;

  // submodule obuffer2_13_serverAdapterA_outDataCore
  assign obuffer2_13_serverAdapterA_outDataCore$D_IN =
	     obuffer2_13_memory$DOA ;
  assign obuffer2_13_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_13_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_13_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_13_portA_response_get &&
	     obuffer2_13_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_13_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_13_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_13_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_13_portA_response_get &&
	     !obuffer2_13_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_13_serverAdapterA_outDataCore$CLR = EN_obuf2_13_portAClear ;

  // submodule obuffer2_13_serverAdapterB_outDataCore
  assign obuffer2_13_serverAdapterB_outDataCore$D_IN =
	     obuffer2_13_memory$DOB ;
  assign obuffer2_13_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_13_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_13_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_13_portB_response_get &&
	     obuffer2_13_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_13_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_13_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_13_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_13_portB_response_get &&
	     !obuffer2_13_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_13_serverAdapterB_outDataCore$CLR = EN_obuf2_13_portBClear ;

  // submodule obuffer2_14_memory
  assign obuffer2_14_memory$ADDRA = obuf2_14_portA_request_put[39:32] ;
  assign obuffer2_14_memory$ADDRB = obuf2_14_portB_request_put[39:32] ;
  assign obuffer2_14_memory$DIA = obuf2_14_portA_request_put[31:0] ;
  assign obuffer2_14_memory$DIB = obuf2_14_portB_request_put[31:0] ;
  assign obuffer2_14_memory$WEA = obuf2_14_portA_request_put[41] ;
  assign obuffer2_14_memory$WEB = obuf2_14_portB_request_put[41] ;
  assign obuffer2_14_memory$ENA = EN_obuf2_14_portA_request_put ;
  assign obuffer2_14_memory$ENB = EN_obuf2_14_portB_request_put ;

  // submodule obuffer2_14_serverAdapterA_outDataCore
  assign obuffer2_14_serverAdapterA_outDataCore$D_IN =
	     obuffer2_14_memory$DOA ;
  assign obuffer2_14_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_14_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_14_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_14_portA_response_get &&
	     obuffer2_14_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_14_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_14_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_14_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_14_portA_response_get &&
	     !obuffer2_14_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_14_serverAdapterA_outDataCore$CLR = EN_obuf2_14_portAClear ;

  // submodule obuffer2_14_serverAdapterB_outDataCore
  assign obuffer2_14_serverAdapterB_outDataCore$D_IN =
	     obuffer2_14_memory$DOB ;
  assign obuffer2_14_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_14_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_14_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_14_portB_response_get &&
	     obuffer2_14_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_14_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_14_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_14_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_14_portB_response_get &&
	     !obuffer2_14_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_14_serverAdapterB_outDataCore$CLR = EN_obuf2_14_portBClear ;

  // submodule obuffer2_15_memory
  assign obuffer2_15_memory$ADDRA = obuf2_15_portA_request_put[39:32] ;
  assign obuffer2_15_memory$ADDRB = obuf2_15_portB_request_put[39:32] ;
  assign obuffer2_15_memory$DIA = obuf2_15_portA_request_put[31:0] ;
  assign obuffer2_15_memory$DIB = obuf2_15_portB_request_put[31:0] ;
  assign obuffer2_15_memory$WEA = obuf2_15_portA_request_put[41] ;
  assign obuffer2_15_memory$WEB = obuf2_15_portB_request_put[41] ;
  assign obuffer2_15_memory$ENA = EN_obuf2_15_portA_request_put ;
  assign obuffer2_15_memory$ENB = EN_obuf2_15_portB_request_put ;

  // submodule obuffer2_15_serverAdapterA_outDataCore
  assign obuffer2_15_serverAdapterA_outDataCore$D_IN =
	     obuffer2_15_memory$DOA ;
  assign obuffer2_15_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_15_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_15_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_15_portA_response_get &&
	     obuffer2_15_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_15_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_15_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_15_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_15_portA_response_get &&
	     !obuffer2_15_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_15_serverAdapterA_outDataCore$CLR = EN_obuf2_15_portAClear ;

  // submodule obuffer2_15_serverAdapterB_outDataCore
  assign obuffer2_15_serverAdapterB_outDataCore$D_IN =
	     obuffer2_15_memory$DOB ;
  assign obuffer2_15_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_15_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_15_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_15_portB_response_get &&
	     obuffer2_15_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_15_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_15_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_15_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_15_portB_response_get &&
	     !obuffer2_15_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_15_serverAdapterB_outDataCore$CLR = EN_obuf2_15_portBClear ;

  // submodule obuffer2_16_memory
  assign obuffer2_16_memory$ADDRA = obuf2_16_portA_request_put[39:32] ;
  assign obuffer2_16_memory$ADDRB = obuf2_16_portB_request_put[39:32] ;
  assign obuffer2_16_memory$DIA = obuf2_16_portA_request_put[31:0] ;
  assign obuffer2_16_memory$DIB = obuf2_16_portB_request_put[31:0] ;
  assign obuffer2_16_memory$WEA = obuf2_16_portA_request_put[41] ;
  assign obuffer2_16_memory$WEB = obuf2_16_portB_request_put[41] ;
  assign obuffer2_16_memory$ENA = EN_obuf2_16_portA_request_put ;
  assign obuffer2_16_memory$ENB = EN_obuf2_16_portB_request_put ;

  // submodule obuffer2_16_serverAdapterA_outDataCore
  assign obuffer2_16_serverAdapterA_outDataCore$D_IN =
	     obuffer2_16_memory$DOA ;
  assign obuffer2_16_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_16_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_16_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_16_portA_response_get &&
	     obuffer2_16_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_16_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_16_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_16_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_16_portA_response_get &&
	     !obuffer2_16_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_16_serverAdapterA_outDataCore$CLR = EN_obuf2_16_portAClear ;

  // submodule obuffer2_16_serverAdapterB_outDataCore
  assign obuffer2_16_serverAdapterB_outDataCore$D_IN =
	     obuffer2_16_memory$DOB ;
  assign obuffer2_16_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_16_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_16_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_16_portB_response_get &&
	     obuffer2_16_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_16_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_16_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_16_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_16_portB_response_get &&
	     !obuffer2_16_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_16_serverAdapterB_outDataCore$CLR = EN_obuf2_16_portBClear ;

  // submodule obuffer2_17_memory
  assign obuffer2_17_memory$ADDRA = obuf2_17_portA_request_put[39:32] ;
  assign obuffer2_17_memory$ADDRB = obuf2_17_portB_request_put[39:32] ;
  assign obuffer2_17_memory$DIA = obuf2_17_portA_request_put[31:0] ;
  assign obuffer2_17_memory$DIB = obuf2_17_portB_request_put[31:0] ;
  assign obuffer2_17_memory$WEA = obuf2_17_portA_request_put[41] ;
  assign obuffer2_17_memory$WEB = obuf2_17_portB_request_put[41] ;
  assign obuffer2_17_memory$ENA = EN_obuf2_17_portA_request_put ;
  assign obuffer2_17_memory$ENB = EN_obuf2_17_portB_request_put ;

  // submodule obuffer2_17_serverAdapterA_outDataCore
  assign obuffer2_17_serverAdapterA_outDataCore$D_IN =
	     obuffer2_17_memory$DOA ;
  assign obuffer2_17_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_17_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_17_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_17_portA_response_get &&
	     obuffer2_17_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_17_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_17_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_17_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_17_portA_response_get &&
	     !obuffer2_17_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_17_serverAdapterA_outDataCore$CLR = EN_obuf2_17_portAClear ;

  // submodule obuffer2_17_serverAdapterB_outDataCore
  assign obuffer2_17_serverAdapterB_outDataCore$D_IN =
	     obuffer2_17_memory$DOB ;
  assign obuffer2_17_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_17_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_17_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_17_portB_response_get &&
	     obuffer2_17_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_17_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_17_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_17_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_17_portB_response_get &&
	     !obuffer2_17_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_17_serverAdapterB_outDataCore$CLR = EN_obuf2_17_portBClear ;

  // submodule obuffer2_18_memory
  assign obuffer2_18_memory$ADDRA = obuf2_18_portA_request_put[39:32] ;
  assign obuffer2_18_memory$ADDRB = obuf2_18_portB_request_put[39:32] ;
  assign obuffer2_18_memory$DIA = obuf2_18_portA_request_put[31:0] ;
  assign obuffer2_18_memory$DIB = obuf2_18_portB_request_put[31:0] ;
  assign obuffer2_18_memory$WEA = obuf2_18_portA_request_put[41] ;
  assign obuffer2_18_memory$WEB = obuf2_18_portB_request_put[41] ;
  assign obuffer2_18_memory$ENA = EN_obuf2_18_portA_request_put ;
  assign obuffer2_18_memory$ENB = EN_obuf2_18_portB_request_put ;

  // submodule obuffer2_18_serverAdapterA_outDataCore
  assign obuffer2_18_serverAdapterA_outDataCore$D_IN =
	     obuffer2_18_memory$DOA ;
  assign obuffer2_18_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_18_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_18_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_18_portA_response_get &&
	     obuffer2_18_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_18_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_18_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_18_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_18_portA_response_get &&
	     !obuffer2_18_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_18_serverAdapterA_outDataCore$CLR = EN_obuf2_18_portAClear ;

  // submodule obuffer2_18_serverAdapterB_outDataCore
  assign obuffer2_18_serverAdapterB_outDataCore$D_IN =
	     obuffer2_18_memory$DOB ;
  assign obuffer2_18_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_18_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_18_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_18_portB_response_get &&
	     obuffer2_18_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_18_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_18_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_18_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_18_portB_response_get &&
	     !obuffer2_18_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_18_serverAdapterB_outDataCore$CLR = EN_obuf2_18_portBClear ;

  // submodule obuffer2_19_memory
  assign obuffer2_19_memory$ADDRA = obuf2_19_portA_request_put[39:32] ;
  assign obuffer2_19_memory$ADDRB = obuf2_19_portB_request_put[39:32] ;
  assign obuffer2_19_memory$DIA = obuf2_19_portA_request_put[31:0] ;
  assign obuffer2_19_memory$DIB = obuf2_19_portB_request_put[31:0] ;
  assign obuffer2_19_memory$WEA = obuf2_19_portA_request_put[41] ;
  assign obuffer2_19_memory$WEB = obuf2_19_portB_request_put[41] ;
  assign obuffer2_19_memory$ENA = EN_obuf2_19_portA_request_put ;
  assign obuffer2_19_memory$ENB = EN_obuf2_19_portB_request_put ;

  // submodule obuffer2_19_serverAdapterA_outDataCore
  assign obuffer2_19_serverAdapterA_outDataCore$D_IN =
	     obuffer2_19_memory$DOA ;
  assign obuffer2_19_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_19_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_19_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_19_portA_response_get &&
	     obuffer2_19_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_19_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_19_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_19_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_19_portA_response_get &&
	     !obuffer2_19_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_19_serverAdapterA_outDataCore$CLR = EN_obuf2_19_portAClear ;

  // submodule obuffer2_19_serverAdapterB_outDataCore
  assign obuffer2_19_serverAdapterB_outDataCore$D_IN =
	     obuffer2_19_memory$DOB ;
  assign obuffer2_19_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_19_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_19_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_19_portB_response_get &&
	     obuffer2_19_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_19_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_19_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_19_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_19_portB_response_get &&
	     !obuffer2_19_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_19_serverAdapterB_outDataCore$CLR = EN_obuf2_19_portBClear ;

  // submodule obuffer2_1_memory
  assign obuffer2_1_memory$ADDRA = obuf2_1_portA_request_put[39:32] ;
  assign obuffer2_1_memory$ADDRB = obuf2_1_portB_request_put[39:32] ;
  assign obuffer2_1_memory$DIA = obuf2_1_portA_request_put[31:0] ;
  assign obuffer2_1_memory$DIB = obuf2_1_portB_request_put[31:0] ;
  assign obuffer2_1_memory$WEA = obuf2_1_portA_request_put[41] ;
  assign obuffer2_1_memory$WEB = obuf2_1_portB_request_put[41] ;
  assign obuffer2_1_memory$ENA = EN_obuf2_1_portA_request_put ;
  assign obuffer2_1_memory$ENB = EN_obuf2_1_portB_request_put ;

  // submodule obuffer2_1_serverAdapterA_outDataCore
  assign obuffer2_1_serverAdapterA_outDataCore$D_IN = obuffer2_1_memory$DOA ;
  assign obuffer2_1_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_1_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_1_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_1_portA_response_get &&
	     obuffer2_1_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_1_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_1_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_1_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_1_portA_response_get &&
	     !obuffer2_1_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_1_serverAdapterA_outDataCore$CLR = EN_obuf2_1_portAClear ;

  // submodule obuffer2_1_serverAdapterB_outDataCore
  assign obuffer2_1_serverAdapterB_outDataCore$D_IN = obuffer2_1_memory$DOB ;
  assign obuffer2_1_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_1_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_1_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_1_portB_response_get &&
	     obuffer2_1_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_1_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_1_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_1_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_1_portB_response_get &&
	     !obuffer2_1_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_1_serverAdapterB_outDataCore$CLR = EN_obuf2_1_portBClear ;

  // submodule obuffer2_20_memory
  assign obuffer2_20_memory$ADDRA = obuf2_20_portA_request_put[39:32] ;
  assign obuffer2_20_memory$ADDRB = obuf2_20_portB_request_put[39:32] ;
  assign obuffer2_20_memory$DIA = obuf2_20_portA_request_put[31:0] ;
  assign obuffer2_20_memory$DIB = obuf2_20_portB_request_put[31:0] ;
  assign obuffer2_20_memory$WEA = obuf2_20_portA_request_put[41] ;
  assign obuffer2_20_memory$WEB = obuf2_20_portB_request_put[41] ;
  assign obuffer2_20_memory$ENA = EN_obuf2_20_portA_request_put ;
  assign obuffer2_20_memory$ENB = EN_obuf2_20_portB_request_put ;

  // submodule obuffer2_20_serverAdapterA_outDataCore
  assign obuffer2_20_serverAdapterA_outDataCore$D_IN =
	     obuffer2_20_memory$DOA ;
  assign obuffer2_20_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_20_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_20_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_20_portA_response_get &&
	     obuffer2_20_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_20_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_20_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_20_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_20_portA_response_get &&
	     !obuffer2_20_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_20_serverAdapterA_outDataCore$CLR = EN_obuf2_20_portAClear ;

  // submodule obuffer2_20_serverAdapterB_outDataCore
  assign obuffer2_20_serverAdapterB_outDataCore$D_IN =
	     obuffer2_20_memory$DOB ;
  assign obuffer2_20_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_20_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_20_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_20_portB_response_get &&
	     obuffer2_20_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_20_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_20_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_20_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_20_portB_response_get &&
	     !obuffer2_20_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_20_serverAdapterB_outDataCore$CLR = EN_obuf2_20_portBClear ;

  // submodule obuffer2_21_memory
  assign obuffer2_21_memory$ADDRA = obuf2_21_portA_request_put[39:32] ;
  assign obuffer2_21_memory$ADDRB = obuf2_21_portB_request_put[39:32] ;
  assign obuffer2_21_memory$DIA = obuf2_21_portA_request_put[31:0] ;
  assign obuffer2_21_memory$DIB = obuf2_21_portB_request_put[31:0] ;
  assign obuffer2_21_memory$WEA = obuf2_21_portA_request_put[41] ;
  assign obuffer2_21_memory$WEB = obuf2_21_portB_request_put[41] ;
  assign obuffer2_21_memory$ENA = EN_obuf2_21_portA_request_put ;
  assign obuffer2_21_memory$ENB = EN_obuf2_21_portB_request_put ;

  // submodule obuffer2_21_serverAdapterA_outDataCore
  assign obuffer2_21_serverAdapterA_outDataCore$D_IN =
	     obuffer2_21_memory$DOA ;
  assign obuffer2_21_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_21_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_21_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_21_portA_response_get &&
	     obuffer2_21_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_21_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_21_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_21_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_21_portA_response_get &&
	     !obuffer2_21_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_21_serverAdapterA_outDataCore$CLR = EN_obuf2_21_portAClear ;

  // submodule obuffer2_21_serverAdapterB_outDataCore
  assign obuffer2_21_serverAdapterB_outDataCore$D_IN =
	     obuffer2_21_memory$DOB ;
  assign obuffer2_21_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_21_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_21_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_21_portB_response_get &&
	     obuffer2_21_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_21_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_21_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_21_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_21_portB_response_get &&
	     !obuffer2_21_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_21_serverAdapterB_outDataCore$CLR = EN_obuf2_21_portBClear ;

  // submodule obuffer2_22_memory
  assign obuffer2_22_memory$ADDRA = obuf2_22_portA_request_put[39:32] ;
  assign obuffer2_22_memory$ADDRB = obuf2_22_portB_request_put[39:32] ;
  assign obuffer2_22_memory$DIA = obuf2_22_portA_request_put[31:0] ;
  assign obuffer2_22_memory$DIB = obuf2_22_portB_request_put[31:0] ;
  assign obuffer2_22_memory$WEA = obuf2_22_portA_request_put[41] ;
  assign obuffer2_22_memory$WEB = obuf2_22_portB_request_put[41] ;
  assign obuffer2_22_memory$ENA = EN_obuf2_22_portA_request_put ;
  assign obuffer2_22_memory$ENB = EN_obuf2_22_portB_request_put ;

  // submodule obuffer2_22_serverAdapterA_outDataCore
  assign obuffer2_22_serverAdapterA_outDataCore$D_IN =
	     obuffer2_22_memory$DOA ;
  assign obuffer2_22_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_22_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_22_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_22_portA_response_get &&
	     obuffer2_22_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_22_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_22_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_22_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_22_portA_response_get &&
	     !obuffer2_22_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_22_serverAdapterA_outDataCore$CLR = EN_obuf2_22_portAClear ;

  // submodule obuffer2_22_serverAdapterB_outDataCore
  assign obuffer2_22_serverAdapterB_outDataCore$D_IN =
	     obuffer2_22_memory$DOB ;
  assign obuffer2_22_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_22_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_22_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_22_portB_response_get &&
	     obuffer2_22_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_22_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_22_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_22_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_22_portB_response_get &&
	     !obuffer2_22_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_22_serverAdapterB_outDataCore$CLR = EN_obuf2_22_portBClear ;

  // submodule obuffer2_23_memory
  assign obuffer2_23_memory$ADDRA = obuf2_23_portA_request_put[39:32] ;
  assign obuffer2_23_memory$ADDRB = obuf2_23_portB_request_put[39:32] ;
  assign obuffer2_23_memory$DIA = obuf2_23_portA_request_put[31:0] ;
  assign obuffer2_23_memory$DIB = obuf2_23_portB_request_put[31:0] ;
  assign obuffer2_23_memory$WEA = obuf2_23_portA_request_put[41] ;
  assign obuffer2_23_memory$WEB = obuf2_23_portB_request_put[41] ;
  assign obuffer2_23_memory$ENA = EN_obuf2_23_portA_request_put ;
  assign obuffer2_23_memory$ENB = EN_obuf2_23_portB_request_put ;

  // submodule obuffer2_23_serverAdapterA_outDataCore
  assign obuffer2_23_serverAdapterA_outDataCore$D_IN =
	     obuffer2_23_memory$DOA ;
  assign obuffer2_23_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_23_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_23_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_23_portA_response_get &&
	     obuffer2_23_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_23_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_23_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_23_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_23_portA_response_get &&
	     !obuffer2_23_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_23_serverAdapterA_outDataCore$CLR = EN_obuf2_23_portAClear ;

  // submodule obuffer2_23_serverAdapterB_outDataCore
  assign obuffer2_23_serverAdapterB_outDataCore$D_IN =
	     obuffer2_23_memory$DOB ;
  assign obuffer2_23_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_23_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_23_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_23_portB_response_get &&
	     obuffer2_23_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_23_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_23_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_23_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_23_portB_response_get &&
	     !obuffer2_23_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_23_serverAdapterB_outDataCore$CLR = EN_obuf2_23_portBClear ;

  // submodule obuffer2_24_memory
  assign obuffer2_24_memory$ADDRA = obuf2_24_portA_request_put[39:32] ;
  assign obuffer2_24_memory$ADDRB = obuf2_24_portB_request_put[39:32] ;
  assign obuffer2_24_memory$DIA = obuf2_24_portA_request_put[31:0] ;
  assign obuffer2_24_memory$DIB = obuf2_24_portB_request_put[31:0] ;
  assign obuffer2_24_memory$WEA = obuf2_24_portA_request_put[41] ;
  assign obuffer2_24_memory$WEB = obuf2_24_portB_request_put[41] ;
  assign obuffer2_24_memory$ENA = EN_obuf2_24_portA_request_put ;
  assign obuffer2_24_memory$ENB = EN_obuf2_24_portB_request_put ;

  // submodule obuffer2_24_serverAdapterA_outDataCore
  assign obuffer2_24_serverAdapterA_outDataCore$D_IN =
	     obuffer2_24_memory$DOA ;
  assign obuffer2_24_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_24_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_24_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_24_portA_response_get &&
	     obuffer2_24_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_24_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_24_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_24_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_24_portA_response_get &&
	     !obuffer2_24_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_24_serverAdapterA_outDataCore$CLR = EN_obuf2_24_portAClear ;

  // submodule obuffer2_24_serverAdapterB_outDataCore
  assign obuffer2_24_serverAdapterB_outDataCore$D_IN =
	     obuffer2_24_memory$DOB ;
  assign obuffer2_24_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_24_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_24_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_24_portB_response_get &&
	     obuffer2_24_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_24_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_24_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_24_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_24_portB_response_get &&
	     !obuffer2_24_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_24_serverAdapterB_outDataCore$CLR = EN_obuf2_24_portBClear ;

  // submodule obuffer2_25_memory
  assign obuffer2_25_memory$ADDRA = obuf2_25_portA_request_put[39:32] ;
  assign obuffer2_25_memory$ADDRB = obuf2_25_portB_request_put[39:32] ;
  assign obuffer2_25_memory$DIA = obuf2_25_portA_request_put[31:0] ;
  assign obuffer2_25_memory$DIB = obuf2_25_portB_request_put[31:0] ;
  assign obuffer2_25_memory$WEA = obuf2_25_portA_request_put[41] ;
  assign obuffer2_25_memory$WEB = obuf2_25_portB_request_put[41] ;
  assign obuffer2_25_memory$ENA = EN_obuf2_25_portA_request_put ;
  assign obuffer2_25_memory$ENB = EN_obuf2_25_portB_request_put ;

  // submodule obuffer2_25_serverAdapterA_outDataCore
  assign obuffer2_25_serverAdapterA_outDataCore$D_IN =
	     obuffer2_25_memory$DOA ;
  assign obuffer2_25_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_25_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_25_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_25_portA_response_get &&
	     obuffer2_25_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_25_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_25_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_25_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_25_portA_response_get &&
	     !obuffer2_25_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_25_serverAdapterA_outDataCore$CLR = EN_obuf2_25_portAClear ;

  // submodule obuffer2_25_serverAdapterB_outDataCore
  assign obuffer2_25_serverAdapterB_outDataCore$D_IN =
	     obuffer2_25_memory$DOB ;
  assign obuffer2_25_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_25_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_25_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_25_portB_response_get &&
	     obuffer2_25_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_25_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_25_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_25_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_25_portB_response_get &&
	     !obuffer2_25_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_25_serverAdapterB_outDataCore$CLR = EN_obuf2_25_portBClear ;

  // submodule obuffer2_26_memory
  assign obuffer2_26_memory$ADDRA = obuf2_26_portA_request_put[39:32] ;
  assign obuffer2_26_memory$ADDRB = obuf2_26_portB_request_put[39:32] ;
  assign obuffer2_26_memory$DIA = obuf2_26_portA_request_put[31:0] ;
  assign obuffer2_26_memory$DIB = obuf2_26_portB_request_put[31:0] ;
  assign obuffer2_26_memory$WEA = obuf2_26_portA_request_put[41] ;
  assign obuffer2_26_memory$WEB = obuf2_26_portB_request_put[41] ;
  assign obuffer2_26_memory$ENA = EN_obuf2_26_portA_request_put ;
  assign obuffer2_26_memory$ENB = EN_obuf2_26_portB_request_put ;

  // submodule obuffer2_26_serverAdapterA_outDataCore
  assign obuffer2_26_serverAdapterA_outDataCore$D_IN =
	     obuffer2_26_memory$DOA ;
  assign obuffer2_26_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_26_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_26_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_26_portA_response_get &&
	     obuffer2_26_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_26_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_26_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_26_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_26_portA_response_get &&
	     !obuffer2_26_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_26_serverAdapterA_outDataCore$CLR = EN_obuf2_26_portAClear ;

  // submodule obuffer2_26_serverAdapterB_outDataCore
  assign obuffer2_26_serverAdapterB_outDataCore$D_IN =
	     obuffer2_26_memory$DOB ;
  assign obuffer2_26_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_26_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_26_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_26_portB_response_get &&
	     obuffer2_26_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_26_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_26_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_26_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_26_portB_response_get &&
	     !obuffer2_26_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_26_serverAdapterB_outDataCore$CLR = EN_obuf2_26_portBClear ;

  // submodule obuffer2_27_memory
  assign obuffer2_27_memory$ADDRA = obuf2_27_portA_request_put[39:32] ;
  assign obuffer2_27_memory$ADDRB = obuf2_27_portB_request_put[39:32] ;
  assign obuffer2_27_memory$DIA = obuf2_27_portA_request_put[31:0] ;
  assign obuffer2_27_memory$DIB = obuf2_27_portB_request_put[31:0] ;
  assign obuffer2_27_memory$WEA = obuf2_27_portA_request_put[41] ;
  assign obuffer2_27_memory$WEB = obuf2_27_portB_request_put[41] ;
  assign obuffer2_27_memory$ENA = EN_obuf2_27_portA_request_put ;
  assign obuffer2_27_memory$ENB = EN_obuf2_27_portB_request_put ;

  // submodule obuffer2_27_serverAdapterA_outDataCore
  assign obuffer2_27_serverAdapterA_outDataCore$D_IN =
	     obuffer2_27_memory$DOA ;
  assign obuffer2_27_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_27_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_27_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_27_portA_response_get &&
	     obuffer2_27_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_27_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_27_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_27_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_27_portA_response_get &&
	     !obuffer2_27_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_27_serverAdapterA_outDataCore$CLR = EN_obuf2_27_portAClear ;

  // submodule obuffer2_27_serverAdapterB_outDataCore
  assign obuffer2_27_serverAdapterB_outDataCore$D_IN =
	     obuffer2_27_memory$DOB ;
  assign obuffer2_27_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_27_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_27_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_27_portB_response_get &&
	     obuffer2_27_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_27_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_27_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_27_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_27_portB_response_get &&
	     !obuffer2_27_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_27_serverAdapterB_outDataCore$CLR = EN_obuf2_27_portBClear ;

  // submodule obuffer2_28_memory
  assign obuffer2_28_memory$ADDRA = obuf2_28_portA_request_put[39:32] ;
  assign obuffer2_28_memory$ADDRB = obuf2_28_portB_request_put[39:32] ;
  assign obuffer2_28_memory$DIA = obuf2_28_portA_request_put[31:0] ;
  assign obuffer2_28_memory$DIB = obuf2_28_portB_request_put[31:0] ;
  assign obuffer2_28_memory$WEA = obuf2_28_portA_request_put[41] ;
  assign obuffer2_28_memory$WEB = obuf2_28_portB_request_put[41] ;
  assign obuffer2_28_memory$ENA = EN_obuf2_28_portA_request_put ;
  assign obuffer2_28_memory$ENB = EN_obuf2_28_portB_request_put ;

  // submodule obuffer2_28_serverAdapterA_outDataCore
  assign obuffer2_28_serverAdapterA_outDataCore$D_IN =
	     obuffer2_28_memory$DOA ;
  assign obuffer2_28_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_28_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_28_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_28_portA_response_get &&
	     obuffer2_28_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_28_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_28_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_28_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_28_portA_response_get &&
	     !obuffer2_28_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_28_serverAdapterA_outDataCore$CLR = EN_obuf2_28_portAClear ;

  // submodule obuffer2_28_serverAdapterB_outDataCore
  assign obuffer2_28_serverAdapterB_outDataCore$D_IN =
	     obuffer2_28_memory$DOB ;
  assign obuffer2_28_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_28_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_28_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_28_portB_response_get &&
	     obuffer2_28_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_28_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_28_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_28_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_28_portB_response_get &&
	     !obuffer2_28_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_28_serverAdapterB_outDataCore$CLR = EN_obuf2_28_portBClear ;

  // submodule obuffer2_29_memory
  assign obuffer2_29_memory$ADDRA = obuf2_29_portA_request_put[39:32] ;
  assign obuffer2_29_memory$ADDRB = obuf2_29_portB_request_put[39:32] ;
  assign obuffer2_29_memory$DIA = obuf2_29_portA_request_put[31:0] ;
  assign obuffer2_29_memory$DIB = obuf2_29_portB_request_put[31:0] ;
  assign obuffer2_29_memory$WEA = obuf2_29_portA_request_put[41] ;
  assign obuffer2_29_memory$WEB = obuf2_29_portB_request_put[41] ;
  assign obuffer2_29_memory$ENA = EN_obuf2_29_portA_request_put ;
  assign obuffer2_29_memory$ENB = EN_obuf2_29_portB_request_put ;

  // submodule obuffer2_29_serverAdapterA_outDataCore
  assign obuffer2_29_serverAdapterA_outDataCore$D_IN =
	     obuffer2_29_memory$DOA ;
  assign obuffer2_29_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_29_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_29_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_29_portA_response_get &&
	     obuffer2_29_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_29_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_29_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_29_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_29_portA_response_get &&
	     !obuffer2_29_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_29_serverAdapterA_outDataCore$CLR = EN_obuf2_29_portAClear ;

  // submodule obuffer2_29_serverAdapterB_outDataCore
  assign obuffer2_29_serverAdapterB_outDataCore$D_IN =
	     obuffer2_29_memory$DOB ;
  assign obuffer2_29_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_29_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_29_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_29_portB_response_get &&
	     obuffer2_29_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_29_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_29_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_29_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_29_portB_response_get &&
	     !obuffer2_29_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_29_serverAdapterB_outDataCore$CLR = EN_obuf2_29_portBClear ;

  // submodule obuffer2_2_memory
  assign obuffer2_2_memory$ADDRA = obuf2_2_portA_request_put[39:32] ;
  assign obuffer2_2_memory$ADDRB = obuf2_2_portB_request_put[39:32] ;
  assign obuffer2_2_memory$DIA = obuf2_2_portA_request_put[31:0] ;
  assign obuffer2_2_memory$DIB = obuf2_2_portB_request_put[31:0] ;
  assign obuffer2_2_memory$WEA = obuf2_2_portA_request_put[41] ;
  assign obuffer2_2_memory$WEB = obuf2_2_portB_request_put[41] ;
  assign obuffer2_2_memory$ENA = EN_obuf2_2_portA_request_put ;
  assign obuffer2_2_memory$ENB = EN_obuf2_2_portB_request_put ;

  // submodule obuffer2_2_serverAdapterA_outDataCore
  assign obuffer2_2_serverAdapterA_outDataCore$D_IN = obuffer2_2_memory$DOA ;
  assign obuffer2_2_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_2_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_2_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_2_portA_response_get &&
	     obuffer2_2_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_2_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_2_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_2_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_2_portA_response_get &&
	     !obuffer2_2_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_2_serverAdapterA_outDataCore$CLR = EN_obuf2_2_portAClear ;

  // submodule obuffer2_2_serverAdapterB_outDataCore
  assign obuffer2_2_serverAdapterB_outDataCore$D_IN = obuffer2_2_memory$DOB ;
  assign obuffer2_2_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_2_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_2_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_2_portB_response_get &&
	     obuffer2_2_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_2_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_2_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_2_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_2_portB_response_get &&
	     !obuffer2_2_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_2_serverAdapterB_outDataCore$CLR = EN_obuf2_2_portBClear ;

  // submodule obuffer2_30_memory
  assign obuffer2_30_memory$ADDRA = obuf2_30_portA_request_put[39:32] ;
  assign obuffer2_30_memory$ADDRB = obuf2_30_portB_request_put[39:32] ;
  assign obuffer2_30_memory$DIA = obuf2_30_portA_request_put[31:0] ;
  assign obuffer2_30_memory$DIB = obuf2_30_portB_request_put[31:0] ;
  assign obuffer2_30_memory$WEA = obuf2_30_portA_request_put[41] ;
  assign obuffer2_30_memory$WEB = obuf2_30_portB_request_put[41] ;
  assign obuffer2_30_memory$ENA = EN_obuf2_30_portA_request_put ;
  assign obuffer2_30_memory$ENB = EN_obuf2_30_portB_request_put ;

  // submodule obuffer2_30_serverAdapterA_outDataCore
  assign obuffer2_30_serverAdapterA_outDataCore$D_IN =
	     obuffer2_30_memory$DOA ;
  assign obuffer2_30_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_30_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_30_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_30_portA_response_get &&
	     obuffer2_30_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_30_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_30_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_30_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_30_portA_response_get &&
	     !obuffer2_30_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_30_serverAdapterA_outDataCore$CLR = EN_obuf2_30_portAClear ;

  // submodule obuffer2_30_serverAdapterB_outDataCore
  assign obuffer2_30_serverAdapterB_outDataCore$D_IN =
	     obuffer2_30_memory$DOB ;
  assign obuffer2_30_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_30_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_30_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_30_portB_response_get &&
	     obuffer2_30_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_30_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_30_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_30_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_30_portB_response_get &&
	     !obuffer2_30_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_30_serverAdapterB_outDataCore$CLR = EN_obuf2_30_portBClear ;

  // submodule obuffer2_31_memory
  assign obuffer2_31_memory$ADDRA = obuf2_31_portA_request_put[39:32] ;
  assign obuffer2_31_memory$ADDRB = obuf2_31_portB_request_put[39:32] ;
  assign obuffer2_31_memory$DIA = obuf2_31_portA_request_put[31:0] ;
  assign obuffer2_31_memory$DIB = obuf2_31_portB_request_put[31:0] ;
  assign obuffer2_31_memory$WEA = obuf2_31_portA_request_put[41] ;
  assign obuffer2_31_memory$WEB = obuf2_31_portB_request_put[41] ;
  assign obuffer2_31_memory$ENA = EN_obuf2_31_portA_request_put ;
  assign obuffer2_31_memory$ENB = EN_obuf2_31_portB_request_put ;

  // submodule obuffer2_31_serverAdapterA_outDataCore
  assign obuffer2_31_serverAdapterA_outDataCore$D_IN =
	     obuffer2_31_memory$DOA ;
  assign obuffer2_31_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_31_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_31_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_31_portA_response_get &&
	     obuffer2_31_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_31_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_31_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_31_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_31_portA_response_get &&
	     !obuffer2_31_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_31_serverAdapterA_outDataCore$CLR = EN_obuf2_31_portAClear ;

  // submodule obuffer2_31_serverAdapterB_outDataCore
  assign obuffer2_31_serverAdapterB_outDataCore$D_IN =
	     obuffer2_31_memory$DOB ;
  assign obuffer2_31_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_31_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_31_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_31_portB_response_get &&
	     obuffer2_31_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_31_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_31_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_31_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_31_portB_response_get &&
	     !obuffer2_31_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_31_serverAdapterB_outDataCore$CLR = EN_obuf2_31_portBClear ;

  // submodule obuffer2_3_memory
  assign obuffer2_3_memory$ADDRA = obuf2_3_portA_request_put[39:32] ;
  assign obuffer2_3_memory$ADDRB = obuf2_3_portB_request_put[39:32] ;
  assign obuffer2_3_memory$DIA = obuf2_3_portA_request_put[31:0] ;
  assign obuffer2_3_memory$DIB = obuf2_3_portB_request_put[31:0] ;
  assign obuffer2_3_memory$WEA = obuf2_3_portA_request_put[41] ;
  assign obuffer2_3_memory$WEB = obuf2_3_portB_request_put[41] ;
  assign obuffer2_3_memory$ENA = EN_obuf2_3_portA_request_put ;
  assign obuffer2_3_memory$ENB = EN_obuf2_3_portB_request_put ;

  // submodule obuffer2_3_serverAdapterA_outDataCore
  assign obuffer2_3_serverAdapterA_outDataCore$D_IN = obuffer2_3_memory$DOA ;
  assign obuffer2_3_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_3_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_3_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_3_portA_response_get &&
	     obuffer2_3_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_3_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_3_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_3_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_3_portA_response_get &&
	     !obuffer2_3_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_3_serverAdapterA_outDataCore$CLR = EN_obuf2_3_portAClear ;

  // submodule obuffer2_3_serverAdapterB_outDataCore
  assign obuffer2_3_serverAdapterB_outDataCore$D_IN = obuffer2_3_memory$DOB ;
  assign obuffer2_3_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_3_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_3_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_3_portB_response_get &&
	     obuffer2_3_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_3_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_3_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_3_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_3_portB_response_get &&
	     !obuffer2_3_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_3_serverAdapterB_outDataCore$CLR = EN_obuf2_3_portBClear ;

  // submodule obuffer2_4_memory
  assign obuffer2_4_memory$ADDRA = obuf2_4_portA_request_put[39:32] ;
  assign obuffer2_4_memory$ADDRB = obuf2_4_portB_request_put[39:32] ;
  assign obuffer2_4_memory$DIA = obuf2_4_portA_request_put[31:0] ;
  assign obuffer2_4_memory$DIB = obuf2_4_portB_request_put[31:0] ;
  assign obuffer2_4_memory$WEA = obuf2_4_portA_request_put[41] ;
  assign obuffer2_4_memory$WEB = obuf2_4_portB_request_put[41] ;
  assign obuffer2_4_memory$ENA = EN_obuf2_4_portA_request_put ;
  assign obuffer2_4_memory$ENB = EN_obuf2_4_portB_request_put ;

  // submodule obuffer2_4_serverAdapterA_outDataCore
  assign obuffer2_4_serverAdapterA_outDataCore$D_IN = obuffer2_4_memory$DOA ;
  assign obuffer2_4_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_4_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_4_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_4_portA_response_get &&
	     obuffer2_4_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_4_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_4_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_4_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_4_portA_response_get &&
	     !obuffer2_4_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_4_serverAdapterA_outDataCore$CLR = EN_obuf2_4_portAClear ;

  // submodule obuffer2_4_serverAdapterB_outDataCore
  assign obuffer2_4_serverAdapterB_outDataCore$D_IN = obuffer2_4_memory$DOB ;
  assign obuffer2_4_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_4_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_4_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_4_portB_response_get &&
	     obuffer2_4_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_4_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_4_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_4_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_4_portB_response_get &&
	     !obuffer2_4_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_4_serverAdapterB_outDataCore$CLR = EN_obuf2_4_portBClear ;

  // submodule obuffer2_5_memory
  assign obuffer2_5_memory$ADDRA = obuf2_5_portA_request_put[39:32] ;
  assign obuffer2_5_memory$ADDRB = obuf2_5_portB_request_put[39:32] ;
  assign obuffer2_5_memory$DIA = obuf2_5_portA_request_put[31:0] ;
  assign obuffer2_5_memory$DIB = obuf2_5_portB_request_put[31:0] ;
  assign obuffer2_5_memory$WEA = obuf2_5_portA_request_put[41] ;
  assign obuffer2_5_memory$WEB = obuf2_5_portB_request_put[41] ;
  assign obuffer2_5_memory$ENA = EN_obuf2_5_portA_request_put ;
  assign obuffer2_5_memory$ENB = EN_obuf2_5_portB_request_put ;

  // submodule obuffer2_5_serverAdapterA_outDataCore
  assign obuffer2_5_serverAdapterA_outDataCore$D_IN = obuffer2_5_memory$DOA ;
  assign obuffer2_5_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_5_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_5_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_5_portA_response_get &&
	     obuffer2_5_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_5_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_5_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_5_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_5_portA_response_get &&
	     !obuffer2_5_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_5_serverAdapterA_outDataCore$CLR = EN_obuf2_5_portAClear ;

  // submodule obuffer2_5_serverAdapterB_outDataCore
  assign obuffer2_5_serverAdapterB_outDataCore$D_IN = obuffer2_5_memory$DOB ;
  assign obuffer2_5_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_5_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_5_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_5_portB_response_get &&
	     obuffer2_5_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_5_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_5_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_5_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_5_portB_response_get &&
	     !obuffer2_5_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_5_serverAdapterB_outDataCore$CLR = EN_obuf2_5_portBClear ;

  // submodule obuffer2_6_memory
  assign obuffer2_6_memory$ADDRA = obuf2_6_portA_request_put[39:32] ;
  assign obuffer2_6_memory$ADDRB = obuf2_6_portB_request_put[39:32] ;
  assign obuffer2_6_memory$DIA = obuf2_6_portA_request_put[31:0] ;
  assign obuffer2_6_memory$DIB = obuf2_6_portB_request_put[31:0] ;
  assign obuffer2_6_memory$WEA = obuf2_6_portA_request_put[41] ;
  assign obuffer2_6_memory$WEB = obuf2_6_portB_request_put[41] ;
  assign obuffer2_6_memory$ENA = EN_obuf2_6_portA_request_put ;
  assign obuffer2_6_memory$ENB = EN_obuf2_6_portB_request_put ;

  // submodule obuffer2_6_serverAdapterA_outDataCore
  assign obuffer2_6_serverAdapterA_outDataCore$D_IN = obuffer2_6_memory$DOA ;
  assign obuffer2_6_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_6_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_6_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_6_portA_response_get &&
	     obuffer2_6_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_6_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_6_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_6_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_6_portA_response_get &&
	     !obuffer2_6_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_6_serverAdapterA_outDataCore$CLR = EN_obuf2_6_portAClear ;

  // submodule obuffer2_6_serverAdapterB_outDataCore
  assign obuffer2_6_serverAdapterB_outDataCore$D_IN = obuffer2_6_memory$DOB ;
  assign obuffer2_6_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_6_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_6_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_6_portB_response_get &&
	     obuffer2_6_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_6_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_6_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_6_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_6_portB_response_get &&
	     !obuffer2_6_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_6_serverAdapterB_outDataCore$CLR = EN_obuf2_6_portBClear ;

  // submodule obuffer2_7_memory
  assign obuffer2_7_memory$ADDRA = obuf2_7_portA_request_put[39:32] ;
  assign obuffer2_7_memory$ADDRB = obuf2_7_portB_request_put[39:32] ;
  assign obuffer2_7_memory$DIA = obuf2_7_portA_request_put[31:0] ;
  assign obuffer2_7_memory$DIB = obuf2_7_portB_request_put[31:0] ;
  assign obuffer2_7_memory$WEA = obuf2_7_portA_request_put[41] ;
  assign obuffer2_7_memory$WEB = obuf2_7_portB_request_put[41] ;
  assign obuffer2_7_memory$ENA = EN_obuf2_7_portA_request_put ;
  assign obuffer2_7_memory$ENB = EN_obuf2_7_portB_request_put ;

  // submodule obuffer2_7_serverAdapterA_outDataCore
  assign obuffer2_7_serverAdapterA_outDataCore$D_IN = obuffer2_7_memory$DOA ;
  assign obuffer2_7_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_7_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_7_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_7_portA_response_get &&
	     obuffer2_7_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_7_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_7_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_7_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_7_portA_response_get &&
	     !obuffer2_7_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_7_serverAdapterA_outDataCore$CLR = EN_obuf2_7_portAClear ;

  // submodule obuffer2_7_serverAdapterB_outDataCore
  assign obuffer2_7_serverAdapterB_outDataCore$D_IN = obuffer2_7_memory$DOB ;
  assign obuffer2_7_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_7_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_7_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_7_portB_response_get &&
	     obuffer2_7_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_7_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_7_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_7_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_7_portB_response_get &&
	     !obuffer2_7_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_7_serverAdapterB_outDataCore$CLR = EN_obuf2_7_portBClear ;

  // submodule obuffer2_8_memory
  assign obuffer2_8_memory$ADDRA = obuf2_8_portA_request_put[39:32] ;
  assign obuffer2_8_memory$ADDRB = obuf2_8_portB_request_put[39:32] ;
  assign obuffer2_8_memory$DIA = obuf2_8_portA_request_put[31:0] ;
  assign obuffer2_8_memory$DIB = obuf2_8_portB_request_put[31:0] ;
  assign obuffer2_8_memory$WEA = obuf2_8_portA_request_put[41] ;
  assign obuffer2_8_memory$WEB = obuf2_8_portB_request_put[41] ;
  assign obuffer2_8_memory$ENA = EN_obuf2_8_portA_request_put ;
  assign obuffer2_8_memory$ENB = EN_obuf2_8_portB_request_put ;

  // submodule obuffer2_8_serverAdapterA_outDataCore
  assign obuffer2_8_serverAdapterA_outDataCore$D_IN = obuffer2_8_memory$DOA ;
  assign obuffer2_8_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_8_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_8_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_8_portA_response_get &&
	     obuffer2_8_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_8_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_8_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_8_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_8_portA_response_get &&
	     !obuffer2_8_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_8_serverAdapterA_outDataCore$CLR = EN_obuf2_8_portAClear ;

  // submodule obuffer2_8_serverAdapterB_outDataCore
  assign obuffer2_8_serverAdapterB_outDataCore$D_IN = obuffer2_8_memory$DOB ;
  assign obuffer2_8_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_8_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_8_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_8_portB_response_get &&
	     obuffer2_8_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_8_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_8_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_8_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_8_portB_response_get &&
	     !obuffer2_8_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_8_serverAdapterB_outDataCore$CLR = EN_obuf2_8_portBClear ;

  // submodule obuffer2_9_memory
  assign obuffer2_9_memory$ADDRA = obuf2_9_portA_request_put[39:32] ;
  assign obuffer2_9_memory$ADDRB = obuf2_9_portB_request_put[39:32] ;
  assign obuffer2_9_memory$DIA = obuf2_9_portA_request_put[31:0] ;
  assign obuffer2_9_memory$DIB = obuf2_9_portB_request_put[31:0] ;
  assign obuffer2_9_memory$WEA = obuf2_9_portA_request_put[41] ;
  assign obuffer2_9_memory$WEB = obuf2_9_portB_request_put[41] ;
  assign obuffer2_9_memory$ENA = EN_obuf2_9_portA_request_put ;
  assign obuffer2_9_memory$ENB = EN_obuf2_9_portB_request_put ;

  // submodule obuffer2_9_serverAdapterA_outDataCore
  assign obuffer2_9_serverAdapterA_outDataCore$D_IN = obuffer2_9_memory$DOA ;
  assign obuffer2_9_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_9_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_9_serverAdapterA_outDataCore$FULL_N &&
	     !EN_obuf2_9_portA_response_get &&
	     obuffer2_9_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_9_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_9_serverAdapterA_outData_enqAndDeq ||
	     obuffer2_9_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_obuf2_9_portA_response_get &&
	     !obuffer2_9_serverAdapterA_outData_enqData$whas ;
  assign obuffer2_9_serverAdapterA_outDataCore$CLR = EN_obuf2_9_portAClear ;

  // submodule obuffer2_9_serverAdapterB_outDataCore
  assign obuffer2_9_serverAdapterB_outDataCore$D_IN = obuffer2_9_memory$DOB ;
  assign obuffer2_9_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_obuffer2_9_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_9_serverAdapterB_outDataCore$FULL_N &&
	     !EN_obuf2_9_portB_response_get &&
	     obuffer2_9_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_9_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_obuffer2_9_serverAdapterB_outData_enqAndDeq ||
	     obuffer2_9_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_obuf2_9_portB_response_get &&
	     !obuffer2_9_serverAdapterB_outData_enqData$whas ;
  assign obuffer2_9_serverAdapterB_outDataCore$CLR = EN_obuf2_9_portBClear ;

  // submodule wbuffer_0_memory
  assign wbuffer_0_memory$ADDRA = wbuf_0_portA_request_put[15:8] ;
  assign wbuffer_0_memory$ADDRB = wbuf_0_portB_request_put[15:8] ;
  assign wbuffer_0_memory$DIA = wbuf_0_portA_request_put[7:0] ;
  assign wbuffer_0_memory$DIB = wbuf_0_portB_request_put[7:0] ;
  assign wbuffer_0_memory$WEA = wbuf_0_portA_request_put[17] ;
  assign wbuffer_0_memory$WEB = wbuf_0_portB_request_put[17] ;
  assign wbuffer_0_memory$ENA = EN_wbuf_0_portA_request_put ;
  assign wbuffer_0_memory$ENB = EN_wbuf_0_portB_request_put ;

  // submodule wbuffer_0_serverAdapterA_outDataCore
  assign wbuffer_0_serverAdapterA_outDataCore$D_IN = wbuffer_0_memory$DOA ;
  assign wbuffer_0_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_0_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_0_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_0_portA_response_get &&
	     wbuffer_0_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_0_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_0_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_0_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_0_portA_response_get &&
	     !wbuffer_0_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_0_serverAdapterA_outDataCore$CLR = EN_wbuf_0_portAClear ;

  // submodule wbuffer_0_serverAdapterB_outDataCore
  assign wbuffer_0_serverAdapterB_outDataCore$D_IN = wbuffer_0_memory$DOB ;
  assign wbuffer_0_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_0_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_0_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_0_portB_response_get &&
	     wbuffer_0_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_0_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_0_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_0_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_0_portB_response_get &&
	     !wbuffer_0_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_0_serverAdapterB_outDataCore$CLR = EN_wbuf_0_portBClear ;

  // submodule wbuffer_10_memory
  assign wbuffer_10_memory$ADDRA = wbuf_10_portA_request_put[15:8] ;
  assign wbuffer_10_memory$ADDRB = wbuf_10_portB_request_put[15:8] ;
  assign wbuffer_10_memory$DIA = wbuf_10_portA_request_put[7:0] ;
  assign wbuffer_10_memory$DIB = wbuf_10_portB_request_put[7:0] ;
  assign wbuffer_10_memory$WEA = wbuf_10_portA_request_put[17] ;
  assign wbuffer_10_memory$WEB = wbuf_10_portB_request_put[17] ;
  assign wbuffer_10_memory$ENA = EN_wbuf_10_portA_request_put ;
  assign wbuffer_10_memory$ENB = EN_wbuf_10_portB_request_put ;

  // submodule wbuffer_10_serverAdapterA_outDataCore
  assign wbuffer_10_serverAdapterA_outDataCore$D_IN = wbuffer_10_memory$DOA ;
  assign wbuffer_10_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_10_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_10_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_10_portA_response_get &&
	     wbuffer_10_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_10_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_10_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_10_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_10_portA_response_get &&
	     !wbuffer_10_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_10_serverAdapterA_outDataCore$CLR = EN_wbuf_10_portAClear ;

  // submodule wbuffer_10_serverAdapterB_outDataCore
  assign wbuffer_10_serverAdapterB_outDataCore$D_IN = wbuffer_10_memory$DOB ;
  assign wbuffer_10_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_10_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_10_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_10_portB_response_get &&
	     wbuffer_10_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_10_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_10_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_10_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_10_portB_response_get &&
	     !wbuffer_10_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_10_serverAdapterB_outDataCore$CLR = EN_wbuf_10_portBClear ;

  // submodule wbuffer_11_memory
  assign wbuffer_11_memory$ADDRA = wbuf_11_portA_request_put[15:8] ;
  assign wbuffer_11_memory$ADDRB = wbuf_11_portB_request_put[15:8] ;
  assign wbuffer_11_memory$DIA = wbuf_11_portA_request_put[7:0] ;
  assign wbuffer_11_memory$DIB = wbuf_11_portB_request_put[7:0] ;
  assign wbuffer_11_memory$WEA = wbuf_11_portA_request_put[17] ;
  assign wbuffer_11_memory$WEB = wbuf_11_portB_request_put[17] ;
  assign wbuffer_11_memory$ENA = EN_wbuf_11_portA_request_put ;
  assign wbuffer_11_memory$ENB = EN_wbuf_11_portB_request_put ;

  // submodule wbuffer_11_serverAdapterA_outDataCore
  assign wbuffer_11_serverAdapterA_outDataCore$D_IN = wbuffer_11_memory$DOA ;
  assign wbuffer_11_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_11_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_11_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_11_portA_response_get &&
	     wbuffer_11_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_11_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_11_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_11_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_11_portA_response_get &&
	     !wbuffer_11_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_11_serverAdapterA_outDataCore$CLR = EN_wbuf_11_portAClear ;

  // submodule wbuffer_11_serverAdapterB_outDataCore
  assign wbuffer_11_serverAdapterB_outDataCore$D_IN = wbuffer_11_memory$DOB ;
  assign wbuffer_11_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_11_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_11_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_11_portB_response_get &&
	     wbuffer_11_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_11_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_11_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_11_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_11_portB_response_get &&
	     !wbuffer_11_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_11_serverAdapterB_outDataCore$CLR = EN_wbuf_11_portBClear ;

  // submodule wbuffer_12_memory
  assign wbuffer_12_memory$ADDRA = wbuf_12_portA_request_put[15:8] ;
  assign wbuffer_12_memory$ADDRB = wbuf_12_portB_request_put[15:8] ;
  assign wbuffer_12_memory$DIA = wbuf_12_portA_request_put[7:0] ;
  assign wbuffer_12_memory$DIB = wbuf_12_portB_request_put[7:0] ;
  assign wbuffer_12_memory$WEA = wbuf_12_portA_request_put[17] ;
  assign wbuffer_12_memory$WEB = wbuf_12_portB_request_put[17] ;
  assign wbuffer_12_memory$ENA = EN_wbuf_12_portA_request_put ;
  assign wbuffer_12_memory$ENB = EN_wbuf_12_portB_request_put ;

  // submodule wbuffer_12_serverAdapterA_outDataCore
  assign wbuffer_12_serverAdapterA_outDataCore$D_IN = wbuffer_12_memory$DOA ;
  assign wbuffer_12_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_12_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_12_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_12_portA_response_get &&
	     wbuffer_12_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_12_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_12_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_12_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_12_portA_response_get &&
	     !wbuffer_12_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_12_serverAdapterA_outDataCore$CLR = EN_wbuf_12_portAClear ;

  // submodule wbuffer_12_serverAdapterB_outDataCore
  assign wbuffer_12_serverAdapterB_outDataCore$D_IN = wbuffer_12_memory$DOB ;
  assign wbuffer_12_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_12_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_12_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_12_portB_response_get &&
	     wbuffer_12_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_12_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_12_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_12_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_12_portB_response_get &&
	     !wbuffer_12_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_12_serverAdapterB_outDataCore$CLR = EN_wbuf_12_portBClear ;

  // submodule wbuffer_13_memory
  assign wbuffer_13_memory$ADDRA = wbuf_13_portA_request_put[15:8] ;
  assign wbuffer_13_memory$ADDRB = wbuf_13_portB_request_put[15:8] ;
  assign wbuffer_13_memory$DIA = wbuf_13_portA_request_put[7:0] ;
  assign wbuffer_13_memory$DIB = wbuf_13_portB_request_put[7:0] ;
  assign wbuffer_13_memory$WEA = wbuf_13_portA_request_put[17] ;
  assign wbuffer_13_memory$WEB = wbuf_13_portB_request_put[17] ;
  assign wbuffer_13_memory$ENA = EN_wbuf_13_portA_request_put ;
  assign wbuffer_13_memory$ENB = EN_wbuf_13_portB_request_put ;

  // submodule wbuffer_13_serverAdapterA_outDataCore
  assign wbuffer_13_serverAdapterA_outDataCore$D_IN = wbuffer_13_memory$DOA ;
  assign wbuffer_13_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_13_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_13_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_13_portA_response_get &&
	     wbuffer_13_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_13_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_13_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_13_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_13_portA_response_get &&
	     !wbuffer_13_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_13_serverAdapterA_outDataCore$CLR = EN_wbuf_13_portAClear ;

  // submodule wbuffer_13_serverAdapterB_outDataCore
  assign wbuffer_13_serverAdapterB_outDataCore$D_IN = wbuffer_13_memory$DOB ;
  assign wbuffer_13_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_13_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_13_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_13_portB_response_get &&
	     wbuffer_13_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_13_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_13_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_13_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_13_portB_response_get &&
	     !wbuffer_13_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_13_serverAdapterB_outDataCore$CLR = EN_wbuf_13_portBClear ;

  // submodule wbuffer_14_memory
  assign wbuffer_14_memory$ADDRA = wbuf_14_portA_request_put[15:8] ;
  assign wbuffer_14_memory$ADDRB = wbuf_14_portB_request_put[15:8] ;
  assign wbuffer_14_memory$DIA = wbuf_14_portA_request_put[7:0] ;
  assign wbuffer_14_memory$DIB = wbuf_14_portB_request_put[7:0] ;
  assign wbuffer_14_memory$WEA = wbuf_14_portA_request_put[17] ;
  assign wbuffer_14_memory$WEB = wbuf_14_portB_request_put[17] ;
  assign wbuffer_14_memory$ENA = EN_wbuf_14_portA_request_put ;
  assign wbuffer_14_memory$ENB = EN_wbuf_14_portB_request_put ;

  // submodule wbuffer_14_serverAdapterA_outDataCore
  assign wbuffer_14_serverAdapterA_outDataCore$D_IN = wbuffer_14_memory$DOA ;
  assign wbuffer_14_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_14_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_14_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_14_portA_response_get &&
	     wbuffer_14_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_14_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_14_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_14_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_14_portA_response_get &&
	     !wbuffer_14_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_14_serverAdapterA_outDataCore$CLR = EN_wbuf_14_portAClear ;

  // submodule wbuffer_14_serverAdapterB_outDataCore
  assign wbuffer_14_serverAdapterB_outDataCore$D_IN = wbuffer_14_memory$DOB ;
  assign wbuffer_14_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_14_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_14_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_14_portB_response_get &&
	     wbuffer_14_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_14_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_14_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_14_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_14_portB_response_get &&
	     !wbuffer_14_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_14_serverAdapterB_outDataCore$CLR = EN_wbuf_14_portBClear ;

  // submodule wbuffer_15_memory
  assign wbuffer_15_memory$ADDRA = wbuf_15_portA_request_put[15:8] ;
  assign wbuffer_15_memory$ADDRB = wbuf_15_portB_request_put[15:8] ;
  assign wbuffer_15_memory$DIA = wbuf_15_portA_request_put[7:0] ;
  assign wbuffer_15_memory$DIB = wbuf_15_portB_request_put[7:0] ;
  assign wbuffer_15_memory$WEA = wbuf_15_portA_request_put[17] ;
  assign wbuffer_15_memory$WEB = wbuf_15_portB_request_put[17] ;
  assign wbuffer_15_memory$ENA = EN_wbuf_15_portA_request_put ;
  assign wbuffer_15_memory$ENB = EN_wbuf_15_portB_request_put ;

  // submodule wbuffer_15_serverAdapterA_outDataCore
  assign wbuffer_15_serverAdapterA_outDataCore$D_IN = wbuffer_15_memory$DOA ;
  assign wbuffer_15_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_15_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_15_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_15_portA_response_get &&
	     wbuffer_15_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_15_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_15_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_15_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_15_portA_response_get &&
	     !wbuffer_15_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_15_serverAdapterA_outDataCore$CLR = EN_wbuf_15_portAClear ;

  // submodule wbuffer_15_serverAdapterB_outDataCore
  assign wbuffer_15_serverAdapterB_outDataCore$D_IN = wbuffer_15_memory$DOB ;
  assign wbuffer_15_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_15_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_15_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_15_portB_response_get &&
	     wbuffer_15_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_15_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_15_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_15_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_15_portB_response_get &&
	     !wbuffer_15_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_15_serverAdapterB_outDataCore$CLR = EN_wbuf_15_portBClear ;

  // submodule wbuffer_16_memory
  assign wbuffer_16_memory$ADDRA = wbuf_16_portA_request_put[15:8] ;
  assign wbuffer_16_memory$ADDRB = wbuf_16_portB_request_put[15:8] ;
  assign wbuffer_16_memory$DIA = wbuf_16_portA_request_put[7:0] ;
  assign wbuffer_16_memory$DIB = wbuf_16_portB_request_put[7:0] ;
  assign wbuffer_16_memory$WEA = wbuf_16_portA_request_put[17] ;
  assign wbuffer_16_memory$WEB = wbuf_16_portB_request_put[17] ;
  assign wbuffer_16_memory$ENA = EN_wbuf_16_portA_request_put ;
  assign wbuffer_16_memory$ENB = EN_wbuf_16_portB_request_put ;

  // submodule wbuffer_16_serverAdapterA_outDataCore
  assign wbuffer_16_serverAdapterA_outDataCore$D_IN = wbuffer_16_memory$DOA ;
  assign wbuffer_16_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_16_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_16_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_16_portA_response_get &&
	     wbuffer_16_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_16_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_16_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_16_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_16_portA_response_get &&
	     !wbuffer_16_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_16_serverAdapterA_outDataCore$CLR = EN_wbuf_16_portAClear ;

  // submodule wbuffer_16_serverAdapterB_outDataCore
  assign wbuffer_16_serverAdapterB_outDataCore$D_IN = wbuffer_16_memory$DOB ;
  assign wbuffer_16_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_16_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_16_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_16_portB_response_get &&
	     wbuffer_16_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_16_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_16_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_16_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_16_portB_response_get &&
	     !wbuffer_16_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_16_serverAdapterB_outDataCore$CLR = EN_wbuf_16_portBClear ;

  // submodule wbuffer_17_memory
  assign wbuffer_17_memory$ADDRA = wbuf_17_portA_request_put[15:8] ;
  assign wbuffer_17_memory$ADDRB = wbuf_17_portB_request_put[15:8] ;
  assign wbuffer_17_memory$DIA = wbuf_17_portA_request_put[7:0] ;
  assign wbuffer_17_memory$DIB = wbuf_17_portB_request_put[7:0] ;
  assign wbuffer_17_memory$WEA = wbuf_17_portA_request_put[17] ;
  assign wbuffer_17_memory$WEB = wbuf_17_portB_request_put[17] ;
  assign wbuffer_17_memory$ENA = EN_wbuf_17_portA_request_put ;
  assign wbuffer_17_memory$ENB = EN_wbuf_17_portB_request_put ;

  // submodule wbuffer_17_serverAdapterA_outDataCore
  assign wbuffer_17_serverAdapterA_outDataCore$D_IN = wbuffer_17_memory$DOA ;
  assign wbuffer_17_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_17_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_17_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_17_portA_response_get &&
	     wbuffer_17_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_17_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_17_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_17_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_17_portA_response_get &&
	     !wbuffer_17_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_17_serverAdapterA_outDataCore$CLR = EN_wbuf_17_portAClear ;

  // submodule wbuffer_17_serverAdapterB_outDataCore
  assign wbuffer_17_serverAdapterB_outDataCore$D_IN = wbuffer_17_memory$DOB ;
  assign wbuffer_17_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_17_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_17_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_17_portB_response_get &&
	     wbuffer_17_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_17_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_17_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_17_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_17_portB_response_get &&
	     !wbuffer_17_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_17_serverAdapterB_outDataCore$CLR = EN_wbuf_17_portBClear ;

  // submodule wbuffer_18_memory
  assign wbuffer_18_memory$ADDRA = wbuf_18_portA_request_put[15:8] ;
  assign wbuffer_18_memory$ADDRB = wbuf_18_portB_request_put[15:8] ;
  assign wbuffer_18_memory$DIA = wbuf_18_portA_request_put[7:0] ;
  assign wbuffer_18_memory$DIB = wbuf_18_portB_request_put[7:0] ;
  assign wbuffer_18_memory$WEA = wbuf_18_portA_request_put[17] ;
  assign wbuffer_18_memory$WEB = wbuf_18_portB_request_put[17] ;
  assign wbuffer_18_memory$ENA = EN_wbuf_18_portA_request_put ;
  assign wbuffer_18_memory$ENB = EN_wbuf_18_portB_request_put ;

  // submodule wbuffer_18_serverAdapterA_outDataCore
  assign wbuffer_18_serverAdapterA_outDataCore$D_IN = wbuffer_18_memory$DOA ;
  assign wbuffer_18_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_18_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_18_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_18_portA_response_get &&
	     wbuffer_18_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_18_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_18_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_18_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_18_portA_response_get &&
	     !wbuffer_18_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_18_serverAdapterA_outDataCore$CLR = EN_wbuf_18_portAClear ;

  // submodule wbuffer_18_serverAdapterB_outDataCore
  assign wbuffer_18_serverAdapterB_outDataCore$D_IN = wbuffer_18_memory$DOB ;
  assign wbuffer_18_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_18_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_18_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_18_portB_response_get &&
	     wbuffer_18_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_18_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_18_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_18_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_18_portB_response_get &&
	     !wbuffer_18_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_18_serverAdapterB_outDataCore$CLR = EN_wbuf_18_portBClear ;

  // submodule wbuffer_19_memory
  assign wbuffer_19_memory$ADDRA = wbuf_19_portA_request_put[15:8] ;
  assign wbuffer_19_memory$ADDRB = wbuf_19_portB_request_put[15:8] ;
  assign wbuffer_19_memory$DIA = wbuf_19_portA_request_put[7:0] ;
  assign wbuffer_19_memory$DIB = wbuf_19_portB_request_put[7:0] ;
  assign wbuffer_19_memory$WEA = wbuf_19_portA_request_put[17] ;
  assign wbuffer_19_memory$WEB = wbuf_19_portB_request_put[17] ;
  assign wbuffer_19_memory$ENA = EN_wbuf_19_portA_request_put ;
  assign wbuffer_19_memory$ENB = EN_wbuf_19_portB_request_put ;

  // submodule wbuffer_19_serverAdapterA_outDataCore
  assign wbuffer_19_serverAdapterA_outDataCore$D_IN = wbuffer_19_memory$DOA ;
  assign wbuffer_19_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_19_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_19_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_19_portA_response_get &&
	     wbuffer_19_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_19_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_19_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_19_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_19_portA_response_get &&
	     !wbuffer_19_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_19_serverAdapterA_outDataCore$CLR = EN_wbuf_19_portAClear ;

  // submodule wbuffer_19_serverAdapterB_outDataCore
  assign wbuffer_19_serverAdapterB_outDataCore$D_IN = wbuffer_19_memory$DOB ;
  assign wbuffer_19_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_19_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_19_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_19_portB_response_get &&
	     wbuffer_19_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_19_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_19_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_19_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_19_portB_response_get &&
	     !wbuffer_19_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_19_serverAdapterB_outDataCore$CLR = EN_wbuf_19_portBClear ;

  // submodule wbuffer_1_memory
  assign wbuffer_1_memory$ADDRA = wbuf_1_portA_request_put[15:8] ;
  assign wbuffer_1_memory$ADDRB = wbuf_1_portB_request_put[15:8] ;
  assign wbuffer_1_memory$DIA = wbuf_1_portA_request_put[7:0] ;
  assign wbuffer_1_memory$DIB = wbuf_1_portB_request_put[7:0] ;
  assign wbuffer_1_memory$WEA = wbuf_1_portA_request_put[17] ;
  assign wbuffer_1_memory$WEB = wbuf_1_portB_request_put[17] ;
  assign wbuffer_1_memory$ENA = EN_wbuf_1_portA_request_put ;
  assign wbuffer_1_memory$ENB = EN_wbuf_1_portB_request_put ;

  // submodule wbuffer_1_serverAdapterA_outDataCore
  assign wbuffer_1_serverAdapterA_outDataCore$D_IN = wbuffer_1_memory$DOA ;
  assign wbuffer_1_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_1_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_1_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_1_portA_response_get &&
	     wbuffer_1_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_1_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_1_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_1_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_1_portA_response_get &&
	     !wbuffer_1_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_1_serverAdapterA_outDataCore$CLR = EN_wbuf_1_portAClear ;

  // submodule wbuffer_1_serverAdapterB_outDataCore
  assign wbuffer_1_serverAdapterB_outDataCore$D_IN = wbuffer_1_memory$DOB ;
  assign wbuffer_1_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_1_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_1_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_1_portB_response_get &&
	     wbuffer_1_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_1_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_1_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_1_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_1_portB_response_get &&
	     !wbuffer_1_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_1_serverAdapterB_outDataCore$CLR = EN_wbuf_1_portBClear ;

  // submodule wbuffer_20_memory
  assign wbuffer_20_memory$ADDRA = wbuf_20_portA_request_put[15:8] ;
  assign wbuffer_20_memory$ADDRB = wbuf_20_portB_request_put[15:8] ;
  assign wbuffer_20_memory$DIA = wbuf_20_portA_request_put[7:0] ;
  assign wbuffer_20_memory$DIB = wbuf_20_portB_request_put[7:0] ;
  assign wbuffer_20_memory$WEA = wbuf_20_portA_request_put[17] ;
  assign wbuffer_20_memory$WEB = wbuf_20_portB_request_put[17] ;
  assign wbuffer_20_memory$ENA = EN_wbuf_20_portA_request_put ;
  assign wbuffer_20_memory$ENB = EN_wbuf_20_portB_request_put ;

  // submodule wbuffer_20_serverAdapterA_outDataCore
  assign wbuffer_20_serverAdapterA_outDataCore$D_IN = wbuffer_20_memory$DOA ;
  assign wbuffer_20_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_20_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_20_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_20_portA_response_get &&
	     wbuffer_20_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_20_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_20_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_20_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_20_portA_response_get &&
	     !wbuffer_20_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_20_serverAdapterA_outDataCore$CLR = EN_wbuf_20_portAClear ;

  // submodule wbuffer_20_serverAdapterB_outDataCore
  assign wbuffer_20_serverAdapterB_outDataCore$D_IN = wbuffer_20_memory$DOB ;
  assign wbuffer_20_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_20_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_20_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_20_portB_response_get &&
	     wbuffer_20_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_20_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_20_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_20_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_20_portB_response_get &&
	     !wbuffer_20_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_20_serverAdapterB_outDataCore$CLR = EN_wbuf_20_portBClear ;

  // submodule wbuffer_21_memory
  assign wbuffer_21_memory$ADDRA = wbuf_21_portA_request_put[15:8] ;
  assign wbuffer_21_memory$ADDRB = wbuf_21_portB_request_put[15:8] ;
  assign wbuffer_21_memory$DIA = wbuf_21_portA_request_put[7:0] ;
  assign wbuffer_21_memory$DIB = wbuf_21_portB_request_put[7:0] ;
  assign wbuffer_21_memory$WEA = wbuf_21_portA_request_put[17] ;
  assign wbuffer_21_memory$WEB = wbuf_21_portB_request_put[17] ;
  assign wbuffer_21_memory$ENA = EN_wbuf_21_portA_request_put ;
  assign wbuffer_21_memory$ENB = EN_wbuf_21_portB_request_put ;

  // submodule wbuffer_21_serverAdapterA_outDataCore
  assign wbuffer_21_serverAdapterA_outDataCore$D_IN = wbuffer_21_memory$DOA ;
  assign wbuffer_21_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_21_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_21_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_21_portA_response_get &&
	     wbuffer_21_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_21_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_21_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_21_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_21_portA_response_get &&
	     !wbuffer_21_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_21_serverAdapterA_outDataCore$CLR = EN_wbuf_21_portAClear ;

  // submodule wbuffer_21_serverAdapterB_outDataCore
  assign wbuffer_21_serverAdapterB_outDataCore$D_IN = wbuffer_21_memory$DOB ;
  assign wbuffer_21_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_21_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_21_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_21_portB_response_get &&
	     wbuffer_21_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_21_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_21_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_21_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_21_portB_response_get &&
	     !wbuffer_21_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_21_serverAdapterB_outDataCore$CLR = EN_wbuf_21_portBClear ;

  // submodule wbuffer_22_memory
  assign wbuffer_22_memory$ADDRA = wbuf_22_portA_request_put[15:8] ;
  assign wbuffer_22_memory$ADDRB = wbuf_22_portB_request_put[15:8] ;
  assign wbuffer_22_memory$DIA = wbuf_22_portA_request_put[7:0] ;
  assign wbuffer_22_memory$DIB = wbuf_22_portB_request_put[7:0] ;
  assign wbuffer_22_memory$WEA = wbuf_22_portA_request_put[17] ;
  assign wbuffer_22_memory$WEB = wbuf_22_portB_request_put[17] ;
  assign wbuffer_22_memory$ENA = EN_wbuf_22_portA_request_put ;
  assign wbuffer_22_memory$ENB = EN_wbuf_22_portB_request_put ;

  // submodule wbuffer_22_serverAdapterA_outDataCore
  assign wbuffer_22_serverAdapterA_outDataCore$D_IN = wbuffer_22_memory$DOA ;
  assign wbuffer_22_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_22_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_22_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_22_portA_response_get &&
	     wbuffer_22_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_22_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_22_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_22_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_22_portA_response_get &&
	     !wbuffer_22_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_22_serverAdapterA_outDataCore$CLR = EN_wbuf_22_portAClear ;

  // submodule wbuffer_22_serverAdapterB_outDataCore
  assign wbuffer_22_serverAdapterB_outDataCore$D_IN = wbuffer_22_memory$DOB ;
  assign wbuffer_22_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_22_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_22_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_22_portB_response_get &&
	     wbuffer_22_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_22_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_22_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_22_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_22_portB_response_get &&
	     !wbuffer_22_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_22_serverAdapterB_outDataCore$CLR = EN_wbuf_22_portBClear ;

  // submodule wbuffer_23_memory
  assign wbuffer_23_memory$ADDRA = wbuf_23_portA_request_put[15:8] ;
  assign wbuffer_23_memory$ADDRB = wbuf_23_portB_request_put[15:8] ;
  assign wbuffer_23_memory$DIA = wbuf_23_portA_request_put[7:0] ;
  assign wbuffer_23_memory$DIB = wbuf_23_portB_request_put[7:0] ;
  assign wbuffer_23_memory$WEA = wbuf_23_portA_request_put[17] ;
  assign wbuffer_23_memory$WEB = wbuf_23_portB_request_put[17] ;
  assign wbuffer_23_memory$ENA = EN_wbuf_23_portA_request_put ;
  assign wbuffer_23_memory$ENB = EN_wbuf_23_portB_request_put ;

  // submodule wbuffer_23_serverAdapterA_outDataCore
  assign wbuffer_23_serverAdapterA_outDataCore$D_IN = wbuffer_23_memory$DOA ;
  assign wbuffer_23_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_23_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_23_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_23_portA_response_get &&
	     wbuffer_23_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_23_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_23_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_23_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_23_portA_response_get &&
	     !wbuffer_23_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_23_serverAdapterA_outDataCore$CLR = EN_wbuf_23_portAClear ;

  // submodule wbuffer_23_serverAdapterB_outDataCore
  assign wbuffer_23_serverAdapterB_outDataCore$D_IN = wbuffer_23_memory$DOB ;
  assign wbuffer_23_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_23_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_23_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_23_portB_response_get &&
	     wbuffer_23_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_23_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_23_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_23_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_23_portB_response_get &&
	     !wbuffer_23_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_23_serverAdapterB_outDataCore$CLR = EN_wbuf_23_portBClear ;

  // submodule wbuffer_24_memory
  assign wbuffer_24_memory$ADDRA = wbuf_24_portA_request_put[15:8] ;
  assign wbuffer_24_memory$ADDRB = wbuf_24_portB_request_put[15:8] ;
  assign wbuffer_24_memory$DIA = wbuf_24_portA_request_put[7:0] ;
  assign wbuffer_24_memory$DIB = wbuf_24_portB_request_put[7:0] ;
  assign wbuffer_24_memory$WEA = wbuf_24_portA_request_put[17] ;
  assign wbuffer_24_memory$WEB = wbuf_24_portB_request_put[17] ;
  assign wbuffer_24_memory$ENA = EN_wbuf_24_portA_request_put ;
  assign wbuffer_24_memory$ENB = EN_wbuf_24_portB_request_put ;

  // submodule wbuffer_24_serverAdapterA_outDataCore
  assign wbuffer_24_serverAdapterA_outDataCore$D_IN = wbuffer_24_memory$DOA ;
  assign wbuffer_24_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_24_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_24_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_24_portA_response_get &&
	     wbuffer_24_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_24_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_24_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_24_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_24_portA_response_get &&
	     !wbuffer_24_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_24_serverAdapterA_outDataCore$CLR = EN_wbuf_24_portAClear ;

  // submodule wbuffer_24_serverAdapterB_outDataCore
  assign wbuffer_24_serverAdapterB_outDataCore$D_IN = wbuffer_24_memory$DOB ;
  assign wbuffer_24_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_24_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_24_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_24_portB_response_get &&
	     wbuffer_24_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_24_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_24_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_24_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_24_portB_response_get &&
	     !wbuffer_24_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_24_serverAdapterB_outDataCore$CLR = EN_wbuf_24_portBClear ;

  // submodule wbuffer_25_memory
  assign wbuffer_25_memory$ADDRA = wbuf_25_portA_request_put[15:8] ;
  assign wbuffer_25_memory$ADDRB = wbuf_25_portB_request_put[15:8] ;
  assign wbuffer_25_memory$DIA = wbuf_25_portA_request_put[7:0] ;
  assign wbuffer_25_memory$DIB = wbuf_25_portB_request_put[7:0] ;
  assign wbuffer_25_memory$WEA = wbuf_25_portA_request_put[17] ;
  assign wbuffer_25_memory$WEB = wbuf_25_portB_request_put[17] ;
  assign wbuffer_25_memory$ENA = EN_wbuf_25_portA_request_put ;
  assign wbuffer_25_memory$ENB = EN_wbuf_25_portB_request_put ;

  // submodule wbuffer_25_serverAdapterA_outDataCore
  assign wbuffer_25_serverAdapterA_outDataCore$D_IN = wbuffer_25_memory$DOA ;
  assign wbuffer_25_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_25_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_25_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_25_portA_response_get &&
	     wbuffer_25_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_25_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_25_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_25_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_25_portA_response_get &&
	     !wbuffer_25_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_25_serverAdapterA_outDataCore$CLR = EN_wbuf_25_portAClear ;

  // submodule wbuffer_25_serverAdapterB_outDataCore
  assign wbuffer_25_serverAdapterB_outDataCore$D_IN = wbuffer_25_memory$DOB ;
  assign wbuffer_25_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_25_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_25_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_25_portB_response_get &&
	     wbuffer_25_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_25_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_25_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_25_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_25_portB_response_get &&
	     !wbuffer_25_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_25_serverAdapterB_outDataCore$CLR = EN_wbuf_25_portBClear ;

  // submodule wbuffer_26_memory
  assign wbuffer_26_memory$ADDRA = wbuf_26_portA_request_put[15:8] ;
  assign wbuffer_26_memory$ADDRB = wbuf_26_portB_request_put[15:8] ;
  assign wbuffer_26_memory$DIA = wbuf_26_portA_request_put[7:0] ;
  assign wbuffer_26_memory$DIB = wbuf_26_portB_request_put[7:0] ;
  assign wbuffer_26_memory$WEA = wbuf_26_portA_request_put[17] ;
  assign wbuffer_26_memory$WEB = wbuf_26_portB_request_put[17] ;
  assign wbuffer_26_memory$ENA = EN_wbuf_26_portA_request_put ;
  assign wbuffer_26_memory$ENB = EN_wbuf_26_portB_request_put ;

  // submodule wbuffer_26_serverAdapterA_outDataCore
  assign wbuffer_26_serverAdapterA_outDataCore$D_IN = wbuffer_26_memory$DOA ;
  assign wbuffer_26_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_26_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_26_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_26_portA_response_get &&
	     wbuffer_26_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_26_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_26_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_26_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_26_portA_response_get &&
	     !wbuffer_26_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_26_serverAdapterA_outDataCore$CLR = EN_wbuf_26_portAClear ;

  // submodule wbuffer_26_serverAdapterB_outDataCore
  assign wbuffer_26_serverAdapterB_outDataCore$D_IN = wbuffer_26_memory$DOB ;
  assign wbuffer_26_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_26_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_26_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_26_portB_response_get &&
	     wbuffer_26_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_26_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_26_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_26_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_26_portB_response_get &&
	     !wbuffer_26_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_26_serverAdapterB_outDataCore$CLR = EN_wbuf_26_portBClear ;

  // submodule wbuffer_27_memory
  assign wbuffer_27_memory$ADDRA = wbuf_27_portA_request_put[15:8] ;
  assign wbuffer_27_memory$ADDRB = wbuf_27_portB_request_put[15:8] ;
  assign wbuffer_27_memory$DIA = wbuf_27_portA_request_put[7:0] ;
  assign wbuffer_27_memory$DIB = wbuf_27_portB_request_put[7:0] ;
  assign wbuffer_27_memory$WEA = wbuf_27_portA_request_put[17] ;
  assign wbuffer_27_memory$WEB = wbuf_27_portB_request_put[17] ;
  assign wbuffer_27_memory$ENA = EN_wbuf_27_portA_request_put ;
  assign wbuffer_27_memory$ENB = EN_wbuf_27_portB_request_put ;

  // submodule wbuffer_27_serverAdapterA_outDataCore
  assign wbuffer_27_serverAdapterA_outDataCore$D_IN = wbuffer_27_memory$DOA ;
  assign wbuffer_27_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_27_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_27_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_27_portA_response_get &&
	     wbuffer_27_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_27_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_27_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_27_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_27_portA_response_get &&
	     !wbuffer_27_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_27_serverAdapterA_outDataCore$CLR = EN_wbuf_27_portAClear ;

  // submodule wbuffer_27_serverAdapterB_outDataCore
  assign wbuffer_27_serverAdapterB_outDataCore$D_IN = wbuffer_27_memory$DOB ;
  assign wbuffer_27_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_27_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_27_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_27_portB_response_get &&
	     wbuffer_27_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_27_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_27_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_27_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_27_portB_response_get &&
	     !wbuffer_27_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_27_serverAdapterB_outDataCore$CLR = EN_wbuf_27_portBClear ;

  // submodule wbuffer_28_memory
  assign wbuffer_28_memory$ADDRA = wbuf_28_portA_request_put[15:8] ;
  assign wbuffer_28_memory$ADDRB = wbuf_28_portB_request_put[15:8] ;
  assign wbuffer_28_memory$DIA = wbuf_28_portA_request_put[7:0] ;
  assign wbuffer_28_memory$DIB = wbuf_28_portB_request_put[7:0] ;
  assign wbuffer_28_memory$WEA = wbuf_28_portA_request_put[17] ;
  assign wbuffer_28_memory$WEB = wbuf_28_portB_request_put[17] ;
  assign wbuffer_28_memory$ENA = EN_wbuf_28_portA_request_put ;
  assign wbuffer_28_memory$ENB = EN_wbuf_28_portB_request_put ;

  // submodule wbuffer_28_serverAdapterA_outDataCore
  assign wbuffer_28_serverAdapterA_outDataCore$D_IN = wbuffer_28_memory$DOA ;
  assign wbuffer_28_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_28_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_28_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_28_portA_response_get &&
	     wbuffer_28_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_28_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_28_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_28_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_28_portA_response_get &&
	     !wbuffer_28_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_28_serverAdapterA_outDataCore$CLR = EN_wbuf_28_portAClear ;

  // submodule wbuffer_28_serverAdapterB_outDataCore
  assign wbuffer_28_serverAdapterB_outDataCore$D_IN = wbuffer_28_memory$DOB ;
  assign wbuffer_28_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_28_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_28_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_28_portB_response_get &&
	     wbuffer_28_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_28_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_28_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_28_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_28_portB_response_get &&
	     !wbuffer_28_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_28_serverAdapterB_outDataCore$CLR = EN_wbuf_28_portBClear ;

  // submodule wbuffer_29_memory
  assign wbuffer_29_memory$ADDRA = wbuf_29_portA_request_put[15:8] ;
  assign wbuffer_29_memory$ADDRB = wbuf_29_portB_request_put[15:8] ;
  assign wbuffer_29_memory$DIA = wbuf_29_portA_request_put[7:0] ;
  assign wbuffer_29_memory$DIB = wbuf_29_portB_request_put[7:0] ;
  assign wbuffer_29_memory$WEA = wbuf_29_portA_request_put[17] ;
  assign wbuffer_29_memory$WEB = wbuf_29_portB_request_put[17] ;
  assign wbuffer_29_memory$ENA = EN_wbuf_29_portA_request_put ;
  assign wbuffer_29_memory$ENB = EN_wbuf_29_portB_request_put ;

  // submodule wbuffer_29_serverAdapterA_outDataCore
  assign wbuffer_29_serverAdapterA_outDataCore$D_IN = wbuffer_29_memory$DOA ;
  assign wbuffer_29_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_29_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_29_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_29_portA_response_get &&
	     wbuffer_29_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_29_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_29_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_29_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_29_portA_response_get &&
	     !wbuffer_29_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_29_serverAdapterA_outDataCore$CLR = EN_wbuf_29_portAClear ;

  // submodule wbuffer_29_serverAdapterB_outDataCore
  assign wbuffer_29_serverAdapterB_outDataCore$D_IN = wbuffer_29_memory$DOB ;
  assign wbuffer_29_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_29_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_29_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_29_portB_response_get &&
	     wbuffer_29_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_29_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_29_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_29_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_29_portB_response_get &&
	     !wbuffer_29_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_29_serverAdapterB_outDataCore$CLR = EN_wbuf_29_portBClear ;

  // submodule wbuffer_2_memory
  assign wbuffer_2_memory$ADDRA = wbuf_2_portA_request_put[15:8] ;
  assign wbuffer_2_memory$ADDRB = wbuf_2_portB_request_put[15:8] ;
  assign wbuffer_2_memory$DIA = wbuf_2_portA_request_put[7:0] ;
  assign wbuffer_2_memory$DIB = wbuf_2_portB_request_put[7:0] ;
  assign wbuffer_2_memory$WEA = wbuf_2_portA_request_put[17] ;
  assign wbuffer_2_memory$WEB = wbuf_2_portB_request_put[17] ;
  assign wbuffer_2_memory$ENA = EN_wbuf_2_portA_request_put ;
  assign wbuffer_2_memory$ENB = EN_wbuf_2_portB_request_put ;

  // submodule wbuffer_2_serverAdapterA_outDataCore
  assign wbuffer_2_serverAdapterA_outDataCore$D_IN = wbuffer_2_memory$DOA ;
  assign wbuffer_2_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_2_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_2_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_2_portA_response_get &&
	     wbuffer_2_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_2_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_2_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_2_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_2_portA_response_get &&
	     !wbuffer_2_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_2_serverAdapterA_outDataCore$CLR = EN_wbuf_2_portAClear ;

  // submodule wbuffer_2_serverAdapterB_outDataCore
  assign wbuffer_2_serverAdapterB_outDataCore$D_IN = wbuffer_2_memory$DOB ;
  assign wbuffer_2_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_2_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_2_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_2_portB_response_get &&
	     wbuffer_2_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_2_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_2_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_2_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_2_portB_response_get &&
	     !wbuffer_2_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_2_serverAdapterB_outDataCore$CLR = EN_wbuf_2_portBClear ;

  // submodule wbuffer_30_memory
  assign wbuffer_30_memory$ADDRA = wbuf_30_portA_request_put[15:8] ;
  assign wbuffer_30_memory$ADDRB = wbuf_30_portB_request_put[15:8] ;
  assign wbuffer_30_memory$DIA = wbuf_30_portA_request_put[7:0] ;
  assign wbuffer_30_memory$DIB = wbuf_30_portB_request_put[7:0] ;
  assign wbuffer_30_memory$WEA = wbuf_30_portA_request_put[17] ;
  assign wbuffer_30_memory$WEB = wbuf_30_portB_request_put[17] ;
  assign wbuffer_30_memory$ENA = EN_wbuf_30_portA_request_put ;
  assign wbuffer_30_memory$ENB = EN_wbuf_30_portB_request_put ;

  // submodule wbuffer_30_serverAdapterA_outDataCore
  assign wbuffer_30_serverAdapterA_outDataCore$D_IN = wbuffer_30_memory$DOA ;
  assign wbuffer_30_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_30_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_30_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_30_portA_response_get &&
	     wbuffer_30_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_30_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_30_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_30_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_30_portA_response_get &&
	     !wbuffer_30_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_30_serverAdapterA_outDataCore$CLR = EN_wbuf_30_portAClear ;

  // submodule wbuffer_30_serverAdapterB_outDataCore
  assign wbuffer_30_serverAdapterB_outDataCore$D_IN = wbuffer_30_memory$DOB ;
  assign wbuffer_30_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_30_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_30_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_30_portB_response_get &&
	     wbuffer_30_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_30_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_30_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_30_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_30_portB_response_get &&
	     !wbuffer_30_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_30_serverAdapterB_outDataCore$CLR = EN_wbuf_30_portBClear ;

  // submodule wbuffer_31_memory
  assign wbuffer_31_memory$ADDRA = wbuf_31_portA_request_put[15:8] ;
  assign wbuffer_31_memory$ADDRB = wbuf_31_portB_request_put[15:8] ;
  assign wbuffer_31_memory$DIA = wbuf_31_portA_request_put[7:0] ;
  assign wbuffer_31_memory$DIB = wbuf_31_portB_request_put[7:0] ;
  assign wbuffer_31_memory$WEA = wbuf_31_portA_request_put[17] ;
  assign wbuffer_31_memory$WEB = wbuf_31_portB_request_put[17] ;
  assign wbuffer_31_memory$ENA = EN_wbuf_31_portA_request_put ;
  assign wbuffer_31_memory$ENB = EN_wbuf_31_portB_request_put ;

  // submodule wbuffer_31_serverAdapterA_outDataCore
  assign wbuffer_31_serverAdapterA_outDataCore$D_IN = wbuffer_31_memory$DOA ;
  assign wbuffer_31_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_31_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_31_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_31_portA_response_get &&
	     wbuffer_31_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_31_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_31_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_31_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_31_portA_response_get &&
	     !wbuffer_31_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_31_serverAdapterA_outDataCore$CLR = EN_wbuf_31_portAClear ;

  // submodule wbuffer_31_serverAdapterB_outDataCore
  assign wbuffer_31_serverAdapterB_outDataCore$D_IN = wbuffer_31_memory$DOB ;
  assign wbuffer_31_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_31_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_31_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_31_portB_response_get &&
	     wbuffer_31_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_31_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_31_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_31_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_31_portB_response_get &&
	     !wbuffer_31_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_31_serverAdapterB_outDataCore$CLR = EN_wbuf_31_portBClear ;

  // submodule wbuffer_3_memory
  assign wbuffer_3_memory$ADDRA = wbuf_3_portA_request_put[15:8] ;
  assign wbuffer_3_memory$ADDRB = wbuf_3_portB_request_put[15:8] ;
  assign wbuffer_3_memory$DIA = wbuf_3_portA_request_put[7:0] ;
  assign wbuffer_3_memory$DIB = wbuf_3_portB_request_put[7:0] ;
  assign wbuffer_3_memory$WEA = wbuf_3_portA_request_put[17] ;
  assign wbuffer_3_memory$WEB = wbuf_3_portB_request_put[17] ;
  assign wbuffer_3_memory$ENA = EN_wbuf_3_portA_request_put ;
  assign wbuffer_3_memory$ENB = EN_wbuf_3_portB_request_put ;

  // submodule wbuffer_3_serverAdapterA_outDataCore
  assign wbuffer_3_serverAdapterA_outDataCore$D_IN = wbuffer_3_memory$DOA ;
  assign wbuffer_3_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_3_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_3_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_3_portA_response_get &&
	     wbuffer_3_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_3_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_3_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_3_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_3_portA_response_get &&
	     !wbuffer_3_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_3_serverAdapterA_outDataCore$CLR = EN_wbuf_3_portAClear ;

  // submodule wbuffer_3_serverAdapterB_outDataCore
  assign wbuffer_3_serverAdapterB_outDataCore$D_IN = wbuffer_3_memory$DOB ;
  assign wbuffer_3_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_3_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_3_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_3_portB_response_get &&
	     wbuffer_3_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_3_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_3_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_3_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_3_portB_response_get &&
	     !wbuffer_3_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_3_serverAdapterB_outDataCore$CLR = EN_wbuf_3_portBClear ;

  // submodule wbuffer_4_memory
  assign wbuffer_4_memory$ADDRA = wbuf_4_portA_request_put[15:8] ;
  assign wbuffer_4_memory$ADDRB = wbuf_4_portB_request_put[15:8] ;
  assign wbuffer_4_memory$DIA = wbuf_4_portA_request_put[7:0] ;
  assign wbuffer_4_memory$DIB = wbuf_4_portB_request_put[7:0] ;
  assign wbuffer_4_memory$WEA = wbuf_4_portA_request_put[17] ;
  assign wbuffer_4_memory$WEB = wbuf_4_portB_request_put[17] ;
  assign wbuffer_4_memory$ENA = EN_wbuf_4_portA_request_put ;
  assign wbuffer_4_memory$ENB = EN_wbuf_4_portB_request_put ;

  // submodule wbuffer_4_serverAdapterA_outDataCore
  assign wbuffer_4_serverAdapterA_outDataCore$D_IN = wbuffer_4_memory$DOA ;
  assign wbuffer_4_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_4_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_4_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_4_portA_response_get &&
	     wbuffer_4_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_4_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_4_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_4_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_4_portA_response_get &&
	     !wbuffer_4_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_4_serverAdapterA_outDataCore$CLR = EN_wbuf_4_portAClear ;

  // submodule wbuffer_4_serverAdapterB_outDataCore
  assign wbuffer_4_serverAdapterB_outDataCore$D_IN = wbuffer_4_memory$DOB ;
  assign wbuffer_4_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_4_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_4_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_4_portB_response_get &&
	     wbuffer_4_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_4_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_4_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_4_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_4_portB_response_get &&
	     !wbuffer_4_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_4_serverAdapterB_outDataCore$CLR = EN_wbuf_4_portBClear ;

  // submodule wbuffer_5_memory
  assign wbuffer_5_memory$ADDRA = wbuf_5_portA_request_put[15:8] ;
  assign wbuffer_5_memory$ADDRB = wbuf_5_portB_request_put[15:8] ;
  assign wbuffer_5_memory$DIA = wbuf_5_portA_request_put[7:0] ;
  assign wbuffer_5_memory$DIB = wbuf_5_portB_request_put[7:0] ;
  assign wbuffer_5_memory$WEA = wbuf_5_portA_request_put[17] ;
  assign wbuffer_5_memory$WEB = wbuf_5_portB_request_put[17] ;
  assign wbuffer_5_memory$ENA = EN_wbuf_5_portA_request_put ;
  assign wbuffer_5_memory$ENB = EN_wbuf_5_portB_request_put ;

  // submodule wbuffer_5_serverAdapterA_outDataCore
  assign wbuffer_5_serverAdapterA_outDataCore$D_IN = wbuffer_5_memory$DOA ;
  assign wbuffer_5_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_5_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_5_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_5_portA_response_get &&
	     wbuffer_5_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_5_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_5_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_5_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_5_portA_response_get &&
	     !wbuffer_5_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_5_serverAdapterA_outDataCore$CLR = EN_wbuf_5_portAClear ;

  // submodule wbuffer_5_serverAdapterB_outDataCore
  assign wbuffer_5_serverAdapterB_outDataCore$D_IN = wbuffer_5_memory$DOB ;
  assign wbuffer_5_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_5_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_5_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_5_portB_response_get &&
	     wbuffer_5_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_5_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_5_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_5_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_5_portB_response_get &&
	     !wbuffer_5_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_5_serverAdapterB_outDataCore$CLR = EN_wbuf_5_portBClear ;

  // submodule wbuffer_6_memory
  assign wbuffer_6_memory$ADDRA = wbuf_6_portA_request_put[15:8] ;
  assign wbuffer_6_memory$ADDRB = wbuf_6_portB_request_put[15:8] ;
  assign wbuffer_6_memory$DIA = wbuf_6_portA_request_put[7:0] ;
  assign wbuffer_6_memory$DIB = wbuf_6_portB_request_put[7:0] ;
  assign wbuffer_6_memory$WEA = wbuf_6_portA_request_put[17] ;
  assign wbuffer_6_memory$WEB = wbuf_6_portB_request_put[17] ;
  assign wbuffer_6_memory$ENA = EN_wbuf_6_portA_request_put ;
  assign wbuffer_6_memory$ENB = EN_wbuf_6_portB_request_put ;

  // submodule wbuffer_6_serverAdapterA_outDataCore
  assign wbuffer_6_serverAdapterA_outDataCore$D_IN = wbuffer_6_memory$DOA ;
  assign wbuffer_6_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_6_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_6_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_6_portA_response_get &&
	     wbuffer_6_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_6_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_6_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_6_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_6_portA_response_get &&
	     !wbuffer_6_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_6_serverAdapterA_outDataCore$CLR = EN_wbuf_6_portAClear ;

  // submodule wbuffer_6_serverAdapterB_outDataCore
  assign wbuffer_6_serverAdapterB_outDataCore$D_IN = wbuffer_6_memory$DOB ;
  assign wbuffer_6_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_6_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_6_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_6_portB_response_get &&
	     wbuffer_6_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_6_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_6_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_6_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_6_portB_response_get &&
	     !wbuffer_6_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_6_serverAdapterB_outDataCore$CLR = EN_wbuf_6_portBClear ;

  // submodule wbuffer_7_memory
  assign wbuffer_7_memory$ADDRA = wbuf_7_portA_request_put[15:8] ;
  assign wbuffer_7_memory$ADDRB = wbuf_7_portB_request_put[15:8] ;
  assign wbuffer_7_memory$DIA = wbuf_7_portA_request_put[7:0] ;
  assign wbuffer_7_memory$DIB = wbuf_7_portB_request_put[7:0] ;
  assign wbuffer_7_memory$WEA = wbuf_7_portA_request_put[17] ;
  assign wbuffer_7_memory$WEB = wbuf_7_portB_request_put[17] ;
  assign wbuffer_7_memory$ENA = EN_wbuf_7_portA_request_put ;
  assign wbuffer_7_memory$ENB = EN_wbuf_7_portB_request_put ;

  // submodule wbuffer_7_serverAdapterA_outDataCore
  assign wbuffer_7_serverAdapterA_outDataCore$D_IN = wbuffer_7_memory$DOA ;
  assign wbuffer_7_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_7_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_7_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_7_portA_response_get &&
	     wbuffer_7_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_7_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_7_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_7_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_7_portA_response_get &&
	     !wbuffer_7_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_7_serverAdapterA_outDataCore$CLR = EN_wbuf_7_portAClear ;

  // submodule wbuffer_7_serverAdapterB_outDataCore
  assign wbuffer_7_serverAdapterB_outDataCore$D_IN = wbuffer_7_memory$DOB ;
  assign wbuffer_7_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_7_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_7_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_7_portB_response_get &&
	     wbuffer_7_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_7_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_7_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_7_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_7_portB_response_get &&
	     !wbuffer_7_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_7_serverAdapterB_outDataCore$CLR = EN_wbuf_7_portBClear ;

  // submodule wbuffer_8_memory
  assign wbuffer_8_memory$ADDRA = wbuf_8_portA_request_put[15:8] ;
  assign wbuffer_8_memory$ADDRB = wbuf_8_portB_request_put[15:8] ;
  assign wbuffer_8_memory$DIA = wbuf_8_portA_request_put[7:0] ;
  assign wbuffer_8_memory$DIB = wbuf_8_portB_request_put[7:0] ;
  assign wbuffer_8_memory$WEA = wbuf_8_portA_request_put[17] ;
  assign wbuffer_8_memory$WEB = wbuf_8_portB_request_put[17] ;
  assign wbuffer_8_memory$ENA = EN_wbuf_8_portA_request_put ;
  assign wbuffer_8_memory$ENB = EN_wbuf_8_portB_request_put ;

  // submodule wbuffer_8_serverAdapterA_outDataCore
  assign wbuffer_8_serverAdapterA_outDataCore$D_IN = wbuffer_8_memory$DOA ;
  assign wbuffer_8_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_8_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_8_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_8_portA_response_get &&
	     wbuffer_8_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_8_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_8_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_8_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_8_portA_response_get &&
	     !wbuffer_8_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_8_serverAdapterA_outDataCore$CLR = EN_wbuf_8_portAClear ;

  // submodule wbuffer_8_serverAdapterB_outDataCore
  assign wbuffer_8_serverAdapterB_outDataCore$D_IN = wbuffer_8_memory$DOB ;
  assign wbuffer_8_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_8_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_8_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_8_portB_response_get &&
	     wbuffer_8_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_8_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_8_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_8_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_8_portB_response_get &&
	     !wbuffer_8_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_8_serverAdapterB_outDataCore$CLR = EN_wbuf_8_portBClear ;

  // submodule wbuffer_9_memory
  assign wbuffer_9_memory$ADDRA = wbuf_9_portA_request_put[15:8] ;
  assign wbuffer_9_memory$ADDRB = wbuf_9_portB_request_put[15:8] ;
  assign wbuffer_9_memory$DIA = wbuf_9_portA_request_put[7:0] ;
  assign wbuffer_9_memory$DIB = wbuf_9_portB_request_put[7:0] ;
  assign wbuffer_9_memory$WEA = wbuf_9_portA_request_put[17] ;
  assign wbuffer_9_memory$WEB = wbuf_9_portB_request_put[17] ;
  assign wbuffer_9_memory$ENA = EN_wbuf_9_portA_request_put ;
  assign wbuffer_9_memory$ENB = EN_wbuf_9_portB_request_put ;

  // submodule wbuffer_9_serverAdapterA_outDataCore
  assign wbuffer_9_serverAdapterA_outDataCore$D_IN = wbuffer_9_memory$DOA ;
  assign wbuffer_9_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_9_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_9_serverAdapterA_outDataCore$FULL_N &&
	     !EN_wbuf_9_portA_response_get &&
	     wbuffer_9_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_9_serverAdapterA_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_9_serverAdapterA_outData_enqAndDeq ||
	     wbuffer_9_serverAdapterA_outDataCore$EMPTY_N &&
	     EN_wbuf_9_portA_response_get &&
	     !wbuffer_9_serverAdapterA_outData_enqData$whas ;
  assign wbuffer_9_serverAdapterA_outDataCore$CLR = EN_wbuf_9_portAClear ;

  // submodule wbuffer_9_serverAdapterB_outDataCore
  assign wbuffer_9_serverAdapterB_outDataCore$D_IN = wbuffer_9_memory$DOB ;
  assign wbuffer_9_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_wbuffer_9_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_9_serverAdapterB_outDataCore$FULL_N &&
	     !EN_wbuf_9_portB_response_get &&
	     wbuffer_9_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_9_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_wbuffer_9_serverAdapterB_outData_enqAndDeq ||
	     wbuffer_9_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_wbuf_9_portB_response_get &&
	     !wbuffer_9_serverAdapterB_outData_enqData$whas ;
  assign wbuffer_9_serverAdapterB_outDataCore$CLR = EN_wbuf_9_portBClear ;

  // remaining internal signals
  assign ibuf_0_portA_request_put_BITS_17_TO_16__q1 =
	     ibuf_0_portA_request_put[17:16] ;
  assign ibuf_0_portB_request_put_BITS_17_TO_16__q2 =
	     ibuf_0_portB_request_put[17:16] ;
  assign ibuf_10_portA_request_put_BITS_17_TO_16__q3 =
	     ibuf_10_portA_request_put[17:16] ;
  assign ibuf_10_portB_request_put_BITS_17_TO_16__q4 =
	     ibuf_10_portB_request_put[17:16] ;
  assign ibuf_11_portA_request_put_BITS_17_TO_16__q5 =
	     ibuf_11_portA_request_put[17:16] ;
  assign ibuf_11_portB_request_put_BITS_17_TO_16__q6 =
	     ibuf_11_portB_request_put[17:16] ;
  assign ibuf_12_portA_request_put_BITS_17_TO_16__q7 =
	     ibuf_12_portA_request_put[17:16] ;
  assign ibuf_12_portB_request_put_BITS_17_TO_16__q8 =
	     ibuf_12_portB_request_put[17:16] ;
  assign ibuf_13_portA_request_put_BITS_17_TO_16__q9 =
	     ibuf_13_portA_request_put[17:16] ;
  assign ibuf_13_portB_request_put_BITS_17_TO_16__q10 =
	     ibuf_13_portB_request_put[17:16] ;
  assign ibuf_14_portA_request_put_BITS_17_TO_16__q11 =
	     ibuf_14_portA_request_put[17:16] ;
  assign ibuf_14_portB_request_put_BITS_17_TO_16__q12 =
	     ibuf_14_portB_request_put[17:16] ;
  assign ibuf_15_portA_request_put_BITS_17_TO_16__q13 =
	     ibuf_15_portA_request_put[17:16] ;
  assign ibuf_15_portB_request_put_BITS_17_TO_16__q14 =
	     ibuf_15_portB_request_put[17:16] ;
  assign ibuf_16_portA_request_put_BITS_17_TO_16__q15 =
	     ibuf_16_portA_request_put[17:16] ;
  assign ibuf_16_portB_request_put_BITS_17_TO_16__q16 =
	     ibuf_16_portB_request_put[17:16] ;
  assign ibuf_17_portA_request_put_BITS_17_TO_16__q17 =
	     ibuf_17_portA_request_put[17:16] ;
  assign ibuf_17_portB_request_put_BITS_17_TO_16__q18 =
	     ibuf_17_portB_request_put[17:16] ;
  assign ibuf_18_portA_request_put_BITS_17_TO_16__q19 =
	     ibuf_18_portA_request_put[17:16] ;
  assign ibuf_18_portB_request_put_BITS_17_TO_16__q20 =
	     ibuf_18_portB_request_put[17:16] ;
  assign ibuf_19_portA_request_put_BITS_17_TO_16__q21 =
	     ibuf_19_portA_request_put[17:16] ;
  assign ibuf_19_portB_request_put_BITS_17_TO_16__q22 =
	     ibuf_19_portB_request_put[17:16] ;
  assign ibuf_1_portA_request_put_BITS_17_TO_16__q23 =
	     ibuf_1_portA_request_put[17:16] ;
  assign ibuf_1_portB_request_put_BITS_17_TO_16__q24 =
	     ibuf_1_portB_request_put[17:16] ;
  assign ibuf_20_portA_request_put_BITS_17_TO_16__q25 =
	     ibuf_20_portA_request_put[17:16] ;
  assign ibuf_20_portB_request_put_BITS_17_TO_16__q26 =
	     ibuf_20_portB_request_put[17:16] ;
  assign ibuf_21_portA_request_put_BITS_17_TO_16__q27 =
	     ibuf_21_portA_request_put[17:16] ;
  assign ibuf_21_portB_request_put_BITS_17_TO_16__q28 =
	     ibuf_21_portB_request_put[17:16] ;
  assign ibuf_22_portA_request_put_BITS_17_TO_16__q29 =
	     ibuf_22_portA_request_put[17:16] ;
  assign ibuf_22_portB_request_put_BITS_17_TO_16__q30 =
	     ibuf_22_portB_request_put[17:16] ;
  assign ibuf_23_portA_request_put_BITS_17_TO_16__q31 =
	     ibuf_23_portA_request_put[17:16] ;
  assign ibuf_23_portB_request_put_BITS_17_TO_16__q32 =
	     ibuf_23_portB_request_put[17:16] ;
  assign ibuf_24_portA_request_put_BITS_17_TO_16__q33 =
	     ibuf_24_portA_request_put[17:16] ;
  assign ibuf_24_portB_request_put_BITS_17_TO_16__q34 =
	     ibuf_24_portB_request_put[17:16] ;
  assign ibuf_25_portA_request_put_BITS_17_TO_16__q35 =
	     ibuf_25_portA_request_put[17:16] ;
  assign ibuf_25_portB_request_put_BITS_17_TO_16__q36 =
	     ibuf_25_portB_request_put[17:16] ;
  assign ibuf_26_portA_request_put_BITS_17_TO_16__q37 =
	     ibuf_26_portA_request_put[17:16] ;
  assign ibuf_26_portB_request_put_BITS_17_TO_16__q38 =
	     ibuf_26_portB_request_put[17:16] ;
  assign ibuf_27_portA_request_put_BITS_17_TO_16__q39 =
	     ibuf_27_portA_request_put[17:16] ;
  assign ibuf_27_portB_request_put_BITS_17_TO_16__q40 =
	     ibuf_27_portB_request_put[17:16] ;
  assign ibuf_28_portA_request_put_BITS_17_TO_16__q41 =
	     ibuf_28_portA_request_put[17:16] ;
  assign ibuf_28_portB_request_put_BITS_17_TO_16__q42 =
	     ibuf_28_portB_request_put[17:16] ;
  assign ibuf_29_portA_request_put_BITS_17_TO_16__q43 =
	     ibuf_29_portA_request_put[17:16] ;
  assign ibuf_29_portB_request_put_BITS_17_TO_16__q44 =
	     ibuf_29_portB_request_put[17:16] ;
  assign ibuf_2_portA_request_put_BITS_17_TO_16__q45 =
	     ibuf_2_portA_request_put[17:16] ;
  assign ibuf_2_portB_request_put_BITS_17_TO_16__q46 =
	     ibuf_2_portB_request_put[17:16] ;
  assign ibuf_30_portA_request_put_BITS_17_TO_16__q47 =
	     ibuf_30_portA_request_put[17:16] ;
  assign ibuf_30_portB_request_put_BITS_17_TO_16__q48 =
	     ibuf_30_portB_request_put[17:16] ;
  assign ibuf_31_portA_request_put_BITS_17_TO_16__q49 =
	     ibuf_31_portA_request_put[17:16] ;
  assign ibuf_31_portB_request_put_BITS_17_TO_16__q50 =
	     ibuf_31_portB_request_put[17:16] ;
  assign ibuf_3_portA_request_put_BITS_17_TO_16__q51 =
	     ibuf_3_portA_request_put[17:16] ;
  assign ibuf_3_portB_request_put_BITS_17_TO_16__q52 =
	     ibuf_3_portB_request_put[17:16] ;
  assign ibuf_4_portA_request_put_BITS_17_TO_16__q53 =
	     ibuf_4_portA_request_put[17:16] ;
  assign ibuf_4_portB_request_put_BITS_17_TO_16__q54 =
	     ibuf_4_portB_request_put[17:16] ;
  assign ibuf_5_portA_request_put_BITS_17_TO_16__q55 =
	     ibuf_5_portA_request_put[17:16] ;
  assign ibuf_5_portB_request_put_BITS_17_TO_16__q56 =
	     ibuf_5_portB_request_put[17:16] ;
  assign ibuf_6_portA_request_put_BITS_17_TO_16__q57 =
	     ibuf_6_portA_request_put[17:16] ;
  assign ibuf_6_portB_request_put_BITS_17_TO_16__q58 =
	     ibuf_6_portB_request_put[17:16] ;
  assign ibuf_7_portA_request_put_BITS_17_TO_16__q59 =
	     ibuf_7_portA_request_put[17:16] ;
  assign ibuf_7_portB_request_put_BITS_17_TO_16__q60 =
	     ibuf_7_portB_request_put[17:16] ;
  assign ibuf_8_portA_request_put_BITS_17_TO_16__q61 =
	     ibuf_8_portA_request_put[17:16] ;
  assign ibuf_8_portB_request_put_BITS_17_TO_16__q62 =
	     ibuf_8_portB_request_put[17:16] ;
  assign ibuf_9_portA_request_put_BITS_17_TO_16__q63 =
	     ibuf_9_portA_request_put[17:16] ;
  assign ibuf_9_portB_request_put_BITS_17_TO_16__q64 =
	     ibuf_9_portB_request_put[17:16] ;
  assign ibuffer_0_serverAdapterA_cnt_7_PLUS_IF_ibuffer_ETC___d33 =
	     ibuffer_0_serverAdapterA_cnt +
	     (ibuffer_0_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_0_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_0_serverAdapterB_cnt_0_PLUS_IF_ibuffer_ETC___d86 =
	     ibuffer_0_serverAdapterB_cnt +
	     (ibuffer_0_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_0_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_10_serverAdapterA_cnt_068_PLUS_IF_ibuf_ETC___d1074 =
	     ibuffer_10_serverAdapterA_cnt +
	     (ibuffer_10_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_10_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_10_serverAdapterB_cnt_120_PLUS_IF_ibuf_ETC___d1126 =
	     ibuffer_10_serverAdapterB_cnt +
	     (ibuffer_10_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_10_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_11_serverAdapterA_cnt_172_PLUS_IF_ibuf_ETC___d1178 =
	     ibuffer_11_serverAdapterA_cnt +
	     (ibuffer_11_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_11_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_11_serverAdapterB_cnt_224_PLUS_IF_ibuf_ETC___d1230 =
	     ibuffer_11_serverAdapterB_cnt +
	     (ibuffer_11_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_11_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_12_serverAdapterA_cnt_276_PLUS_IF_ibuf_ETC___d1282 =
	     ibuffer_12_serverAdapterA_cnt +
	     (ibuffer_12_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_12_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_12_serverAdapterB_cnt_328_PLUS_IF_ibuf_ETC___d1334 =
	     ibuffer_12_serverAdapterB_cnt +
	     (ibuffer_12_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_12_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_13_serverAdapterA_cnt_380_PLUS_IF_ibuf_ETC___d1386 =
	     ibuffer_13_serverAdapterA_cnt +
	     (ibuffer_13_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_13_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_13_serverAdapterB_cnt_432_PLUS_IF_ibuf_ETC___d1438 =
	     ibuffer_13_serverAdapterB_cnt +
	     (ibuffer_13_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_13_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_14_serverAdapterA_cnt_484_PLUS_IF_ibuf_ETC___d1490 =
	     ibuffer_14_serverAdapterA_cnt +
	     (ibuffer_14_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_14_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_14_serverAdapterB_cnt_536_PLUS_IF_ibuf_ETC___d1542 =
	     ibuffer_14_serverAdapterB_cnt +
	     (ibuffer_14_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_14_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_15_serverAdapterA_cnt_588_PLUS_IF_ibuf_ETC___d1594 =
	     ibuffer_15_serverAdapterA_cnt +
	     (ibuffer_15_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_15_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_15_serverAdapterB_cnt_640_PLUS_IF_ibuf_ETC___d1646 =
	     ibuffer_15_serverAdapterB_cnt +
	     (ibuffer_15_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_15_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_16_serverAdapterA_cnt_692_PLUS_IF_ibuf_ETC___d1698 =
	     ibuffer_16_serverAdapterA_cnt +
	     (ibuffer_16_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_16_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_16_serverAdapterB_cnt_744_PLUS_IF_ibuf_ETC___d1750 =
	     ibuffer_16_serverAdapterB_cnt +
	     (ibuffer_16_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_16_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_17_serverAdapterA_cnt_796_PLUS_IF_ibuf_ETC___d1802 =
	     ibuffer_17_serverAdapterA_cnt +
	     (ibuffer_17_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_17_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_17_serverAdapterB_cnt_848_PLUS_IF_ibuf_ETC___d1854 =
	     ibuffer_17_serverAdapterB_cnt +
	     (ibuffer_17_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_17_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_18_serverAdapterA_cnt_900_PLUS_IF_ibuf_ETC___d1906 =
	     ibuffer_18_serverAdapterA_cnt +
	     (ibuffer_18_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_18_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_18_serverAdapterB_cnt_952_PLUS_IF_ibuf_ETC___d1958 =
	     ibuffer_18_serverAdapterB_cnt +
	     (ibuffer_18_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_18_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_19_serverAdapterA_cnt_004_PLUS_IF_ibuf_ETC___d2010 =
	     ibuffer_19_serverAdapterA_cnt +
	     (ibuffer_19_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_19_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_19_serverAdapterB_cnt_056_PLUS_IF_ibuf_ETC___d2062 =
	     ibuffer_19_serverAdapterB_cnt +
	     (ibuffer_19_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_19_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_1_serverAdapterA_cnt_32_PLUS_IF_ibuffe_ETC___d138 =
	     ibuffer_1_serverAdapterA_cnt +
	     (ibuffer_1_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_1_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_1_serverAdapterB_cnt_84_PLUS_IF_ibuffe_ETC___d190 =
	     ibuffer_1_serverAdapterB_cnt +
	     (ibuffer_1_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_1_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_20_serverAdapterA_cnt_108_PLUS_IF_ibuf_ETC___d2114 =
	     ibuffer_20_serverAdapterA_cnt +
	     (ibuffer_20_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_20_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_20_serverAdapterB_cnt_160_PLUS_IF_ibuf_ETC___d2166 =
	     ibuffer_20_serverAdapterB_cnt +
	     (ibuffer_20_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_20_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_21_serverAdapterA_cnt_212_PLUS_IF_ibuf_ETC___d2218 =
	     ibuffer_21_serverAdapterA_cnt +
	     (ibuffer_21_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_21_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_21_serverAdapterB_cnt_264_PLUS_IF_ibuf_ETC___d2270 =
	     ibuffer_21_serverAdapterB_cnt +
	     (ibuffer_21_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_21_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_22_serverAdapterA_cnt_316_PLUS_IF_ibuf_ETC___d2322 =
	     ibuffer_22_serverAdapterA_cnt +
	     (ibuffer_22_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_22_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_22_serverAdapterB_cnt_368_PLUS_IF_ibuf_ETC___d2374 =
	     ibuffer_22_serverAdapterB_cnt +
	     (ibuffer_22_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_22_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_23_serverAdapterA_cnt_420_PLUS_IF_ibuf_ETC___d2426 =
	     ibuffer_23_serverAdapterA_cnt +
	     (ibuffer_23_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_23_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_23_serverAdapterB_cnt_472_PLUS_IF_ibuf_ETC___d2478 =
	     ibuffer_23_serverAdapterB_cnt +
	     (ibuffer_23_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_23_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_24_serverAdapterA_cnt_524_PLUS_IF_ibuf_ETC___d2530 =
	     ibuffer_24_serverAdapterA_cnt +
	     (ibuffer_24_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_24_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_24_serverAdapterB_cnt_576_PLUS_IF_ibuf_ETC___d2582 =
	     ibuffer_24_serverAdapterB_cnt +
	     (ibuffer_24_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_24_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_25_serverAdapterA_cnt_628_PLUS_IF_ibuf_ETC___d2634 =
	     ibuffer_25_serverAdapterA_cnt +
	     (ibuffer_25_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_25_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_25_serverAdapterB_cnt_680_PLUS_IF_ibuf_ETC___d2686 =
	     ibuffer_25_serverAdapterB_cnt +
	     (ibuffer_25_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_25_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_26_serverAdapterA_cnt_732_PLUS_IF_ibuf_ETC___d2738 =
	     ibuffer_26_serverAdapterA_cnt +
	     (ibuffer_26_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_26_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_26_serverAdapterB_cnt_784_PLUS_IF_ibuf_ETC___d2790 =
	     ibuffer_26_serverAdapterB_cnt +
	     (ibuffer_26_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_26_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_27_serverAdapterA_cnt_836_PLUS_IF_ibuf_ETC___d2842 =
	     ibuffer_27_serverAdapterA_cnt +
	     (ibuffer_27_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_27_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_27_serverAdapterB_cnt_888_PLUS_IF_ibuf_ETC___d2894 =
	     ibuffer_27_serverAdapterB_cnt +
	     (ibuffer_27_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_27_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_28_serverAdapterA_cnt_940_PLUS_IF_ibuf_ETC___d2946 =
	     ibuffer_28_serverAdapterA_cnt +
	     (ibuffer_28_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_28_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_28_serverAdapterB_cnt_992_PLUS_IF_ibuf_ETC___d2998 =
	     ibuffer_28_serverAdapterB_cnt +
	     (ibuffer_28_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_28_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_29_serverAdapterA_cnt_044_PLUS_IF_ibuf_ETC___d3050 =
	     ibuffer_29_serverAdapterA_cnt +
	     (ibuffer_29_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_29_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_29_serverAdapterB_cnt_096_PLUS_IF_ibuf_ETC___d3102 =
	     ibuffer_29_serverAdapterB_cnt +
	     (ibuffer_29_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_29_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_2_serverAdapterA_cnt_36_PLUS_IF_ibuffe_ETC___d242 =
	     ibuffer_2_serverAdapterA_cnt +
	     (ibuffer_2_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_2_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_2_serverAdapterB_cnt_88_PLUS_IF_ibuffe_ETC___d294 =
	     ibuffer_2_serverAdapterB_cnt +
	     (ibuffer_2_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_2_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_30_serverAdapterA_cnt_148_PLUS_IF_ibuf_ETC___d3154 =
	     ibuffer_30_serverAdapterA_cnt +
	     (ibuffer_30_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_30_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_30_serverAdapterB_cnt_200_PLUS_IF_ibuf_ETC___d3206 =
	     ibuffer_30_serverAdapterB_cnt +
	     (ibuffer_30_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_30_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_31_serverAdapterA_cnt_252_PLUS_IF_ibuf_ETC___d3258 =
	     ibuffer_31_serverAdapterA_cnt +
	     (ibuffer_31_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_31_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_31_serverAdapterB_cnt_304_PLUS_IF_ibuf_ETC___d3310 =
	     ibuffer_31_serverAdapterB_cnt +
	     (ibuffer_31_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_31_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_3_serverAdapterA_cnt_40_PLUS_IF_ibuffe_ETC___d346 =
	     ibuffer_3_serverAdapterA_cnt +
	     (ibuffer_3_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_3_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_3_serverAdapterB_cnt_92_PLUS_IF_ibuffe_ETC___d398 =
	     ibuffer_3_serverAdapterB_cnt +
	     (ibuffer_3_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_3_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_4_serverAdapterA_cnt_44_PLUS_IF_ibuffe_ETC___d450 =
	     ibuffer_4_serverAdapterA_cnt +
	     (ibuffer_4_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_4_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_4_serverAdapterB_cnt_96_PLUS_IF_ibuffe_ETC___d502 =
	     ibuffer_4_serverAdapterB_cnt +
	     (ibuffer_4_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_4_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_5_serverAdapterA_cnt_48_PLUS_IF_ibuffe_ETC___d554 =
	     ibuffer_5_serverAdapterA_cnt +
	     (ibuffer_5_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_5_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_5_serverAdapterB_cnt_00_PLUS_IF_ibuffe_ETC___d606 =
	     ibuffer_5_serverAdapterB_cnt +
	     (ibuffer_5_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_5_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_6_serverAdapterA_cnt_52_PLUS_IF_ibuffe_ETC___d658 =
	     ibuffer_6_serverAdapterA_cnt +
	     (ibuffer_6_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_6_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_6_serverAdapterB_cnt_04_PLUS_IF_ibuffe_ETC___d710 =
	     ibuffer_6_serverAdapterB_cnt +
	     (ibuffer_6_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_6_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_7_serverAdapterA_cnt_56_PLUS_IF_ibuffe_ETC___d762 =
	     ibuffer_7_serverAdapterA_cnt +
	     (ibuffer_7_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_7_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_7_serverAdapterB_cnt_08_PLUS_IF_ibuffe_ETC___d814 =
	     ibuffer_7_serverAdapterB_cnt +
	     (ibuffer_7_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_7_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_8_serverAdapterA_cnt_60_PLUS_IF_ibuffe_ETC___d866 =
	     ibuffer_8_serverAdapterA_cnt +
	     (ibuffer_8_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_8_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_8_serverAdapterB_cnt_12_PLUS_IF_ibuffe_ETC___d918 =
	     ibuffer_8_serverAdapterB_cnt +
	     (ibuffer_8_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_8_portB_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_9_serverAdapterA_cnt_64_PLUS_IF_ibuffe_ETC___d970 =
	     ibuffer_9_serverAdapterA_cnt +
	     (ibuffer_9_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_9_portA_response_get ? 3'd7 : 3'd0) ;
  assign ibuffer_9_serverAdapterB_cnt_016_PLUS_IF_ibuff_ETC___d1022 =
	     ibuffer_9_serverAdapterB_cnt +
	     (ibuffer_9_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_ibuf_9_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuf1_0_portA_request_put_BITS_41_TO_40__q65 =
	     obuf1_0_portA_request_put[41:40] ;
  assign obuf1_0_portB_request_put_BITS_41_TO_40__q66 =
	     obuf1_0_portB_request_put[41:40] ;
  assign obuf1_10_portA_request_put_BITS_41_TO_40__q67 =
	     obuf1_10_portA_request_put[41:40] ;
  assign obuf1_10_portB_request_put_BITS_41_TO_40__q68 =
	     obuf1_10_portB_request_put[41:40] ;
  assign obuf1_11_portA_request_put_BITS_41_TO_40__q69 =
	     obuf1_11_portA_request_put[41:40] ;
  assign obuf1_11_portB_request_put_BITS_41_TO_40__q70 =
	     obuf1_11_portB_request_put[41:40] ;
  assign obuf1_12_portA_request_put_BITS_41_TO_40__q71 =
	     obuf1_12_portA_request_put[41:40] ;
  assign obuf1_12_portB_request_put_BITS_41_TO_40__q72 =
	     obuf1_12_portB_request_put[41:40] ;
  assign obuf1_13_portA_request_put_BITS_41_TO_40__q73 =
	     obuf1_13_portA_request_put[41:40] ;
  assign obuf1_13_portB_request_put_BITS_41_TO_40__q74 =
	     obuf1_13_portB_request_put[41:40] ;
  assign obuf1_14_portA_request_put_BITS_41_TO_40__q75 =
	     obuf1_14_portA_request_put[41:40] ;
  assign obuf1_14_portB_request_put_BITS_41_TO_40__q76 =
	     obuf1_14_portB_request_put[41:40] ;
  assign obuf1_15_portA_request_put_BITS_41_TO_40__q77 =
	     obuf1_15_portA_request_put[41:40] ;
  assign obuf1_15_portB_request_put_BITS_41_TO_40__q78 =
	     obuf1_15_portB_request_put[41:40] ;
  assign obuf1_16_portA_request_put_BITS_41_TO_40__q79 =
	     obuf1_16_portA_request_put[41:40] ;
  assign obuf1_16_portB_request_put_BITS_41_TO_40__q80 =
	     obuf1_16_portB_request_put[41:40] ;
  assign obuf1_17_portA_request_put_BITS_41_TO_40__q81 =
	     obuf1_17_portA_request_put[41:40] ;
  assign obuf1_17_portB_request_put_BITS_41_TO_40__q82 =
	     obuf1_17_portB_request_put[41:40] ;
  assign obuf1_18_portA_request_put_BITS_41_TO_40__q83 =
	     obuf1_18_portA_request_put[41:40] ;
  assign obuf1_18_portB_request_put_BITS_41_TO_40__q84 =
	     obuf1_18_portB_request_put[41:40] ;
  assign obuf1_19_portA_request_put_BITS_41_TO_40__q85 =
	     obuf1_19_portA_request_put[41:40] ;
  assign obuf1_19_portB_request_put_BITS_41_TO_40__q86 =
	     obuf1_19_portB_request_put[41:40] ;
  assign obuf1_1_portA_request_put_BITS_41_TO_40__q87 =
	     obuf1_1_portA_request_put[41:40] ;
  assign obuf1_1_portB_request_put_BITS_41_TO_40__q88 =
	     obuf1_1_portB_request_put[41:40] ;
  assign obuf1_20_portA_request_put_BITS_41_TO_40__q89 =
	     obuf1_20_portA_request_put[41:40] ;
  assign obuf1_20_portB_request_put_BITS_41_TO_40__q90 =
	     obuf1_20_portB_request_put[41:40] ;
  assign obuf1_21_portA_request_put_BITS_41_TO_40__q91 =
	     obuf1_21_portA_request_put[41:40] ;
  assign obuf1_21_portB_request_put_BITS_41_TO_40__q92 =
	     obuf1_21_portB_request_put[41:40] ;
  assign obuf1_22_portA_request_put_BITS_41_TO_40__q93 =
	     obuf1_22_portA_request_put[41:40] ;
  assign obuf1_22_portB_request_put_BITS_41_TO_40__q94 =
	     obuf1_22_portB_request_put[41:40] ;
  assign obuf1_23_portA_request_put_BITS_41_TO_40__q95 =
	     obuf1_23_portA_request_put[41:40] ;
  assign obuf1_23_portB_request_put_BITS_41_TO_40__q96 =
	     obuf1_23_portB_request_put[41:40] ;
  assign obuf1_24_portA_request_put_BITS_41_TO_40__q97 =
	     obuf1_24_portA_request_put[41:40] ;
  assign obuf1_24_portB_request_put_BITS_41_TO_40__q98 =
	     obuf1_24_portB_request_put[41:40] ;
  assign obuf1_25_portA_request_put_BITS_41_TO_40__q99 =
	     obuf1_25_portA_request_put[41:40] ;
  assign obuf1_25_portB_request_put_BITS_41_TO_40__q100 =
	     obuf1_25_portB_request_put[41:40] ;
  assign obuf1_26_portA_request_put_BITS_41_TO_40__q101 =
	     obuf1_26_portA_request_put[41:40] ;
  assign obuf1_26_portB_request_put_BITS_41_TO_40__q102 =
	     obuf1_26_portB_request_put[41:40] ;
  assign obuf1_27_portA_request_put_BITS_41_TO_40__q103 =
	     obuf1_27_portA_request_put[41:40] ;
  assign obuf1_27_portB_request_put_BITS_41_TO_40__q104 =
	     obuf1_27_portB_request_put[41:40] ;
  assign obuf1_28_portA_request_put_BITS_41_TO_40__q105 =
	     obuf1_28_portA_request_put[41:40] ;
  assign obuf1_28_portB_request_put_BITS_41_TO_40__q106 =
	     obuf1_28_portB_request_put[41:40] ;
  assign obuf1_29_portA_request_put_BITS_41_TO_40__q107 =
	     obuf1_29_portA_request_put[41:40] ;
  assign obuf1_29_portB_request_put_BITS_41_TO_40__q108 =
	     obuf1_29_portB_request_put[41:40] ;
  assign obuf1_2_portA_request_put_BITS_41_TO_40__q109 =
	     obuf1_2_portA_request_put[41:40] ;
  assign obuf1_2_portB_request_put_BITS_41_TO_40__q110 =
	     obuf1_2_portB_request_put[41:40] ;
  assign obuf1_30_portA_request_put_BITS_41_TO_40__q111 =
	     obuf1_30_portA_request_put[41:40] ;
  assign obuf1_30_portB_request_put_BITS_41_TO_40__q112 =
	     obuf1_30_portB_request_put[41:40] ;
  assign obuf1_31_portA_request_put_BITS_41_TO_40__q113 =
	     obuf1_31_portA_request_put[41:40] ;
  assign obuf1_31_portB_request_put_BITS_41_TO_40__q114 =
	     obuf1_31_portB_request_put[41:40] ;
  assign obuf1_3_portA_request_put_BITS_41_TO_40__q115 =
	     obuf1_3_portA_request_put[41:40] ;
  assign obuf1_3_portB_request_put_BITS_41_TO_40__q116 =
	     obuf1_3_portB_request_put[41:40] ;
  assign obuf1_4_portA_request_put_BITS_41_TO_40__q117 =
	     obuf1_4_portA_request_put[41:40] ;
  assign obuf1_4_portB_request_put_BITS_41_TO_40__q118 =
	     obuf1_4_portB_request_put[41:40] ;
  assign obuf1_5_portA_request_put_BITS_41_TO_40__q119 =
	     obuf1_5_portA_request_put[41:40] ;
  assign obuf1_5_portB_request_put_BITS_41_TO_40__q120 =
	     obuf1_5_portB_request_put[41:40] ;
  assign obuf1_6_portA_request_put_BITS_41_TO_40__q121 =
	     obuf1_6_portA_request_put[41:40] ;
  assign obuf1_6_portB_request_put_BITS_41_TO_40__q122 =
	     obuf1_6_portB_request_put[41:40] ;
  assign obuf1_7_portA_request_put_BITS_41_TO_40__q123 =
	     obuf1_7_portA_request_put[41:40] ;
  assign obuf1_7_portB_request_put_BITS_41_TO_40__q124 =
	     obuf1_7_portB_request_put[41:40] ;
  assign obuf1_8_portA_request_put_BITS_41_TO_40__q125 =
	     obuf1_8_portA_request_put[41:40] ;
  assign obuf1_8_portB_request_put_BITS_41_TO_40__q126 =
	     obuf1_8_portB_request_put[41:40] ;
  assign obuf1_9_portA_request_put_BITS_41_TO_40__q127 =
	     obuf1_9_portA_request_put[41:40] ;
  assign obuf1_9_portB_request_put_BITS_41_TO_40__q128 =
	     obuf1_9_portB_request_put[41:40] ;
  assign obuf2_0_portA_request_put_BITS_41_TO_40__q129 =
	     obuf2_0_portA_request_put[41:40] ;
  assign obuf2_0_portB_request_put_BITS_41_TO_40__q130 =
	     obuf2_0_portB_request_put[41:40] ;
  assign obuf2_10_portA_request_put_BITS_41_TO_40__q131 =
	     obuf2_10_portA_request_put[41:40] ;
  assign obuf2_10_portB_request_put_BITS_41_TO_40__q132 =
	     obuf2_10_portB_request_put[41:40] ;
  assign obuf2_11_portA_request_put_BITS_41_TO_40__q133 =
	     obuf2_11_portA_request_put[41:40] ;
  assign obuf2_11_portB_request_put_BITS_41_TO_40__q134 =
	     obuf2_11_portB_request_put[41:40] ;
  assign obuf2_12_portA_request_put_BITS_41_TO_40__q135 =
	     obuf2_12_portA_request_put[41:40] ;
  assign obuf2_12_portB_request_put_BITS_41_TO_40__q136 =
	     obuf2_12_portB_request_put[41:40] ;
  assign obuf2_13_portA_request_put_BITS_41_TO_40__q137 =
	     obuf2_13_portA_request_put[41:40] ;
  assign obuf2_13_portB_request_put_BITS_41_TO_40__q138 =
	     obuf2_13_portB_request_put[41:40] ;
  assign obuf2_14_portA_request_put_BITS_41_TO_40__q139 =
	     obuf2_14_portA_request_put[41:40] ;
  assign obuf2_14_portB_request_put_BITS_41_TO_40__q140 =
	     obuf2_14_portB_request_put[41:40] ;
  assign obuf2_15_portA_request_put_BITS_41_TO_40__q141 =
	     obuf2_15_portA_request_put[41:40] ;
  assign obuf2_15_portB_request_put_BITS_41_TO_40__q142 =
	     obuf2_15_portB_request_put[41:40] ;
  assign obuf2_16_portA_request_put_BITS_41_TO_40__q143 =
	     obuf2_16_portA_request_put[41:40] ;
  assign obuf2_16_portB_request_put_BITS_41_TO_40__q144 =
	     obuf2_16_portB_request_put[41:40] ;
  assign obuf2_17_portA_request_put_BITS_41_TO_40__q145 =
	     obuf2_17_portA_request_put[41:40] ;
  assign obuf2_17_portB_request_put_BITS_41_TO_40__q146 =
	     obuf2_17_portB_request_put[41:40] ;
  assign obuf2_18_portA_request_put_BITS_41_TO_40__q147 =
	     obuf2_18_portA_request_put[41:40] ;
  assign obuf2_18_portB_request_put_BITS_41_TO_40__q148 =
	     obuf2_18_portB_request_put[41:40] ;
  assign obuf2_19_portA_request_put_BITS_41_TO_40__q149 =
	     obuf2_19_portA_request_put[41:40] ;
  assign obuf2_19_portB_request_put_BITS_41_TO_40__q150 =
	     obuf2_19_portB_request_put[41:40] ;
  assign obuf2_1_portA_request_put_BITS_41_TO_40__q151 =
	     obuf2_1_portA_request_put[41:40] ;
  assign obuf2_1_portB_request_put_BITS_41_TO_40__q152 =
	     obuf2_1_portB_request_put[41:40] ;
  assign obuf2_20_portA_request_put_BITS_41_TO_40__q153 =
	     obuf2_20_portA_request_put[41:40] ;
  assign obuf2_20_portB_request_put_BITS_41_TO_40__q154 =
	     obuf2_20_portB_request_put[41:40] ;
  assign obuf2_21_portA_request_put_BITS_41_TO_40__q155 =
	     obuf2_21_portA_request_put[41:40] ;
  assign obuf2_21_portB_request_put_BITS_41_TO_40__q156 =
	     obuf2_21_portB_request_put[41:40] ;
  assign obuf2_22_portA_request_put_BITS_41_TO_40__q157 =
	     obuf2_22_portA_request_put[41:40] ;
  assign obuf2_22_portB_request_put_BITS_41_TO_40__q158 =
	     obuf2_22_portB_request_put[41:40] ;
  assign obuf2_23_portA_request_put_BITS_41_TO_40__q159 =
	     obuf2_23_portA_request_put[41:40] ;
  assign obuf2_23_portB_request_put_BITS_41_TO_40__q160 =
	     obuf2_23_portB_request_put[41:40] ;
  assign obuf2_24_portA_request_put_BITS_41_TO_40__q161 =
	     obuf2_24_portA_request_put[41:40] ;
  assign obuf2_24_portB_request_put_BITS_41_TO_40__q162 =
	     obuf2_24_portB_request_put[41:40] ;
  assign obuf2_25_portA_request_put_BITS_41_TO_40__q163 =
	     obuf2_25_portA_request_put[41:40] ;
  assign obuf2_25_portB_request_put_BITS_41_TO_40__q164 =
	     obuf2_25_portB_request_put[41:40] ;
  assign obuf2_26_portA_request_put_BITS_41_TO_40__q165 =
	     obuf2_26_portA_request_put[41:40] ;
  assign obuf2_26_portB_request_put_BITS_41_TO_40__q166 =
	     obuf2_26_portB_request_put[41:40] ;
  assign obuf2_27_portA_request_put_BITS_41_TO_40__q167 =
	     obuf2_27_portA_request_put[41:40] ;
  assign obuf2_27_portB_request_put_BITS_41_TO_40__q168 =
	     obuf2_27_portB_request_put[41:40] ;
  assign obuf2_28_portA_request_put_BITS_41_TO_40__q169 =
	     obuf2_28_portA_request_put[41:40] ;
  assign obuf2_28_portB_request_put_BITS_41_TO_40__q170 =
	     obuf2_28_portB_request_put[41:40] ;
  assign obuf2_29_portA_request_put_BITS_41_TO_40__q171 =
	     obuf2_29_portA_request_put[41:40] ;
  assign obuf2_29_portB_request_put_BITS_41_TO_40__q172 =
	     obuf2_29_portB_request_put[41:40] ;
  assign obuf2_2_portA_request_put_BITS_41_TO_40__q173 =
	     obuf2_2_portA_request_put[41:40] ;
  assign obuf2_2_portB_request_put_BITS_41_TO_40__q174 =
	     obuf2_2_portB_request_put[41:40] ;
  assign obuf2_30_portA_request_put_BITS_41_TO_40__q175 =
	     obuf2_30_portA_request_put[41:40] ;
  assign obuf2_30_portB_request_put_BITS_41_TO_40__q176 =
	     obuf2_30_portB_request_put[41:40] ;
  assign obuf2_31_portA_request_put_BITS_41_TO_40__q177 =
	     obuf2_31_portA_request_put[41:40] ;
  assign obuf2_31_portB_request_put_BITS_41_TO_40__q178 =
	     obuf2_31_portB_request_put[41:40] ;
  assign obuf2_3_portA_request_put_BITS_41_TO_40__q179 =
	     obuf2_3_portA_request_put[41:40] ;
  assign obuf2_3_portB_request_put_BITS_41_TO_40__q180 =
	     obuf2_3_portB_request_put[41:40] ;
  assign obuf2_4_portA_request_put_BITS_41_TO_40__q181 =
	     obuf2_4_portA_request_put[41:40] ;
  assign obuf2_4_portB_request_put_BITS_41_TO_40__q182 =
	     obuf2_4_portB_request_put[41:40] ;
  assign obuf2_5_portA_request_put_BITS_41_TO_40__q183 =
	     obuf2_5_portA_request_put[41:40] ;
  assign obuf2_5_portB_request_put_BITS_41_TO_40__q184 =
	     obuf2_5_portB_request_put[41:40] ;
  assign obuf2_6_portA_request_put_BITS_41_TO_40__q185 =
	     obuf2_6_portA_request_put[41:40] ;
  assign obuf2_6_portB_request_put_BITS_41_TO_40__q186 =
	     obuf2_6_portB_request_put[41:40] ;
  assign obuf2_7_portA_request_put_BITS_41_TO_40__q187 =
	     obuf2_7_portA_request_put[41:40] ;
  assign obuf2_7_portB_request_put_BITS_41_TO_40__q188 =
	     obuf2_7_portB_request_put[41:40] ;
  assign obuf2_8_portA_request_put_BITS_41_TO_40__q189 =
	     obuf2_8_portA_request_put[41:40] ;
  assign obuf2_8_portB_request_put_BITS_41_TO_40__q190 =
	     obuf2_8_portB_request_put[41:40] ;
  assign obuf2_9_portA_request_put_BITS_41_TO_40__q191 =
	     obuf2_9_portA_request_put[41:40] ;
  assign obuf2_9_portB_request_put_BITS_41_TO_40__q192 =
	     obuf2_9_portB_request_put[41:40] ;
  assign obuffer1_0_serverAdapterA_cnt_684_PLUS_IF_obuf_ETC___d6690 =
	     obuffer1_0_serverAdapterA_cnt +
	     (obuffer1_0_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_0_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_0_serverAdapterB_cnt_736_PLUS_IF_obuf_ETC___d6742 =
	     obuffer1_0_serverAdapterB_cnt +
	     (obuffer1_0_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_0_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_10_serverAdapterA_cnt_724_PLUS_IF_obu_ETC___d7730 =
	     obuffer1_10_serverAdapterA_cnt +
	     (obuffer1_10_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_10_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_10_serverAdapterB_cnt_776_PLUS_IF_obu_ETC___d7782 =
	     obuffer1_10_serverAdapterB_cnt +
	     (obuffer1_10_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_10_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_11_serverAdapterA_cnt_828_PLUS_IF_obu_ETC___d7834 =
	     obuffer1_11_serverAdapterA_cnt +
	     (obuffer1_11_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_11_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_11_serverAdapterB_cnt_880_PLUS_IF_obu_ETC___d7886 =
	     obuffer1_11_serverAdapterB_cnt +
	     (obuffer1_11_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_11_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_12_serverAdapterA_cnt_932_PLUS_IF_obu_ETC___d7938 =
	     obuffer1_12_serverAdapterA_cnt +
	     (obuffer1_12_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_12_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_12_serverAdapterB_cnt_984_PLUS_IF_obu_ETC___d7990 =
	     obuffer1_12_serverAdapterB_cnt +
	     (obuffer1_12_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_12_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_13_serverAdapterA_cnt_036_PLUS_IF_obu_ETC___d8042 =
	     obuffer1_13_serverAdapterA_cnt +
	     (obuffer1_13_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_13_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_13_serverAdapterB_cnt_088_PLUS_IF_obu_ETC___d8094 =
	     obuffer1_13_serverAdapterB_cnt +
	     (obuffer1_13_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_13_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_14_serverAdapterA_cnt_140_PLUS_IF_obu_ETC___d8146 =
	     obuffer1_14_serverAdapterA_cnt +
	     (obuffer1_14_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_14_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_14_serverAdapterB_cnt_192_PLUS_IF_obu_ETC___d8198 =
	     obuffer1_14_serverAdapterB_cnt +
	     (obuffer1_14_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_14_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_15_serverAdapterA_cnt_244_PLUS_IF_obu_ETC___d8250 =
	     obuffer1_15_serverAdapterA_cnt +
	     (obuffer1_15_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_15_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_15_serverAdapterB_cnt_296_PLUS_IF_obu_ETC___d8302 =
	     obuffer1_15_serverAdapterB_cnt +
	     (obuffer1_15_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_15_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_16_serverAdapterA_cnt_348_PLUS_IF_obu_ETC___d8354 =
	     obuffer1_16_serverAdapterA_cnt +
	     (obuffer1_16_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_16_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_16_serverAdapterB_cnt_400_PLUS_IF_obu_ETC___d8406 =
	     obuffer1_16_serverAdapterB_cnt +
	     (obuffer1_16_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_16_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_17_serverAdapterA_cnt_452_PLUS_IF_obu_ETC___d8458 =
	     obuffer1_17_serverAdapterA_cnt +
	     (obuffer1_17_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_17_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_17_serverAdapterB_cnt_504_PLUS_IF_obu_ETC___d8510 =
	     obuffer1_17_serverAdapterB_cnt +
	     (obuffer1_17_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_17_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_18_serverAdapterA_cnt_556_PLUS_IF_obu_ETC___d8562 =
	     obuffer1_18_serverAdapterA_cnt +
	     (obuffer1_18_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_18_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_18_serverAdapterB_cnt_608_PLUS_IF_obu_ETC___d8614 =
	     obuffer1_18_serverAdapterB_cnt +
	     (obuffer1_18_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_18_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_19_serverAdapterA_cnt_660_PLUS_IF_obu_ETC___d8666 =
	     obuffer1_19_serverAdapterA_cnt +
	     (obuffer1_19_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_19_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_19_serverAdapterB_cnt_712_PLUS_IF_obu_ETC___d8718 =
	     obuffer1_19_serverAdapterB_cnt +
	     (obuffer1_19_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_19_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_1_serverAdapterA_cnt_788_PLUS_IF_obuf_ETC___d6794 =
	     obuffer1_1_serverAdapterA_cnt +
	     (obuffer1_1_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_1_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_1_serverAdapterB_cnt_840_PLUS_IF_obuf_ETC___d6846 =
	     obuffer1_1_serverAdapterB_cnt +
	     (obuffer1_1_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_1_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_20_serverAdapterA_cnt_764_PLUS_IF_obu_ETC___d8770 =
	     obuffer1_20_serverAdapterA_cnt +
	     (obuffer1_20_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_20_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_20_serverAdapterB_cnt_816_PLUS_IF_obu_ETC___d8822 =
	     obuffer1_20_serverAdapterB_cnt +
	     (obuffer1_20_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_20_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_21_serverAdapterA_cnt_868_PLUS_IF_obu_ETC___d8874 =
	     obuffer1_21_serverAdapterA_cnt +
	     (obuffer1_21_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_21_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_21_serverAdapterB_cnt_920_PLUS_IF_obu_ETC___d8926 =
	     obuffer1_21_serverAdapterB_cnt +
	     (obuffer1_21_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_21_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_22_serverAdapterA_cnt_972_PLUS_IF_obu_ETC___d8978 =
	     obuffer1_22_serverAdapterA_cnt +
	     (obuffer1_22_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_22_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_22_serverAdapterB_cnt_024_PLUS_IF_obu_ETC___d9030 =
	     obuffer1_22_serverAdapterB_cnt +
	     (obuffer1_22_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_22_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_23_serverAdapterA_cnt_076_PLUS_IF_obu_ETC___d9082 =
	     obuffer1_23_serverAdapterA_cnt +
	     (obuffer1_23_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_23_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_23_serverAdapterB_cnt_128_PLUS_IF_obu_ETC___d9134 =
	     obuffer1_23_serverAdapterB_cnt +
	     (obuffer1_23_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_23_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_24_serverAdapterA_cnt_180_PLUS_IF_obu_ETC___d9186 =
	     obuffer1_24_serverAdapterA_cnt +
	     (obuffer1_24_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_24_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_24_serverAdapterB_cnt_232_PLUS_IF_obu_ETC___d9238 =
	     obuffer1_24_serverAdapterB_cnt +
	     (obuffer1_24_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_24_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_25_serverAdapterA_cnt_284_PLUS_IF_obu_ETC___d9290 =
	     obuffer1_25_serverAdapterA_cnt +
	     (obuffer1_25_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_25_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_25_serverAdapterB_cnt_336_PLUS_IF_obu_ETC___d9342 =
	     obuffer1_25_serverAdapterB_cnt +
	     (obuffer1_25_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_25_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_26_serverAdapterA_cnt_388_PLUS_IF_obu_ETC___d9394 =
	     obuffer1_26_serverAdapterA_cnt +
	     (obuffer1_26_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_26_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_26_serverAdapterB_cnt_440_PLUS_IF_obu_ETC___d9446 =
	     obuffer1_26_serverAdapterB_cnt +
	     (obuffer1_26_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_26_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_27_serverAdapterA_cnt_492_PLUS_IF_obu_ETC___d9498 =
	     obuffer1_27_serverAdapterA_cnt +
	     (obuffer1_27_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_27_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_27_serverAdapterB_cnt_544_PLUS_IF_obu_ETC___d9550 =
	     obuffer1_27_serverAdapterB_cnt +
	     (obuffer1_27_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_27_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_28_serverAdapterA_cnt_596_PLUS_IF_obu_ETC___d9602 =
	     obuffer1_28_serverAdapterA_cnt +
	     (obuffer1_28_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_28_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_28_serverAdapterB_cnt_648_PLUS_IF_obu_ETC___d9654 =
	     obuffer1_28_serverAdapterB_cnt +
	     (obuffer1_28_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_28_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_29_serverAdapterA_cnt_700_PLUS_IF_obu_ETC___d9706 =
	     obuffer1_29_serverAdapterA_cnt +
	     (obuffer1_29_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_29_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_29_serverAdapterB_cnt_752_PLUS_IF_obu_ETC___d9758 =
	     obuffer1_29_serverAdapterB_cnt +
	     (obuffer1_29_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_29_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_2_serverAdapterA_cnt_892_PLUS_IF_obuf_ETC___d6898 =
	     obuffer1_2_serverAdapterA_cnt +
	     (obuffer1_2_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_2_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_2_serverAdapterB_cnt_944_PLUS_IF_obuf_ETC___d6950 =
	     obuffer1_2_serverAdapterB_cnt +
	     (obuffer1_2_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_2_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_30_serverAdapterA_cnt_804_PLUS_IF_obu_ETC___d9810 =
	     obuffer1_30_serverAdapterA_cnt +
	     (obuffer1_30_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_30_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_30_serverAdapterB_cnt_856_PLUS_IF_obu_ETC___d9862 =
	     obuffer1_30_serverAdapterB_cnt +
	     (obuffer1_30_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_30_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_31_serverAdapterA_cnt_908_PLUS_IF_obu_ETC___d9914 =
	     obuffer1_31_serverAdapterA_cnt +
	     (obuffer1_31_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_31_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_31_serverAdapterB_cnt_960_PLUS_IF_obu_ETC___d9966 =
	     obuffer1_31_serverAdapterB_cnt +
	     (obuffer1_31_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_31_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_3_serverAdapterA_cnt_996_PLUS_IF_obuf_ETC___d7002 =
	     obuffer1_3_serverAdapterA_cnt +
	     (obuffer1_3_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_3_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_3_serverAdapterB_cnt_048_PLUS_IF_obuf_ETC___d7054 =
	     obuffer1_3_serverAdapterB_cnt +
	     (obuffer1_3_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_3_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_4_serverAdapterA_cnt_100_PLUS_IF_obuf_ETC___d7106 =
	     obuffer1_4_serverAdapterA_cnt +
	     (obuffer1_4_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_4_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_4_serverAdapterB_cnt_152_PLUS_IF_obuf_ETC___d7158 =
	     obuffer1_4_serverAdapterB_cnt +
	     (obuffer1_4_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_4_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_5_serverAdapterA_cnt_204_PLUS_IF_obuf_ETC___d7210 =
	     obuffer1_5_serverAdapterA_cnt +
	     (obuffer1_5_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_5_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_5_serverAdapterB_cnt_256_PLUS_IF_obuf_ETC___d7262 =
	     obuffer1_5_serverAdapterB_cnt +
	     (obuffer1_5_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_5_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_6_serverAdapterA_cnt_308_PLUS_IF_obuf_ETC___d7314 =
	     obuffer1_6_serverAdapterA_cnt +
	     (obuffer1_6_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_6_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_6_serverAdapterB_cnt_360_PLUS_IF_obuf_ETC___d7366 =
	     obuffer1_6_serverAdapterB_cnt +
	     (obuffer1_6_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_6_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_7_serverAdapterA_cnt_412_PLUS_IF_obuf_ETC___d7418 =
	     obuffer1_7_serverAdapterA_cnt +
	     (obuffer1_7_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_7_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_7_serverAdapterB_cnt_464_PLUS_IF_obuf_ETC___d7470 =
	     obuffer1_7_serverAdapterB_cnt +
	     (obuffer1_7_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_7_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_8_serverAdapterA_cnt_516_PLUS_IF_obuf_ETC___d7522 =
	     obuffer1_8_serverAdapterA_cnt +
	     (obuffer1_8_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_8_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_8_serverAdapterB_cnt_568_PLUS_IF_obuf_ETC___d7574 =
	     obuffer1_8_serverAdapterB_cnt +
	     (obuffer1_8_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_8_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_9_serverAdapterA_cnt_620_PLUS_IF_obuf_ETC___d7626 =
	     obuffer1_9_serverAdapterA_cnt +
	     (obuffer1_9_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_9_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer1_9_serverAdapterB_cnt_672_PLUS_IF_obuf_ETC___d7678 =
	     obuffer1_9_serverAdapterB_cnt +
	     (obuffer1_9_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf1_9_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_0_serverAdapterA_cnt_0012_PLUS_IF_obu_ETC___d10018 =
	     obuffer2_0_serverAdapterA_cnt +
	     (obuffer2_0_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_0_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_0_serverAdapterB_cnt_0064_PLUS_IF_obu_ETC___d10070 =
	     obuffer2_0_serverAdapterB_cnt +
	     (obuffer2_0_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_0_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_10_serverAdapterA_cnt_1052_PLUS_IF_ob_ETC___d11058 =
	     obuffer2_10_serverAdapterA_cnt +
	     (obuffer2_10_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_10_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_10_serverAdapterB_cnt_1104_PLUS_IF_ob_ETC___d11110 =
	     obuffer2_10_serverAdapterB_cnt +
	     (obuffer2_10_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_10_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_11_serverAdapterA_cnt_1156_PLUS_IF_ob_ETC___d11162 =
	     obuffer2_11_serverAdapterA_cnt +
	     (obuffer2_11_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_11_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_11_serverAdapterB_cnt_1208_PLUS_IF_ob_ETC___d11214 =
	     obuffer2_11_serverAdapterB_cnt +
	     (obuffer2_11_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_11_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_12_serverAdapterA_cnt_1260_PLUS_IF_ob_ETC___d11266 =
	     obuffer2_12_serverAdapterA_cnt +
	     (obuffer2_12_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_12_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_12_serverAdapterB_cnt_1312_PLUS_IF_ob_ETC___d11318 =
	     obuffer2_12_serverAdapterB_cnt +
	     (obuffer2_12_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_12_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_13_serverAdapterA_cnt_1364_PLUS_IF_ob_ETC___d11370 =
	     obuffer2_13_serverAdapterA_cnt +
	     (obuffer2_13_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_13_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_13_serverAdapterB_cnt_1416_PLUS_IF_ob_ETC___d11422 =
	     obuffer2_13_serverAdapterB_cnt +
	     (obuffer2_13_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_13_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_14_serverAdapterA_cnt_1468_PLUS_IF_ob_ETC___d11474 =
	     obuffer2_14_serverAdapterA_cnt +
	     (obuffer2_14_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_14_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_14_serverAdapterB_cnt_1520_PLUS_IF_ob_ETC___d11526 =
	     obuffer2_14_serverAdapterB_cnt +
	     (obuffer2_14_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_14_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_15_serverAdapterA_cnt_1572_PLUS_IF_ob_ETC___d11578 =
	     obuffer2_15_serverAdapterA_cnt +
	     (obuffer2_15_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_15_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_15_serverAdapterB_cnt_1624_PLUS_IF_ob_ETC___d11630 =
	     obuffer2_15_serverAdapterB_cnt +
	     (obuffer2_15_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_15_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_16_serverAdapterA_cnt_1676_PLUS_IF_ob_ETC___d11682 =
	     obuffer2_16_serverAdapterA_cnt +
	     (obuffer2_16_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_16_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_16_serverAdapterB_cnt_1728_PLUS_IF_ob_ETC___d11734 =
	     obuffer2_16_serverAdapterB_cnt +
	     (obuffer2_16_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_16_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_17_serverAdapterA_cnt_1780_PLUS_IF_ob_ETC___d11786 =
	     obuffer2_17_serverAdapterA_cnt +
	     (obuffer2_17_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_17_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_17_serverAdapterB_cnt_1832_PLUS_IF_ob_ETC___d11838 =
	     obuffer2_17_serverAdapterB_cnt +
	     (obuffer2_17_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_17_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_18_serverAdapterA_cnt_1884_PLUS_IF_ob_ETC___d11890 =
	     obuffer2_18_serverAdapterA_cnt +
	     (obuffer2_18_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_18_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_18_serverAdapterB_cnt_1936_PLUS_IF_ob_ETC___d11942 =
	     obuffer2_18_serverAdapterB_cnt +
	     (obuffer2_18_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_18_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_19_serverAdapterA_cnt_1988_PLUS_IF_ob_ETC___d11994 =
	     obuffer2_19_serverAdapterA_cnt +
	     (obuffer2_19_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_19_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_19_serverAdapterB_cnt_2040_PLUS_IF_ob_ETC___d12046 =
	     obuffer2_19_serverAdapterB_cnt +
	     (obuffer2_19_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_19_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_1_serverAdapterA_cnt_0116_PLUS_IF_obu_ETC___d10122 =
	     obuffer2_1_serverAdapterA_cnt +
	     (obuffer2_1_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_1_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_1_serverAdapterB_cnt_0168_PLUS_IF_obu_ETC___d10174 =
	     obuffer2_1_serverAdapterB_cnt +
	     (obuffer2_1_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_1_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_20_serverAdapterA_cnt_2092_PLUS_IF_ob_ETC___d12098 =
	     obuffer2_20_serverAdapterA_cnt +
	     (obuffer2_20_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_20_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_20_serverAdapterB_cnt_2144_PLUS_IF_ob_ETC___d12150 =
	     obuffer2_20_serverAdapterB_cnt +
	     (obuffer2_20_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_20_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_21_serverAdapterA_cnt_2196_PLUS_IF_ob_ETC___d12202 =
	     obuffer2_21_serverAdapterA_cnt +
	     (obuffer2_21_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_21_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_21_serverAdapterB_cnt_2248_PLUS_IF_ob_ETC___d12254 =
	     obuffer2_21_serverAdapterB_cnt +
	     (obuffer2_21_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_21_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_22_serverAdapterA_cnt_2300_PLUS_IF_ob_ETC___d12306 =
	     obuffer2_22_serverAdapterA_cnt +
	     (obuffer2_22_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_22_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_22_serverAdapterB_cnt_2352_PLUS_IF_ob_ETC___d12358 =
	     obuffer2_22_serverAdapterB_cnt +
	     (obuffer2_22_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_22_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_23_serverAdapterA_cnt_2404_PLUS_IF_ob_ETC___d12410 =
	     obuffer2_23_serverAdapterA_cnt +
	     (obuffer2_23_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_23_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_23_serverAdapterB_cnt_2456_PLUS_IF_ob_ETC___d12462 =
	     obuffer2_23_serverAdapterB_cnt +
	     (obuffer2_23_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_23_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_24_serverAdapterA_cnt_2508_PLUS_IF_ob_ETC___d12514 =
	     obuffer2_24_serverAdapterA_cnt +
	     (obuffer2_24_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_24_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_24_serverAdapterB_cnt_2560_PLUS_IF_ob_ETC___d12566 =
	     obuffer2_24_serverAdapterB_cnt +
	     (obuffer2_24_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_24_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_25_serverAdapterA_cnt_2612_PLUS_IF_ob_ETC___d12618 =
	     obuffer2_25_serverAdapterA_cnt +
	     (obuffer2_25_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_25_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_25_serverAdapterB_cnt_2664_PLUS_IF_ob_ETC___d12670 =
	     obuffer2_25_serverAdapterB_cnt +
	     (obuffer2_25_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_25_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_26_serverAdapterA_cnt_2716_PLUS_IF_ob_ETC___d12722 =
	     obuffer2_26_serverAdapterA_cnt +
	     (obuffer2_26_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_26_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_26_serverAdapterB_cnt_2768_PLUS_IF_ob_ETC___d12774 =
	     obuffer2_26_serverAdapterB_cnt +
	     (obuffer2_26_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_26_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_27_serverAdapterA_cnt_2820_PLUS_IF_ob_ETC___d12826 =
	     obuffer2_27_serverAdapterA_cnt +
	     (obuffer2_27_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_27_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_27_serverAdapterB_cnt_2872_PLUS_IF_ob_ETC___d12878 =
	     obuffer2_27_serverAdapterB_cnt +
	     (obuffer2_27_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_27_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_28_serverAdapterA_cnt_2924_PLUS_IF_ob_ETC___d12930 =
	     obuffer2_28_serverAdapterA_cnt +
	     (obuffer2_28_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_28_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_28_serverAdapterB_cnt_2976_PLUS_IF_ob_ETC___d12982 =
	     obuffer2_28_serverAdapterB_cnt +
	     (obuffer2_28_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_28_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_29_serverAdapterA_cnt_3028_PLUS_IF_ob_ETC___d13034 =
	     obuffer2_29_serverAdapterA_cnt +
	     (obuffer2_29_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_29_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_29_serverAdapterB_cnt_3080_PLUS_IF_ob_ETC___d13086 =
	     obuffer2_29_serverAdapterB_cnt +
	     (obuffer2_29_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_29_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_2_serverAdapterA_cnt_0220_PLUS_IF_obu_ETC___d10226 =
	     obuffer2_2_serverAdapterA_cnt +
	     (obuffer2_2_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_2_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_2_serverAdapterB_cnt_0272_PLUS_IF_obu_ETC___d10278 =
	     obuffer2_2_serverAdapterB_cnt +
	     (obuffer2_2_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_2_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_30_serverAdapterA_cnt_3132_PLUS_IF_ob_ETC___d13138 =
	     obuffer2_30_serverAdapterA_cnt +
	     (obuffer2_30_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_30_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_30_serverAdapterB_cnt_3184_PLUS_IF_ob_ETC___d13190 =
	     obuffer2_30_serverAdapterB_cnt +
	     (obuffer2_30_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_30_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_31_serverAdapterA_cnt_3236_PLUS_IF_ob_ETC___d13242 =
	     obuffer2_31_serverAdapterA_cnt +
	     (obuffer2_31_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_31_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_31_serverAdapterB_cnt_3288_PLUS_IF_ob_ETC___d13294 =
	     obuffer2_31_serverAdapterB_cnt +
	     (obuffer2_31_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_31_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_3_serverAdapterA_cnt_0324_PLUS_IF_obu_ETC___d10330 =
	     obuffer2_3_serverAdapterA_cnt +
	     (obuffer2_3_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_3_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_3_serverAdapterB_cnt_0376_PLUS_IF_obu_ETC___d10382 =
	     obuffer2_3_serverAdapterB_cnt +
	     (obuffer2_3_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_3_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_4_serverAdapterA_cnt_0428_PLUS_IF_obu_ETC___d10434 =
	     obuffer2_4_serverAdapterA_cnt +
	     (obuffer2_4_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_4_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_4_serverAdapterB_cnt_0480_PLUS_IF_obu_ETC___d10486 =
	     obuffer2_4_serverAdapterB_cnt +
	     (obuffer2_4_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_4_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_5_serverAdapterA_cnt_0532_PLUS_IF_obu_ETC___d10538 =
	     obuffer2_5_serverAdapterA_cnt +
	     (obuffer2_5_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_5_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_5_serverAdapterB_cnt_0584_PLUS_IF_obu_ETC___d10590 =
	     obuffer2_5_serverAdapterB_cnt +
	     (obuffer2_5_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_5_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_6_serverAdapterA_cnt_0636_PLUS_IF_obu_ETC___d10642 =
	     obuffer2_6_serverAdapterA_cnt +
	     (obuffer2_6_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_6_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_6_serverAdapterB_cnt_0688_PLUS_IF_obu_ETC___d10694 =
	     obuffer2_6_serverAdapterB_cnt +
	     (obuffer2_6_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_6_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_7_serverAdapterA_cnt_0740_PLUS_IF_obu_ETC___d10746 =
	     obuffer2_7_serverAdapterA_cnt +
	     (obuffer2_7_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_7_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_7_serverAdapterB_cnt_0792_PLUS_IF_obu_ETC___d10798 =
	     obuffer2_7_serverAdapterB_cnt +
	     (obuffer2_7_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_7_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_8_serverAdapterA_cnt_0844_PLUS_IF_obu_ETC___d10850 =
	     obuffer2_8_serverAdapterA_cnt +
	     (obuffer2_8_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_8_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_8_serverAdapterB_cnt_0896_PLUS_IF_obu_ETC___d10902 =
	     obuffer2_8_serverAdapterB_cnt +
	     (obuffer2_8_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_8_portB_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_9_serverAdapterA_cnt_0948_PLUS_IF_obu_ETC___d10954 =
	     obuffer2_9_serverAdapterA_cnt +
	     (obuffer2_9_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_9_portA_response_get ? 3'd7 : 3'd0) ;
  assign obuffer2_9_serverAdapterB_cnt_1000_PLUS_IF_obu_ETC___d11006 =
	     obuffer2_9_serverAdapterB_cnt +
	     (obuffer2_9_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_obuf2_9_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuf_0_portA_request_put_BITS_17_TO_16__q193 =
	     wbuf_0_portA_request_put[17:16] ;
  assign wbuf_0_portB_request_put_BITS_17_TO_16__q194 =
	     wbuf_0_portB_request_put[17:16] ;
  assign wbuf_10_portA_request_put_BITS_17_TO_16__q195 =
	     wbuf_10_portA_request_put[17:16] ;
  assign wbuf_10_portB_request_put_BITS_17_TO_16__q196 =
	     wbuf_10_portB_request_put[17:16] ;
  assign wbuf_11_portA_request_put_BITS_17_TO_16__q197 =
	     wbuf_11_portA_request_put[17:16] ;
  assign wbuf_11_portB_request_put_BITS_17_TO_16__q198 =
	     wbuf_11_portB_request_put[17:16] ;
  assign wbuf_12_portA_request_put_BITS_17_TO_16__q199 =
	     wbuf_12_portA_request_put[17:16] ;
  assign wbuf_12_portB_request_put_BITS_17_TO_16__q200 =
	     wbuf_12_portB_request_put[17:16] ;
  assign wbuf_13_portA_request_put_BITS_17_TO_16__q201 =
	     wbuf_13_portA_request_put[17:16] ;
  assign wbuf_13_portB_request_put_BITS_17_TO_16__q202 =
	     wbuf_13_portB_request_put[17:16] ;
  assign wbuf_14_portA_request_put_BITS_17_TO_16__q203 =
	     wbuf_14_portA_request_put[17:16] ;
  assign wbuf_14_portB_request_put_BITS_17_TO_16__q204 =
	     wbuf_14_portB_request_put[17:16] ;
  assign wbuf_15_portA_request_put_BITS_17_TO_16__q205 =
	     wbuf_15_portA_request_put[17:16] ;
  assign wbuf_15_portB_request_put_BITS_17_TO_16__q206 =
	     wbuf_15_portB_request_put[17:16] ;
  assign wbuf_16_portA_request_put_BITS_17_TO_16__q207 =
	     wbuf_16_portA_request_put[17:16] ;
  assign wbuf_16_portB_request_put_BITS_17_TO_16__q208 =
	     wbuf_16_portB_request_put[17:16] ;
  assign wbuf_17_portA_request_put_BITS_17_TO_16__q209 =
	     wbuf_17_portA_request_put[17:16] ;
  assign wbuf_17_portB_request_put_BITS_17_TO_16__q210 =
	     wbuf_17_portB_request_put[17:16] ;
  assign wbuf_18_portA_request_put_BITS_17_TO_16__q211 =
	     wbuf_18_portA_request_put[17:16] ;
  assign wbuf_18_portB_request_put_BITS_17_TO_16__q212 =
	     wbuf_18_portB_request_put[17:16] ;
  assign wbuf_19_portA_request_put_BITS_17_TO_16__q213 =
	     wbuf_19_portA_request_put[17:16] ;
  assign wbuf_19_portB_request_put_BITS_17_TO_16__q214 =
	     wbuf_19_portB_request_put[17:16] ;
  assign wbuf_1_portA_request_put_BITS_17_TO_16__q215 =
	     wbuf_1_portA_request_put[17:16] ;
  assign wbuf_1_portB_request_put_BITS_17_TO_16__q216 =
	     wbuf_1_portB_request_put[17:16] ;
  assign wbuf_20_portA_request_put_BITS_17_TO_16__q217 =
	     wbuf_20_portA_request_put[17:16] ;
  assign wbuf_20_portB_request_put_BITS_17_TO_16__q218 =
	     wbuf_20_portB_request_put[17:16] ;
  assign wbuf_21_portA_request_put_BITS_17_TO_16__q219 =
	     wbuf_21_portA_request_put[17:16] ;
  assign wbuf_21_portB_request_put_BITS_17_TO_16__q220 =
	     wbuf_21_portB_request_put[17:16] ;
  assign wbuf_22_portA_request_put_BITS_17_TO_16__q221 =
	     wbuf_22_portA_request_put[17:16] ;
  assign wbuf_22_portB_request_put_BITS_17_TO_16__q222 =
	     wbuf_22_portB_request_put[17:16] ;
  assign wbuf_23_portA_request_put_BITS_17_TO_16__q223 =
	     wbuf_23_portA_request_put[17:16] ;
  assign wbuf_23_portB_request_put_BITS_17_TO_16__q224 =
	     wbuf_23_portB_request_put[17:16] ;
  assign wbuf_24_portA_request_put_BITS_17_TO_16__q225 =
	     wbuf_24_portA_request_put[17:16] ;
  assign wbuf_24_portB_request_put_BITS_17_TO_16__q226 =
	     wbuf_24_portB_request_put[17:16] ;
  assign wbuf_25_portA_request_put_BITS_17_TO_16__q227 =
	     wbuf_25_portA_request_put[17:16] ;
  assign wbuf_25_portB_request_put_BITS_17_TO_16__q228 =
	     wbuf_25_portB_request_put[17:16] ;
  assign wbuf_26_portA_request_put_BITS_17_TO_16__q229 =
	     wbuf_26_portA_request_put[17:16] ;
  assign wbuf_26_portB_request_put_BITS_17_TO_16__q230 =
	     wbuf_26_portB_request_put[17:16] ;
  assign wbuf_27_portA_request_put_BITS_17_TO_16__q231 =
	     wbuf_27_portA_request_put[17:16] ;
  assign wbuf_27_portB_request_put_BITS_17_TO_16__q232 =
	     wbuf_27_portB_request_put[17:16] ;
  assign wbuf_28_portA_request_put_BITS_17_TO_16__q233 =
	     wbuf_28_portA_request_put[17:16] ;
  assign wbuf_28_portB_request_put_BITS_17_TO_16__q234 =
	     wbuf_28_portB_request_put[17:16] ;
  assign wbuf_29_portA_request_put_BITS_17_TO_16__q235 =
	     wbuf_29_portA_request_put[17:16] ;
  assign wbuf_29_portB_request_put_BITS_17_TO_16__q236 =
	     wbuf_29_portB_request_put[17:16] ;
  assign wbuf_2_portA_request_put_BITS_17_TO_16__q237 =
	     wbuf_2_portA_request_put[17:16] ;
  assign wbuf_2_portB_request_put_BITS_17_TO_16__q238 =
	     wbuf_2_portB_request_put[17:16] ;
  assign wbuf_30_portA_request_put_BITS_17_TO_16__q239 =
	     wbuf_30_portA_request_put[17:16] ;
  assign wbuf_30_portB_request_put_BITS_17_TO_16__q240 =
	     wbuf_30_portB_request_put[17:16] ;
  assign wbuf_31_portA_request_put_BITS_17_TO_16__q241 =
	     wbuf_31_portA_request_put[17:16] ;
  assign wbuf_31_portB_request_put_BITS_17_TO_16__q242 =
	     wbuf_31_portB_request_put[17:16] ;
  assign wbuf_3_portA_request_put_BITS_17_TO_16__q243 =
	     wbuf_3_portA_request_put[17:16] ;
  assign wbuf_3_portB_request_put_BITS_17_TO_16__q244 =
	     wbuf_3_portB_request_put[17:16] ;
  assign wbuf_4_portA_request_put_BITS_17_TO_16__q245 =
	     wbuf_4_portA_request_put[17:16] ;
  assign wbuf_4_portB_request_put_BITS_17_TO_16__q246 =
	     wbuf_4_portB_request_put[17:16] ;
  assign wbuf_5_portA_request_put_BITS_17_TO_16__q247 =
	     wbuf_5_portA_request_put[17:16] ;
  assign wbuf_5_portB_request_put_BITS_17_TO_16__q248 =
	     wbuf_5_portB_request_put[17:16] ;
  assign wbuf_6_portA_request_put_BITS_17_TO_16__q249 =
	     wbuf_6_portA_request_put[17:16] ;
  assign wbuf_6_portB_request_put_BITS_17_TO_16__q250 =
	     wbuf_6_portB_request_put[17:16] ;
  assign wbuf_7_portA_request_put_BITS_17_TO_16__q251 =
	     wbuf_7_portA_request_put[17:16] ;
  assign wbuf_7_portB_request_put_BITS_17_TO_16__q252 =
	     wbuf_7_portB_request_put[17:16] ;
  assign wbuf_8_portA_request_put_BITS_17_TO_16__q253 =
	     wbuf_8_portA_request_put[17:16] ;
  assign wbuf_8_portB_request_put_BITS_17_TO_16__q254 =
	     wbuf_8_portB_request_put[17:16] ;
  assign wbuf_9_portA_request_put_BITS_17_TO_16__q255 =
	     wbuf_9_portA_request_put[17:16] ;
  assign wbuf_9_portB_request_put_BITS_17_TO_16__q256 =
	     wbuf_9_portB_request_put[17:16] ;
  assign wbuffer_0_serverAdapterA_cnt_356_PLUS_IF_wbuff_ETC___d3362 =
	     wbuffer_0_serverAdapterA_cnt +
	     (wbuffer_0_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_0_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_0_serverAdapterB_cnt_408_PLUS_IF_wbuff_ETC___d3414 =
	     wbuffer_0_serverAdapterB_cnt +
	     (wbuffer_0_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_0_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_10_serverAdapterA_cnt_396_PLUS_IF_wbuf_ETC___d4402 =
	     wbuffer_10_serverAdapterA_cnt +
	     (wbuffer_10_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_10_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_10_serverAdapterB_cnt_448_PLUS_IF_wbuf_ETC___d4454 =
	     wbuffer_10_serverAdapterB_cnt +
	     (wbuffer_10_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_10_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_11_serverAdapterA_cnt_500_PLUS_IF_wbuf_ETC___d4506 =
	     wbuffer_11_serverAdapterA_cnt +
	     (wbuffer_11_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_11_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_11_serverAdapterB_cnt_552_PLUS_IF_wbuf_ETC___d4558 =
	     wbuffer_11_serverAdapterB_cnt +
	     (wbuffer_11_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_11_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_12_serverAdapterA_cnt_604_PLUS_IF_wbuf_ETC___d4610 =
	     wbuffer_12_serverAdapterA_cnt +
	     (wbuffer_12_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_12_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_12_serverAdapterB_cnt_656_PLUS_IF_wbuf_ETC___d4662 =
	     wbuffer_12_serverAdapterB_cnt +
	     (wbuffer_12_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_12_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_13_serverAdapterA_cnt_708_PLUS_IF_wbuf_ETC___d4714 =
	     wbuffer_13_serverAdapterA_cnt +
	     (wbuffer_13_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_13_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_13_serverAdapterB_cnt_760_PLUS_IF_wbuf_ETC___d4766 =
	     wbuffer_13_serverAdapterB_cnt +
	     (wbuffer_13_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_13_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_14_serverAdapterA_cnt_812_PLUS_IF_wbuf_ETC___d4818 =
	     wbuffer_14_serverAdapterA_cnt +
	     (wbuffer_14_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_14_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_14_serverAdapterB_cnt_864_PLUS_IF_wbuf_ETC___d4870 =
	     wbuffer_14_serverAdapterB_cnt +
	     (wbuffer_14_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_14_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_15_serverAdapterA_cnt_916_PLUS_IF_wbuf_ETC___d4922 =
	     wbuffer_15_serverAdapterA_cnt +
	     (wbuffer_15_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_15_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_15_serverAdapterB_cnt_968_PLUS_IF_wbuf_ETC___d4974 =
	     wbuffer_15_serverAdapterB_cnt +
	     (wbuffer_15_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_15_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_16_serverAdapterA_cnt_020_PLUS_IF_wbuf_ETC___d5026 =
	     wbuffer_16_serverAdapterA_cnt +
	     (wbuffer_16_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_16_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_16_serverAdapterB_cnt_072_PLUS_IF_wbuf_ETC___d5078 =
	     wbuffer_16_serverAdapterB_cnt +
	     (wbuffer_16_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_16_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_17_serverAdapterA_cnt_124_PLUS_IF_wbuf_ETC___d5130 =
	     wbuffer_17_serverAdapterA_cnt +
	     (wbuffer_17_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_17_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_17_serverAdapterB_cnt_176_PLUS_IF_wbuf_ETC___d5182 =
	     wbuffer_17_serverAdapterB_cnt +
	     (wbuffer_17_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_17_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_18_serverAdapterA_cnt_228_PLUS_IF_wbuf_ETC___d5234 =
	     wbuffer_18_serverAdapterA_cnt +
	     (wbuffer_18_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_18_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_18_serverAdapterB_cnt_280_PLUS_IF_wbuf_ETC___d5286 =
	     wbuffer_18_serverAdapterB_cnt +
	     (wbuffer_18_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_18_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_19_serverAdapterA_cnt_332_PLUS_IF_wbuf_ETC___d5338 =
	     wbuffer_19_serverAdapterA_cnt +
	     (wbuffer_19_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_19_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_19_serverAdapterB_cnt_384_PLUS_IF_wbuf_ETC___d5390 =
	     wbuffer_19_serverAdapterB_cnt +
	     (wbuffer_19_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_19_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_1_serverAdapterA_cnt_460_PLUS_IF_wbuff_ETC___d3466 =
	     wbuffer_1_serverAdapterA_cnt +
	     (wbuffer_1_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_1_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_1_serverAdapterB_cnt_512_PLUS_IF_wbuff_ETC___d3518 =
	     wbuffer_1_serverAdapterB_cnt +
	     (wbuffer_1_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_1_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_20_serverAdapterA_cnt_436_PLUS_IF_wbuf_ETC___d5442 =
	     wbuffer_20_serverAdapterA_cnt +
	     (wbuffer_20_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_20_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_20_serverAdapterB_cnt_488_PLUS_IF_wbuf_ETC___d5494 =
	     wbuffer_20_serverAdapterB_cnt +
	     (wbuffer_20_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_20_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_21_serverAdapterA_cnt_540_PLUS_IF_wbuf_ETC___d5546 =
	     wbuffer_21_serverAdapterA_cnt +
	     (wbuffer_21_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_21_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_21_serverAdapterB_cnt_592_PLUS_IF_wbuf_ETC___d5598 =
	     wbuffer_21_serverAdapterB_cnt +
	     (wbuffer_21_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_21_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_22_serverAdapterA_cnt_644_PLUS_IF_wbuf_ETC___d5650 =
	     wbuffer_22_serverAdapterA_cnt +
	     (wbuffer_22_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_22_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_22_serverAdapterB_cnt_696_PLUS_IF_wbuf_ETC___d5702 =
	     wbuffer_22_serverAdapterB_cnt +
	     (wbuffer_22_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_22_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_23_serverAdapterA_cnt_748_PLUS_IF_wbuf_ETC___d5754 =
	     wbuffer_23_serverAdapterA_cnt +
	     (wbuffer_23_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_23_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_23_serverAdapterB_cnt_800_PLUS_IF_wbuf_ETC___d5806 =
	     wbuffer_23_serverAdapterB_cnt +
	     (wbuffer_23_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_23_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_24_serverAdapterA_cnt_852_PLUS_IF_wbuf_ETC___d5858 =
	     wbuffer_24_serverAdapterA_cnt +
	     (wbuffer_24_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_24_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_24_serverAdapterB_cnt_904_PLUS_IF_wbuf_ETC___d5910 =
	     wbuffer_24_serverAdapterB_cnt +
	     (wbuffer_24_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_24_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_25_serverAdapterA_cnt_956_PLUS_IF_wbuf_ETC___d5962 =
	     wbuffer_25_serverAdapterA_cnt +
	     (wbuffer_25_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_25_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_25_serverAdapterB_cnt_008_PLUS_IF_wbuf_ETC___d6014 =
	     wbuffer_25_serverAdapterB_cnt +
	     (wbuffer_25_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_25_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_26_serverAdapterA_cnt_060_PLUS_IF_wbuf_ETC___d6066 =
	     wbuffer_26_serverAdapterA_cnt +
	     (wbuffer_26_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_26_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_26_serverAdapterB_cnt_112_PLUS_IF_wbuf_ETC___d6118 =
	     wbuffer_26_serverAdapterB_cnt +
	     (wbuffer_26_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_26_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_27_serverAdapterA_cnt_164_PLUS_IF_wbuf_ETC___d6170 =
	     wbuffer_27_serverAdapterA_cnt +
	     (wbuffer_27_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_27_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_27_serverAdapterB_cnt_216_PLUS_IF_wbuf_ETC___d6222 =
	     wbuffer_27_serverAdapterB_cnt +
	     (wbuffer_27_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_27_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_28_serverAdapterA_cnt_268_PLUS_IF_wbuf_ETC___d6274 =
	     wbuffer_28_serverAdapterA_cnt +
	     (wbuffer_28_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_28_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_28_serverAdapterB_cnt_320_PLUS_IF_wbuf_ETC___d6326 =
	     wbuffer_28_serverAdapterB_cnt +
	     (wbuffer_28_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_28_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_29_serverAdapterA_cnt_372_PLUS_IF_wbuf_ETC___d6378 =
	     wbuffer_29_serverAdapterA_cnt +
	     (wbuffer_29_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_29_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_29_serverAdapterB_cnt_424_PLUS_IF_wbuf_ETC___d6430 =
	     wbuffer_29_serverAdapterB_cnt +
	     (wbuffer_29_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_29_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_2_serverAdapterA_cnt_564_PLUS_IF_wbuff_ETC___d3570 =
	     wbuffer_2_serverAdapterA_cnt +
	     (wbuffer_2_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_2_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_2_serverAdapterB_cnt_616_PLUS_IF_wbuff_ETC___d3622 =
	     wbuffer_2_serverAdapterB_cnt +
	     (wbuffer_2_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_2_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_30_serverAdapterA_cnt_476_PLUS_IF_wbuf_ETC___d6482 =
	     wbuffer_30_serverAdapterA_cnt +
	     (wbuffer_30_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_30_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_30_serverAdapterB_cnt_528_PLUS_IF_wbuf_ETC___d6534 =
	     wbuffer_30_serverAdapterB_cnt +
	     (wbuffer_30_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_30_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_31_serverAdapterA_cnt_580_PLUS_IF_wbuf_ETC___d6586 =
	     wbuffer_31_serverAdapterA_cnt +
	     (wbuffer_31_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_31_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_31_serverAdapterB_cnt_632_PLUS_IF_wbuf_ETC___d6638 =
	     wbuffer_31_serverAdapterB_cnt +
	     (wbuffer_31_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_31_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_3_serverAdapterA_cnt_668_PLUS_IF_wbuff_ETC___d3674 =
	     wbuffer_3_serverAdapterA_cnt +
	     (wbuffer_3_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_3_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_3_serverAdapterB_cnt_720_PLUS_IF_wbuff_ETC___d3726 =
	     wbuffer_3_serverAdapterB_cnt +
	     (wbuffer_3_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_3_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_4_serverAdapterA_cnt_772_PLUS_IF_wbuff_ETC___d3778 =
	     wbuffer_4_serverAdapterA_cnt +
	     (wbuffer_4_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_4_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_4_serverAdapterB_cnt_824_PLUS_IF_wbuff_ETC___d3830 =
	     wbuffer_4_serverAdapterB_cnt +
	     (wbuffer_4_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_4_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_5_serverAdapterA_cnt_876_PLUS_IF_wbuff_ETC___d3882 =
	     wbuffer_5_serverAdapterA_cnt +
	     (wbuffer_5_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_5_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_5_serverAdapterB_cnt_928_PLUS_IF_wbuff_ETC___d3934 =
	     wbuffer_5_serverAdapterB_cnt +
	     (wbuffer_5_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_5_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_6_serverAdapterA_cnt_980_PLUS_IF_wbuff_ETC___d3986 =
	     wbuffer_6_serverAdapterA_cnt +
	     (wbuffer_6_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_6_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_6_serverAdapterB_cnt_032_PLUS_IF_wbuff_ETC___d4038 =
	     wbuffer_6_serverAdapterB_cnt +
	     (wbuffer_6_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_6_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_7_serverAdapterA_cnt_084_PLUS_IF_wbuff_ETC___d4090 =
	     wbuffer_7_serverAdapterA_cnt +
	     (wbuffer_7_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_7_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_7_serverAdapterB_cnt_136_PLUS_IF_wbuff_ETC___d4142 =
	     wbuffer_7_serverAdapterB_cnt +
	     (wbuffer_7_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_7_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_8_serverAdapterA_cnt_188_PLUS_IF_wbuff_ETC___d4194 =
	     wbuffer_8_serverAdapterA_cnt +
	     (wbuffer_8_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_8_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_8_serverAdapterB_cnt_240_PLUS_IF_wbuff_ETC___d4246 =
	     wbuffer_8_serverAdapterB_cnt +
	     (wbuffer_8_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_8_portB_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_9_serverAdapterA_cnt_292_PLUS_IF_wbuff_ETC___d4298 =
	     wbuffer_9_serverAdapterA_cnt +
	     (wbuffer_9_serverAdapterA_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_9_portA_response_get ? 3'd7 : 3'd0) ;
  assign wbuffer_9_serverAdapterB_cnt_344_PLUS_IF_wbuff_ETC___d4350 =
	     wbuffer_9_serverAdapterB_cnt +
	     (wbuffer_9_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_wbuf_9_portB_response_get ? 3'd7 : 3'd0) ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        ibuffer_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ibuffer_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	ibuffer_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer1_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer1_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	obuffer2_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	obuffer2_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	wbuffer_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wbuffer_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (ibuffer_0_serverAdapterA_cnt$EN)
	  ibuffer_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_0_serverAdapterA_cnt$D_IN;
	if (ibuffer_0_serverAdapterA_s1$EN)
	  ibuffer_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_0_serverAdapterA_s1$D_IN;
	if (ibuffer_0_serverAdapterB_cnt$EN)
	  ibuffer_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_0_serverAdapterB_cnt$D_IN;
	if (ibuffer_0_serverAdapterB_s1$EN)
	  ibuffer_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_0_serverAdapterB_s1$D_IN;
	if (ibuffer_10_serverAdapterA_cnt$EN)
	  ibuffer_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_10_serverAdapterA_cnt$D_IN;
	if (ibuffer_10_serverAdapterA_s1$EN)
	  ibuffer_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_10_serverAdapterA_s1$D_IN;
	if (ibuffer_10_serverAdapterB_cnt$EN)
	  ibuffer_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_10_serverAdapterB_cnt$D_IN;
	if (ibuffer_10_serverAdapterB_s1$EN)
	  ibuffer_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_10_serverAdapterB_s1$D_IN;
	if (ibuffer_11_serverAdapterA_cnt$EN)
	  ibuffer_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_11_serverAdapterA_cnt$D_IN;
	if (ibuffer_11_serverAdapterA_s1$EN)
	  ibuffer_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_11_serverAdapterA_s1$D_IN;
	if (ibuffer_11_serverAdapterB_cnt$EN)
	  ibuffer_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_11_serverAdapterB_cnt$D_IN;
	if (ibuffer_11_serverAdapterB_s1$EN)
	  ibuffer_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_11_serverAdapterB_s1$D_IN;
	if (ibuffer_12_serverAdapterA_cnt$EN)
	  ibuffer_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_12_serverAdapterA_cnt$D_IN;
	if (ibuffer_12_serverAdapterA_s1$EN)
	  ibuffer_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_12_serverAdapterA_s1$D_IN;
	if (ibuffer_12_serverAdapterB_cnt$EN)
	  ibuffer_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_12_serverAdapterB_cnt$D_IN;
	if (ibuffer_12_serverAdapterB_s1$EN)
	  ibuffer_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_12_serverAdapterB_s1$D_IN;
	if (ibuffer_13_serverAdapterA_cnt$EN)
	  ibuffer_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_13_serverAdapterA_cnt$D_IN;
	if (ibuffer_13_serverAdapterA_s1$EN)
	  ibuffer_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_13_serverAdapterA_s1$D_IN;
	if (ibuffer_13_serverAdapterB_cnt$EN)
	  ibuffer_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_13_serverAdapterB_cnt$D_IN;
	if (ibuffer_13_serverAdapterB_s1$EN)
	  ibuffer_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_13_serverAdapterB_s1$D_IN;
	if (ibuffer_14_serverAdapterA_cnt$EN)
	  ibuffer_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_14_serverAdapterA_cnt$D_IN;
	if (ibuffer_14_serverAdapterA_s1$EN)
	  ibuffer_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_14_serverAdapterA_s1$D_IN;
	if (ibuffer_14_serverAdapterB_cnt$EN)
	  ibuffer_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_14_serverAdapterB_cnt$D_IN;
	if (ibuffer_14_serverAdapterB_s1$EN)
	  ibuffer_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_14_serverAdapterB_s1$D_IN;
	if (ibuffer_15_serverAdapterA_cnt$EN)
	  ibuffer_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_15_serverAdapterA_cnt$D_IN;
	if (ibuffer_15_serverAdapterA_s1$EN)
	  ibuffer_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_15_serverAdapterA_s1$D_IN;
	if (ibuffer_15_serverAdapterB_cnt$EN)
	  ibuffer_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_15_serverAdapterB_cnt$D_IN;
	if (ibuffer_15_serverAdapterB_s1$EN)
	  ibuffer_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_15_serverAdapterB_s1$D_IN;
	if (ibuffer_16_serverAdapterA_cnt$EN)
	  ibuffer_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_16_serverAdapterA_cnt$D_IN;
	if (ibuffer_16_serverAdapterA_s1$EN)
	  ibuffer_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_16_serverAdapterA_s1$D_IN;
	if (ibuffer_16_serverAdapterB_cnt$EN)
	  ibuffer_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_16_serverAdapterB_cnt$D_IN;
	if (ibuffer_16_serverAdapterB_s1$EN)
	  ibuffer_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_16_serverAdapterB_s1$D_IN;
	if (ibuffer_17_serverAdapterA_cnt$EN)
	  ibuffer_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_17_serverAdapterA_cnt$D_IN;
	if (ibuffer_17_serverAdapterA_s1$EN)
	  ibuffer_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_17_serverAdapterA_s1$D_IN;
	if (ibuffer_17_serverAdapterB_cnt$EN)
	  ibuffer_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_17_serverAdapterB_cnt$D_IN;
	if (ibuffer_17_serverAdapterB_s1$EN)
	  ibuffer_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_17_serverAdapterB_s1$D_IN;
	if (ibuffer_18_serverAdapterA_cnt$EN)
	  ibuffer_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_18_serverAdapterA_cnt$D_IN;
	if (ibuffer_18_serverAdapterA_s1$EN)
	  ibuffer_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_18_serverAdapterA_s1$D_IN;
	if (ibuffer_18_serverAdapterB_cnt$EN)
	  ibuffer_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_18_serverAdapterB_cnt$D_IN;
	if (ibuffer_18_serverAdapterB_s1$EN)
	  ibuffer_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_18_serverAdapterB_s1$D_IN;
	if (ibuffer_19_serverAdapterA_cnt$EN)
	  ibuffer_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_19_serverAdapterA_cnt$D_IN;
	if (ibuffer_19_serverAdapterA_s1$EN)
	  ibuffer_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_19_serverAdapterA_s1$D_IN;
	if (ibuffer_19_serverAdapterB_cnt$EN)
	  ibuffer_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_19_serverAdapterB_cnt$D_IN;
	if (ibuffer_19_serverAdapterB_s1$EN)
	  ibuffer_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_19_serverAdapterB_s1$D_IN;
	if (ibuffer_1_serverAdapterA_cnt$EN)
	  ibuffer_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_1_serverAdapterA_cnt$D_IN;
	if (ibuffer_1_serverAdapterA_s1$EN)
	  ibuffer_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_1_serverAdapterA_s1$D_IN;
	if (ibuffer_1_serverAdapterB_cnt$EN)
	  ibuffer_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_1_serverAdapterB_cnt$D_IN;
	if (ibuffer_1_serverAdapterB_s1$EN)
	  ibuffer_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_1_serverAdapterB_s1$D_IN;
	if (ibuffer_20_serverAdapterA_cnt$EN)
	  ibuffer_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_20_serverAdapterA_cnt$D_IN;
	if (ibuffer_20_serverAdapterA_s1$EN)
	  ibuffer_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_20_serverAdapterA_s1$D_IN;
	if (ibuffer_20_serverAdapterB_cnt$EN)
	  ibuffer_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_20_serverAdapterB_cnt$D_IN;
	if (ibuffer_20_serverAdapterB_s1$EN)
	  ibuffer_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_20_serverAdapterB_s1$D_IN;
	if (ibuffer_21_serverAdapterA_cnt$EN)
	  ibuffer_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_21_serverAdapterA_cnt$D_IN;
	if (ibuffer_21_serverAdapterA_s1$EN)
	  ibuffer_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_21_serverAdapterA_s1$D_IN;
	if (ibuffer_21_serverAdapterB_cnt$EN)
	  ibuffer_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_21_serverAdapterB_cnt$D_IN;
	if (ibuffer_21_serverAdapterB_s1$EN)
	  ibuffer_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_21_serverAdapterB_s1$D_IN;
	if (ibuffer_22_serverAdapterA_cnt$EN)
	  ibuffer_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_22_serverAdapterA_cnt$D_IN;
	if (ibuffer_22_serverAdapterA_s1$EN)
	  ibuffer_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_22_serverAdapterA_s1$D_IN;
	if (ibuffer_22_serverAdapterB_cnt$EN)
	  ibuffer_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_22_serverAdapterB_cnt$D_IN;
	if (ibuffer_22_serverAdapterB_s1$EN)
	  ibuffer_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_22_serverAdapterB_s1$D_IN;
	if (ibuffer_23_serverAdapterA_cnt$EN)
	  ibuffer_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_23_serverAdapterA_cnt$D_IN;
	if (ibuffer_23_serverAdapterA_s1$EN)
	  ibuffer_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_23_serverAdapterA_s1$D_IN;
	if (ibuffer_23_serverAdapterB_cnt$EN)
	  ibuffer_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_23_serverAdapterB_cnt$D_IN;
	if (ibuffer_23_serverAdapterB_s1$EN)
	  ibuffer_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_23_serverAdapterB_s1$D_IN;
	if (ibuffer_24_serverAdapterA_cnt$EN)
	  ibuffer_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_24_serverAdapterA_cnt$D_IN;
	if (ibuffer_24_serverAdapterA_s1$EN)
	  ibuffer_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_24_serverAdapterA_s1$D_IN;
	if (ibuffer_24_serverAdapterB_cnt$EN)
	  ibuffer_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_24_serverAdapterB_cnt$D_IN;
	if (ibuffer_24_serverAdapterB_s1$EN)
	  ibuffer_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_24_serverAdapterB_s1$D_IN;
	if (ibuffer_25_serverAdapterA_cnt$EN)
	  ibuffer_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_25_serverAdapterA_cnt$D_IN;
	if (ibuffer_25_serverAdapterA_s1$EN)
	  ibuffer_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_25_serverAdapterA_s1$D_IN;
	if (ibuffer_25_serverAdapterB_cnt$EN)
	  ibuffer_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_25_serverAdapterB_cnt$D_IN;
	if (ibuffer_25_serverAdapterB_s1$EN)
	  ibuffer_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_25_serverAdapterB_s1$D_IN;
	if (ibuffer_26_serverAdapterA_cnt$EN)
	  ibuffer_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_26_serverAdapterA_cnt$D_IN;
	if (ibuffer_26_serverAdapterA_s1$EN)
	  ibuffer_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_26_serverAdapterA_s1$D_IN;
	if (ibuffer_26_serverAdapterB_cnt$EN)
	  ibuffer_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_26_serverAdapterB_cnt$D_IN;
	if (ibuffer_26_serverAdapterB_s1$EN)
	  ibuffer_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_26_serverAdapterB_s1$D_IN;
	if (ibuffer_27_serverAdapterA_cnt$EN)
	  ibuffer_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_27_serverAdapterA_cnt$D_IN;
	if (ibuffer_27_serverAdapterA_s1$EN)
	  ibuffer_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_27_serverAdapterA_s1$D_IN;
	if (ibuffer_27_serverAdapterB_cnt$EN)
	  ibuffer_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_27_serverAdapterB_cnt$D_IN;
	if (ibuffer_27_serverAdapterB_s1$EN)
	  ibuffer_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_27_serverAdapterB_s1$D_IN;
	if (ibuffer_28_serverAdapterA_cnt$EN)
	  ibuffer_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_28_serverAdapterA_cnt$D_IN;
	if (ibuffer_28_serverAdapterA_s1$EN)
	  ibuffer_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_28_serverAdapterA_s1$D_IN;
	if (ibuffer_28_serverAdapterB_cnt$EN)
	  ibuffer_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_28_serverAdapterB_cnt$D_IN;
	if (ibuffer_28_serverAdapterB_s1$EN)
	  ibuffer_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_28_serverAdapterB_s1$D_IN;
	if (ibuffer_29_serverAdapterA_cnt$EN)
	  ibuffer_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_29_serverAdapterA_cnt$D_IN;
	if (ibuffer_29_serverAdapterA_s1$EN)
	  ibuffer_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_29_serverAdapterA_s1$D_IN;
	if (ibuffer_29_serverAdapterB_cnt$EN)
	  ibuffer_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_29_serverAdapterB_cnt$D_IN;
	if (ibuffer_29_serverAdapterB_s1$EN)
	  ibuffer_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_29_serverAdapterB_s1$D_IN;
	if (ibuffer_2_serverAdapterA_cnt$EN)
	  ibuffer_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_2_serverAdapterA_cnt$D_IN;
	if (ibuffer_2_serverAdapterA_s1$EN)
	  ibuffer_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_2_serverAdapterA_s1$D_IN;
	if (ibuffer_2_serverAdapterB_cnt$EN)
	  ibuffer_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_2_serverAdapterB_cnt$D_IN;
	if (ibuffer_2_serverAdapterB_s1$EN)
	  ibuffer_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_2_serverAdapterB_s1$D_IN;
	if (ibuffer_30_serverAdapterA_cnt$EN)
	  ibuffer_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_30_serverAdapterA_cnt$D_IN;
	if (ibuffer_30_serverAdapterA_s1$EN)
	  ibuffer_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_30_serverAdapterA_s1$D_IN;
	if (ibuffer_30_serverAdapterB_cnt$EN)
	  ibuffer_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_30_serverAdapterB_cnt$D_IN;
	if (ibuffer_30_serverAdapterB_s1$EN)
	  ibuffer_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_30_serverAdapterB_s1$D_IN;
	if (ibuffer_31_serverAdapterA_cnt$EN)
	  ibuffer_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_31_serverAdapterA_cnt$D_IN;
	if (ibuffer_31_serverAdapterA_s1$EN)
	  ibuffer_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_31_serverAdapterA_s1$D_IN;
	if (ibuffer_31_serverAdapterB_cnt$EN)
	  ibuffer_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_31_serverAdapterB_cnt$D_IN;
	if (ibuffer_31_serverAdapterB_s1$EN)
	  ibuffer_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_31_serverAdapterB_s1$D_IN;
	if (ibuffer_3_serverAdapterA_cnt$EN)
	  ibuffer_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_3_serverAdapterA_cnt$D_IN;
	if (ibuffer_3_serverAdapterA_s1$EN)
	  ibuffer_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_3_serverAdapterA_s1$D_IN;
	if (ibuffer_3_serverAdapterB_cnt$EN)
	  ibuffer_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_3_serverAdapterB_cnt$D_IN;
	if (ibuffer_3_serverAdapterB_s1$EN)
	  ibuffer_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_3_serverAdapterB_s1$D_IN;
	if (ibuffer_4_serverAdapterA_cnt$EN)
	  ibuffer_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_4_serverAdapterA_cnt$D_IN;
	if (ibuffer_4_serverAdapterA_s1$EN)
	  ibuffer_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_4_serverAdapterA_s1$D_IN;
	if (ibuffer_4_serverAdapterB_cnt$EN)
	  ibuffer_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_4_serverAdapterB_cnt$D_IN;
	if (ibuffer_4_serverAdapterB_s1$EN)
	  ibuffer_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_4_serverAdapterB_s1$D_IN;
	if (ibuffer_5_serverAdapterA_cnt$EN)
	  ibuffer_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_5_serverAdapterA_cnt$D_IN;
	if (ibuffer_5_serverAdapterA_s1$EN)
	  ibuffer_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_5_serverAdapterA_s1$D_IN;
	if (ibuffer_5_serverAdapterB_cnt$EN)
	  ibuffer_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_5_serverAdapterB_cnt$D_IN;
	if (ibuffer_5_serverAdapterB_s1$EN)
	  ibuffer_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_5_serverAdapterB_s1$D_IN;
	if (ibuffer_6_serverAdapterA_cnt$EN)
	  ibuffer_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_6_serverAdapterA_cnt$D_IN;
	if (ibuffer_6_serverAdapterA_s1$EN)
	  ibuffer_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_6_serverAdapterA_s1$D_IN;
	if (ibuffer_6_serverAdapterB_cnt$EN)
	  ibuffer_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_6_serverAdapterB_cnt$D_IN;
	if (ibuffer_6_serverAdapterB_s1$EN)
	  ibuffer_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_6_serverAdapterB_s1$D_IN;
	if (ibuffer_7_serverAdapterA_cnt$EN)
	  ibuffer_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_7_serverAdapterA_cnt$D_IN;
	if (ibuffer_7_serverAdapterA_s1$EN)
	  ibuffer_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_7_serverAdapterA_s1$D_IN;
	if (ibuffer_7_serverAdapterB_cnt$EN)
	  ibuffer_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_7_serverAdapterB_cnt$D_IN;
	if (ibuffer_7_serverAdapterB_s1$EN)
	  ibuffer_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_7_serverAdapterB_s1$D_IN;
	if (ibuffer_8_serverAdapterA_cnt$EN)
	  ibuffer_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_8_serverAdapterA_cnt$D_IN;
	if (ibuffer_8_serverAdapterA_s1$EN)
	  ibuffer_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_8_serverAdapterA_s1$D_IN;
	if (ibuffer_8_serverAdapterB_cnt$EN)
	  ibuffer_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_8_serverAdapterB_cnt$D_IN;
	if (ibuffer_8_serverAdapterB_s1$EN)
	  ibuffer_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_8_serverAdapterB_s1$D_IN;
	if (ibuffer_9_serverAdapterA_cnt$EN)
	  ibuffer_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_9_serverAdapterA_cnt$D_IN;
	if (ibuffer_9_serverAdapterA_s1$EN)
	  ibuffer_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_9_serverAdapterA_s1$D_IN;
	if (ibuffer_9_serverAdapterB_cnt$EN)
	  ibuffer_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_9_serverAdapterB_cnt$D_IN;
	if (ibuffer_9_serverAdapterB_s1$EN)
	  ibuffer_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      ibuffer_9_serverAdapterB_s1$D_IN;
	if (obuffer1_0_serverAdapterA_cnt$EN)
	  obuffer1_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_0_serverAdapterA_cnt$D_IN;
	if (obuffer1_0_serverAdapterA_s1$EN)
	  obuffer1_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_0_serverAdapterA_s1$D_IN;
	if (obuffer1_0_serverAdapterB_cnt$EN)
	  obuffer1_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_0_serverAdapterB_cnt$D_IN;
	if (obuffer1_0_serverAdapterB_s1$EN)
	  obuffer1_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_0_serverAdapterB_s1$D_IN;
	if (obuffer1_10_serverAdapterA_cnt$EN)
	  obuffer1_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_10_serverAdapterA_cnt$D_IN;
	if (obuffer1_10_serverAdapterA_s1$EN)
	  obuffer1_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_10_serverAdapterA_s1$D_IN;
	if (obuffer1_10_serverAdapterB_cnt$EN)
	  obuffer1_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_10_serverAdapterB_cnt$D_IN;
	if (obuffer1_10_serverAdapterB_s1$EN)
	  obuffer1_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_10_serverAdapterB_s1$D_IN;
	if (obuffer1_11_serverAdapterA_cnt$EN)
	  obuffer1_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_11_serverAdapterA_cnt$D_IN;
	if (obuffer1_11_serverAdapterA_s1$EN)
	  obuffer1_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_11_serverAdapterA_s1$D_IN;
	if (obuffer1_11_serverAdapterB_cnt$EN)
	  obuffer1_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_11_serverAdapterB_cnt$D_IN;
	if (obuffer1_11_serverAdapterB_s1$EN)
	  obuffer1_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_11_serverAdapterB_s1$D_IN;
	if (obuffer1_12_serverAdapterA_cnt$EN)
	  obuffer1_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_12_serverAdapterA_cnt$D_IN;
	if (obuffer1_12_serverAdapterA_s1$EN)
	  obuffer1_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_12_serverAdapterA_s1$D_IN;
	if (obuffer1_12_serverAdapterB_cnt$EN)
	  obuffer1_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_12_serverAdapterB_cnt$D_IN;
	if (obuffer1_12_serverAdapterB_s1$EN)
	  obuffer1_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_12_serverAdapterB_s1$D_IN;
	if (obuffer1_13_serverAdapterA_cnt$EN)
	  obuffer1_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_13_serverAdapterA_cnt$D_IN;
	if (obuffer1_13_serverAdapterA_s1$EN)
	  obuffer1_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_13_serverAdapterA_s1$D_IN;
	if (obuffer1_13_serverAdapterB_cnt$EN)
	  obuffer1_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_13_serverAdapterB_cnt$D_IN;
	if (obuffer1_13_serverAdapterB_s1$EN)
	  obuffer1_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_13_serverAdapterB_s1$D_IN;
	if (obuffer1_14_serverAdapterA_cnt$EN)
	  obuffer1_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_14_serverAdapterA_cnt$D_IN;
	if (obuffer1_14_serverAdapterA_s1$EN)
	  obuffer1_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_14_serverAdapterA_s1$D_IN;
	if (obuffer1_14_serverAdapterB_cnt$EN)
	  obuffer1_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_14_serverAdapterB_cnt$D_IN;
	if (obuffer1_14_serverAdapterB_s1$EN)
	  obuffer1_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_14_serverAdapterB_s1$D_IN;
	if (obuffer1_15_serverAdapterA_cnt$EN)
	  obuffer1_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_15_serverAdapterA_cnt$D_IN;
	if (obuffer1_15_serverAdapterA_s1$EN)
	  obuffer1_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_15_serverAdapterA_s1$D_IN;
	if (obuffer1_15_serverAdapterB_cnt$EN)
	  obuffer1_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_15_serverAdapterB_cnt$D_IN;
	if (obuffer1_15_serverAdapterB_s1$EN)
	  obuffer1_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_15_serverAdapterB_s1$D_IN;
	if (obuffer1_16_serverAdapterA_cnt$EN)
	  obuffer1_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_16_serverAdapterA_cnt$D_IN;
	if (obuffer1_16_serverAdapterA_s1$EN)
	  obuffer1_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_16_serverAdapterA_s1$D_IN;
	if (obuffer1_16_serverAdapterB_cnt$EN)
	  obuffer1_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_16_serverAdapterB_cnt$D_IN;
	if (obuffer1_16_serverAdapterB_s1$EN)
	  obuffer1_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_16_serverAdapterB_s1$D_IN;
	if (obuffer1_17_serverAdapterA_cnt$EN)
	  obuffer1_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_17_serverAdapterA_cnt$D_IN;
	if (obuffer1_17_serverAdapterA_s1$EN)
	  obuffer1_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_17_serverAdapterA_s1$D_IN;
	if (obuffer1_17_serverAdapterB_cnt$EN)
	  obuffer1_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_17_serverAdapterB_cnt$D_IN;
	if (obuffer1_17_serverAdapterB_s1$EN)
	  obuffer1_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_17_serverAdapterB_s1$D_IN;
	if (obuffer1_18_serverAdapterA_cnt$EN)
	  obuffer1_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_18_serverAdapterA_cnt$D_IN;
	if (obuffer1_18_serverAdapterA_s1$EN)
	  obuffer1_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_18_serverAdapterA_s1$D_IN;
	if (obuffer1_18_serverAdapterB_cnt$EN)
	  obuffer1_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_18_serverAdapterB_cnt$D_IN;
	if (obuffer1_18_serverAdapterB_s1$EN)
	  obuffer1_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_18_serverAdapterB_s1$D_IN;
	if (obuffer1_19_serverAdapterA_cnt$EN)
	  obuffer1_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_19_serverAdapterA_cnt$D_IN;
	if (obuffer1_19_serverAdapterA_s1$EN)
	  obuffer1_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_19_serverAdapterA_s1$D_IN;
	if (obuffer1_19_serverAdapterB_cnt$EN)
	  obuffer1_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_19_serverAdapterB_cnt$D_IN;
	if (obuffer1_19_serverAdapterB_s1$EN)
	  obuffer1_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_19_serverAdapterB_s1$D_IN;
	if (obuffer1_1_serverAdapterA_cnt$EN)
	  obuffer1_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_1_serverAdapterA_cnt$D_IN;
	if (obuffer1_1_serverAdapterA_s1$EN)
	  obuffer1_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_1_serverAdapterA_s1$D_IN;
	if (obuffer1_1_serverAdapterB_cnt$EN)
	  obuffer1_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_1_serverAdapterB_cnt$D_IN;
	if (obuffer1_1_serverAdapterB_s1$EN)
	  obuffer1_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_1_serverAdapterB_s1$D_IN;
	if (obuffer1_20_serverAdapterA_cnt$EN)
	  obuffer1_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_20_serverAdapterA_cnt$D_IN;
	if (obuffer1_20_serverAdapterA_s1$EN)
	  obuffer1_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_20_serverAdapterA_s1$D_IN;
	if (obuffer1_20_serverAdapterB_cnt$EN)
	  obuffer1_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_20_serverAdapterB_cnt$D_IN;
	if (obuffer1_20_serverAdapterB_s1$EN)
	  obuffer1_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_20_serverAdapterB_s1$D_IN;
	if (obuffer1_21_serverAdapterA_cnt$EN)
	  obuffer1_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_21_serverAdapterA_cnt$D_IN;
	if (obuffer1_21_serverAdapterA_s1$EN)
	  obuffer1_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_21_serverAdapterA_s1$D_IN;
	if (obuffer1_21_serverAdapterB_cnt$EN)
	  obuffer1_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_21_serverAdapterB_cnt$D_IN;
	if (obuffer1_21_serverAdapterB_s1$EN)
	  obuffer1_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_21_serverAdapterB_s1$D_IN;
	if (obuffer1_22_serverAdapterA_cnt$EN)
	  obuffer1_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_22_serverAdapterA_cnt$D_IN;
	if (obuffer1_22_serverAdapterA_s1$EN)
	  obuffer1_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_22_serverAdapterA_s1$D_IN;
	if (obuffer1_22_serverAdapterB_cnt$EN)
	  obuffer1_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_22_serverAdapterB_cnt$D_IN;
	if (obuffer1_22_serverAdapterB_s1$EN)
	  obuffer1_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_22_serverAdapterB_s1$D_IN;
	if (obuffer1_23_serverAdapterA_cnt$EN)
	  obuffer1_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_23_serverAdapterA_cnt$D_IN;
	if (obuffer1_23_serverAdapterA_s1$EN)
	  obuffer1_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_23_serverAdapterA_s1$D_IN;
	if (obuffer1_23_serverAdapterB_cnt$EN)
	  obuffer1_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_23_serverAdapterB_cnt$D_IN;
	if (obuffer1_23_serverAdapterB_s1$EN)
	  obuffer1_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_23_serverAdapterB_s1$D_IN;
	if (obuffer1_24_serverAdapterA_cnt$EN)
	  obuffer1_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_24_serverAdapterA_cnt$D_IN;
	if (obuffer1_24_serverAdapterA_s1$EN)
	  obuffer1_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_24_serverAdapterA_s1$D_IN;
	if (obuffer1_24_serverAdapterB_cnt$EN)
	  obuffer1_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_24_serverAdapterB_cnt$D_IN;
	if (obuffer1_24_serverAdapterB_s1$EN)
	  obuffer1_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_24_serverAdapterB_s1$D_IN;
	if (obuffer1_25_serverAdapterA_cnt$EN)
	  obuffer1_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_25_serverAdapterA_cnt$D_IN;
	if (obuffer1_25_serverAdapterA_s1$EN)
	  obuffer1_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_25_serverAdapterA_s1$D_IN;
	if (obuffer1_25_serverAdapterB_cnt$EN)
	  obuffer1_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_25_serverAdapterB_cnt$D_IN;
	if (obuffer1_25_serverAdapterB_s1$EN)
	  obuffer1_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_25_serverAdapterB_s1$D_IN;
	if (obuffer1_26_serverAdapterA_cnt$EN)
	  obuffer1_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_26_serverAdapterA_cnt$D_IN;
	if (obuffer1_26_serverAdapterA_s1$EN)
	  obuffer1_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_26_serverAdapterA_s1$D_IN;
	if (obuffer1_26_serverAdapterB_cnt$EN)
	  obuffer1_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_26_serverAdapterB_cnt$D_IN;
	if (obuffer1_26_serverAdapterB_s1$EN)
	  obuffer1_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_26_serverAdapterB_s1$D_IN;
	if (obuffer1_27_serverAdapterA_cnt$EN)
	  obuffer1_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_27_serverAdapterA_cnt$D_IN;
	if (obuffer1_27_serverAdapterA_s1$EN)
	  obuffer1_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_27_serverAdapterA_s1$D_IN;
	if (obuffer1_27_serverAdapterB_cnt$EN)
	  obuffer1_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_27_serverAdapterB_cnt$D_IN;
	if (obuffer1_27_serverAdapterB_s1$EN)
	  obuffer1_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_27_serverAdapterB_s1$D_IN;
	if (obuffer1_28_serverAdapterA_cnt$EN)
	  obuffer1_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_28_serverAdapterA_cnt$D_IN;
	if (obuffer1_28_serverAdapterA_s1$EN)
	  obuffer1_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_28_serverAdapterA_s1$D_IN;
	if (obuffer1_28_serverAdapterB_cnt$EN)
	  obuffer1_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_28_serverAdapterB_cnt$D_IN;
	if (obuffer1_28_serverAdapterB_s1$EN)
	  obuffer1_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_28_serverAdapterB_s1$D_IN;
	if (obuffer1_29_serverAdapterA_cnt$EN)
	  obuffer1_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_29_serverAdapterA_cnt$D_IN;
	if (obuffer1_29_serverAdapterA_s1$EN)
	  obuffer1_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_29_serverAdapterA_s1$D_IN;
	if (obuffer1_29_serverAdapterB_cnt$EN)
	  obuffer1_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_29_serverAdapterB_cnt$D_IN;
	if (obuffer1_29_serverAdapterB_s1$EN)
	  obuffer1_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_29_serverAdapterB_s1$D_IN;
	if (obuffer1_2_serverAdapterA_cnt$EN)
	  obuffer1_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_2_serverAdapterA_cnt$D_IN;
	if (obuffer1_2_serverAdapterA_s1$EN)
	  obuffer1_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_2_serverAdapterA_s1$D_IN;
	if (obuffer1_2_serverAdapterB_cnt$EN)
	  obuffer1_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_2_serverAdapterB_cnt$D_IN;
	if (obuffer1_2_serverAdapterB_s1$EN)
	  obuffer1_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_2_serverAdapterB_s1$D_IN;
	if (obuffer1_30_serverAdapterA_cnt$EN)
	  obuffer1_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_30_serverAdapterA_cnt$D_IN;
	if (obuffer1_30_serverAdapterA_s1$EN)
	  obuffer1_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_30_serverAdapterA_s1$D_IN;
	if (obuffer1_30_serverAdapterB_cnt$EN)
	  obuffer1_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_30_serverAdapterB_cnt$D_IN;
	if (obuffer1_30_serverAdapterB_s1$EN)
	  obuffer1_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_30_serverAdapterB_s1$D_IN;
	if (obuffer1_31_serverAdapterA_cnt$EN)
	  obuffer1_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_31_serverAdapterA_cnt$D_IN;
	if (obuffer1_31_serverAdapterA_s1$EN)
	  obuffer1_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_31_serverAdapterA_s1$D_IN;
	if (obuffer1_31_serverAdapterB_cnt$EN)
	  obuffer1_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_31_serverAdapterB_cnt$D_IN;
	if (obuffer1_31_serverAdapterB_s1$EN)
	  obuffer1_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_31_serverAdapterB_s1$D_IN;
	if (obuffer1_3_serverAdapterA_cnt$EN)
	  obuffer1_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_3_serverAdapterA_cnt$D_IN;
	if (obuffer1_3_serverAdapterA_s1$EN)
	  obuffer1_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_3_serverAdapterA_s1$D_IN;
	if (obuffer1_3_serverAdapterB_cnt$EN)
	  obuffer1_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_3_serverAdapterB_cnt$D_IN;
	if (obuffer1_3_serverAdapterB_s1$EN)
	  obuffer1_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_3_serverAdapterB_s1$D_IN;
	if (obuffer1_4_serverAdapterA_cnt$EN)
	  obuffer1_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_4_serverAdapterA_cnt$D_IN;
	if (obuffer1_4_serverAdapterA_s1$EN)
	  obuffer1_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_4_serverAdapterA_s1$D_IN;
	if (obuffer1_4_serverAdapterB_cnt$EN)
	  obuffer1_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_4_serverAdapterB_cnt$D_IN;
	if (obuffer1_4_serverAdapterB_s1$EN)
	  obuffer1_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_4_serverAdapterB_s1$D_IN;
	if (obuffer1_5_serverAdapterA_cnt$EN)
	  obuffer1_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_5_serverAdapterA_cnt$D_IN;
	if (obuffer1_5_serverAdapterA_s1$EN)
	  obuffer1_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_5_serverAdapterA_s1$D_IN;
	if (obuffer1_5_serverAdapterB_cnt$EN)
	  obuffer1_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_5_serverAdapterB_cnt$D_IN;
	if (obuffer1_5_serverAdapterB_s1$EN)
	  obuffer1_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_5_serverAdapterB_s1$D_IN;
	if (obuffer1_6_serverAdapterA_cnt$EN)
	  obuffer1_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_6_serverAdapterA_cnt$D_IN;
	if (obuffer1_6_serverAdapterA_s1$EN)
	  obuffer1_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_6_serverAdapterA_s1$D_IN;
	if (obuffer1_6_serverAdapterB_cnt$EN)
	  obuffer1_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_6_serverAdapterB_cnt$D_IN;
	if (obuffer1_6_serverAdapterB_s1$EN)
	  obuffer1_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_6_serverAdapterB_s1$D_IN;
	if (obuffer1_7_serverAdapterA_cnt$EN)
	  obuffer1_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_7_serverAdapterA_cnt$D_IN;
	if (obuffer1_7_serverAdapterA_s1$EN)
	  obuffer1_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_7_serverAdapterA_s1$D_IN;
	if (obuffer1_7_serverAdapterB_cnt$EN)
	  obuffer1_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_7_serverAdapterB_cnt$D_IN;
	if (obuffer1_7_serverAdapterB_s1$EN)
	  obuffer1_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_7_serverAdapterB_s1$D_IN;
	if (obuffer1_8_serverAdapterA_cnt$EN)
	  obuffer1_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_8_serverAdapterA_cnt$D_IN;
	if (obuffer1_8_serverAdapterA_s1$EN)
	  obuffer1_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_8_serverAdapterA_s1$D_IN;
	if (obuffer1_8_serverAdapterB_cnt$EN)
	  obuffer1_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_8_serverAdapterB_cnt$D_IN;
	if (obuffer1_8_serverAdapterB_s1$EN)
	  obuffer1_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_8_serverAdapterB_s1$D_IN;
	if (obuffer1_9_serverAdapterA_cnt$EN)
	  obuffer1_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_9_serverAdapterA_cnt$D_IN;
	if (obuffer1_9_serverAdapterA_s1$EN)
	  obuffer1_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_9_serverAdapterA_s1$D_IN;
	if (obuffer1_9_serverAdapterB_cnt$EN)
	  obuffer1_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_9_serverAdapterB_cnt$D_IN;
	if (obuffer1_9_serverAdapterB_s1$EN)
	  obuffer1_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer1_9_serverAdapterB_s1$D_IN;
	if (obuffer2_0_serverAdapterA_cnt$EN)
	  obuffer2_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_0_serverAdapterA_cnt$D_IN;
	if (obuffer2_0_serverAdapterA_s1$EN)
	  obuffer2_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_0_serverAdapterA_s1$D_IN;
	if (obuffer2_0_serverAdapterB_cnt$EN)
	  obuffer2_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_0_serverAdapterB_cnt$D_IN;
	if (obuffer2_0_serverAdapterB_s1$EN)
	  obuffer2_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_0_serverAdapterB_s1$D_IN;
	if (obuffer2_10_serverAdapterA_cnt$EN)
	  obuffer2_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_10_serverAdapterA_cnt$D_IN;
	if (obuffer2_10_serverAdapterA_s1$EN)
	  obuffer2_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_10_serverAdapterA_s1$D_IN;
	if (obuffer2_10_serverAdapterB_cnt$EN)
	  obuffer2_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_10_serverAdapterB_cnt$D_IN;
	if (obuffer2_10_serverAdapterB_s1$EN)
	  obuffer2_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_10_serverAdapterB_s1$D_IN;
	if (obuffer2_11_serverAdapterA_cnt$EN)
	  obuffer2_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_11_serverAdapterA_cnt$D_IN;
	if (obuffer2_11_serverAdapterA_s1$EN)
	  obuffer2_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_11_serverAdapterA_s1$D_IN;
	if (obuffer2_11_serverAdapterB_cnt$EN)
	  obuffer2_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_11_serverAdapterB_cnt$D_IN;
	if (obuffer2_11_serverAdapterB_s1$EN)
	  obuffer2_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_11_serverAdapterB_s1$D_IN;
	if (obuffer2_12_serverAdapterA_cnt$EN)
	  obuffer2_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_12_serverAdapterA_cnt$D_IN;
	if (obuffer2_12_serverAdapterA_s1$EN)
	  obuffer2_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_12_serverAdapterA_s1$D_IN;
	if (obuffer2_12_serverAdapterB_cnt$EN)
	  obuffer2_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_12_serverAdapterB_cnt$D_IN;
	if (obuffer2_12_serverAdapterB_s1$EN)
	  obuffer2_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_12_serverAdapterB_s1$D_IN;
	if (obuffer2_13_serverAdapterA_cnt$EN)
	  obuffer2_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_13_serverAdapterA_cnt$D_IN;
	if (obuffer2_13_serverAdapterA_s1$EN)
	  obuffer2_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_13_serverAdapterA_s1$D_IN;
	if (obuffer2_13_serverAdapterB_cnt$EN)
	  obuffer2_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_13_serverAdapterB_cnt$D_IN;
	if (obuffer2_13_serverAdapterB_s1$EN)
	  obuffer2_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_13_serverAdapterB_s1$D_IN;
	if (obuffer2_14_serverAdapterA_cnt$EN)
	  obuffer2_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_14_serverAdapterA_cnt$D_IN;
	if (obuffer2_14_serverAdapterA_s1$EN)
	  obuffer2_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_14_serverAdapterA_s1$D_IN;
	if (obuffer2_14_serverAdapterB_cnt$EN)
	  obuffer2_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_14_serverAdapterB_cnt$D_IN;
	if (obuffer2_14_serverAdapterB_s1$EN)
	  obuffer2_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_14_serverAdapterB_s1$D_IN;
	if (obuffer2_15_serverAdapterA_cnt$EN)
	  obuffer2_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_15_serverAdapterA_cnt$D_IN;
	if (obuffer2_15_serverAdapterA_s1$EN)
	  obuffer2_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_15_serverAdapterA_s1$D_IN;
	if (obuffer2_15_serverAdapterB_cnt$EN)
	  obuffer2_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_15_serverAdapterB_cnt$D_IN;
	if (obuffer2_15_serverAdapterB_s1$EN)
	  obuffer2_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_15_serverAdapterB_s1$D_IN;
	if (obuffer2_16_serverAdapterA_cnt$EN)
	  obuffer2_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_16_serverAdapterA_cnt$D_IN;
	if (obuffer2_16_serverAdapterA_s1$EN)
	  obuffer2_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_16_serverAdapterA_s1$D_IN;
	if (obuffer2_16_serverAdapterB_cnt$EN)
	  obuffer2_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_16_serverAdapterB_cnt$D_IN;
	if (obuffer2_16_serverAdapterB_s1$EN)
	  obuffer2_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_16_serverAdapterB_s1$D_IN;
	if (obuffer2_17_serverAdapterA_cnt$EN)
	  obuffer2_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_17_serverAdapterA_cnt$D_IN;
	if (obuffer2_17_serverAdapterA_s1$EN)
	  obuffer2_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_17_serverAdapterA_s1$D_IN;
	if (obuffer2_17_serverAdapterB_cnt$EN)
	  obuffer2_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_17_serverAdapterB_cnt$D_IN;
	if (obuffer2_17_serverAdapterB_s1$EN)
	  obuffer2_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_17_serverAdapterB_s1$D_IN;
	if (obuffer2_18_serverAdapterA_cnt$EN)
	  obuffer2_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_18_serverAdapterA_cnt$D_IN;
	if (obuffer2_18_serverAdapterA_s1$EN)
	  obuffer2_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_18_serverAdapterA_s1$D_IN;
	if (obuffer2_18_serverAdapterB_cnt$EN)
	  obuffer2_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_18_serverAdapterB_cnt$D_IN;
	if (obuffer2_18_serverAdapterB_s1$EN)
	  obuffer2_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_18_serverAdapterB_s1$D_IN;
	if (obuffer2_19_serverAdapterA_cnt$EN)
	  obuffer2_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_19_serverAdapterA_cnt$D_IN;
	if (obuffer2_19_serverAdapterA_s1$EN)
	  obuffer2_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_19_serverAdapterA_s1$D_IN;
	if (obuffer2_19_serverAdapterB_cnt$EN)
	  obuffer2_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_19_serverAdapterB_cnt$D_IN;
	if (obuffer2_19_serverAdapterB_s1$EN)
	  obuffer2_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_19_serverAdapterB_s1$D_IN;
	if (obuffer2_1_serverAdapterA_cnt$EN)
	  obuffer2_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_1_serverAdapterA_cnt$D_IN;
	if (obuffer2_1_serverAdapterA_s1$EN)
	  obuffer2_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_1_serverAdapterA_s1$D_IN;
	if (obuffer2_1_serverAdapterB_cnt$EN)
	  obuffer2_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_1_serverAdapterB_cnt$D_IN;
	if (obuffer2_1_serverAdapterB_s1$EN)
	  obuffer2_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_1_serverAdapterB_s1$D_IN;
	if (obuffer2_20_serverAdapterA_cnt$EN)
	  obuffer2_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_20_serverAdapterA_cnt$D_IN;
	if (obuffer2_20_serverAdapterA_s1$EN)
	  obuffer2_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_20_serverAdapterA_s1$D_IN;
	if (obuffer2_20_serverAdapterB_cnt$EN)
	  obuffer2_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_20_serverAdapterB_cnt$D_IN;
	if (obuffer2_20_serverAdapterB_s1$EN)
	  obuffer2_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_20_serverAdapterB_s1$D_IN;
	if (obuffer2_21_serverAdapterA_cnt$EN)
	  obuffer2_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_21_serverAdapterA_cnt$D_IN;
	if (obuffer2_21_serverAdapterA_s1$EN)
	  obuffer2_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_21_serverAdapterA_s1$D_IN;
	if (obuffer2_21_serverAdapterB_cnt$EN)
	  obuffer2_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_21_serverAdapterB_cnt$D_IN;
	if (obuffer2_21_serverAdapterB_s1$EN)
	  obuffer2_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_21_serverAdapterB_s1$D_IN;
	if (obuffer2_22_serverAdapterA_cnt$EN)
	  obuffer2_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_22_serverAdapterA_cnt$D_IN;
	if (obuffer2_22_serverAdapterA_s1$EN)
	  obuffer2_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_22_serverAdapterA_s1$D_IN;
	if (obuffer2_22_serverAdapterB_cnt$EN)
	  obuffer2_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_22_serverAdapterB_cnt$D_IN;
	if (obuffer2_22_serverAdapterB_s1$EN)
	  obuffer2_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_22_serverAdapterB_s1$D_IN;
	if (obuffer2_23_serverAdapterA_cnt$EN)
	  obuffer2_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_23_serverAdapterA_cnt$D_IN;
	if (obuffer2_23_serverAdapterA_s1$EN)
	  obuffer2_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_23_serverAdapterA_s1$D_IN;
	if (obuffer2_23_serverAdapterB_cnt$EN)
	  obuffer2_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_23_serverAdapterB_cnt$D_IN;
	if (obuffer2_23_serverAdapterB_s1$EN)
	  obuffer2_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_23_serverAdapterB_s1$D_IN;
	if (obuffer2_24_serverAdapterA_cnt$EN)
	  obuffer2_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_24_serverAdapterA_cnt$D_IN;
	if (obuffer2_24_serverAdapterA_s1$EN)
	  obuffer2_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_24_serverAdapterA_s1$D_IN;
	if (obuffer2_24_serverAdapterB_cnt$EN)
	  obuffer2_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_24_serverAdapterB_cnt$D_IN;
	if (obuffer2_24_serverAdapterB_s1$EN)
	  obuffer2_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_24_serverAdapterB_s1$D_IN;
	if (obuffer2_25_serverAdapterA_cnt$EN)
	  obuffer2_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_25_serverAdapterA_cnt$D_IN;
	if (obuffer2_25_serverAdapterA_s1$EN)
	  obuffer2_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_25_serverAdapterA_s1$D_IN;
	if (obuffer2_25_serverAdapterB_cnt$EN)
	  obuffer2_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_25_serverAdapterB_cnt$D_IN;
	if (obuffer2_25_serverAdapterB_s1$EN)
	  obuffer2_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_25_serverAdapterB_s1$D_IN;
	if (obuffer2_26_serverAdapterA_cnt$EN)
	  obuffer2_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_26_serverAdapterA_cnt$D_IN;
	if (obuffer2_26_serverAdapterA_s1$EN)
	  obuffer2_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_26_serverAdapterA_s1$D_IN;
	if (obuffer2_26_serverAdapterB_cnt$EN)
	  obuffer2_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_26_serverAdapterB_cnt$D_IN;
	if (obuffer2_26_serverAdapterB_s1$EN)
	  obuffer2_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_26_serverAdapterB_s1$D_IN;
	if (obuffer2_27_serverAdapterA_cnt$EN)
	  obuffer2_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_27_serverAdapterA_cnt$D_IN;
	if (obuffer2_27_serverAdapterA_s1$EN)
	  obuffer2_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_27_serverAdapterA_s1$D_IN;
	if (obuffer2_27_serverAdapterB_cnt$EN)
	  obuffer2_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_27_serverAdapterB_cnt$D_IN;
	if (obuffer2_27_serverAdapterB_s1$EN)
	  obuffer2_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_27_serverAdapterB_s1$D_IN;
	if (obuffer2_28_serverAdapterA_cnt$EN)
	  obuffer2_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_28_serverAdapterA_cnt$D_IN;
	if (obuffer2_28_serverAdapterA_s1$EN)
	  obuffer2_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_28_serverAdapterA_s1$D_IN;
	if (obuffer2_28_serverAdapterB_cnt$EN)
	  obuffer2_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_28_serverAdapterB_cnt$D_IN;
	if (obuffer2_28_serverAdapterB_s1$EN)
	  obuffer2_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_28_serverAdapterB_s1$D_IN;
	if (obuffer2_29_serverAdapterA_cnt$EN)
	  obuffer2_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_29_serverAdapterA_cnt$D_IN;
	if (obuffer2_29_serverAdapterA_s1$EN)
	  obuffer2_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_29_serverAdapterA_s1$D_IN;
	if (obuffer2_29_serverAdapterB_cnt$EN)
	  obuffer2_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_29_serverAdapterB_cnt$D_IN;
	if (obuffer2_29_serverAdapterB_s1$EN)
	  obuffer2_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_29_serverAdapterB_s1$D_IN;
	if (obuffer2_2_serverAdapterA_cnt$EN)
	  obuffer2_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_2_serverAdapterA_cnt$D_IN;
	if (obuffer2_2_serverAdapterA_s1$EN)
	  obuffer2_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_2_serverAdapterA_s1$D_IN;
	if (obuffer2_2_serverAdapterB_cnt$EN)
	  obuffer2_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_2_serverAdapterB_cnt$D_IN;
	if (obuffer2_2_serverAdapterB_s1$EN)
	  obuffer2_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_2_serverAdapterB_s1$D_IN;
	if (obuffer2_30_serverAdapterA_cnt$EN)
	  obuffer2_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_30_serverAdapterA_cnt$D_IN;
	if (obuffer2_30_serverAdapterA_s1$EN)
	  obuffer2_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_30_serverAdapterA_s1$D_IN;
	if (obuffer2_30_serverAdapterB_cnt$EN)
	  obuffer2_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_30_serverAdapterB_cnt$D_IN;
	if (obuffer2_30_serverAdapterB_s1$EN)
	  obuffer2_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_30_serverAdapterB_s1$D_IN;
	if (obuffer2_31_serverAdapterA_cnt$EN)
	  obuffer2_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_31_serverAdapterA_cnt$D_IN;
	if (obuffer2_31_serverAdapterA_s1$EN)
	  obuffer2_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_31_serverAdapterA_s1$D_IN;
	if (obuffer2_31_serverAdapterB_cnt$EN)
	  obuffer2_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_31_serverAdapterB_cnt$D_IN;
	if (obuffer2_31_serverAdapterB_s1$EN)
	  obuffer2_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_31_serverAdapterB_s1$D_IN;
	if (obuffer2_3_serverAdapterA_cnt$EN)
	  obuffer2_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_3_serverAdapterA_cnt$D_IN;
	if (obuffer2_3_serverAdapterA_s1$EN)
	  obuffer2_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_3_serverAdapterA_s1$D_IN;
	if (obuffer2_3_serverAdapterB_cnt$EN)
	  obuffer2_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_3_serverAdapterB_cnt$D_IN;
	if (obuffer2_3_serverAdapterB_s1$EN)
	  obuffer2_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_3_serverAdapterB_s1$D_IN;
	if (obuffer2_4_serverAdapterA_cnt$EN)
	  obuffer2_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_4_serverAdapterA_cnt$D_IN;
	if (obuffer2_4_serverAdapterA_s1$EN)
	  obuffer2_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_4_serverAdapterA_s1$D_IN;
	if (obuffer2_4_serverAdapterB_cnt$EN)
	  obuffer2_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_4_serverAdapterB_cnt$D_IN;
	if (obuffer2_4_serverAdapterB_s1$EN)
	  obuffer2_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_4_serverAdapterB_s1$D_IN;
	if (obuffer2_5_serverAdapterA_cnt$EN)
	  obuffer2_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_5_serverAdapterA_cnt$D_IN;
	if (obuffer2_5_serverAdapterA_s1$EN)
	  obuffer2_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_5_serverAdapterA_s1$D_IN;
	if (obuffer2_5_serverAdapterB_cnt$EN)
	  obuffer2_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_5_serverAdapterB_cnt$D_IN;
	if (obuffer2_5_serverAdapterB_s1$EN)
	  obuffer2_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_5_serverAdapterB_s1$D_IN;
	if (obuffer2_6_serverAdapterA_cnt$EN)
	  obuffer2_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_6_serverAdapterA_cnt$D_IN;
	if (obuffer2_6_serverAdapterA_s1$EN)
	  obuffer2_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_6_serverAdapterA_s1$D_IN;
	if (obuffer2_6_serverAdapterB_cnt$EN)
	  obuffer2_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_6_serverAdapterB_cnt$D_IN;
	if (obuffer2_6_serverAdapterB_s1$EN)
	  obuffer2_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_6_serverAdapterB_s1$D_IN;
	if (obuffer2_7_serverAdapterA_cnt$EN)
	  obuffer2_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_7_serverAdapterA_cnt$D_IN;
	if (obuffer2_7_serverAdapterA_s1$EN)
	  obuffer2_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_7_serverAdapterA_s1$D_IN;
	if (obuffer2_7_serverAdapterB_cnt$EN)
	  obuffer2_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_7_serverAdapterB_cnt$D_IN;
	if (obuffer2_7_serverAdapterB_s1$EN)
	  obuffer2_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_7_serverAdapterB_s1$D_IN;
	if (obuffer2_8_serverAdapterA_cnt$EN)
	  obuffer2_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_8_serverAdapterA_cnt$D_IN;
	if (obuffer2_8_serverAdapterA_s1$EN)
	  obuffer2_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_8_serverAdapterA_s1$D_IN;
	if (obuffer2_8_serverAdapterB_cnt$EN)
	  obuffer2_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_8_serverAdapterB_cnt$D_IN;
	if (obuffer2_8_serverAdapterB_s1$EN)
	  obuffer2_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_8_serverAdapterB_s1$D_IN;
	if (obuffer2_9_serverAdapterA_cnt$EN)
	  obuffer2_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_9_serverAdapterA_cnt$D_IN;
	if (obuffer2_9_serverAdapterA_s1$EN)
	  obuffer2_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_9_serverAdapterA_s1$D_IN;
	if (obuffer2_9_serverAdapterB_cnt$EN)
	  obuffer2_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_9_serverAdapterB_cnt$D_IN;
	if (obuffer2_9_serverAdapterB_s1$EN)
	  obuffer2_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      obuffer2_9_serverAdapterB_s1$D_IN;
	if (wbuffer_0_serverAdapterA_cnt$EN)
	  wbuffer_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_0_serverAdapterA_cnt$D_IN;
	if (wbuffer_0_serverAdapterA_s1$EN)
	  wbuffer_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_0_serverAdapterA_s1$D_IN;
	if (wbuffer_0_serverAdapterB_cnt$EN)
	  wbuffer_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_0_serverAdapterB_cnt$D_IN;
	if (wbuffer_0_serverAdapterB_s1$EN)
	  wbuffer_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_0_serverAdapterB_s1$D_IN;
	if (wbuffer_10_serverAdapterA_cnt$EN)
	  wbuffer_10_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_10_serverAdapterA_cnt$D_IN;
	if (wbuffer_10_serverAdapterA_s1$EN)
	  wbuffer_10_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_10_serverAdapterA_s1$D_IN;
	if (wbuffer_10_serverAdapterB_cnt$EN)
	  wbuffer_10_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_10_serverAdapterB_cnt$D_IN;
	if (wbuffer_10_serverAdapterB_s1$EN)
	  wbuffer_10_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_10_serverAdapterB_s1$D_IN;
	if (wbuffer_11_serverAdapterA_cnt$EN)
	  wbuffer_11_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_11_serverAdapterA_cnt$D_IN;
	if (wbuffer_11_serverAdapterA_s1$EN)
	  wbuffer_11_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_11_serverAdapterA_s1$D_IN;
	if (wbuffer_11_serverAdapterB_cnt$EN)
	  wbuffer_11_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_11_serverAdapterB_cnt$D_IN;
	if (wbuffer_11_serverAdapterB_s1$EN)
	  wbuffer_11_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_11_serverAdapterB_s1$D_IN;
	if (wbuffer_12_serverAdapterA_cnt$EN)
	  wbuffer_12_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_12_serverAdapterA_cnt$D_IN;
	if (wbuffer_12_serverAdapterA_s1$EN)
	  wbuffer_12_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_12_serverAdapterA_s1$D_IN;
	if (wbuffer_12_serverAdapterB_cnt$EN)
	  wbuffer_12_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_12_serverAdapterB_cnt$D_IN;
	if (wbuffer_12_serverAdapterB_s1$EN)
	  wbuffer_12_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_12_serverAdapterB_s1$D_IN;
	if (wbuffer_13_serverAdapterA_cnt$EN)
	  wbuffer_13_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_13_serverAdapterA_cnt$D_IN;
	if (wbuffer_13_serverAdapterA_s1$EN)
	  wbuffer_13_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_13_serverAdapterA_s1$D_IN;
	if (wbuffer_13_serverAdapterB_cnt$EN)
	  wbuffer_13_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_13_serverAdapterB_cnt$D_IN;
	if (wbuffer_13_serverAdapterB_s1$EN)
	  wbuffer_13_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_13_serverAdapterB_s1$D_IN;
	if (wbuffer_14_serverAdapterA_cnt$EN)
	  wbuffer_14_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_14_serverAdapterA_cnt$D_IN;
	if (wbuffer_14_serverAdapterA_s1$EN)
	  wbuffer_14_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_14_serverAdapterA_s1$D_IN;
	if (wbuffer_14_serverAdapterB_cnt$EN)
	  wbuffer_14_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_14_serverAdapterB_cnt$D_IN;
	if (wbuffer_14_serverAdapterB_s1$EN)
	  wbuffer_14_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_14_serverAdapterB_s1$D_IN;
	if (wbuffer_15_serverAdapterA_cnt$EN)
	  wbuffer_15_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_15_serverAdapterA_cnt$D_IN;
	if (wbuffer_15_serverAdapterA_s1$EN)
	  wbuffer_15_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_15_serverAdapterA_s1$D_IN;
	if (wbuffer_15_serverAdapterB_cnt$EN)
	  wbuffer_15_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_15_serverAdapterB_cnt$D_IN;
	if (wbuffer_15_serverAdapterB_s1$EN)
	  wbuffer_15_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_15_serverAdapterB_s1$D_IN;
	if (wbuffer_16_serverAdapterA_cnt$EN)
	  wbuffer_16_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_16_serverAdapterA_cnt$D_IN;
	if (wbuffer_16_serverAdapterA_s1$EN)
	  wbuffer_16_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_16_serverAdapterA_s1$D_IN;
	if (wbuffer_16_serverAdapterB_cnt$EN)
	  wbuffer_16_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_16_serverAdapterB_cnt$D_IN;
	if (wbuffer_16_serverAdapterB_s1$EN)
	  wbuffer_16_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_16_serverAdapterB_s1$D_IN;
	if (wbuffer_17_serverAdapterA_cnt$EN)
	  wbuffer_17_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_17_serverAdapterA_cnt$D_IN;
	if (wbuffer_17_serverAdapterA_s1$EN)
	  wbuffer_17_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_17_serverAdapterA_s1$D_IN;
	if (wbuffer_17_serverAdapterB_cnt$EN)
	  wbuffer_17_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_17_serverAdapterB_cnt$D_IN;
	if (wbuffer_17_serverAdapterB_s1$EN)
	  wbuffer_17_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_17_serverAdapterB_s1$D_IN;
	if (wbuffer_18_serverAdapterA_cnt$EN)
	  wbuffer_18_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_18_serverAdapterA_cnt$D_IN;
	if (wbuffer_18_serverAdapterA_s1$EN)
	  wbuffer_18_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_18_serverAdapterA_s1$D_IN;
	if (wbuffer_18_serverAdapterB_cnt$EN)
	  wbuffer_18_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_18_serverAdapterB_cnt$D_IN;
	if (wbuffer_18_serverAdapterB_s1$EN)
	  wbuffer_18_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_18_serverAdapterB_s1$D_IN;
	if (wbuffer_19_serverAdapterA_cnt$EN)
	  wbuffer_19_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_19_serverAdapterA_cnt$D_IN;
	if (wbuffer_19_serverAdapterA_s1$EN)
	  wbuffer_19_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_19_serverAdapterA_s1$D_IN;
	if (wbuffer_19_serverAdapterB_cnt$EN)
	  wbuffer_19_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_19_serverAdapterB_cnt$D_IN;
	if (wbuffer_19_serverAdapterB_s1$EN)
	  wbuffer_19_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_19_serverAdapterB_s1$D_IN;
	if (wbuffer_1_serverAdapterA_cnt$EN)
	  wbuffer_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_1_serverAdapterA_cnt$D_IN;
	if (wbuffer_1_serverAdapterA_s1$EN)
	  wbuffer_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_1_serverAdapterA_s1$D_IN;
	if (wbuffer_1_serverAdapterB_cnt$EN)
	  wbuffer_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_1_serverAdapterB_cnt$D_IN;
	if (wbuffer_1_serverAdapterB_s1$EN)
	  wbuffer_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_1_serverAdapterB_s1$D_IN;
	if (wbuffer_20_serverAdapterA_cnt$EN)
	  wbuffer_20_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_20_serverAdapterA_cnt$D_IN;
	if (wbuffer_20_serverAdapterA_s1$EN)
	  wbuffer_20_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_20_serverAdapterA_s1$D_IN;
	if (wbuffer_20_serverAdapterB_cnt$EN)
	  wbuffer_20_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_20_serverAdapterB_cnt$D_IN;
	if (wbuffer_20_serverAdapterB_s1$EN)
	  wbuffer_20_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_20_serverAdapterB_s1$D_IN;
	if (wbuffer_21_serverAdapterA_cnt$EN)
	  wbuffer_21_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_21_serverAdapterA_cnt$D_IN;
	if (wbuffer_21_serverAdapterA_s1$EN)
	  wbuffer_21_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_21_serverAdapterA_s1$D_IN;
	if (wbuffer_21_serverAdapterB_cnt$EN)
	  wbuffer_21_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_21_serverAdapterB_cnt$D_IN;
	if (wbuffer_21_serverAdapterB_s1$EN)
	  wbuffer_21_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_21_serverAdapterB_s1$D_IN;
	if (wbuffer_22_serverAdapterA_cnt$EN)
	  wbuffer_22_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_22_serverAdapterA_cnt$D_IN;
	if (wbuffer_22_serverAdapterA_s1$EN)
	  wbuffer_22_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_22_serverAdapterA_s1$D_IN;
	if (wbuffer_22_serverAdapterB_cnt$EN)
	  wbuffer_22_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_22_serverAdapterB_cnt$D_IN;
	if (wbuffer_22_serverAdapterB_s1$EN)
	  wbuffer_22_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_22_serverAdapterB_s1$D_IN;
	if (wbuffer_23_serverAdapterA_cnt$EN)
	  wbuffer_23_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_23_serverAdapterA_cnt$D_IN;
	if (wbuffer_23_serverAdapterA_s1$EN)
	  wbuffer_23_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_23_serverAdapterA_s1$D_IN;
	if (wbuffer_23_serverAdapterB_cnt$EN)
	  wbuffer_23_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_23_serverAdapterB_cnt$D_IN;
	if (wbuffer_23_serverAdapterB_s1$EN)
	  wbuffer_23_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_23_serverAdapterB_s1$D_IN;
	if (wbuffer_24_serverAdapterA_cnt$EN)
	  wbuffer_24_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_24_serverAdapterA_cnt$D_IN;
	if (wbuffer_24_serverAdapterA_s1$EN)
	  wbuffer_24_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_24_serverAdapterA_s1$D_IN;
	if (wbuffer_24_serverAdapterB_cnt$EN)
	  wbuffer_24_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_24_serverAdapterB_cnt$D_IN;
	if (wbuffer_24_serverAdapterB_s1$EN)
	  wbuffer_24_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_24_serverAdapterB_s1$D_IN;
	if (wbuffer_25_serverAdapterA_cnt$EN)
	  wbuffer_25_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_25_serverAdapterA_cnt$D_IN;
	if (wbuffer_25_serverAdapterA_s1$EN)
	  wbuffer_25_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_25_serverAdapterA_s1$D_IN;
	if (wbuffer_25_serverAdapterB_cnt$EN)
	  wbuffer_25_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_25_serverAdapterB_cnt$D_IN;
	if (wbuffer_25_serverAdapterB_s1$EN)
	  wbuffer_25_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_25_serverAdapterB_s1$D_IN;
	if (wbuffer_26_serverAdapterA_cnt$EN)
	  wbuffer_26_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_26_serverAdapterA_cnt$D_IN;
	if (wbuffer_26_serverAdapterA_s1$EN)
	  wbuffer_26_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_26_serverAdapterA_s1$D_IN;
	if (wbuffer_26_serverAdapterB_cnt$EN)
	  wbuffer_26_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_26_serverAdapterB_cnt$D_IN;
	if (wbuffer_26_serverAdapterB_s1$EN)
	  wbuffer_26_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_26_serverAdapterB_s1$D_IN;
	if (wbuffer_27_serverAdapterA_cnt$EN)
	  wbuffer_27_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_27_serverAdapterA_cnt$D_IN;
	if (wbuffer_27_serverAdapterA_s1$EN)
	  wbuffer_27_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_27_serverAdapterA_s1$D_IN;
	if (wbuffer_27_serverAdapterB_cnt$EN)
	  wbuffer_27_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_27_serverAdapterB_cnt$D_IN;
	if (wbuffer_27_serverAdapterB_s1$EN)
	  wbuffer_27_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_27_serverAdapterB_s1$D_IN;
	if (wbuffer_28_serverAdapterA_cnt$EN)
	  wbuffer_28_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_28_serverAdapterA_cnt$D_IN;
	if (wbuffer_28_serverAdapterA_s1$EN)
	  wbuffer_28_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_28_serverAdapterA_s1$D_IN;
	if (wbuffer_28_serverAdapterB_cnt$EN)
	  wbuffer_28_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_28_serverAdapterB_cnt$D_IN;
	if (wbuffer_28_serverAdapterB_s1$EN)
	  wbuffer_28_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_28_serverAdapterB_s1$D_IN;
	if (wbuffer_29_serverAdapterA_cnt$EN)
	  wbuffer_29_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_29_serverAdapterA_cnt$D_IN;
	if (wbuffer_29_serverAdapterA_s1$EN)
	  wbuffer_29_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_29_serverAdapterA_s1$D_IN;
	if (wbuffer_29_serverAdapterB_cnt$EN)
	  wbuffer_29_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_29_serverAdapterB_cnt$D_IN;
	if (wbuffer_29_serverAdapterB_s1$EN)
	  wbuffer_29_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_29_serverAdapterB_s1$D_IN;
	if (wbuffer_2_serverAdapterA_cnt$EN)
	  wbuffer_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_2_serverAdapterA_cnt$D_IN;
	if (wbuffer_2_serverAdapterA_s1$EN)
	  wbuffer_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_2_serverAdapterA_s1$D_IN;
	if (wbuffer_2_serverAdapterB_cnt$EN)
	  wbuffer_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_2_serverAdapterB_cnt$D_IN;
	if (wbuffer_2_serverAdapterB_s1$EN)
	  wbuffer_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_2_serverAdapterB_s1$D_IN;
	if (wbuffer_30_serverAdapterA_cnt$EN)
	  wbuffer_30_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_30_serverAdapterA_cnt$D_IN;
	if (wbuffer_30_serverAdapterA_s1$EN)
	  wbuffer_30_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_30_serverAdapterA_s1$D_IN;
	if (wbuffer_30_serverAdapterB_cnt$EN)
	  wbuffer_30_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_30_serverAdapterB_cnt$D_IN;
	if (wbuffer_30_serverAdapterB_s1$EN)
	  wbuffer_30_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_30_serverAdapterB_s1$D_IN;
	if (wbuffer_31_serverAdapterA_cnt$EN)
	  wbuffer_31_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_31_serverAdapterA_cnt$D_IN;
	if (wbuffer_31_serverAdapterA_s1$EN)
	  wbuffer_31_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_31_serverAdapterA_s1$D_IN;
	if (wbuffer_31_serverAdapterB_cnt$EN)
	  wbuffer_31_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_31_serverAdapterB_cnt$D_IN;
	if (wbuffer_31_serverAdapterB_s1$EN)
	  wbuffer_31_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_31_serverAdapterB_s1$D_IN;
	if (wbuffer_3_serverAdapterA_cnt$EN)
	  wbuffer_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_3_serverAdapterA_cnt$D_IN;
	if (wbuffer_3_serverAdapterA_s1$EN)
	  wbuffer_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_3_serverAdapterA_s1$D_IN;
	if (wbuffer_3_serverAdapterB_cnt$EN)
	  wbuffer_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_3_serverAdapterB_cnt$D_IN;
	if (wbuffer_3_serverAdapterB_s1$EN)
	  wbuffer_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_3_serverAdapterB_s1$D_IN;
	if (wbuffer_4_serverAdapterA_cnt$EN)
	  wbuffer_4_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_4_serverAdapterA_cnt$D_IN;
	if (wbuffer_4_serverAdapterA_s1$EN)
	  wbuffer_4_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_4_serverAdapterA_s1$D_IN;
	if (wbuffer_4_serverAdapterB_cnt$EN)
	  wbuffer_4_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_4_serverAdapterB_cnt$D_IN;
	if (wbuffer_4_serverAdapterB_s1$EN)
	  wbuffer_4_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_4_serverAdapterB_s1$D_IN;
	if (wbuffer_5_serverAdapterA_cnt$EN)
	  wbuffer_5_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_5_serverAdapterA_cnt$D_IN;
	if (wbuffer_5_serverAdapterA_s1$EN)
	  wbuffer_5_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_5_serverAdapterA_s1$D_IN;
	if (wbuffer_5_serverAdapterB_cnt$EN)
	  wbuffer_5_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_5_serverAdapterB_cnt$D_IN;
	if (wbuffer_5_serverAdapterB_s1$EN)
	  wbuffer_5_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_5_serverAdapterB_s1$D_IN;
	if (wbuffer_6_serverAdapterA_cnt$EN)
	  wbuffer_6_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_6_serverAdapterA_cnt$D_IN;
	if (wbuffer_6_serverAdapterA_s1$EN)
	  wbuffer_6_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_6_serverAdapterA_s1$D_IN;
	if (wbuffer_6_serverAdapterB_cnt$EN)
	  wbuffer_6_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_6_serverAdapterB_cnt$D_IN;
	if (wbuffer_6_serverAdapterB_s1$EN)
	  wbuffer_6_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_6_serverAdapterB_s1$D_IN;
	if (wbuffer_7_serverAdapterA_cnt$EN)
	  wbuffer_7_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_7_serverAdapterA_cnt$D_IN;
	if (wbuffer_7_serverAdapterA_s1$EN)
	  wbuffer_7_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_7_serverAdapterA_s1$D_IN;
	if (wbuffer_7_serverAdapterB_cnt$EN)
	  wbuffer_7_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_7_serverAdapterB_cnt$D_IN;
	if (wbuffer_7_serverAdapterB_s1$EN)
	  wbuffer_7_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_7_serverAdapterB_s1$D_IN;
	if (wbuffer_8_serverAdapterA_cnt$EN)
	  wbuffer_8_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_8_serverAdapterA_cnt$D_IN;
	if (wbuffer_8_serverAdapterA_s1$EN)
	  wbuffer_8_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_8_serverAdapterA_s1$D_IN;
	if (wbuffer_8_serverAdapterB_cnt$EN)
	  wbuffer_8_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_8_serverAdapterB_cnt$D_IN;
	if (wbuffer_8_serverAdapterB_s1$EN)
	  wbuffer_8_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_8_serverAdapterB_s1$D_IN;
	if (wbuffer_9_serverAdapterA_cnt$EN)
	  wbuffer_9_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_9_serverAdapterA_cnt$D_IN;
	if (wbuffer_9_serverAdapterA_s1$EN)
	  wbuffer_9_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_9_serverAdapterA_s1$D_IN;
	if (wbuffer_9_serverAdapterB_cnt$EN)
	  wbuffer_9_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_9_serverAdapterB_cnt$D_IN;
	if (wbuffer_9_serverAdapterB_s1$EN)
	  wbuffer_9_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      wbuffer_9_serverAdapterB_s1$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    ibuffer_0_serverAdapterA_cnt = 3'h2;
    ibuffer_0_serverAdapterA_s1 = 2'h2;
    ibuffer_0_serverAdapterB_cnt = 3'h2;
    ibuffer_0_serverAdapterB_s1 = 2'h2;
    ibuffer_10_serverAdapterA_cnt = 3'h2;
    ibuffer_10_serverAdapterA_s1 = 2'h2;
    ibuffer_10_serverAdapterB_cnt = 3'h2;
    ibuffer_10_serverAdapterB_s1 = 2'h2;
    ibuffer_11_serverAdapterA_cnt = 3'h2;
    ibuffer_11_serverAdapterA_s1 = 2'h2;
    ibuffer_11_serverAdapterB_cnt = 3'h2;
    ibuffer_11_serverAdapterB_s1 = 2'h2;
    ibuffer_12_serverAdapterA_cnt = 3'h2;
    ibuffer_12_serverAdapterA_s1 = 2'h2;
    ibuffer_12_serverAdapterB_cnt = 3'h2;
    ibuffer_12_serverAdapterB_s1 = 2'h2;
    ibuffer_13_serverAdapterA_cnt = 3'h2;
    ibuffer_13_serverAdapterA_s1 = 2'h2;
    ibuffer_13_serverAdapterB_cnt = 3'h2;
    ibuffer_13_serverAdapterB_s1 = 2'h2;
    ibuffer_14_serverAdapterA_cnt = 3'h2;
    ibuffer_14_serverAdapterA_s1 = 2'h2;
    ibuffer_14_serverAdapterB_cnt = 3'h2;
    ibuffer_14_serverAdapterB_s1 = 2'h2;
    ibuffer_15_serverAdapterA_cnt = 3'h2;
    ibuffer_15_serverAdapterA_s1 = 2'h2;
    ibuffer_15_serverAdapterB_cnt = 3'h2;
    ibuffer_15_serverAdapterB_s1 = 2'h2;
    ibuffer_16_serverAdapterA_cnt = 3'h2;
    ibuffer_16_serverAdapterA_s1 = 2'h2;
    ibuffer_16_serverAdapterB_cnt = 3'h2;
    ibuffer_16_serverAdapterB_s1 = 2'h2;
    ibuffer_17_serverAdapterA_cnt = 3'h2;
    ibuffer_17_serverAdapterA_s1 = 2'h2;
    ibuffer_17_serverAdapterB_cnt = 3'h2;
    ibuffer_17_serverAdapterB_s1 = 2'h2;
    ibuffer_18_serverAdapterA_cnt = 3'h2;
    ibuffer_18_serverAdapterA_s1 = 2'h2;
    ibuffer_18_serverAdapterB_cnt = 3'h2;
    ibuffer_18_serverAdapterB_s1 = 2'h2;
    ibuffer_19_serverAdapterA_cnt = 3'h2;
    ibuffer_19_serverAdapterA_s1 = 2'h2;
    ibuffer_19_serverAdapterB_cnt = 3'h2;
    ibuffer_19_serverAdapterB_s1 = 2'h2;
    ibuffer_1_serverAdapterA_cnt = 3'h2;
    ibuffer_1_serverAdapterA_s1 = 2'h2;
    ibuffer_1_serverAdapterB_cnt = 3'h2;
    ibuffer_1_serverAdapterB_s1 = 2'h2;
    ibuffer_20_serverAdapterA_cnt = 3'h2;
    ibuffer_20_serverAdapterA_s1 = 2'h2;
    ibuffer_20_serverAdapterB_cnt = 3'h2;
    ibuffer_20_serverAdapterB_s1 = 2'h2;
    ibuffer_21_serverAdapterA_cnt = 3'h2;
    ibuffer_21_serverAdapterA_s1 = 2'h2;
    ibuffer_21_serverAdapterB_cnt = 3'h2;
    ibuffer_21_serverAdapterB_s1 = 2'h2;
    ibuffer_22_serverAdapterA_cnt = 3'h2;
    ibuffer_22_serverAdapterA_s1 = 2'h2;
    ibuffer_22_serverAdapterB_cnt = 3'h2;
    ibuffer_22_serverAdapterB_s1 = 2'h2;
    ibuffer_23_serverAdapterA_cnt = 3'h2;
    ibuffer_23_serverAdapterA_s1 = 2'h2;
    ibuffer_23_serverAdapterB_cnt = 3'h2;
    ibuffer_23_serverAdapterB_s1 = 2'h2;
    ibuffer_24_serverAdapterA_cnt = 3'h2;
    ibuffer_24_serverAdapterA_s1 = 2'h2;
    ibuffer_24_serverAdapterB_cnt = 3'h2;
    ibuffer_24_serverAdapterB_s1 = 2'h2;
    ibuffer_25_serverAdapterA_cnt = 3'h2;
    ibuffer_25_serverAdapterA_s1 = 2'h2;
    ibuffer_25_serverAdapterB_cnt = 3'h2;
    ibuffer_25_serverAdapterB_s1 = 2'h2;
    ibuffer_26_serverAdapterA_cnt = 3'h2;
    ibuffer_26_serverAdapterA_s1 = 2'h2;
    ibuffer_26_serverAdapterB_cnt = 3'h2;
    ibuffer_26_serverAdapterB_s1 = 2'h2;
    ibuffer_27_serverAdapterA_cnt = 3'h2;
    ibuffer_27_serverAdapterA_s1 = 2'h2;
    ibuffer_27_serverAdapterB_cnt = 3'h2;
    ibuffer_27_serverAdapterB_s1 = 2'h2;
    ibuffer_28_serverAdapterA_cnt = 3'h2;
    ibuffer_28_serverAdapterA_s1 = 2'h2;
    ibuffer_28_serverAdapterB_cnt = 3'h2;
    ibuffer_28_serverAdapterB_s1 = 2'h2;
    ibuffer_29_serverAdapterA_cnt = 3'h2;
    ibuffer_29_serverAdapterA_s1 = 2'h2;
    ibuffer_29_serverAdapterB_cnt = 3'h2;
    ibuffer_29_serverAdapterB_s1 = 2'h2;
    ibuffer_2_serverAdapterA_cnt = 3'h2;
    ibuffer_2_serverAdapterA_s1 = 2'h2;
    ibuffer_2_serverAdapterB_cnt = 3'h2;
    ibuffer_2_serverAdapterB_s1 = 2'h2;
    ibuffer_30_serverAdapterA_cnt = 3'h2;
    ibuffer_30_serverAdapterA_s1 = 2'h2;
    ibuffer_30_serverAdapterB_cnt = 3'h2;
    ibuffer_30_serverAdapterB_s1 = 2'h2;
    ibuffer_31_serverAdapterA_cnt = 3'h2;
    ibuffer_31_serverAdapterA_s1 = 2'h2;
    ibuffer_31_serverAdapterB_cnt = 3'h2;
    ibuffer_31_serverAdapterB_s1 = 2'h2;
    ibuffer_3_serverAdapterA_cnt = 3'h2;
    ibuffer_3_serverAdapterA_s1 = 2'h2;
    ibuffer_3_serverAdapterB_cnt = 3'h2;
    ibuffer_3_serverAdapterB_s1 = 2'h2;
    ibuffer_4_serverAdapterA_cnt = 3'h2;
    ibuffer_4_serverAdapterA_s1 = 2'h2;
    ibuffer_4_serverAdapterB_cnt = 3'h2;
    ibuffer_4_serverAdapterB_s1 = 2'h2;
    ibuffer_5_serverAdapterA_cnt = 3'h2;
    ibuffer_5_serverAdapterA_s1 = 2'h2;
    ibuffer_5_serverAdapterB_cnt = 3'h2;
    ibuffer_5_serverAdapterB_s1 = 2'h2;
    ibuffer_6_serverAdapterA_cnt = 3'h2;
    ibuffer_6_serverAdapterA_s1 = 2'h2;
    ibuffer_6_serverAdapterB_cnt = 3'h2;
    ibuffer_6_serverAdapterB_s1 = 2'h2;
    ibuffer_7_serverAdapterA_cnt = 3'h2;
    ibuffer_7_serverAdapterA_s1 = 2'h2;
    ibuffer_7_serverAdapterB_cnt = 3'h2;
    ibuffer_7_serverAdapterB_s1 = 2'h2;
    ibuffer_8_serverAdapterA_cnt = 3'h2;
    ibuffer_8_serverAdapterA_s1 = 2'h2;
    ibuffer_8_serverAdapterB_cnt = 3'h2;
    ibuffer_8_serverAdapterB_s1 = 2'h2;
    ibuffer_9_serverAdapterA_cnt = 3'h2;
    ibuffer_9_serverAdapterA_s1 = 2'h2;
    ibuffer_9_serverAdapterB_cnt = 3'h2;
    ibuffer_9_serverAdapterB_s1 = 2'h2;
    obuffer1_0_serverAdapterA_cnt = 3'h2;
    obuffer1_0_serverAdapterA_s1 = 2'h2;
    obuffer1_0_serverAdapterB_cnt = 3'h2;
    obuffer1_0_serverAdapterB_s1 = 2'h2;
    obuffer1_10_serverAdapterA_cnt = 3'h2;
    obuffer1_10_serverAdapterA_s1 = 2'h2;
    obuffer1_10_serverAdapterB_cnt = 3'h2;
    obuffer1_10_serverAdapterB_s1 = 2'h2;
    obuffer1_11_serverAdapterA_cnt = 3'h2;
    obuffer1_11_serverAdapterA_s1 = 2'h2;
    obuffer1_11_serverAdapterB_cnt = 3'h2;
    obuffer1_11_serverAdapterB_s1 = 2'h2;
    obuffer1_12_serverAdapterA_cnt = 3'h2;
    obuffer1_12_serverAdapterA_s1 = 2'h2;
    obuffer1_12_serverAdapterB_cnt = 3'h2;
    obuffer1_12_serverAdapterB_s1 = 2'h2;
    obuffer1_13_serverAdapterA_cnt = 3'h2;
    obuffer1_13_serverAdapterA_s1 = 2'h2;
    obuffer1_13_serverAdapterB_cnt = 3'h2;
    obuffer1_13_serverAdapterB_s1 = 2'h2;
    obuffer1_14_serverAdapterA_cnt = 3'h2;
    obuffer1_14_serverAdapterA_s1 = 2'h2;
    obuffer1_14_serverAdapterB_cnt = 3'h2;
    obuffer1_14_serverAdapterB_s1 = 2'h2;
    obuffer1_15_serverAdapterA_cnt = 3'h2;
    obuffer1_15_serverAdapterA_s1 = 2'h2;
    obuffer1_15_serverAdapterB_cnt = 3'h2;
    obuffer1_15_serverAdapterB_s1 = 2'h2;
    obuffer1_16_serverAdapterA_cnt = 3'h2;
    obuffer1_16_serverAdapterA_s1 = 2'h2;
    obuffer1_16_serverAdapterB_cnt = 3'h2;
    obuffer1_16_serverAdapterB_s1 = 2'h2;
    obuffer1_17_serverAdapterA_cnt = 3'h2;
    obuffer1_17_serverAdapterA_s1 = 2'h2;
    obuffer1_17_serverAdapterB_cnt = 3'h2;
    obuffer1_17_serverAdapterB_s1 = 2'h2;
    obuffer1_18_serverAdapterA_cnt = 3'h2;
    obuffer1_18_serverAdapterA_s1 = 2'h2;
    obuffer1_18_serverAdapterB_cnt = 3'h2;
    obuffer1_18_serverAdapterB_s1 = 2'h2;
    obuffer1_19_serverAdapterA_cnt = 3'h2;
    obuffer1_19_serverAdapterA_s1 = 2'h2;
    obuffer1_19_serverAdapterB_cnt = 3'h2;
    obuffer1_19_serverAdapterB_s1 = 2'h2;
    obuffer1_1_serverAdapterA_cnt = 3'h2;
    obuffer1_1_serverAdapterA_s1 = 2'h2;
    obuffer1_1_serverAdapterB_cnt = 3'h2;
    obuffer1_1_serverAdapterB_s1 = 2'h2;
    obuffer1_20_serverAdapterA_cnt = 3'h2;
    obuffer1_20_serverAdapterA_s1 = 2'h2;
    obuffer1_20_serverAdapterB_cnt = 3'h2;
    obuffer1_20_serverAdapterB_s1 = 2'h2;
    obuffer1_21_serverAdapterA_cnt = 3'h2;
    obuffer1_21_serverAdapterA_s1 = 2'h2;
    obuffer1_21_serverAdapterB_cnt = 3'h2;
    obuffer1_21_serverAdapterB_s1 = 2'h2;
    obuffer1_22_serverAdapterA_cnt = 3'h2;
    obuffer1_22_serverAdapterA_s1 = 2'h2;
    obuffer1_22_serverAdapterB_cnt = 3'h2;
    obuffer1_22_serverAdapterB_s1 = 2'h2;
    obuffer1_23_serverAdapterA_cnt = 3'h2;
    obuffer1_23_serverAdapterA_s1 = 2'h2;
    obuffer1_23_serverAdapterB_cnt = 3'h2;
    obuffer1_23_serverAdapterB_s1 = 2'h2;
    obuffer1_24_serverAdapterA_cnt = 3'h2;
    obuffer1_24_serverAdapterA_s1 = 2'h2;
    obuffer1_24_serverAdapterB_cnt = 3'h2;
    obuffer1_24_serverAdapterB_s1 = 2'h2;
    obuffer1_25_serverAdapterA_cnt = 3'h2;
    obuffer1_25_serverAdapterA_s1 = 2'h2;
    obuffer1_25_serverAdapterB_cnt = 3'h2;
    obuffer1_25_serverAdapterB_s1 = 2'h2;
    obuffer1_26_serverAdapterA_cnt = 3'h2;
    obuffer1_26_serverAdapterA_s1 = 2'h2;
    obuffer1_26_serverAdapterB_cnt = 3'h2;
    obuffer1_26_serverAdapterB_s1 = 2'h2;
    obuffer1_27_serverAdapterA_cnt = 3'h2;
    obuffer1_27_serverAdapterA_s1 = 2'h2;
    obuffer1_27_serverAdapterB_cnt = 3'h2;
    obuffer1_27_serverAdapterB_s1 = 2'h2;
    obuffer1_28_serverAdapterA_cnt = 3'h2;
    obuffer1_28_serverAdapterA_s1 = 2'h2;
    obuffer1_28_serverAdapterB_cnt = 3'h2;
    obuffer1_28_serverAdapterB_s1 = 2'h2;
    obuffer1_29_serverAdapterA_cnt = 3'h2;
    obuffer1_29_serverAdapterA_s1 = 2'h2;
    obuffer1_29_serverAdapterB_cnt = 3'h2;
    obuffer1_29_serverAdapterB_s1 = 2'h2;
    obuffer1_2_serverAdapterA_cnt = 3'h2;
    obuffer1_2_serverAdapterA_s1 = 2'h2;
    obuffer1_2_serverAdapterB_cnt = 3'h2;
    obuffer1_2_serverAdapterB_s1 = 2'h2;
    obuffer1_30_serverAdapterA_cnt = 3'h2;
    obuffer1_30_serverAdapterA_s1 = 2'h2;
    obuffer1_30_serverAdapterB_cnt = 3'h2;
    obuffer1_30_serverAdapterB_s1 = 2'h2;
    obuffer1_31_serverAdapterA_cnt = 3'h2;
    obuffer1_31_serverAdapterA_s1 = 2'h2;
    obuffer1_31_serverAdapterB_cnt = 3'h2;
    obuffer1_31_serverAdapterB_s1 = 2'h2;
    obuffer1_3_serverAdapterA_cnt = 3'h2;
    obuffer1_3_serverAdapterA_s1 = 2'h2;
    obuffer1_3_serverAdapterB_cnt = 3'h2;
    obuffer1_3_serverAdapterB_s1 = 2'h2;
    obuffer1_4_serverAdapterA_cnt = 3'h2;
    obuffer1_4_serverAdapterA_s1 = 2'h2;
    obuffer1_4_serverAdapterB_cnt = 3'h2;
    obuffer1_4_serverAdapterB_s1 = 2'h2;
    obuffer1_5_serverAdapterA_cnt = 3'h2;
    obuffer1_5_serverAdapterA_s1 = 2'h2;
    obuffer1_5_serverAdapterB_cnt = 3'h2;
    obuffer1_5_serverAdapterB_s1 = 2'h2;
    obuffer1_6_serverAdapterA_cnt = 3'h2;
    obuffer1_6_serverAdapterA_s1 = 2'h2;
    obuffer1_6_serverAdapterB_cnt = 3'h2;
    obuffer1_6_serverAdapterB_s1 = 2'h2;
    obuffer1_7_serverAdapterA_cnt = 3'h2;
    obuffer1_7_serverAdapterA_s1 = 2'h2;
    obuffer1_7_serverAdapterB_cnt = 3'h2;
    obuffer1_7_serverAdapterB_s1 = 2'h2;
    obuffer1_8_serverAdapterA_cnt = 3'h2;
    obuffer1_8_serverAdapterA_s1 = 2'h2;
    obuffer1_8_serverAdapterB_cnt = 3'h2;
    obuffer1_8_serverAdapterB_s1 = 2'h2;
    obuffer1_9_serverAdapterA_cnt = 3'h2;
    obuffer1_9_serverAdapterA_s1 = 2'h2;
    obuffer1_9_serverAdapterB_cnt = 3'h2;
    obuffer1_9_serverAdapterB_s1 = 2'h2;
    obuffer2_0_serverAdapterA_cnt = 3'h2;
    obuffer2_0_serverAdapterA_s1 = 2'h2;
    obuffer2_0_serverAdapterB_cnt = 3'h2;
    obuffer2_0_serverAdapterB_s1 = 2'h2;
    obuffer2_10_serverAdapterA_cnt = 3'h2;
    obuffer2_10_serverAdapterA_s1 = 2'h2;
    obuffer2_10_serverAdapterB_cnt = 3'h2;
    obuffer2_10_serverAdapterB_s1 = 2'h2;
    obuffer2_11_serverAdapterA_cnt = 3'h2;
    obuffer2_11_serverAdapterA_s1 = 2'h2;
    obuffer2_11_serverAdapterB_cnt = 3'h2;
    obuffer2_11_serverAdapterB_s1 = 2'h2;
    obuffer2_12_serverAdapterA_cnt = 3'h2;
    obuffer2_12_serverAdapterA_s1 = 2'h2;
    obuffer2_12_serverAdapterB_cnt = 3'h2;
    obuffer2_12_serverAdapterB_s1 = 2'h2;
    obuffer2_13_serverAdapterA_cnt = 3'h2;
    obuffer2_13_serverAdapterA_s1 = 2'h2;
    obuffer2_13_serverAdapterB_cnt = 3'h2;
    obuffer2_13_serverAdapterB_s1 = 2'h2;
    obuffer2_14_serverAdapterA_cnt = 3'h2;
    obuffer2_14_serverAdapterA_s1 = 2'h2;
    obuffer2_14_serverAdapterB_cnt = 3'h2;
    obuffer2_14_serverAdapterB_s1 = 2'h2;
    obuffer2_15_serverAdapterA_cnt = 3'h2;
    obuffer2_15_serverAdapterA_s1 = 2'h2;
    obuffer2_15_serverAdapterB_cnt = 3'h2;
    obuffer2_15_serverAdapterB_s1 = 2'h2;
    obuffer2_16_serverAdapterA_cnt = 3'h2;
    obuffer2_16_serverAdapterA_s1 = 2'h2;
    obuffer2_16_serverAdapterB_cnt = 3'h2;
    obuffer2_16_serverAdapterB_s1 = 2'h2;
    obuffer2_17_serverAdapterA_cnt = 3'h2;
    obuffer2_17_serverAdapterA_s1 = 2'h2;
    obuffer2_17_serverAdapterB_cnt = 3'h2;
    obuffer2_17_serverAdapterB_s1 = 2'h2;
    obuffer2_18_serverAdapterA_cnt = 3'h2;
    obuffer2_18_serverAdapterA_s1 = 2'h2;
    obuffer2_18_serverAdapterB_cnt = 3'h2;
    obuffer2_18_serverAdapterB_s1 = 2'h2;
    obuffer2_19_serverAdapterA_cnt = 3'h2;
    obuffer2_19_serverAdapterA_s1 = 2'h2;
    obuffer2_19_serverAdapterB_cnt = 3'h2;
    obuffer2_19_serverAdapterB_s1 = 2'h2;
    obuffer2_1_serverAdapterA_cnt = 3'h2;
    obuffer2_1_serverAdapterA_s1 = 2'h2;
    obuffer2_1_serverAdapterB_cnt = 3'h2;
    obuffer2_1_serverAdapterB_s1 = 2'h2;
    obuffer2_20_serverAdapterA_cnt = 3'h2;
    obuffer2_20_serverAdapterA_s1 = 2'h2;
    obuffer2_20_serverAdapterB_cnt = 3'h2;
    obuffer2_20_serverAdapterB_s1 = 2'h2;
    obuffer2_21_serverAdapterA_cnt = 3'h2;
    obuffer2_21_serverAdapterA_s1 = 2'h2;
    obuffer2_21_serverAdapterB_cnt = 3'h2;
    obuffer2_21_serverAdapterB_s1 = 2'h2;
    obuffer2_22_serverAdapterA_cnt = 3'h2;
    obuffer2_22_serverAdapterA_s1 = 2'h2;
    obuffer2_22_serverAdapterB_cnt = 3'h2;
    obuffer2_22_serverAdapterB_s1 = 2'h2;
    obuffer2_23_serverAdapterA_cnt = 3'h2;
    obuffer2_23_serverAdapterA_s1 = 2'h2;
    obuffer2_23_serverAdapterB_cnt = 3'h2;
    obuffer2_23_serverAdapterB_s1 = 2'h2;
    obuffer2_24_serverAdapterA_cnt = 3'h2;
    obuffer2_24_serverAdapterA_s1 = 2'h2;
    obuffer2_24_serverAdapterB_cnt = 3'h2;
    obuffer2_24_serverAdapterB_s1 = 2'h2;
    obuffer2_25_serverAdapterA_cnt = 3'h2;
    obuffer2_25_serverAdapterA_s1 = 2'h2;
    obuffer2_25_serverAdapterB_cnt = 3'h2;
    obuffer2_25_serverAdapterB_s1 = 2'h2;
    obuffer2_26_serverAdapterA_cnt = 3'h2;
    obuffer2_26_serverAdapterA_s1 = 2'h2;
    obuffer2_26_serverAdapterB_cnt = 3'h2;
    obuffer2_26_serverAdapterB_s1 = 2'h2;
    obuffer2_27_serverAdapterA_cnt = 3'h2;
    obuffer2_27_serverAdapterA_s1 = 2'h2;
    obuffer2_27_serverAdapterB_cnt = 3'h2;
    obuffer2_27_serverAdapterB_s1 = 2'h2;
    obuffer2_28_serverAdapterA_cnt = 3'h2;
    obuffer2_28_serverAdapterA_s1 = 2'h2;
    obuffer2_28_serverAdapterB_cnt = 3'h2;
    obuffer2_28_serverAdapterB_s1 = 2'h2;
    obuffer2_29_serverAdapterA_cnt = 3'h2;
    obuffer2_29_serverAdapterA_s1 = 2'h2;
    obuffer2_29_serverAdapterB_cnt = 3'h2;
    obuffer2_29_serverAdapterB_s1 = 2'h2;
    obuffer2_2_serverAdapterA_cnt = 3'h2;
    obuffer2_2_serverAdapterA_s1 = 2'h2;
    obuffer2_2_serverAdapterB_cnt = 3'h2;
    obuffer2_2_serverAdapterB_s1 = 2'h2;
    obuffer2_30_serverAdapterA_cnt = 3'h2;
    obuffer2_30_serverAdapterA_s1 = 2'h2;
    obuffer2_30_serverAdapterB_cnt = 3'h2;
    obuffer2_30_serverAdapterB_s1 = 2'h2;
    obuffer2_31_serverAdapterA_cnt = 3'h2;
    obuffer2_31_serverAdapterA_s1 = 2'h2;
    obuffer2_31_serverAdapterB_cnt = 3'h2;
    obuffer2_31_serverAdapterB_s1 = 2'h2;
    obuffer2_3_serverAdapterA_cnt = 3'h2;
    obuffer2_3_serverAdapterA_s1 = 2'h2;
    obuffer2_3_serverAdapterB_cnt = 3'h2;
    obuffer2_3_serverAdapterB_s1 = 2'h2;
    obuffer2_4_serverAdapterA_cnt = 3'h2;
    obuffer2_4_serverAdapterA_s1 = 2'h2;
    obuffer2_4_serverAdapterB_cnt = 3'h2;
    obuffer2_4_serverAdapterB_s1 = 2'h2;
    obuffer2_5_serverAdapterA_cnt = 3'h2;
    obuffer2_5_serverAdapterA_s1 = 2'h2;
    obuffer2_5_serverAdapterB_cnt = 3'h2;
    obuffer2_5_serverAdapterB_s1 = 2'h2;
    obuffer2_6_serverAdapterA_cnt = 3'h2;
    obuffer2_6_serverAdapterA_s1 = 2'h2;
    obuffer2_6_serverAdapterB_cnt = 3'h2;
    obuffer2_6_serverAdapterB_s1 = 2'h2;
    obuffer2_7_serverAdapterA_cnt = 3'h2;
    obuffer2_7_serverAdapterA_s1 = 2'h2;
    obuffer2_7_serverAdapterB_cnt = 3'h2;
    obuffer2_7_serverAdapterB_s1 = 2'h2;
    obuffer2_8_serverAdapterA_cnt = 3'h2;
    obuffer2_8_serverAdapterA_s1 = 2'h2;
    obuffer2_8_serverAdapterB_cnt = 3'h2;
    obuffer2_8_serverAdapterB_s1 = 2'h2;
    obuffer2_9_serverAdapterA_cnt = 3'h2;
    obuffer2_9_serverAdapterA_s1 = 2'h2;
    obuffer2_9_serverAdapterB_cnt = 3'h2;
    obuffer2_9_serverAdapterB_s1 = 2'h2;
    wbuffer_0_serverAdapterA_cnt = 3'h2;
    wbuffer_0_serverAdapterA_s1 = 2'h2;
    wbuffer_0_serverAdapterB_cnt = 3'h2;
    wbuffer_0_serverAdapterB_s1 = 2'h2;
    wbuffer_10_serverAdapterA_cnt = 3'h2;
    wbuffer_10_serverAdapterA_s1 = 2'h2;
    wbuffer_10_serverAdapterB_cnt = 3'h2;
    wbuffer_10_serverAdapterB_s1 = 2'h2;
    wbuffer_11_serverAdapterA_cnt = 3'h2;
    wbuffer_11_serverAdapterA_s1 = 2'h2;
    wbuffer_11_serverAdapterB_cnt = 3'h2;
    wbuffer_11_serverAdapterB_s1 = 2'h2;
    wbuffer_12_serverAdapterA_cnt = 3'h2;
    wbuffer_12_serverAdapterA_s1 = 2'h2;
    wbuffer_12_serverAdapterB_cnt = 3'h2;
    wbuffer_12_serverAdapterB_s1 = 2'h2;
    wbuffer_13_serverAdapterA_cnt = 3'h2;
    wbuffer_13_serverAdapterA_s1 = 2'h2;
    wbuffer_13_serverAdapterB_cnt = 3'h2;
    wbuffer_13_serverAdapterB_s1 = 2'h2;
    wbuffer_14_serverAdapterA_cnt = 3'h2;
    wbuffer_14_serverAdapterA_s1 = 2'h2;
    wbuffer_14_serverAdapterB_cnt = 3'h2;
    wbuffer_14_serverAdapterB_s1 = 2'h2;
    wbuffer_15_serverAdapterA_cnt = 3'h2;
    wbuffer_15_serverAdapterA_s1 = 2'h2;
    wbuffer_15_serverAdapterB_cnt = 3'h2;
    wbuffer_15_serverAdapterB_s1 = 2'h2;
    wbuffer_16_serverAdapterA_cnt = 3'h2;
    wbuffer_16_serverAdapterA_s1 = 2'h2;
    wbuffer_16_serverAdapterB_cnt = 3'h2;
    wbuffer_16_serverAdapterB_s1 = 2'h2;
    wbuffer_17_serverAdapterA_cnt = 3'h2;
    wbuffer_17_serverAdapterA_s1 = 2'h2;
    wbuffer_17_serverAdapterB_cnt = 3'h2;
    wbuffer_17_serverAdapterB_s1 = 2'h2;
    wbuffer_18_serverAdapterA_cnt = 3'h2;
    wbuffer_18_serverAdapterA_s1 = 2'h2;
    wbuffer_18_serverAdapterB_cnt = 3'h2;
    wbuffer_18_serverAdapterB_s1 = 2'h2;
    wbuffer_19_serverAdapterA_cnt = 3'h2;
    wbuffer_19_serverAdapterA_s1 = 2'h2;
    wbuffer_19_serverAdapterB_cnt = 3'h2;
    wbuffer_19_serverAdapterB_s1 = 2'h2;
    wbuffer_1_serverAdapterA_cnt = 3'h2;
    wbuffer_1_serverAdapterA_s1 = 2'h2;
    wbuffer_1_serverAdapterB_cnt = 3'h2;
    wbuffer_1_serverAdapterB_s1 = 2'h2;
    wbuffer_20_serverAdapterA_cnt = 3'h2;
    wbuffer_20_serverAdapterA_s1 = 2'h2;
    wbuffer_20_serverAdapterB_cnt = 3'h2;
    wbuffer_20_serverAdapterB_s1 = 2'h2;
    wbuffer_21_serverAdapterA_cnt = 3'h2;
    wbuffer_21_serverAdapterA_s1 = 2'h2;
    wbuffer_21_serverAdapterB_cnt = 3'h2;
    wbuffer_21_serverAdapterB_s1 = 2'h2;
    wbuffer_22_serverAdapterA_cnt = 3'h2;
    wbuffer_22_serverAdapterA_s1 = 2'h2;
    wbuffer_22_serverAdapterB_cnt = 3'h2;
    wbuffer_22_serverAdapterB_s1 = 2'h2;
    wbuffer_23_serverAdapterA_cnt = 3'h2;
    wbuffer_23_serverAdapterA_s1 = 2'h2;
    wbuffer_23_serverAdapterB_cnt = 3'h2;
    wbuffer_23_serverAdapterB_s1 = 2'h2;
    wbuffer_24_serverAdapterA_cnt = 3'h2;
    wbuffer_24_serverAdapterA_s1 = 2'h2;
    wbuffer_24_serverAdapterB_cnt = 3'h2;
    wbuffer_24_serverAdapterB_s1 = 2'h2;
    wbuffer_25_serverAdapterA_cnt = 3'h2;
    wbuffer_25_serverAdapterA_s1 = 2'h2;
    wbuffer_25_serverAdapterB_cnt = 3'h2;
    wbuffer_25_serverAdapterB_s1 = 2'h2;
    wbuffer_26_serverAdapterA_cnt = 3'h2;
    wbuffer_26_serverAdapterA_s1 = 2'h2;
    wbuffer_26_serverAdapterB_cnt = 3'h2;
    wbuffer_26_serverAdapterB_s1 = 2'h2;
    wbuffer_27_serverAdapterA_cnt = 3'h2;
    wbuffer_27_serverAdapterA_s1 = 2'h2;
    wbuffer_27_serverAdapterB_cnt = 3'h2;
    wbuffer_27_serverAdapterB_s1 = 2'h2;
    wbuffer_28_serverAdapterA_cnt = 3'h2;
    wbuffer_28_serverAdapterA_s1 = 2'h2;
    wbuffer_28_serverAdapterB_cnt = 3'h2;
    wbuffer_28_serverAdapterB_s1 = 2'h2;
    wbuffer_29_serverAdapterA_cnt = 3'h2;
    wbuffer_29_serverAdapterA_s1 = 2'h2;
    wbuffer_29_serverAdapterB_cnt = 3'h2;
    wbuffer_29_serverAdapterB_s1 = 2'h2;
    wbuffer_2_serverAdapterA_cnt = 3'h2;
    wbuffer_2_serverAdapterA_s1 = 2'h2;
    wbuffer_2_serverAdapterB_cnt = 3'h2;
    wbuffer_2_serverAdapterB_s1 = 2'h2;
    wbuffer_30_serverAdapterA_cnt = 3'h2;
    wbuffer_30_serverAdapterA_s1 = 2'h2;
    wbuffer_30_serverAdapterB_cnt = 3'h2;
    wbuffer_30_serverAdapterB_s1 = 2'h2;
    wbuffer_31_serverAdapterA_cnt = 3'h2;
    wbuffer_31_serverAdapterA_s1 = 2'h2;
    wbuffer_31_serverAdapterB_cnt = 3'h2;
    wbuffer_31_serverAdapterB_s1 = 2'h2;
    wbuffer_3_serverAdapterA_cnt = 3'h2;
    wbuffer_3_serverAdapterA_s1 = 2'h2;
    wbuffer_3_serverAdapterB_cnt = 3'h2;
    wbuffer_3_serverAdapterB_s1 = 2'h2;
    wbuffer_4_serverAdapterA_cnt = 3'h2;
    wbuffer_4_serverAdapterA_s1 = 2'h2;
    wbuffer_4_serverAdapterB_cnt = 3'h2;
    wbuffer_4_serverAdapterB_s1 = 2'h2;
    wbuffer_5_serverAdapterA_cnt = 3'h2;
    wbuffer_5_serverAdapterA_s1 = 2'h2;
    wbuffer_5_serverAdapterB_cnt = 3'h2;
    wbuffer_5_serverAdapterB_s1 = 2'h2;
    wbuffer_6_serverAdapterA_cnt = 3'h2;
    wbuffer_6_serverAdapterA_s1 = 2'h2;
    wbuffer_6_serverAdapterB_cnt = 3'h2;
    wbuffer_6_serverAdapterB_s1 = 2'h2;
    wbuffer_7_serverAdapterA_cnt = 3'h2;
    wbuffer_7_serverAdapterA_s1 = 2'h2;
    wbuffer_7_serverAdapterB_cnt = 3'h2;
    wbuffer_7_serverAdapterB_s1 = 2'h2;
    wbuffer_8_serverAdapterA_cnt = 3'h2;
    wbuffer_8_serverAdapterA_s1 = 2'h2;
    wbuffer_8_serverAdapterB_cnt = 3'h2;
    wbuffer_8_serverAdapterB_s1 = 2'h2;
    wbuffer_9_serverAdapterA_cnt = 3'h2;
    wbuffer_9_serverAdapterA_s1 = 2'h2;
    wbuffer_9_serverAdapterB_cnt = 3'h2;
    wbuffer_9_serverAdapterB_s1 = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_0_serverAdapterA_s1[1] &&
	  !ibuffer_0_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_0_serverAdapterB_s1[1] &&
	  !ibuffer_0_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_1_serverAdapterA_s1[1] &&
	  !ibuffer_1_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_1_serverAdapterB_s1[1] &&
	  !ibuffer_1_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_2_serverAdapterA_s1[1] &&
	  !ibuffer_2_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_2_serverAdapterB_s1[1] &&
	  !ibuffer_2_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_3_serverAdapterA_s1[1] &&
	  !ibuffer_3_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_3_serverAdapterB_s1[1] &&
	  !ibuffer_3_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_4_serverAdapterA_s1[1] &&
	  !ibuffer_4_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_4_serverAdapterB_s1[1] &&
	  !ibuffer_4_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_5_serverAdapterA_s1[1] &&
	  !ibuffer_5_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_5_serverAdapterB_s1[1] &&
	  !ibuffer_5_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_6_serverAdapterA_s1[1] &&
	  !ibuffer_6_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_6_serverAdapterB_s1[1] &&
	  !ibuffer_6_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_7_serverAdapterA_s1[1] &&
	  !ibuffer_7_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_7_serverAdapterB_s1[1] &&
	  !ibuffer_7_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_8_serverAdapterA_s1[1] &&
	  !ibuffer_8_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_8_serverAdapterB_s1[1] &&
	  !ibuffer_8_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_9_serverAdapterA_s1[1] &&
	  !ibuffer_9_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_9_serverAdapterB_s1[1] &&
	  !ibuffer_9_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_10_serverAdapterA_s1[1] &&
	  !ibuffer_10_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_10_serverAdapterB_s1[1] &&
	  !ibuffer_10_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_11_serverAdapterA_s1[1] &&
	  !ibuffer_11_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_11_serverAdapterB_s1[1] &&
	  !ibuffer_11_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_12_serverAdapterA_s1[1] &&
	  !ibuffer_12_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_12_serverAdapterB_s1[1] &&
	  !ibuffer_12_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_13_serverAdapterA_s1[1] &&
	  !ibuffer_13_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_13_serverAdapterB_s1[1] &&
	  !ibuffer_13_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_14_serverAdapterA_s1[1] &&
	  !ibuffer_14_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_14_serverAdapterB_s1[1] &&
	  !ibuffer_14_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_15_serverAdapterA_s1[1] &&
	  !ibuffer_15_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_15_serverAdapterB_s1[1] &&
	  !ibuffer_15_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_16_serverAdapterA_s1[1] &&
	  !ibuffer_16_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_16_serverAdapterB_s1[1] &&
	  !ibuffer_16_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_17_serverAdapterA_s1[1] &&
	  !ibuffer_17_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_17_serverAdapterB_s1[1] &&
	  !ibuffer_17_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_18_serverAdapterA_s1[1] &&
	  !ibuffer_18_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_18_serverAdapterB_s1[1] &&
	  !ibuffer_18_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_19_serverAdapterA_s1[1] &&
	  !ibuffer_19_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_19_serverAdapterB_s1[1] &&
	  !ibuffer_19_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_20_serverAdapterA_s1[1] &&
	  !ibuffer_20_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_20_serverAdapterB_s1[1] &&
	  !ibuffer_20_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_21_serverAdapterA_s1[1] &&
	  !ibuffer_21_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_21_serverAdapterB_s1[1] &&
	  !ibuffer_21_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_22_serverAdapterA_s1[1] &&
	  !ibuffer_22_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_22_serverAdapterB_s1[1] &&
	  !ibuffer_22_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_23_serverAdapterA_s1[1] &&
	  !ibuffer_23_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_23_serverAdapterB_s1[1] &&
	  !ibuffer_23_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_24_serverAdapterA_s1[1] &&
	  !ibuffer_24_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_24_serverAdapterB_s1[1] &&
	  !ibuffer_24_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_25_serverAdapterA_s1[1] &&
	  !ibuffer_25_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_25_serverAdapterB_s1[1] &&
	  !ibuffer_25_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_26_serverAdapterA_s1[1] &&
	  !ibuffer_26_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_26_serverAdapterB_s1[1] &&
	  !ibuffer_26_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_27_serverAdapterA_s1[1] &&
	  !ibuffer_27_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_27_serverAdapterB_s1[1] &&
	  !ibuffer_27_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_28_serverAdapterA_s1[1] &&
	  !ibuffer_28_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_28_serverAdapterB_s1[1] &&
	  !ibuffer_28_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_29_serverAdapterA_s1[1] &&
	  !ibuffer_29_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_29_serverAdapterB_s1[1] &&
	  !ibuffer_29_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_30_serverAdapterA_s1[1] &&
	  !ibuffer_30_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_30_serverAdapterB_s1[1] &&
	  !ibuffer_30_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_31_serverAdapterA_s1[1] &&
	  !ibuffer_31_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (ibuffer_31_serverAdapterB_s1[1] &&
	  !ibuffer_31_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_0_serverAdapterA_s1[1] &&
	  !wbuffer_0_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_0_serverAdapterB_s1[1] &&
	  !wbuffer_0_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_1_serverAdapterA_s1[1] &&
	  !wbuffer_1_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_1_serverAdapterB_s1[1] &&
	  !wbuffer_1_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_2_serverAdapterA_s1[1] &&
	  !wbuffer_2_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_2_serverAdapterB_s1[1] &&
	  !wbuffer_2_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_3_serverAdapterA_s1[1] &&
	  !wbuffer_3_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_3_serverAdapterB_s1[1] &&
	  !wbuffer_3_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_4_serverAdapterA_s1[1] &&
	  !wbuffer_4_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_4_serverAdapterB_s1[1] &&
	  !wbuffer_4_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_5_serverAdapterA_s1[1] &&
	  !wbuffer_5_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_5_serverAdapterB_s1[1] &&
	  !wbuffer_5_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_6_serverAdapterA_s1[1] &&
	  !wbuffer_6_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_6_serverAdapterB_s1[1] &&
	  !wbuffer_6_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_7_serverAdapterA_s1[1] &&
	  !wbuffer_7_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_7_serverAdapterB_s1[1] &&
	  !wbuffer_7_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_8_serverAdapterA_s1[1] &&
	  !wbuffer_8_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_8_serverAdapterB_s1[1] &&
	  !wbuffer_8_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_9_serverAdapterA_s1[1] &&
	  !wbuffer_9_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_9_serverAdapterB_s1[1] &&
	  !wbuffer_9_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_10_serverAdapterA_s1[1] &&
	  !wbuffer_10_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_10_serverAdapterB_s1[1] &&
	  !wbuffer_10_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_11_serverAdapterA_s1[1] &&
	  !wbuffer_11_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_11_serverAdapterB_s1[1] &&
	  !wbuffer_11_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_12_serverAdapterA_s1[1] &&
	  !wbuffer_12_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_12_serverAdapterB_s1[1] &&
	  !wbuffer_12_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_13_serverAdapterA_s1[1] &&
	  !wbuffer_13_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_13_serverAdapterB_s1[1] &&
	  !wbuffer_13_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_14_serverAdapterA_s1[1] &&
	  !wbuffer_14_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_14_serverAdapterB_s1[1] &&
	  !wbuffer_14_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_15_serverAdapterA_s1[1] &&
	  !wbuffer_15_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_15_serverAdapterB_s1[1] &&
	  !wbuffer_15_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_16_serverAdapterA_s1[1] &&
	  !wbuffer_16_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_16_serverAdapterB_s1[1] &&
	  !wbuffer_16_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_17_serverAdapterA_s1[1] &&
	  !wbuffer_17_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_17_serverAdapterB_s1[1] &&
	  !wbuffer_17_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_18_serverAdapterA_s1[1] &&
	  !wbuffer_18_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_18_serverAdapterB_s1[1] &&
	  !wbuffer_18_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_19_serverAdapterA_s1[1] &&
	  !wbuffer_19_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_19_serverAdapterB_s1[1] &&
	  !wbuffer_19_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_20_serverAdapterA_s1[1] &&
	  !wbuffer_20_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_20_serverAdapterB_s1[1] &&
	  !wbuffer_20_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_21_serverAdapterA_s1[1] &&
	  !wbuffer_21_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_21_serverAdapterB_s1[1] &&
	  !wbuffer_21_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_22_serverAdapterA_s1[1] &&
	  !wbuffer_22_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_22_serverAdapterB_s1[1] &&
	  !wbuffer_22_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_23_serverAdapterA_s1[1] &&
	  !wbuffer_23_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_23_serverAdapterB_s1[1] &&
	  !wbuffer_23_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_24_serverAdapterA_s1[1] &&
	  !wbuffer_24_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_24_serverAdapterB_s1[1] &&
	  !wbuffer_24_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_25_serverAdapterA_s1[1] &&
	  !wbuffer_25_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_25_serverAdapterB_s1[1] &&
	  !wbuffer_25_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_26_serverAdapterA_s1[1] &&
	  !wbuffer_26_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_26_serverAdapterB_s1[1] &&
	  !wbuffer_26_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_27_serverAdapterA_s1[1] &&
	  !wbuffer_27_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_27_serverAdapterB_s1[1] &&
	  !wbuffer_27_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_28_serverAdapterA_s1[1] &&
	  !wbuffer_28_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_28_serverAdapterB_s1[1] &&
	  !wbuffer_28_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_29_serverAdapterA_s1[1] &&
	  !wbuffer_29_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_29_serverAdapterB_s1[1] &&
	  !wbuffer_29_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_30_serverAdapterA_s1[1] &&
	  !wbuffer_30_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_30_serverAdapterB_s1[1] &&
	  !wbuffer_30_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_31_serverAdapterA_s1[1] &&
	  !wbuffer_31_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (wbuffer_31_serverAdapterB_s1[1] &&
	  !wbuffer_31_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_0_serverAdapterA_s1[1] &&
	  !obuffer1_0_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_0_serverAdapterB_s1[1] &&
	  !obuffer1_0_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_1_serverAdapterA_s1[1] &&
	  !obuffer1_1_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_1_serverAdapterB_s1[1] &&
	  !obuffer1_1_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_2_serverAdapterA_s1[1] &&
	  !obuffer1_2_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_2_serverAdapterB_s1[1] &&
	  !obuffer1_2_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_3_serverAdapterA_s1[1] &&
	  !obuffer1_3_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_3_serverAdapterB_s1[1] &&
	  !obuffer1_3_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_4_serverAdapterA_s1[1] &&
	  !obuffer1_4_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_4_serverAdapterB_s1[1] &&
	  !obuffer1_4_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_5_serverAdapterA_s1[1] &&
	  !obuffer1_5_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_5_serverAdapterB_s1[1] &&
	  !obuffer1_5_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_6_serverAdapterA_s1[1] &&
	  !obuffer1_6_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_6_serverAdapterB_s1[1] &&
	  !obuffer1_6_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_7_serverAdapterA_s1[1] &&
	  !obuffer1_7_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_7_serverAdapterB_s1[1] &&
	  !obuffer1_7_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_8_serverAdapterA_s1[1] &&
	  !obuffer1_8_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_8_serverAdapterB_s1[1] &&
	  !obuffer1_8_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_9_serverAdapterA_s1[1] &&
	  !obuffer1_9_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_9_serverAdapterB_s1[1] &&
	  !obuffer1_9_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_10_serverAdapterA_s1[1] &&
	  !obuffer1_10_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_10_serverAdapterB_s1[1] &&
	  !obuffer1_10_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_11_serverAdapterA_s1[1] &&
	  !obuffer1_11_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_11_serverAdapterB_s1[1] &&
	  !obuffer1_11_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_12_serverAdapterA_s1[1] &&
	  !obuffer1_12_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_12_serverAdapterB_s1[1] &&
	  !obuffer1_12_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_13_serverAdapterA_s1[1] &&
	  !obuffer1_13_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_13_serverAdapterB_s1[1] &&
	  !obuffer1_13_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_14_serverAdapterA_s1[1] &&
	  !obuffer1_14_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_14_serverAdapterB_s1[1] &&
	  !obuffer1_14_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_15_serverAdapterA_s1[1] &&
	  !obuffer1_15_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_15_serverAdapterB_s1[1] &&
	  !obuffer1_15_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_16_serverAdapterA_s1[1] &&
	  !obuffer1_16_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_16_serverAdapterB_s1[1] &&
	  !obuffer1_16_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_17_serverAdapterA_s1[1] &&
	  !obuffer1_17_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_17_serverAdapterB_s1[1] &&
	  !obuffer1_17_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_18_serverAdapterA_s1[1] &&
	  !obuffer1_18_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_18_serverAdapterB_s1[1] &&
	  !obuffer1_18_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_19_serverAdapterA_s1[1] &&
	  !obuffer1_19_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_19_serverAdapterB_s1[1] &&
	  !obuffer1_19_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_20_serverAdapterA_s1[1] &&
	  !obuffer1_20_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_20_serverAdapterB_s1[1] &&
	  !obuffer1_20_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_21_serverAdapterA_s1[1] &&
	  !obuffer1_21_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_21_serverAdapterB_s1[1] &&
	  !obuffer1_21_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_22_serverAdapterA_s1[1] &&
	  !obuffer1_22_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_22_serverAdapterB_s1[1] &&
	  !obuffer1_22_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_23_serverAdapterA_s1[1] &&
	  !obuffer1_23_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_23_serverAdapterB_s1[1] &&
	  !obuffer1_23_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_24_serverAdapterA_s1[1] &&
	  !obuffer1_24_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_24_serverAdapterB_s1[1] &&
	  !obuffer1_24_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_25_serverAdapterA_s1[1] &&
	  !obuffer1_25_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_25_serverAdapterB_s1[1] &&
	  !obuffer1_25_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_26_serverAdapterA_s1[1] &&
	  !obuffer1_26_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_26_serverAdapterB_s1[1] &&
	  !obuffer1_26_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_27_serverAdapterA_s1[1] &&
	  !obuffer1_27_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_27_serverAdapterB_s1[1] &&
	  !obuffer1_27_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_28_serverAdapterA_s1[1] &&
	  !obuffer1_28_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_28_serverAdapterB_s1[1] &&
	  !obuffer1_28_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_29_serverAdapterA_s1[1] &&
	  !obuffer1_29_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_29_serverAdapterB_s1[1] &&
	  !obuffer1_29_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_30_serverAdapterA_s1[1] &&
	  !obuffer1_30_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_30_serverAdapterB_s1[1] &&
	  !obuffer1_30_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_31_serverAdapterA_s1[1] &&
	  !obuffer1_31_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer1_31_serverAdapterB_s1[1] &&
	  !obuffer1_31_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_0_serverAdapterA_s1[1] &&
	  !obuffer2_0_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_0_serverAdapterB_s1[1] &&
	  !obuffer2_0_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_1_serverAdapterA_s1[1] &&
	  !obuffer2_1_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_1_serverAdapterB_s1[1] &&
	  !obuffer2_1_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_2_serverAdapterA_s1[1] &&
	  !obuffer2_2_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_2_serverAdapterB_s1[1] &&
	  !obuffer2_2_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_3_serverAdapterA_s1[1] &&
	  !obuffer2_3_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_3_serverAdapterB_s1[1] &&
	  !obuffer2_3_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_4_serverAdapterA_s1[1] &&
	  !obuffer2_4_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_4_serverAdapterB_s1[1] &&
	  !obuffer2_4_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_5_serverAdapterA_s1[1] &&
	  !obuffer2_5_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_5_serverAdapterB_s1[1] &&
	  !obuffer2_5_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_6_serverAdapterA_s1[1] &&
	  !obuffer2_6_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_6_serverAdapterB_s1[1] &&
	  !obuffer2_6_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_7_serverAdapterA_s1[1] &&
	  !obuffer2_7_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_7_serverAdapterB_s1[1] &&
	  !obuffer2_7_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_8_serverAdapterA_s1[1] &&
	  !obuffer2_8_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_8_serverAdapterB_s1[1] &&
	  !obuffer2_8_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_9_serverAdapterA_s1[1] &&
	  !obuffer2_9_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_9_serverAdapterB_s1[1] &&
	  !obuffer2_9_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_10_serverAdapterA_s1[1] &&
	  !obuffer2_10_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_10_serverAdapterB_s1[1] &&
	  !obuffer2_10_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_11_serverAdapterA_s1[1] &&
	  !obuffer2_11_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_11_serverAdapterB_s1[1] &&
	  !obuffer2_11_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_12_serverAdapterA_s1[1] &&
	  !obuffer2_12_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_12_serverAdapterB_s1[1] &&
	  !obuffer2_12_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_13_serverAdapterA_s1[1] &&
	  !obuffer2_13_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_13_serverAdapterB_s1[1] &&
	  !obuffer2_13_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_14_serverAdapterA_s1[1] &&
	  !obuffer2_14_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_14_serverAdapterB_s1[1] &&
	  !obuffer2_14_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_15_serverAdapterA_s1[1] &&
	  !obuffer2_15_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_15_serverAdapterB_s1[1] &&
	  !obuffer2_15_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_16_serverAdapterA_s1[1] &&
	  !obuffer2_16_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_16_serverAdapterB_s1[1] &&
	  !obuffer2_16_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_17_serverAdapterA_s1[1] &&
	  !obuffer2_17_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_17_serverAdapterB_s1[1] &&
	  !obuffer2_17_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_18_serverAdapterA_s1[1] &&
	  !obuffer2_18_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_18_serverAdapterB_s1[1] &&
	  !obuffer2_18_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_19_serverAdapterA_s1[1] &&
	  !obuffer2_19_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_19_serverAdapterB_s1[1] &&
	  !obuffer2_19_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_20_serverAdapterA_s1[1] &&
	  !obuffer2_20_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_20_serverAdapterB_s1[1] &&
	  !obuffer2_20_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_21_serverAdapterA_s1[1] &&
	  !obuffer2_21_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_21_serverAdapterB_s1[1] &&
	  !obuffer2_21_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_22_serverAdapterA_s1[1] &&
	  !obuffer2_22_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_22_serverAdapterB_s1[1] &&
	  !obuffer2_22_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_23_serverAdapterA_s1[1] &&
	  !obuffer2_23_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_23_serverAdapterB_s1[1] &&
	  !obuffer2_23_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_24_serverAdapterA_s1[1] &&
	  !obuffer2_24_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_24_serverAdapterB_s1[1] &&
	  !obuffer2_24_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_25_serverAdapterA_s1[1] &&
	  !obuffer2_25_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_25_serverAdapterB_s1[1] &&
	  !obuffer2_25_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_26_serverAdapterA_s1[1] &&
	  !obuffer2_26_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_26_serverAdapterB_s1[1] &&
	  !obuffer2_26_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_27_serverAdapterA_s1[1] &&
	  !obuffer2_27_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_27_serverAdapterB_s1[1] &&
	  !obuffer2_27_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_28_serverAdapterA_s1[1] &&
	  !obuffer2_28_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_28_serverAdapterB_s1[1] &&
	  !obuffer2_28_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_29_serverAdapterA_s1[1] &&
	  !obuffer2_29_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_29_serverAdapterB_s1[1] &&
	  !obuffer2_29_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_30_serverAdapterA_s1[1] &&
	  !obuffer2_30_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_30_serverAdapterB_s1[1] &&
	  !obuffer2_30_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_31_serverAdapterA_s1[1] &&
	  !obuffer2_31_serverAdapterA_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (obuffer2_31_serverAdapterB_s1[1] &&
	  !obuffer2_31_serverAdapterB_outDataCore$FULL_N)
	$display("ERROR: %m: mkBRAMAdapter overrun");
  end
  // synopsys translate_on
endmodule  // mkonchip_buffers

